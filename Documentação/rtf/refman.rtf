{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Batalha Naval - Documenta\'E7\'E3o  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0 \par
}}Batalha Naval - Documenta\'E7\'E3o}
{\comment Gerado por doxygen 1.9.7.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Batalha Naval - Documenta\'E7\'E3o}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Vers\'E3o 1.0\par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Sum\'E1rio\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\par \pard\plain 
\par \pard\plain 
\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Projeto Final: Batalha Naval\par \pard\plain 
{\tc\tcl1 \v Projeto Final: Batalha Naval}
{\xe \v Projeto Final: Batalha Naval}
{\bkmkstart AAAAAAADOU}
{\bkmkend AAAAAAADOU}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\bkmkstart AAAAAAADOV}
{\bkmkend AAAAAAADOV}
 \par
{\bkmkstart AAAAAAADOW}
{\bkmkend AAAAAAADOW}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Apresenta\'E7\'E3o:
\par}
{\tc\tcl2 \v Apresenta\'E7\'E3o:}
O seguinte trabalho consiste em um desenvolvimento de um jogo de Batalha Naval, atrav\'E9s de conceitos e t\'E9cnicas vistos durante as aulas do curso de Programa\'E7\'E3o e Desenvolvimento de Software II.\par}
{\bkmkstart AAAAAAADOX}
{\bkmkend AAAAAAADOX}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Vis\'E3o geral do c\'F3digo:
\par}
{\tc\tcl2 \v Vis\'E3o geral do c\'F3digo:}
O c\'F3digo foi desenvolvido com o objetivo de utilizar os conceitos e t\'E9cnicas vistos durante o curso de PDS II. Ele utiliza dos conceitos de interface e tamb\'E9m algumas classes l\'F3gicas, al\'E9m do uso de exce\'E7\'F5es, heran\'E7a, programa\'E7\'E3o orientada a objetos (POO), desenvolvimento orientado por testes, entre outros.\par
{\bkmkstart AAAAAAADOY}
{\bkmkend AAAAAAADOY}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funcionamento do programa:
\par}
{\tc\tcl3 \v Funcionamento do programa:}
A compila\'E7\'E3o de um programa em C++ requer compilar o c\'F3digo-fonte de um ou mais arquivos e relacionar esses arquivos a um arquivo execut\'E1vel (.exe), ou a uma biblioteca est\'E1tica (.lib), entre outros. Para realizar a compila\'E7\'E3o desse projeto, \'E9 necess\'E1rio apresentar algum compilador g++. Caso tenha prefer\'EAncia em compilar com make, ou seja, de forma manual, ser\'E1 necess\'E1rio criar uma pasta a parte na raiz do projeto chamada build. Para o Windows, \'E9 recomendado utilizar o mingw32. Nele, deve ser executado o comando - mingw32-make windows_build_BatalhaNaval - na pasta raiz do reposit\'F3rio. J\'E1 no Linux, deve ser executado o comando - make linux_build_BatalhaNaval - ou simplesmente o comando - make. Pode-se utilizar tamb\'E9m os arquivos batch para compilar. No Windows, pode-se abrir a pasta batchs->bats em um terminal de prefer\'EAncia e executar o arquivo. J\'E1 no Linux, pode-se abrir a pasta batchs->shs em um terminal de prefer\'EAncia e executar o comando - chmod +x Build.sh Clean.sh Run.sh - e o - Build.sh - para compilar o projeto.\par}
\par}
{\bkmkstart AAAAAAADOZ}
{\bkmkend AAAAAAADOZ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Principais dificuldades encontradas:
\par}
{\tc\tcl2 \v Principais dificuldades encontradas:}
Algumas dificuldades encontradas durante o projeto foram: Entender o funcionamento e utiliza\'E7\'E3o de algumas bibliotecas, realizar o planejamento de cria\'E7\'E3o do projeto desde o inicio (modelagem) at\'E9 a execu\'E7\'E3o final, utilizar o terminal do github como forma de cria\'E7\'E3o e desenvolvimento de projetos, conciliar o tempo relativamente curto para desenvolver o trabalho, buscar entender implementa\'E7\'E3o de certas fun\'E7\'F5es que seriam necess\'E1rias de utilizar e fazer ao m\'E1ximo para deixar tudo o mais sucinto poss\'EDvel, aplicando conceitos conhecidos. Obs: O trabalho foi desenvolvido a parte pelos tr\'EAs integrantes e posteriormente, foi realizado o upload.\par
{\bkmkstart AAAAAAADPA}
{\bkmkend AAAAAAADPA}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Refer\'EAncia das artes:
\par}
{\tc\tcl3 \v Refer\'EAncia das artes:}
{\f2 https://www.pixilart.com/CarlosHenart}\par
Algumas pixelart\'B4s para a complementa\'E7\'E3o do projeto foram feitas e outras foram pesquisadas e adquiridas atrav\'E9s do banco de imagens. \par}
\par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespaces\par \pard\plain 
{\tc \v Namespaces}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de Namespaces\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta \'E9 a lista de todos os Namespaces com suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b Backgrounds} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEDP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Components} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEDS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::assertType} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAETZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::Color} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEWK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEXA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::assertAction} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFDT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::binaryAssertComparison} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFDY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::has_insertion_operator_impl} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFEG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::TestCaseFailureReason} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFEN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest_detail_test_suite_ns} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFFA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Fonts} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFFC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Icons} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFFE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ScoreFormatter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFFP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Screens} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFFS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFHN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Views} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFHV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice Hier\'E1rquico\par \pard\plain 
{\tc \v \'CDndice Hier\'E1rquico}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Hierarquia de Classes\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta lista de hierarquias est\'E1 parcialmente ordenada (ordem alfab\'E9tica):}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
doctest::Approx\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAENG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::AssertData\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAENY \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
doctest::detail::ResultBuilder\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFBV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
AssetsLoader\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
AudioStream\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::basic_istream< charT, traits >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFHR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::basic_ostream< charT, traits >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFHS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Board\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BoneInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BoundingBox\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Camera2D\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Camera3D\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::char_traits< charT >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFHT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::detail::has_insertion_operator_impl::check< class, class >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFEJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::detail::has_insertion_operator_impl::check< T, decltype(os()<< val< T >(), void())>\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFEL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Color\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Components::Component\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHN \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Components::ResizableComponent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKN \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Components::Button\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEDT \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Components::ButtonIcon\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Components::ButtonText\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Components::ButtonTextIcon\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Components::Image\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Components::Text\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Views::View\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNP \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Components::TextIcon\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Views::BoardDisplay\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFID \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Views::GameBoardDisplay\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFJI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Views::PositioningBoardDisplay\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFLQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Views::EndGameScoreDisplay\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFJB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Views::GameScoreDisplay\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFJZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Views::MatchResultDisplay\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFKH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Views::PlayerRegistredScore\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFKP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Views::PositionDisplay\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFKY \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Views::GamePositionDisplay\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFJR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Views::PositioningPositionDisplay\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Views::TroopDisplay\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMQ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Views::BattleshipDisplay\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFHW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Views::CrusierDisplay\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFIW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Views::SubmarineDisplay\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFML \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Views::TroopPositioningOption\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFND \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Views::WarningPopUp\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
doctest::Context\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEOL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::ContextOptions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEOZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::CurrentTestCaseStats\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEQL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::detail::deferred_false< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEZG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::detail::enable_if< CONDITION, TYPE >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEZI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::detail::enable_if< true, TYPE >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEZJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::exception
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CustomException\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRO \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
InvalidPositionException\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
doctest::detail::Expression_lhs< L >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEZP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::detail::ExpressionDecomposer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEZV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FileHandler\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRT \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
TxtReader\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TxtWriter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
doctest::detail::filldata< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::detail::filldata< const char[N]>\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::detail::filldata< T[N]>\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Font\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
GameManager\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
GameParameters\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
GlyphInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
GuiStyleProp\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
GuiTextBoxState\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Components::IClickable\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIS \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Components::Button\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEDT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Views::PositionDisplay\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFKY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Views::TroopDisplay\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
doctest::IContextScope\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEQR \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
doctest::detail::ContextScopeBase\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEZB \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
doctest::detail::ContextScope< L >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEYX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
Components::IDisplayIcon\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJB \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Components::ButtonTextIcon\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Components::TextIcon\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Components::IDisplayText\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJI \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Components::ButtonText\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Components::ButtonTextIcon\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Components::Text\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Components::TextIcon\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
doctest::detail::IExceptionTranslator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAG \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
doctest::detail::ExceptionTranslator< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEZL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Image\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::IReporter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEQW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Components::IResizable\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKK \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Components::ResizableComponent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
doctest::detail::is_enum< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::detail::is_lvalue_reference< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::detail::is_lvalue_reference< T & >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::detail::is_rvalue_reference< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::detail::is_rvalue_reference< T && >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Match\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MatchResults\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Material\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MaterialMap\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Matrix\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Mesh\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::MessageData\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAERO \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
doctest::detail::MessageBuilder\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Model\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADWP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ModelAnimation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADWZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Music\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADXE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
NPatchInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADXK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Player\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADXR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Point\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADXZ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Position\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADYM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
doctest::QueryData\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAERT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Ray\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADYS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RayCollision\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADYV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Rectangle\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADZA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::detail::RelationalComparator< int, L, R >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFBE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::detail::remove_const< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFBG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::detail::remove_const< const T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFBI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::detail::remove_reference< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFBK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::detail::remove_reference< T & >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFBM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::detail::remove_reference< T && >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFBO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RenderTexture\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADZF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::detail::Result\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFBQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Score\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADZJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Screens::Screen\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFGS \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Screens::EndGameScreen\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFFT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Screens::GameScreen\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFGC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Screens::PositioningScreen\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFGI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Screens::ScoreScreen\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFGN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Screens::TitleScreen\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFHK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Screens::ScreenManager\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFHB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Shader\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Sound\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::String\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAERX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::StringMaker< R C::* >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEST \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::StringMaker< T * >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAESV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::detail::StringMakerBase< C >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFCD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::detail::StringMakerBase< detail::has_insertion_operator< T >::value >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFCD \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
doctest::StringMaker< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAESS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
doctest::detail::StringMakerBase< true >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFCF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::detail::StringStreamBase< C >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFCI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::detail::StringStreamBase< has_insertion_operator< T >::value >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFCI \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
doctest::detail::StringStream< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFCH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
doctest::detail::StringStreamBase< true >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFCL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::detail::Subcase\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFCN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::SubcaseSignature\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAESX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::TestCaseData\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAETC \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
doctest::detail::TestCase\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFCT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
doctest::TestCaseException\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAETP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::detail::TestFailureException\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFDE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::TestRunStats\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAETS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::detail::TestSuite\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFDF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Texture\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Transform\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Troop\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBF \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Battleship\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Crusier\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Submarine\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
std::tuple< Types >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFHU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
doctest::detail::underlying_type< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFDR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Vector2\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAECD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Vector3\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAECG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Vector4\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAECK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
VrDeviceInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAECP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
VrStereoConfig\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEDA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Wave\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEDJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos Componentes\par \pard\plain 
{\tc \v \'CDndice dos Componentes}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de Classes\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Aqui est\'E3o as classes, estruturas, uni\'F5es e interfaces e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b doctest::Approx} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAENG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::AssertData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAENY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b AssetsLoader} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b AudioStream} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::basic_istream< charT, traits >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFHR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::basic_ostream< charT, traits >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFHS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Battleship} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Views::BattleshipDisplay} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFHW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Board} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Views::BoardDisplay} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFID \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BoneInfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BoundingBox} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Components::Button} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEDT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Components::ButtonIcon} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Components::ButtonText} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Components::ButtonTextIcon} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Camera2D} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Camera3D} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::char_traits< charT >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFHT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::has_insertion_operator_impl::check< class, class >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFEJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::has_insertion_operator_impl::check< T, decltype(os()<< val< T >(), void())>} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFEL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Color} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Components::Component} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::Context} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEOL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::ContextOptions} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCLINT too many fields })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEOZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::ContextScope< L >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEYX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::ContextScopeBase} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEZB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Crusier} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Views::CrusierDisplay} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFIW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::CurrentTestCaseStats} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEQL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CustomException} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::deferred_false< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEZG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::enable_if< CONDITION, TYPE >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEZI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::enable_if< true, TYPE >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEZJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Views::EndGameScoreDisplay} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFJB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Screens::EndGameScreen} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFFT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::ExceptionTranslator< T >} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCLINT destructor of virtual class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEZL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::Expression_lhs< L >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEZP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::ExpressionDecomposer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEZV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FileHandler} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::filldata< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::filldata< const char[N]>} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::filldata< T[N]>} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Font} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Views::GameBoardDisplay} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFJI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GameManager} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GameParameters} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Views::GamePositionDisplay} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFJR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Views::GameScoreDisplay} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFJZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Screens::GameScreen} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFGC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GlyphInfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GuiStyleProp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GuiTextBoxState} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Components::IClickable} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::IContextScope} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEQR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Components::IDisplayIcon} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Components::IDisplayText} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::IExceptionTranslator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Components::Image} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Image} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b InvalidPositionException} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::IReporter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEQW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Components::IResizable} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::is_enum< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::is_lvalue_reference< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::is_lvalue_reference< T & >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::is_rvalue_reference< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::is_rvalue_reference< T && >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Match} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Views::MatchResultDisplay} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFKH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MatchResults} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Material} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MaterialMap} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Matrix} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Mesh} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::MessageBuilder} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::MessageData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAERO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Model} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADWP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ModelAnimation} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADWZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Music} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADXE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b NPatchInfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADXK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Player} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADXR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Views::PlayerRegistredScore} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFKP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Point} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Point} class used for positioning and board manipulations })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADXZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Position} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADYM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Views::PositionDisplay} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFKY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Views::PositioningBoardDisplay} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFLQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Views::PositioningPositionDisplay} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Screens::PositioningScreen} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFGI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::QueryData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAERT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Ray} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADYS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RayCollision} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADYV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Rectangle} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADZA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::RelationalComparator< int, L, R >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFBE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::remove_const< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFBG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::remove_const< const T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFBI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::remove_reference< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFBK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::remove_reference< T & >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFBM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::remove_reference< T && >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFBO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RenderTexture} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADZF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Components::ResizableComponent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::Result} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFBQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::ResultBuilder} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFBV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Score} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADZJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Screens::ScoreScreen} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFGN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Screens::Screen} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFGS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Screens::ScreenManager} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFHB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Shader} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Sound} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::String} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAERX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::StringMaker< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAESS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::StringMaker< R C::* >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEST \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::StringMaker< T * >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAESV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::StringMakerBase< C >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFCD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::StringMakerBase< true >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFCF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::StringStream< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFCH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::StringStreamBase< C >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFCI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::StringStreamBase< true >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFCL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::Subcase} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFCN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::SubcaseSignature} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAESX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Submarine} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Views::SubmarineDisplay} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFML \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::TestCase} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFCT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::TestCaseData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAETC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::TestCaseException} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAETP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::TestFailureException} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFDE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::TestRunStats} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAETS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::TestSuite} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFDF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Components::Text} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Components::TextIcon} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Texture} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Screens::TitleScreen} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFHK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Transform} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Troop} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Views::TroopDisplay} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Views::TroopPositioningOption} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFND \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tuple< Types >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFHU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TxtReader} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TxtWriter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b doctest::detail::underlying_type< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFDR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Vector2} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAECD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Vector3} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAECG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Vector4} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAECK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Views::View} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b VrDeviceInfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAECP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b VrStereoConfig} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEDA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Views::WarningPopUp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Wave} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEDJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos Arquivos\par \pard\plain 
{\tc \v \'CDndice dos Arquivos}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de Arquivos\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta \'E9 a lista de todos os arquivos e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b gui_textbox_extended.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raygui.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/{\b Battleship.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/{\b Board.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/{\b Crusier.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/{\b Orientation.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/{\b Point.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/{\b Position.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/{\b Submarine.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/{\b Troop.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/exceptions/{\b CustomException.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/exceptions/{\b InvalidPositionException.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/fileHandler/{\b FileHandler.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/fileHandler/{\b TxtReader.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/fileHandler/{\b TxtWriter.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/game/{\b GameManager.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/game/{\b GameParameters.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/{\b Match.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/{\b MatchResults.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/{\b Player.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/{\b Score.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/{\b AssetsPaths.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/{\b Colors.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACQH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/{\b Constants.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACQU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/{\b ScoreFormatter.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/{\b StyleFunctions.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/{\b Button.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/{\b ButtonIcon.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/{\b ButtonText.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/{\b ButtonTextIcon.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/{\b Component.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/{\b IClickable.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/{\b IDisplayIcon.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/{\b IDisplayText.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/{\b IResizable.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/{\b ResizableComponent.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/image/{\b Image.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/text/{\b Text.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/text/{\b TextIcon.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/view/{\b View.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/endGame/{\b EndGameScoreDisplay.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/endGame/{\b EndGameScreen.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/{\b GameBoardDisplay.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/{\b GamePositionDisplay.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/{\b GameScoreDisplay.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/{\b GameScreen.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/{\b BattleshipDisplay.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/{\b CrusierDisplay.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/{\b PositioningBoardDisplay.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/{\b PositioningPositionDisplay.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/{\b PositioningScreen.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/{\b SubmarineDisplay.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/{\b TroopDisplay.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/{\b TroopPositioningOption.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/{\b WarningPopUp.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/score/{\b MatchResultDisplay.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/score/{\b PlayerRegistredScore.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/score/{\b ScoreScreen.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/screen/{\b Screen.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/screen/{\b ScreenManager.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/shared/{\b AssetsLoader.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/shared/{\b BoardDisplay.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/shared/{\b PositionDisplay.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/title/{\b TitleScreen.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/{\b main.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/libs/{\b raygui.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/{\b Battleship.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/{\b Board.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/{\b Crusier.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/{\b Point.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/{\b Position.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/{\b Submarine.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/{\b Troop.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/exceptions/{\b CustomException.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/exceptions/{\b InvalidPositionException.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/fileHandler/{\b FileHandler.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/fileHandler/{\b TxtReader.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/fileHandler/{\b TxtWriter.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/game/{\b GameManager.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/game/{\b GameParameters.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/match/{\b Match.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/match/{\b MatchResults.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/match/{\b Player.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/match/{\b Score.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/utils/{\b ScoreFormatter.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/utils/{\b StyleFunctions.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/button/{\b Button.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/button/{\b ButtonIcon.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/button/{\b ButtonText.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/button/{\b ButtonTextIcon.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/component/{\b Component.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/component/{\b IClickable.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/component/{\b ResizableComponent.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/image/{\b Image.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/text/{\b Text.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/text/{\b TextIcon.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/view/{\b View.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/endGame/{\b EndGameScoreDisplay.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/endGame/{\b EndGameScreen.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/game/{\b GameBoardDisplay.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/game/{\b GamePositionDisplay.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/game/{\b GameScoreDisplay.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/game/{\b GameScreen.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/{\b BattleshipDisplay.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/{\b CrusierDisplay.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/{\b PositioningBoardDisplay.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/{\b PositioningPositionDisplay.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/{\b PositioningScreen.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/{\b SubmarineDisplay.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/{\b TroopDisplay.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/{\b TroopPositioningOption.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/{\b WarningPopUp.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/score/{\b MatchResultDisplay.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/score/{\b PlayerRegistredScore.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/score/{\b ScoreScreen.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/screen/{\b Screen.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/screen/{\b ScreenManager.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/shared/{\b AssetsLoader.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/shared/{\b BoardDisplay.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/shared/{\b PositionDisplay.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/title/{\b TitleScreen.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/tests/{\b maintests.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/tests/board/{\b testBattleship.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/tests/board/{\b testBoard.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADLF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/tests/board/{\b testCrusier.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADLT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/tests/board/{\b testPoint.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADMC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/tests/board/{\b testPosition.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADMK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/tests/board/{\b testSubmarine.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADMO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/tests/fileHandler/{\b testFileHandler.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADMY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/tests/fileHandler/{\b testTxtWriterTxtReader.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADND \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/tests/game/{\b testGameParameters.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/tests/match/{\b testMatch.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/tests/match/{\b testMatchResults.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/tests/match/{\b testPlayer.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/2023-1/Prog2/BatalhaNaval/tests/match/{\b testScore.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace Backgrounds\par \pard\plain 
{\tc\tcl2 \v Backgrounds}
{\xe \v Backgrounds}
{\bkmkstart AAAAAAAEDP}
{\bkmkend AAAAAAAEDP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b MAIN} = "./assets/imgs/backgrounds/Background.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b BOARD} = "./assets/imgs/backgrounds/BoardBackground.png"\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 
{\xe \v BOARD\:Backgrounds}
{\xe \v Backgrounds\:BOARD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string Backgrounds::BOARD = "./assets/imgs/backgrounds/BoardBackground.png"}}
\par
{\bkmkstart AAAAAAAEDQ}
{\bkmkend AAAAAAAEDQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAIN\:Backgrounds}
{\xe \v Backgrounds\:MAIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string Backgrounds::MAIN = "./assets/imgs/backgrounds/Background.png"}}
\par
{\bkmkstart AAAAAAAEDR}
{\bkmkend AAAAAAAEDR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace Components\par \pard\plain 
{\tc\tcl2 \v Components}
{\xe \v Components}
{\bkmkstart AAAAAAAEDS}
{\bkmkend AAAAAAAEDS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Button}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ButtonIcon}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ButtonText}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ButtonTextIcon}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Component}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b IClickable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b IDisplayIcon}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b IDisplayText}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Image}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b IResizable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ResizableComponent}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Text}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TextIcon}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace doctest\par \pard\plain 
{\tc\tcl2 \v doctest}
{\xe \v doctest}
{\bkmkstart AAAAAAAELP}
{\bkmkend AAAAAAAELP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b assertType}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Color}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b detail}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b TestCaseFailureReason}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Approx}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b AssertData}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Context}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ContextOptions}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCLINT too many fields. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CurrentTestCaseStats}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b IContextScope}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b IReporter}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b MessageData}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b QueryData}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b String}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b StringMaker}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b StringMaker< R C::* >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b StringMaker< T * >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SubcaseSignature}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TestCaseData}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TestCaseException}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TestRunStats}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b operator+} (const {\b String} &lhs, const {\b String} &rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b bool} {\b operator==} (const {\b String} &lhs, const {\b String} &rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b bool} {\b operator!=} (const {\b String} &lhs, const {\b String} &rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b bool} {\b operator<} (const {\b String} &lhs, const {\b String} &rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b bool} {\b operator>} (const {\b String} &lhs, const {\b String} &rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b bool} {\b operator<=} (const {\b String} &lhs, const {\b String} &rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b bool} {\b operator>=} (const {\b String} &lhs, const {\b String} &rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b std::ostream} & {\b operator<<} ({\b std::ostream} &s, const {\b String} &in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} const char * {\b assertString} ({\b assertType::Enum} at)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} const char * {\b failureString} ({\b assertType::Enum} at)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} const char * {\b skipPathFromFilename} (const char *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T , typename {\b detail::enable_if}<!{\b detail::is_enum}< T >::value, {\b bool} >::type  = true> {\b String} {\b toString} (const {\b DOCTEST_REF_WRAP}(T) value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b toString} ({\b bool} in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b toString} (float in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b toString} (double in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b toString} (double long in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b toString} (char in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b toString} (char signed in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b toString} (char unsigned in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b toString} (int short in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b toString} (int short unsigned in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b toString} (int in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b toString} (int unsigned in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b toString} (int long in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b toString} (int long unsigned in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b toString} (int long long in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b toString} (int long long unsigned in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b toString} ({\b std::nullptr_t} in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b toString} (const {\b Approx} &in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} const {\b ContextOptions} * {\b getContextOptions} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_DEFINE_DECORATOR} (test_suite, const char *, "")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_DEFINE_DECORATOR} (description, const char *, "")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_DEFINE_DECORATOR} (skip, {\b bool}, {\b true})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_DEFINE_DECORATOR} (no_breaks, {\b bool}, {\b true})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_DEFINE_DECORATOR} (no_output, {\b bool}, {\b true})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_DEFINE_DECORATOR} (timeout, double, 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_DEFINE_DECORATOR} (may_fail, {\b bool}, {\b true})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_DEFINE_DECORATOR} (should_fail, {\b bool}, {\b true})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_DEFINE_DECORATOR} (expected_failures, int, 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > int {\b registerExceptionTranslator} ({\b String}(*translateFunction)(T))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename Reporter > int {\b registerReporter} (const char *name, int priority, {\b bool} isReporter)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b bool} {\b is_running_in_test}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v assertString\:doctest}
{\xe \v doctest\:assertString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} const char * doctest::assertString ({\b assertType::Enum}  {\i at})}}
\par
{\bkmkstart AAAAAAAELQ}
{\bkmkend AAAAAAAELQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_DEFINE_DECORATOR\:doctest}
{\xe \v doctest\:DOCTEST_DEFINE_DECORATOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::DOCTEST_DEFINE_DECORATOR (description , const char * , "" )}}
\par
{\bkmkstart AAAAAAAELR}
{\bkmkend AAAAAAAELR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_DEFINE_DECORATOR\:doctest}
{\xe \v doctest\:DOCTEST_DEFINE_DECORATOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::DOCTEST_DEFINE_DECORATOR (expected_failures , int , 0 )}}
\par
{\bkmkstart AAAAAAAELS}
{\bkmkend AAAAAAAELS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_DEFINE_DECORATOR\:doctest}
{\xe \v doctest\:DOCTEST_DEFINE_DECORATOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::DOCTEST_DEFINE_DECORATOR (may_fail , {\b bool} , {\b true} )}}
\par
{\bkmkstart AAAAAAAELT}
{\bkmkend AAAAAAAELT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_DEFINE_DECORATOR\:doctest}
{\xe \v doctest\:DOCTEST_DEFINE_DECORATOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::DOCTEST_DEFINE_DECORATOR (no_breaks , {\b bool} , {\b true} )}}
\par
{\bkmkstart AAAAAAAELU}
{\bkmkend AAAAAAAELU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_DEFINE_DECORATOR\:doctest}
{\xe \v doctest\:DOCTEST_DEFINE_DECORATOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::DOCTEST_DEFINE_DECORATOR (no_output , {\b bool} , {\b true} )}}
\par
{\bkmkstart AAAAAAAELV}
{\bkmkend AAAAAAAELV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_DEFINE_DECORATOR\:doctest}
{\xe \v doctest\:DOCTEST_DEFINE_DECORATOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::DOCTEST_DEFINE_DECORATOR (should_fail , {\b bool} , {\b true} )}}
\par
{\bkmkstart AAAAAAAELW}
{\bkmkend AAAAAAAELW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_DEFINE_DECORATOR\:doctest}
{\xe \v doctest\:DOCTEST_DEFINE_DECORATOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::DOCTEST_DEFINE_DECORATOR (skip , {\b bool} , {\b true} )}}
\par
{\bkmkstart AAAAAAAELX}
{\bkmkend AAAAAAAELX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_DEFINE_DECORATOR\:doctest}
{\xe \v doctest\:DOCTEST_DEFINE_DECORATOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::DOCTEST_DEFINE_DECORATOR (test_suite , const char * , "" )}}
\par
{\bkmkstart AAAAAAAELY}
{\bkmkend AAAAAAAELY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_DEFINE_DECORATOR\:doctest}
{\xe \v doctest\:DOCTEST_DEFINE_DECORATOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::DOCTEST_DEFINE_DECORATOR (timeout , double , 0 )}}
\par
{\bkmkstart AAAAAAAELZ}
{\bkmkend AAAAAAAELZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v failureString\:doctest}
{\xe \v doctest\:failureString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} const char * doctest::failureString ({\b assertType::Enum}  {\i at})}}
\par
{\bkmkstart AAAAAAAEMA}
{\bkmkend AAAAAAAEMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getContextOptions\:doctest}
{\xe \v doctest\:getContextOptions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} const {\b ContextOptions} * doctest::getContextOptions ()}}
\par
{\bkmkstart AAAAAAAEMB}
{\bkmkend AAAAAAAEMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator!=\:doctest}
{\xe \v doctest\:operator!=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b bool} doctest::operator!= (const {\b String} &  {\i lhs}, const {\b String} &  {\i rhs})}}
\par
{\bkmkstart AAAAAAAEMC}
{\bkmkend AAAAAAAEMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator+\:doctest}
{\xe \v doctest\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b String} doctest::operator+ (const {\b String} &  {\i lhs}, const {\b String} &  {\i rhs})}}
\par
{\bkmkstart AAAAAAAEMD}
{\bkmkend AAAAAAAEMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator<\:doctest}
{\xe \v doctest\:operator<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b bool} doctest::operator< (const {\b String} &  {\i lhs}, const {\b String} &  {\i rhs})}}
\par
{\bkmkstart AAAAAAAEME}
{\bkmkend AAAAAAAEME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator<<\:doctest}
{\xe \v doctest\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b std::ostream} & doctest::operator<< ({\b std::ostream} &  {\i s}, const {\b String} &  {\i in})}}
\par
{\bkmkstart AAAAAAAEMF}
{\bkmkend AAAAAAAEMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator<=\:doctest}
{\xe \v doctest\:operator<=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b bool} doctest::operator<= (const {\b String} &  {\i lhs}, const {\b String} &  {\i rhs})}}
\par
{\bkmkstart AAAAAAAEMG}
{\bkmkend AAAAAAAEMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator==\:doctest}
{\xe \v doctest\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b bool} doctest::operator== (const {\b String} &  {\i lhs}, const {\b String} &  {\i rhs})}}
\par
{\bkmkstart AAAAAAAEMH}
{\bkmkend AAAAAAAEMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator>\:doctest}
{\xe \v doctest\:operator>}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b bool} doctest::operator> (const {\b String} &  {\i lhs}, const {\b String} &  {\i rhs})}}
\par
{\bkmkstart AAAAAAAEMI}
{\bkmkend AAAAAAAEMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator>=\:doctest}
{\xe \v doctest\:operator>=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b bool} doctest::operator>= (const {\b String} &  {\i lhs}, const {\b String} &  {\i rhs})}}
\par
{\bkmkstart AAAAAAAEMJ}
{\bkmkend AAAAAAAEMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v registerExceptionTranslator\:doctest}
{\xe \v doctest\:registerExceptionTranslator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > int doctest::registerExceptionTranslator ({\b String}(*)(T)  {\i translateFunction})}}
\par
{\bkmkstart AAAAAAAEMK}
{\bkmkend AAAAAAAEMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1773                                                                 \{\par
1774     DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH({\cf22 "-Wexit-time-destructors"})\par
1775     static detail::ExceptionTranslator<T> exceptionTranslator(translateFunction);\par
1776     DOCTEST_CLANG_SUPPRESS_WARNING_POP\par
1777     detail::registerExceptionTranslatorImpl(&exceptionTranslator);\par
1778     return 0;\par
1779 \}\par
}
}
{\xe \v registerReporter\:doctest}
{\xe \v doctest\:registerReporter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename Reporter > int doctest::registerReporter (const char *  {\i name}, int  {\i priority}, {\b bool}  {\i isReporter})}}
\par
{\bkmkstart AAAAAAAEML}
{\bkmkend AAAAAAAEML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1943                                                                       \{\par
1944     detail::registerReporterImpl(name, priority, detail::reporterCreator<Reporter>, isReporter);\par
1945     {\cf19 return} 0;\par
1946 \}\par
}
}
{\xe \v skipPathFromFilename\:doctest}
{\xe \v doctest\:skipPathFromFilename}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} const char * doctest::skipPathFromFilename (const char *  {\i file})}}
\par
{\bkmkstart AAAAAAAEMM}
{\bkmkend AAAAAAAEMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toString\:doctest}
{\xe \v doctest\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b String} doctest::toString ({\b bool}  {\i in})}}
\par
{\bkmkstart AAAAAAAEMN}
{\bkmkend AAAAAAAEMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toString\:doctest}
{\xe \v doctest\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b String} doctest::toString (char  {\i in})}}
\par
{\bkmkstart AAAAAAAEMO}
{\bkmkend AAAAAAAEMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toString\:doctest}
{\xe \v doctest\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b String} doctest::toString (char signed  {\i in})}}
\par
{\bkmkstart AAAAAAAEMP}
{\bkmkend AAAAAAAEMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toString\:doctest}
{\xe \v doctest\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b String} doctest::toString (char unsigned  {\i in})}}
\par
{\bkmkstart AAAAAAAEMQ}
{\bkmkend AAAAAAAEMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toString\:doctest}
{\xe \v doctest\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b String} doctest::toString (const {\b Approx} &  {\i in})}}
\par
{\bkmkstart AAAAAAAEMR}
{\bkmkend AAAAAAAEMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toString\:doctest}
{\xe \v doctest\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T , typename {\b detail::enable_if}<!{\b detail::is_enum}< T >::value, {\b bool} >::type  = true> {\b String} doctest::toString (const {\b DOCTEST_REF_WRAP}(T)  {\i value})}}
\par
{\bkmkstart AAAAAAAEMS}
{\bkmkend AAAAAAAEMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1003                                                  \{\par
1004     {\cf19 return} StringMaker<T>::convert(value);\par
1005 \}\par
}
}
{\xe \v toString\:doctest}
{\xe \v doctest\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b String} doctest::toString (double  {\i in})}}
\par
{\bkmkstart AAAAAAAEMT}
{\bkmkend AAAAAAAEMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toString\:doctest}
{\xe \v doctest\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b String} doctest::toString (double long  {\i in})}}
\par
{\bkmkstart AAAAAAAEMU}
{\bkmkend AAAAAAAEMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toString\:doctest}
{\xe \v doctest\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b String} doctest::toString (float  {\i in})}}
\par
{\bkmkstart AAAAAAAEMV}
{\bkmkend AAAAAAAEMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toString\:doctest}
{\xe \v doctest\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b String} doctest::toString (int  {\i in})}}
\par
{\bkmkstart AAAAAAAEMW}
{\bkmkend AAAAAAAEMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toString\:doctest}
{\xe \v doctest\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b String} doctest::toString (int long  {\i in})}}
\par
{\bkmkstart AAAAAAAEMX}
{\bkmkend AAAAAAAEMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toString\:doctest}
{\xe \v doctest\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b String} doctest::toString (int long long  {\i in})}}
\par
{\bkmkstart AAAAAAAEMY}
{\bkmkend AAAAAAAEMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toString\:doctest}
{\xe \v doctest\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b String} doctest::toString (int long long unsigned  {\i in})}}
\par
{\bkmkstart AAAAAAAEMZ}
{\bkmkend AAAAAAAEMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toString\:doctest}
{\xe \v doctest\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b String} doctest::toString (int long unsigned  {\i in})}}
\par
{\bkmkstart AAAAAAAENA}
{\bkmkend AAAAAAAENA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toString\:doctest}
{\xe \v doctest\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b String} doctest::toString (int short  {\i in})}}
\par
{\bkmkstart AAAAAAAENB}
{\bkmkend AAAAAAAENB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toString\:doctest}
{\xe \v doctest\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b String} doctest::toString (int short unsigned  {\i in})}}
\par
{\bkmkstart AAAAAAAENC}
{\bkmkend AAAAAAAENC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toString\:doctest}
{\xe \v doctest\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b String} doctest::toString (int unsigned  {\i in})}}
\par
{\bkmkstart AAAAAAAEND}
{\bkmkend AAAAAAAEND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toString\:doctest}
{\xe \v doctest\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b String} doctest::toString ({\b std::nullptr_t}  {\i in})}}
\par
{\bkmkstart AAAAAAAENE}
{\bkmkend AAAAAAAENE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 
{\xe \v is_running_in_test\:doctest}
{\xe \v doctest\:is_running_in_test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b bool} doctest::is_running_in_test{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAENF}
{\bkmkend AAAAAAAENF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace doctest::assertType\par \pard\plain 
{\tc\tcl2 \v doctest::assertType}
{\xe \v doctest::assertType}
{\bkmkstart AAAAAAAETZ}
{\bkmkend AAAAAAAETZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Enum} \{ {\b is_warn} = 1
, {\b is_check} = 2 * is_warn
, {\b is_require} = 2 * is_check
, {\b is_normal} = 2 * is_require
, {\b is_throws} = 2 * is_normal
, {\b is_throws_as} = 2 * is_throws
, {\b is_throws_with} = 2 * is_throws_as
, {\b is_nothrow} = 2 * is_throws_with
, {\b is_false} = 2 * is_nothrow
, {\b is_unary} = 2 * is_false
, {\b is_eq} = 2 * is_unary
, {\b is_ne} = 2 * is_eq
, {\b is_lt} = 2 * is_ne
, {\b is_gt} = 2 * is_lt
, {\b is_ge} = 2 * is_gt
, {\b is_le} = 2 * is_ge
, {\b DT_WARN} = is_normal | is_warn
, {\b DT_CHECK} = is_normal | is_check
, {\b DT_REQUIRE} = is_normal | is_require
, {\b DT_WARN_FALSE} = is_normal | is_false | is_warn
, {\b DT_CHECK_FALSE} = is_normal | is_false | is_check
, {\b DT_REQUIRE_FALSE} = is_normal | is_false | is_require
, {\b DT_WARN_THROWS} = is_throws | is_warn
, {\b DT_CHECK_THROWS} = is_throws | is_check
, {\b DT_REQUIRE_THROWS} = is_throws | is_require
, {\b DT_WARN_THROWS_AS} = is_throws_as | is_warn
, {\b DT_CHECK_THROWS_AS} = is_throws_as | is_check
, {\b DT_REQUIRE_THROWS_AS} = is_throws_as | is_require
, {\b DT_WARN_THROWS_WITH} = is_throws_with | is_warn
, {\b DT_CHECK_THROWS_WITH} = is_throws_with | is_check
, {\b DT_REQUIRE_THROWS_WITH} = is_throws_with | is_require
, {\b DT_WARN_THROWS_WITH_AS} = is_throws_with | is_throws_as | is_warn
, {\b DT_CHECK_THROWS_WITH_AS} = is_throws_with | is_throws_as | is_check
, {\b DT_REQUIRE_THROWS_WITH_AS} = is_throws_with | is_throws_as | is_require
, {\b DT_WARN_NOTHROW} = is_nothrow | is_warn
, {\b DT_CHECK_NOTHROW} = is_nothrow | is_check
, {\b DT_REQUIRE_NOTHROW} = is_nothrow | is_require
, {\b DT_WARN_EQ} = is_normal | is_eq | is_warn
, {\b DT_CHECK_EQ} = is_normal | is_eq | is_check
, {\b DT_REQUIRE_EQ} = is_normal | is_eq | is_require
, {\b DT_WARN_NE} = is_normal | is_ne | is_warn
, {\b DT_CHECK_NE} = is_normal | is_ne | is_check
, {\b DT_REQUIRE_NE} = is_normal | is_ne | is_require
, {\b DT_WARN_GT} = is_normal | is_gt | is_warn
, {\b DT_CHECK_GT} = is_normal | is_gt | is_check
, {\b DT_REQUIRE_GT} = is_normal | is_gt | is_require
, {\b DT_WARN_LT} = is_normal | is_lt | is_warn
, {\b DT_CHECK_LT} = is_normal | is_lt | is_check
, {\b DT_REQUIRE_LT} = is_normal | is_lt | is_require
, {\b DT_WARN_GE} = is_normal | is_ge | is_warn
, {\b DT_CHECK_GE} = is_normal | is_ge | is_check
, {\b DT_REQUIRE_GE} = is_normal | is_ge | is_require
, {\b DT_WARN_LE} = is_normal | is_le | is_warn
, {\b DT_CHECK_LE} = is_normal | is_le | is_check
, {\b DT_REQUIRE_LE} = is_normal | is_le | is_require
, {\b DT_WARN_UNARY} = is_normal | is_unary | is_warn
, {\b DT_CHECK_UNARY} = is_normal | is_unary | is_check
, {\b DT_REQUIRE_UNARY} = is_normal | is_unary | is_require
, {\b DT_WARN_UNARY_FALSE} = is_normal | is_false | is_unary | is_warn
, {\b DT_CHECK_UNARY_FALSE} = is_normal | is_false | is_unary | is_check
, {\b DT_REQUIRE_UNARY_FALSE} = is_normal | is_false | is_unary | is_require
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 
{\xe \v Enum\:doctest::assertType}
{\xe \v doctest::assertType\:Enum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b doctest::assertType::Enum}}}
\par
{\bkmkstart AAAAAAAEUA}
{\bkmkend AAAAAAAEUA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v is_warn\:doctest::assertType}
{\xe \v doctest::assertType\:is_warn}
{\qr is_warn{\bkmkstart AAAAAAAEUB}
{\bkmkend AAAAAAAEUB}
\cell }{\cell }{\row }
{\xe \v is_check\:doctest::assertType}
{\xe \v doctest::assertType\:is_check}
{\qr is_check{\bkmkstart AAAAAAAEUC}
{\bkmkend AAAAAAAEUC}
\cell }{\cell }{\row }
{\xe \v is_require\:doctest::assertType}
{\xe \v doctest::assertType\:is_require}
{\qr is_require{\bkmkstart AAAAAAAEUD}
{\bkmkend AAAAAAAEUD}
\cell }{\cell }{\row }
{\xe \v is_normal\:doctest::assertType}
{\xe \v doctest::assertType\:is_normal}
{\qr is_normal{\bkmkstart AAAAAAAEUE}
{\bkmkend AAAAAAAEUE}
\cell }{\cell }{\row }
{\xe \v is_throws\:doctest::assertType}
{\xe \v doctest::assertType\:is_throws}
{\qr is_throws{\bkmkstart AAAAAAAEUF}
{\bkmkend AAAAAAAEUF}
\cell }{\cell }{\row }
{\xe \v is_throws_as\:doctest::assertType}
{\xe \v doctest::assertType\:is_throws_as}
{\qr is_throws_as{\bkmkstart AAAAAAAEUG}
{\bkmkend AAAAAAAEUG}
\cell }{\cell }{\row }
{\xe \v is_throws_with\:doctest::assertType}
{\xe \v doctest::assertType\:is_throws_with}
{\qr is_throws_with{\bkmkstart AAAAAAAEUH}
{\bkmkend AAAAAAAEUH}
\cell }{\cell }{\row }
{\xe \v is_nothrow\:doctest::assertType}
{\xe \v doctest::assertType\:is_nothrow}
{\qr is_nothrow{\bkmkstart AAAAAAAEUI}
{\bkmkend AAAAAAAEUI}
\cell }{\cell }{\row }
{\xe \v is_false\:doctest::assertType}
{\xe \v doctest::assertType\:is_false}
{\qr is_false{\bkmkstart AAAAAAAEUJ}
{\bkmkend AAAAAAAEUJ}
\cell }{\cell }{\row }
{\xe \v is_unary\:doctest::assertType}
{\xe \v doctest::assertType\:is_unary}
{\qr is_unary{\bkmkstart AAAAAAAEUK}
{\bkmkend AAAAAAAEUK}
\cell }{\cell }{\row }
{\xe \v is_eq\:doctest::assertType}
{\xe \v doctest::assertType\:is_eq}
{\qr is_eq{\bkmkstart AAAAAAAEUL}
{\bkmkend AAAAAAAEUL}
\cell }{\cell }{\row }
{\xe \v is_ne\:doctest::assertType}
{\xe \v doctest::assertType\:is_ne}
{\qr is_ne{\bkmkstart AAAAAAAEUM}
{\bkmkend AAAAAAAEUM}
\cell }{\cell }{\row }
{\xe \v is_lt\:doctest::assertType}
{\xe \v doctest::assertType\:is_lt}
{\qr is_lt{\bkmkstart AAAAAAAEUN}
{\bkmkend AAAAAAAEUN}
\cell }{\cell }{\row }
{\xe \v is_gt\:doctest::assertType}
{\xe \v doctest::assertType\:is_gt}
{\qr is_gt{\bkmkstart AAAAAAAEUO}
{\bkmkend AAAAAAAEUO}
\cell }{\cell }{\row }
{\xe \v is_ge\:doctest::assertType}
{\xe \v doctest::assertType\:is_ge}
{\qr is_ge{\bkmkstart AAAAAAAEUP}
{\bkmkend AAAAAAAEUP}
\cell }{\cell }{\row }
{\xe \v is_le\:doctest::assertType}
{\xe \v doctest::assertType\:is_le}
{\qr is_le{\bkmkstart AAAAAAAEUQ}
{\bkmkend AAAAAAAEUQ}
\cell }{\cell }{\row }
{\xe \v DT_WARN\:doctest::assertType}
{\xe \v doctest::assertType\:DT_WARN}
{\qr DT_WARN{\bkmkstart AAAAAAAEUR}
{\bkmkend AAAAAAAEUR}
\cell }{\cell }{\row }
{\xe \v DT_CHECK\:doctest::assertType}
{\xe \v doctest::assertType\:DT_CHECK}
{\qr DT_CHECK{\bkmkstart AAAAAAAEUS}
{\bkmkend AAAAAAAEUS}
\cell }{\cell }{\row }
{\xe \v DT_REQUIRE\:doctest::assertType}
{\xe \v doctest::assertType\:DT_REQUIRE}
{\qr DT_REQUIRE{\bkmkstart AAAAAAAEUT}
{\bkmkend AAAAAAAEUT}
\cell }{\cell }{\row }
{\xe \v DT_WARN_FALSE\:doctest::assertType}
{\xe \v doctest::assertType\:DT_WARN_FALSE}
{\qr DT_WARN_FALSE{\bkmkstart AAAAAAAEUU}
{\bkmkend AAAAAAAEUU}
\cell }{\cell }{\row }
{\xe \v DT_CHECK_FALSE\:doctest::assertType}
{\xe \v doctest::assertType\:DT_CHECK_FALSE}
{\qr DT_CHECK_FALSE{\bkmkstart AAAAAAAEUV}
{\bkmkend AAAAAAAEUV}
\cell }{\cell }{\row }
{\xe \v DT_REQUIRE_FALSE\:doctest::assertType}
{\xe \v doctest::assertType\:DT_REQUIRE_FALSE}
{\qr DT_REQUIRE_FALSE{\bkmkstart AAAAAAAEUW}
{\bkmkend AAAAAAAEUW}
\cell }{\cell }{\row }
{\xe \v DT_WARN_THROWS\:doctest::assertType}
{\xe \v doctest::assertType\:DT_WARN_THROWS}
{\qr DT_WARN_THROWS{\bkmkstart AAAAAAAEUX}
{\bkmkend AAAAAAAEUX}
\cell }{\cell }{\row }
{\xe \v DT_CHECK_THROWS\:doctest::assertType}
{\xe \v doctest::assertType\:DT_CHECK_THROWS}
{\qr DT_CHECK_THROWS{\bkmkstart AAAAAAAEUY}
{\bkmkend AAAAAAAEUY}
\cell }{\cell }{\row }
{\xe \v DT_REQUIRE_THROWS\:doctest::assertType}
{\xe \v doctest::assertType\:DT_REQUIRE_THROWS}
{\qr DT_REQUIRE_THROWS{\bkmkstart AAAAAAAEUZ}
{\bkmkend AAAAAAAEUZ}
\cell }{\cell }{\row }
{\xe \v DT_WARN_THROWS_AS\:doctest::assertType}
{\xe \v doctest::assertType\:DT_WARN_THROWS_AS}
{\qr DT_WARN_THROWS_AS{\bkmkstart AAAAAAAEVA}
{\bkmkend AAAAAAAEVA}
\cell }{\cell }{\row }
{\xe \v DT_CHECK_THROWS_AS\:doctest::assertType}
{\xe \v doctest::assertType\:DT_CHECK_THROWS_AS}
{\qr DT_CHECK_THROWS_AS{\bkmkstart AAAAAAAEVB}
{\bkmkend AAAAAAAEVB}
\cell }{\cell }{\row }
{\xe \v DT_REQUIRE_THROWS_AS\:doctest::assertType}
{\xe \v doctest::assertType\:DT_REQUIRE_THROWS_AS}
{\qr DT_REQUIRE_THROWS_AS{\bkmkstart AAAAAAAEVC}
{\bkmkend AAAAAAAEVC}
\cell }{\cell }{\row }
{\xe \v DT_WARN_THROWS_WITH\:doctest::assertType}
{\xe \v doctest::assertType\:DT_WARN_THROWS_WITH}
{\qr DT_WARN_THROWS_WITH{\bkmkstart AAAAAAAEVD}
{\bkmkend AAAAAAAEVD}
\cell }{\cell }{\row }
{\xe \v DT_CHECK_THROWS_WITH\:doctest::assertType}
{\xe \v doctest::assertType\:DT_CHECK_THROWS_WITH}
{\qr DT_CHECK_THROWS_WITH{\bkmkstart AAAAAAAEVE}
{\bkmkend AAAAAAAEVE}
\cell }{\cell }{\row }
{\xe \v DT_REQUIRE_THROWS_WITH\:doctest::assertType}
{\xe \v doctest::assertType\:DT_REQUIRE_THROWS_WITH}
{\qr DT_REQUIRE_THROWS_WITH{\bkmkstart AAAAAAAEVF}
{\bkmkend AAAAAAAEVF}
\cell }{\cell }{\row }
{\xe \v DT_WARN_THROWS_WITH_AS\:doctest::assertType}
{\xe \v doctest::assertType\:DT_WARN_THROWS_WITH_AS}
{\qr DT_WARN_THROWS_WITH_AS{\bkmkstart AAAAAAAEVG}
{\bkmkend AAAAAAAEVG}
\cell }{\cell }{\row }
{\xe \v DT_CHECK_THROWS_WITH_AS\:doctest::assertType}
{\xe \v doctest::assertType\:DT_CHECK_THROWS_WITH_AS}
{\qr DT_CHECK_THROWS_WITH_AS{\bkmkstart AAAAAAAEVH}
{\bkmkend AAAAAAAEVH}
\cell }{\cell }{\row }
{\xe \v DT_REQUIRE_THROWS_WITH_AS\:doctest::assertType}
{\xe \v doctest::assertType\:DT_REQUIRE_THROWS_WITH_AS}
{\qr DT_REQUIRE_THROWS_WITH_AS{\bkmkstart AAAAAAAEVI}
{\bkmkend AAAAAAAEVI}
\cell }{\cell }{\row }
{\xe \v DT_WARN_NOTHROW\:doctest::assertType}
{\xe \v doctest::assertType\:DT_WARN_NOTHROW}
{\qr DT_WARN_NOTHROW{\bkmkstart AAAAAAAEVJ}
{\bkmkend AAAAAAAEVJ}
\cell }{\cell }{\row }
{\xe \v DT_CHECK_NOTHROW\:doctest::assertType}
{\xe \v doctest::assertType\:DT_CHECK_NOTHROW}
{\qr DT_CHECK_NOTHROW{\bkmkstart AAAAAAAEVK}
{\bkmkend AAAAAAAEVK}
\cell }{\cell }{\row }
{\xe \v DT_REQUIRE_NOTHROW\:doctest::assertType}
{\xe \v doctest::assertType\:DT_REQUIRE_NOTHROW}
{\qr DT_REQUIRE_NOTHROW{\bkmkstart AAAAAAAEVL}
{\bkmkend AAAAAAAEVL}
\cell }{\cell }{\row }
{\xe \v DT_WARN_EQ\:doctest::assertType}
{\xe \v doctest::assertType\:DT_WARN_EQ}
{\qr DT_WARN_EQ{\bkmkstart AAAAAAAEVM}
{\bkmkend AAAAAAAEVM}
\cell }{\cell }{\row }
{\xe \v DT_CHECK_EQ\:doctest::assertType}
{\xe \v doctest::assertType\:DT_CHECK_EQ}
{\qr DT_CHECK_EQ{\bkmkstart AAAAAAAEVN}
{\bkmkend AAAAAAAEVN}
\cell }{\cell }{\row }
{\xe \v DT_REQUIRE_EQ\:doctest::assertType}
{\xe \v doctest::assertType\:DT_REQUIRE_EQ}
{\qr DT_REQUIRE_EQ{\bkmkstart AAAAAAAEVO}
{\bkmkend AAAAAAAEVO}
\cell }{\cell }{\row }
{\xe \v DT_WARN_NE\:doctest::assertType}
{\xe \v doctest::assertType\:DT_WARN_NE}
{\qr DT_WARN_NE{\bkmkstart AAAAAAAEVP}
{\bkmkend AAAAAAAEVP}
\cell }{\cell }{\row }
{\xe \v DT_CHECK_NE\:doctest::assertType}
{\xe \v doctest::assertType\:DT_CHECK_NE}
{\qr DT_CHECK_NE{\bkmkstart AAAAAAAEVQ}
{\bkmkend AAAAAAAEVQ}
\cell }{\cell }{\row }
{\xe \v DT_REQUIRE_NE\:doctest::assertType}
{\xe \v doctest::assertType\:DT_REQUIRE_NE}
{\qr DT_REQUIRE_NE{\bkmkstart AAAAAAAEVR}
{\bkmkend AAAAAAAEVR}
\cell }{\cell }{\row }
{\xe \v DT_WARN_GT\:doctest::assertType}
{\xe \v doctest::assertType\:DT_WARN_GT}
{\qr DT_WARN_GT{\bkmkstart AAAAAAAEVS}
{\bkmkend AAAAAAAEVS}
\cell }{\cell }{\row }
{\xe \v DT_CHECK_GT\:doctest::assertType}
{\xe \v doctest::assertType\:DT_CHECK_GT}
{\qr DT_CHECK_GT{\bkmkstart AAAAAAAEVT}
{\bkmkend AAAAAAAEVT}
\cell }{\cell }{\row }
{\xe \v DT_REQUIRE_GT\:doctest::assertType}
{\xe \v doctest::assertType\:DT_REQUIRE_GT}
{\qr DT_REQUIRE_GT{\bkmkstart AAAAAAAEVU}
{\bkmkend AAAAAAAEVU}
\cell }{\cell }{\row }
{\xe \v DT_WARN_LT\:doctest::assertType}
{\xe \v doctest::assertType\:DT_WARN_LT}
{\qr DT_WARN_LT{\bkmkstart AAAAAAAEVV}
{\bkmkend AAAAAAAEVV}
\cell }{\cell }{\row }
{\xe \v DT_CHECK_LT\:doctest::assertType}
{\xe \v doctest::assertType\:DT_CHECK_LT}
{\qr DT_CHECK_LT{\bkmkstart AAAAAAAEVW}
{\bkmkend AAAAAAAEVW}
\cell }{\cell }{\row }
{\xe \v DT_REQUIRE_LT\:doctest::assertType}
{\xe \v doctest::assertType\:DT_REQUIRE_LT}
{\qr DT_REQUIRE_LT{\bkmkstart AAAAAAAEVX}
{\bkmkend AAAAAAAEVX}
\cell }{\cell }{\row }
{\xe \v DT_WARN_GE\:doctest::assertType}
{\xe \v doctest::assertType\:DT_WARN_GE}
{\qr DT_WARN_GE{\bkmkstart AAAAAAAEVY}
{\bkmkend AAAAAAAEVY}
\cell }{\cell }{\row }
{\xe \v DT_CHECK_GE\:doctest::assertType}
{\xe \v doctest::assertType\:DT_CHECK_GE}
{\qr DT_CHECK_GE{\bkmkstart AAAAAAAEVZ}
{\bkmkend AAAAAAAEVZ}
\cell }{\cell }{\row }
{\xe \v DT_REQUIRE_GE\:doctest::assertType}
{\xe \v doctest::assertType\:DT_REQUIRE_GE}
{\qr DT_REQUIRE_GE{\bkmkstart AAAAAAAEWA}
{\bkmkend AAAAAAAEWA}
\cell }{\cell }{\row }
{\xe \v DT_WARN_LE\:doctest::assertType}
{\xe \v doctest::assertType\:DT_WARN_LE}
{\qr DT_WARN_LE{\bkmkstart AAAAAAAEWB}
{\bkmkend AAAAAAAEWB}
\cell }{\cell }{\row }
{\xe \v DT_CHECK_LE\:doctest::assertType}
{\xe \v doctest::assertType\:DT_CHECK_LE}
{\qr DT_CHECK_LE{\bkmkstart AAAAAAAEWC}
{\bkmkend AAAAAAAEWC}
\cell }{\cell }{\row }
{\xe \v DT_REQUIRE_LE\:doctest::assertType}
{\xe \v doctest::assertType\:DT_REQUIRE_LE}
{\qr DT_REQUIRE_LE{\bkmkstart AAAAAAAEWD}
{\bkmkend AAAAAAAEWD}
\cell }{\cell }{\row }
{\xe \v DT_WARN_UNARY\:doctest::assertType}
{\xe \v doctest::assertType\:DT_WARN_UNARY}
{\qr DT_WARN_UNARY{\bkmkstart AAAAAAAEWE}
{\bkmkend AAAAAAAEWE}
\cell }{\cell }{\row }
{\xe \v DT_CHECK_UNARY\:doctest::assertType}
{\xe \v doctest::assertType\:DT_CHECK_UNARY}
{\qr DT_CHECK_UNARY{\bkmkstart AAAAAAAEWF}
{\bkmkend AAAAAAAEWF}
\cell }{\cell }{\row }
{\xe \v DT_REQUIRE_UNARY\:doctest::assertType}
{\xe \v doctest::assertType\:DT_REQUIRE_UNARY}
{\qr DT_REQUIRE_UNARY{\bkmkstart AAAAAAAEWG}
{\bkmkend AAAAAAAEWG}
\cell }{\cell }{\row }
{\xe \v DT_WARN_UNARY_FALSE\:doctest::assertType}
{\xe \v doctest::assertType\:DT_WARN_UNARY_FALSE}
{\qr DT_WARN_UNARY_FALSE{\bkmkstart AAAAAAAEWH}
{\bkmkend AAAAAAAEWH}
\cell }{\cell }{\row }
{\xe \v DT_CHECK_UNARY_FALSE\:doctest::assertType}
{\xe \v doctest::assertType\:DT_CHECK_UNARY_FALSE}
{\qr DT_CHECK_UNARY_FALSE{\bkmkstart AAAAAAAEWI}
{\bkmkend AAAAAAAEWI}
\cell }{\cell }{\row }
{\xe \v DT_REQUIRE_UNARY_FALSE\:doctest::assertType}
{\xe \v doctest::assertType\:DT_REQUIRE_UNARY_FALSE}
{\qr DT_REQUIRE_UNARY_FALSE{\bkmkstart AAAAAAAEWJ}
{\bkmkend AAAAAAAEWJ}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 609     \{\par
610         {\cf20 // macro traits}\par
611 \par
612         is_warn    = 1,\par
613         is_check   = 2 * is_warn,\par
614         is_require = 2 * is_check,\par
615 \par
616         is_normal      = 2 * is_require,\par
617         is_throws      = 2 * is_normal,\par
618         is_throws_as   = 2 * is_throws,\par
619         is_throws_with = 2 * is_throws_as,\par
620         is_nothrow     = 2 * is_throws_with,\par
621 \par
622         is_false = 2 * is_nothrow,\par
623         is_unary = 2 * is_false, {\cf20 // not checked anywhere - used just to distinguish the types}\par
624 \par
625         is_eq = 2 * is_unary,\par
626         is_ne = 2 * is_eq,\par
627 \par
628         is_lt = 2 * is_ne,\par
629         is_gt = 2 * is_lt,\par
630 \par
631         is_ge = 2 * is_gt,\par
632         is_le = 2 * is_ge,\par
633 \par
634         {\cf20 // macro types}\par
635 \par
636         DT_WARN    = is_normal | is_warn,\par
637         DT_CHECK   = is_normal | is_check,\par
638         DT_REQUIRE = is_normal | is_require,\par
639 \par
640         DT_WARN_FALSE    = is_normal | is_false | is_warn,\par
641         DT_CHECK_FALSE   = is_normal | is_false | is_check,\par
642         DT_REQUIRE_FALSE = is_normal | is_false | is_require,\par
643 \par
644         DT_WARN_THROWS    = is_throws | is_warn,\par
645         DT_CHECK_THROWS   = is_throws | is_check,\par
646         DT_REQUIRE_THROWS = is_throws | is_require,\par
647 \par
648         DT_WARN_THROWS_AS    = is_throws_as | is_warn,\par
649         DT_CHECK_THROWS_AS   = is_throws_as | is_check,\par
650         DT_REQUIRE_THROWS_AS = is_throws_as | is_require,\par
651 \par
652         DT_WARN_THROWS_WITH    = is_throws_with | is_warn,\par
653         DT_CHECK_THROWS_WITH   = is_throws_with | is_check,\par
654         DT_REQUIRE_THROWS_WITH = is_throws_with | is_require,\par
655         \par
656         DT_WARN_THROWS_WITH_AS    = is_throws_with | is_throws_as | is_warn,\par
657         DT_CHECK_THROWS_WITH_AS   = is_throws_with | is_throws_as | is_check,\par
658         DT_REQUIRE_THROWS_WITH_AS = is_throws_with | is_throws_as | is_require,\par
659 \par
660         DT_WARN_NOTHROW    = is_nothrow | is_warn,\par
661         DT_CHECK_NOTHROW   = is_nothrow | is_check,\par
662         DT_REQUIRE_NOTHROW = is_nothrow | is_require,\par
663 \par
664         DT_WARN_EQ    = is_normal | is_eq | is_warn,\par
665         DT_CHECK_EQ   = is_normal | is_eq | is_check,\par
666         DT_REQUIRE_EQ = is_normal | is_eq | is_require,\par
667 \par
668         DT_WARN_NE    = is_normal | is_ne | is_warn,\par
669         DT_CHECK_NE   = is_normal | is_ne | is_check,\par
670         DT_REQUIRE_NE = is_normal | is_ne | is_require,\par
671 \par
672         DT_WARN_GT    = is_normal | is_gt | is_warn,\par
673         DT_CHECK_GT   = is_normal | is_gt | is_check,\par
674         DT_REQUIRE_GT = is_normal | is_gt | is_require,\par
675 \par
676         DT_WARN_LT    = is_normal | is_lt | is_warn,\par
677         DT_CHECK_LT   = is_normal | is_lt | is_check,\par
678         DT_REQUIRE_LT = is_normal | is_lt | is_require,\par
679 \par
680         DT_WARN_GE    = is_normal | is_ge | is_warn,\par
681         DT_CHECK_GE   = is_normal | is_ge | is_check,\par
682         DT_REQUIRE_GE = is_normal | is_ge | is_require,\par
683 \par
684         DT_WARN_LE    = is_normal | is_le | is_warn,\par
685         DT_CHECK_LE   = is_normal | is_le | is_check,\par
686         DT_REQUIRE_LE = is_normal | is_le | is_require,\par
687 \par
688         DT_WARN_UNARY    = is_normal | is_unary | is_warn,\par
689         DT_CHECK_UNARY   = is_normal | is_unary | is_check,\par
690         DT_REQUIRE_UNARY = is_normal | is_unary | is_require,\par
691 \par
692         DT_WARN_UNARY_FALSE    = is_normal | is_false | is_unary | is_warn,\par
693         DT_CHECK_UNARY_FALSE   = is_normal | is_false | is_unary | is_check,\par
694         DT_REQUIRE_UNARY_FALSE = is_normal | is_false | is_unary | is_require,\par
695     \};\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace doctest::Color\par \pard\plain 
{\tc\tcl2 \v doctest::Color}
{\xe \v doctest::Color}
{\bkmkstart AAAAAAAEWK}
{\bkmkend AAAAAAAEWK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Enum} \{ {\b None} = 0
, {\b White}
, {\b Red}
, {\b Green}
, {\b Blue}
, {\b Cyan}
, {\b Yellow}
, {\b Grey}
, {\b Bright} = 0x10
, {\b BrightRed} = Bright | Red
, {\b BrightGreen} = Bright | Green
, {\b LightGrey} = Bright | Grey
, {\b BrightWhite} = Bright | White
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b std::ostream} & {\b operator<<} ({\b std::ostream} &s, Color::Enum code)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 
{\xe \v Enum\:doctest::Color}
{\xe \v doctest::Color\:Enum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum doctest::Color::Enum}}
\par
{\bkmkstart AAAAAAAEWL}
{\bkmkend AAAAAAAEWL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v None\:doctest::Color}
{\xe \v doctest::Color\:None}
{\qr None{\bkmkstart AAAAAAAEWM}
{\bkmkend AAAAAAAEWM}
\cell }{\cell }{\row }
{\xe \v White\:doctest::Color}
{\xe \v doctest::Color\:White}
{\qr White{\bkmkstart AAAAAAAEWN}
{\bkmkend AAAAAAAEWN}
\cell }{\cell }{\row }
{\xe \v Red\:doctest::Color}
{\xe \v doctest::Color\:Red}
{\qr Red{\bkmkstart AAAAAAAEWO}
{\bkmkend AAAAAAAEWO}
\cell }{\cell }{\row }
{\xe \v Green\:doctest::Color}
{\xe \v doctest::Color\:Green}
{\qr Green{\bkmkstart AAAAAAAEWP}
{\bkmkend AAAAAAAEWP}
\cell }{\cell }{\row }
{\xe \v Blue\:doctest::Color}
{\xe \v doctest::Color\:Blue}
{\qr Blue{\bkmkstart AAAAAAAEWQ}
{\bkmkend AAAAAAAEWQ}
\cell }{\cell }{\row }
{\xe \v Cyan\:doctest::Color}
{\xe \v doctest::Color\:Cyan}
{\qr Cyan{\bkmkstart AAAAAAAEWR}
{\bkmkend AAAAAAAEWR}
\cell }{\cell }{\row }
{\xe \v Yellow\:doctest::Color}
{\xe \v doctest::Color\:Yellow}
{\qr Yellow{\bkmkstart AAAAAAAEWS}
{\bkmkend AAAAAAAEWS}
\cell }{\cell }{\row }
{\xe \v Grey\:doctest::Color}
{\xe \v doctest::Color\:Grey}
{\qr Grey{\bkmkstart AAAAAAAEWT}
{\bkmkend AAAAAAAEWT}
\cell }{\cell }{\row }
{\xe \v Bright\:doctest::Color}
{\xe \v doctest::Color\:Bright}
{\qr Bright{\bkmkstart AAAAAAAEWU}
{\bkmkend AAAAAAAEWU}
\cell }{\cell }{\row }
{\xe \v BrightRed\:doctest::Color}
{\xe \v doctest::Color\:BrightRed}
{\qr BrightRed{\bkmkstart AAAAAAAEWV}
{\bkmkend AAAAAAAEWV}
\cell }{\cell }{\row }
{\xe \v BrightGreen\:doctest::Color}
{\xe \v doctest::Color\:BrightGreen}
{\qr BrightGreen{\bkmkstart AAAAAAAEWW}
{\bkmkend AAAAAAAEWW}
\cell }{\cell }{\row }
{\xe \v LightGrey\:doctest::Color}
{\xe \v doctest::Color\:LightGrey}
{\qr LightGrey{\bkmkstart AAAAAAAEWX}
{\bkmkend AAAAAAAEWX}
\cell }{\cell }{\row }
{\xe \v BrightWhite\:doctest::Color}
{\xe \v doctest::Color\:BrightWhite}
{\qr BrightWhite{\bkmkstart AAAAAAAEWY}
{\bkmkend AAAAAAAEWY}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 586     \{\par
587         None = 0,\par
588         White,\par
589         Red,\par
590         Green,\par
591         Blue,\par
592         Cyan,\par
593         Yellow,\par
594         Grey,\par
595 \par
596         Bright = 0x10,\par
597 \par
598         BrightRed   = Bright | Red,\par
599         BrightGreen = Bright | Green,\par
600         LightGrey   = Bright | Grey,\par
601         BrightWhite = Bright | White\par
602     \};\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator<<\:doctest::Color}
{\xe \v doctest::Color\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b std::ostream} & doctest::Color::operator<< ({\b std::ostream} &  {\i s}, Color::Enum  {\i code})}}
\par
{\bkmkstart AAAAAAAEWZ}
{\bkmkend AAAAAAAEWZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace doctest::detail\par \pard\plain 
{\tc\tcl2 \v doctest::detail}
{\xe \v doctest::detail}
{\bkmkstart AAAAAAAEXA}
{\bkmkend AAAAAAAEXA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b assertAction}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b binaryAssertComparison}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b has_insertion_operator_impl}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ContextScope}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ContextScopeBase}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b deferred_false}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b enable_if}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b enable_if< true, TYPE >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ExceptionTranslator}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCLINT destructor of virtual class. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Expression_lhs}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ExpressionDecomposer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b filldata}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b filldata< const char[N]>}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b filldata< T[N]>}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b IExceptionTranslator}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b is_enum}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b is_lvalue_reference}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b is_lvalue_reference< T & >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b is_rvalue_reference}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b is_rvalue_reference< T && >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b MessageBuilder}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RelationalComparator}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b remove_const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b remove_const< const T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b remove_reference}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b remove_reference< T & >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b remove_reference< T && >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Result}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ResultBuilder}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b StringMakerBase}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b StringMakerBase< true >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b StringStream}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b StringStreamBase}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b StringStreamBase< true >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Subcase}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TestCase}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TestFailureException}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TestSuite}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b underlying_type}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es de Tipos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T > using {\b has_insertion_operator} = {\b has_insertion_operator_impl::check}< const T >\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void(* {\b funcType}) ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void(* {\b assert_handler}) (const {\b AssertData} &)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b IReporter} *(* {\b reporterCreatorFunc}) (const {\b ContextOptions} &)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T , typename U  = T&&> U {\b declval} (int)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > T {\b declval} (long)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > auto {\b declval} () {\b DOCTEST_NOEXCEPT} -> decltype(declval< T >(0))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T > T && {\b forward} (typename {\b remove_reference}< T >::type &t) {\b DOCTEST_NOEXCEPT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T > T && {\b forward} (typename {\b remove_reference}< T >::type &&t) {\b DOCTEST_NOEXCEPT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b std::ostream} * {\b tlssPush} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b tlssPop} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b filloss} ({\b std::ostream} *stream, const T &in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T , unsigned long N> void {\b filloss} ({\b std::ostream} *stream, const T(&in)[N])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b rawMemoryToString} (const void *object, unsigned size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > {\b String} {\b rawMemoryToString} (const {\b DOCTEST_REF_WRAP}(T) object)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > const char * {\b type_to_string} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b bool} {\b checkIfShouldThrow} ({\b assertType::Enum} at)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b throwException} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename L , typename R > {\b String} {\b stringifyBinaryExpr} (const {\b DOCTEST_REF_WRAP}(L) lhs, const char *op, const {\b DOCTEST_REF_WRAP}(R) rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} int {\b regTest} (const {\b TestCase} &tc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} int {\b setTestSuite} (const {\b TestSuite} &ts)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b bool} {\b isDebuggerActive} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > int {\b instantiationHelper} (const T &)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b failed_out_of_a_testing_context} (const {\b AssertData} &ad)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b bool} {\b decomp_assert} ({\b assertType::Enum} at, const char *file, int line, const char *expr, {\b Result} result)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<int comparison, typename L , typename R > {\b DOCTEST_NOINLINE} {\b bool} {\b binary_assert} ({\b assertType::Enum} at, const char *file, int line, const char *expr, const {\b DOCTEST_REF_WRAP}(L) lhs, const {\b DOCTEST_REF_WRAP}(R) rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename L > {\b DOCTEST_NOINLINE} {\b bool} {\b unary_assert} ({\b assertType::Enum} at, const char *file, int line, const char *expr, const {\b DOCTEST_REF_WRAP}(L) val)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b registerExceptionTranslatorImpl} (const {\b IExceptionTranslator} *et)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b toStream} ({\b std::ostream} *s, const T &value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b toStream} ({\b std::ostream} *s, {\b bool} in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b toStream} ({\b std::ostream} *s, float in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b toStream} ({\b std::ostream} *s, double in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b toStream} ({\b std::ostream} *s, double long in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b toStream} ({\b std::ostream} *s, char in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b toStream} ({\b std::ostream} *s, char signed in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b toStream} ({\b std::ostream} *s, char unsigned in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b toStream} ({\b std::ostream} *s, int short in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b toStream} ({\b std::ostream} *s, int short unsigned in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b toStream} ({\b std::ostream} *s, int in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b toStream} ({\b std::ostream} *s, int unsigned in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b toStream} ({\b std::ostream} *s, int long in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b toStream} ({\b std::ostream} *s, int long unsigned in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b toStream} ({\b std::ostream} *s, int long long in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b toStream} ({\b std::ostream} *s, int long long unsigned in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename L > {\b ContextScope}< L > {\b MakeContextScope} (const L &lambda)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b registerReporterImpl} (const char *name, int prio, {\b reporterCreatorFunc} c, {\b bool} isReporter)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename Reporter > {\b IReporter} * {\b reporterCreator} (const {\b ContextOptions} &o)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b DOCTEST_INTERFACE} {\b TestCase}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es dos tipos\par
\pard\plain 
{\xe \v assert_handler\:doctest::detail}
{\xe \v doctest::detail\:assert_handler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void(* doctest::detail::assert_handler) (const {\b AssertData} &)}}
\par
{\bkmkstart AAAAAAAEXB}
{\bkmkend AAAAAAAEXB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v funcType\:doctest::detail}
{\xe \v doctest::detail\:funcType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void(* doctest::detail::funcType) ()}}
\par
{\bkmkstart AAAAAAAEXC}
{\bkmkend AAAAAAAEXC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v has_insertion_operator\:doctest::detail}
{\xe \v doctest::detail\:has_insertion_operator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > using {\b doctest::detail::has_insertion_operator} = typedef {\b has_insertion_operator_impl::check}<const T>}}
\par
{\bkmkstart AAAAAAAEXD}
{\bkmkend AAAAAAAEXD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v reporterCreatorFunc\:doctest::detail}
{\xe \v doctest::detail\:reporterCreatorFunc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b IReporter} *(* doctest::detail::reporterCreatorFunc) (const {\b ContextOptions} &)}}
\par
{\bkmkstart AAAAAAAEXE}
{\bkmkend AAAAAAAEXE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v binary_assert\:doctest::detail}
{\xe \v doctest::detail\:binary_assert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<int comparison, typename L , typename R > {\b DOCTEST_NOINLINE} {\b bool} doctest::detail::binary_assert ({\b assertType::Enum}  {\i at}, const char *  {\i file}, int  {\i line}, const char *  {\i expr}, const {\b DOCTEST_REF_WRAP}(L)  {\i lhs}, const {\b DOCTEST_REF_WRAP}(R)  {\i rhs})}}
\par
{\bkmkstart AAAAAAAEXF}
{\bkmkend AAAAAAAEXF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1571                                                                        \{\par
1572         {\cf18 bool} failed = !RelationalComparator<comparison, L, R>()(lhs, rhs);\par
1573 \par
1574         {\cf20 // ###################################################################################}\par
1575         {\cf20 // IF THE DEBUGGER BREAKS HERE - GO 1 LEVEL UP IN THE CALLSTACK FOR THE FAILING ASSERT}\par
1576         {\cf20 // THIS IS THE EFFECT OF HAVING 'DOCTEST_CONFIG_SUPER_FAST_ASSERTS' DEFINED}\par
1577         {\cf20 // ###################################################################################}\par
1578         DOCTEST_ASSERT_OUT_OF_TESTS(stringifyBinaryExpr(lhs, {\cf22 ", "}, rhs));\par
1579         DOCTEST_ASSERT_IN_TESTS(stringifyBinaryExpr(lhs, {\cf22 ", "}, rhs));\par
1580         {\cf19 return} !failed;\par
1581     \}\par
}
}
{\xe \v checkIfShouldThrow\:doctest::detail}
{\xe \v doctest::detail\:checkIfShouldThrow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b bool} doctest::detail::checkIfShouldThrow ({\b assertType::Enum}  {\i at})}}
\par
{\bkmkstart AAAAAAAEXG}
{\bkmkend AAAAAAAEXG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v declval\:doctest::detail}
{\xe \v doctest::detail\:declval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > auto doctest::detail::declval () ->  decltype(declval< T >(0))}}
\par
{\bkmkstart AAAAAAAEXH}
{\bkmkend AAAAAAAEXH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v declval\:doctest::detail}
{\xe \v doctest::detail\:declval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T , typename U  = T&&> U doctest::detail::declval (int )}}
\par
{\bkmkstart AAAAAAAEXI}
{\bkmkend AAAAAAAEXI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v declval\:doctest::detail}
{\xe \v doctest::detail\:declval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > T doctest::detail::declval (long )}}
\par
{\bkmkstart AAAAAAAEXJ}
{\bkmkend AAAAAAAEXJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v decomp_assert\:doctest::detail}
{\xe \v doctest::detail\:decomp_assert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b bool} doctest::detail::decomp_assert ({\b assertType::Enum}  {\i at}, const char *  {\i file}, int  {\i line}, const char *  {\i expr}, {\b Result}  {\i result})}}
\par
{\bkmkstart AAAAAAAEXK}
{\bkmkend AAAAAAAEXK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v failed_out_of_a_testing_context\:doctest::detail}
{\xe \v doctest::detail\:failed_out_of_a_testing_context}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} void doctest::detail::failed_out_of_a_testing_context (const {\b AssertData} &  {\i ad})}}
\par
{\bkmkstart AAAAAAAEXL}
{\bkmkend AAAAAAAEXL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v filloss\:doctest::detail}
{\xe \v doctest::detail\:filloss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void doctest::detail::filloss ({\b std::ostream} *  {\i stream}, const T &  {\i in})}}
\par
{\bkmkstart AAAAAAAEXM}
{\bkmkend AAAAAAAEXM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 935                                                   \{\par
936         filldata<T>::fill(stream, in);\par
937     \}\par
}
}
{\xe \v filloss\:doctest::detail}
{\xe \v doctest::detail\:filloss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T , unsigned long N> void doctest::detail::filloss ({\b std::ostream} *  {\i stream}, const T(&)  {\i in}[N])}}
\par
{\bkmkstart AAAAAAAEXN}
{\bkmkend AAAAAAAEXN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 940                                                        \{\par
941         {\cf20 // T[N], T(&)[N], T(&&)[N] have same behaviour.}\par
942         {\cf20 // Hence remove reference.}\par
943         filldata<{\cf17 typename} remove_reference<{\cf17 decltype}(in)>::type>::fill(stream, in);\par
944     \}\par
}
}
{\xe \v forward\:doctest::detail}
{\xe \v doctest::detail\:forward}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > T && doctest::detail::forward (typename {\b remove_reference}< T >::type &&  {\i t}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEXO}
{\bkmkend AAAAAAAEXO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 851     \{\par
852         {\cf17 static_assert}(!is_lvalue_reference<T>::value,\par
853                         {\cf22 "Can not forward an rvalue as an lvalue."});\par
854         {\cf19 return} {\cf17 static_cast<}T&&{\cf17 >}(t);\par
855     \}\par
}
}
{\xe \v forward\:doctest::detail}
{\xe \v doctest::detail\:forward}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > T && doctest::detail::forward (typename {\b remove_reference}< T >::type &  {\i t}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEXP}
{\bkmkend AAAAAAAEXP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 845     \{\par
846         {\cf19 return} {\cf17 static_cast<}T&&{\cf17 >}(t);\par
847     \}\par
}
}
{\xe \v instantiationHelper\:doctest::detail}
{\xe \v doctest::detail\:instantiationHelper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > int doctest::detail::instantiationHelper (const T & )}}
\par
{\bkmkstart AAAAAAAEXQ}
{\bkmkend AAAAAAAEXQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1464 \{ {\cf19 return} 0; \}\par
}
}
{\xe \v isDebuggerActive\:doctest::detail}
{\xe \v doctest::detail\:isDebuggerActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b bool} doctest::detail::isDebuggerActive ()}}
\par
{\bkmkstart AAAAAAAEXR}
{\bkmkend AAAAAAAEXR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MakeContextScope\:doctest::detail}
{\xe \v doctest::detail\:MakeContextScope}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename L > {\b ContextScope}< L > doctest::detail::MakeContextScope (const L &  {\i lambda})}}
\par
{\bkmkstart AAAAAAAEXS}
{\bkmkend AAAAAAAEXS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1747                                                       \{\par
1748         {\cf19 return} ContextScope<L>(lambda);\par
1749     \}\par
}
}
{\xe \v rawMemoryToString\:doctest::detail}
{\xe \v doctest::detail\:rawMemoryToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b String} doctest::detail::rawMemoryToString (const {\b DOCTEST_REF_WRAP}(T)  {\i object})}}
\par
{\bkmkstart AAAAAAAEXT}
{\bkmkend AAAAAAAEXT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 967                                                                \{\par
968         {\cf19 return} rawMemoryToString(&{\cf18 object}, {\cf17 sizeof}({\cf18 object}));\par
969     \}\par
}
}
{\xe \v rawMemoryToString\:doctest::detail}
{\xe \v doctest::detail\:rawMemoryToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b String} doctest::detail::rawMemoryToString (const void *  {\i object}, unsigned  {\i size})}}
\par
{\bkmkstart AAAAAAAEXU}
{\bkmkend AAAAAAAEXU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v registerExceptionTranslatorImpl\:doctest::detail}
{\xe \v doctest::detail\:registerExceptionTranslatorImpl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} void doctest::detail::registerExceptionTranslatorImpl (const {\b IExceptionTranslator} *  {\i et})}}
\par
{\bkmkstart AAAAAAAEXV}
{\bkmkend AAAAAAAEXV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v registerReporterImpl\:doctest::detail}
{\xe \v doctest::detail\:registerReporterImpl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} void doctest::detail::registerReporterImpl (const char *  {\i name}, int  {\i prio}, {\b reporterCreatorFunc}  {\i c}, {\b bool}  {\i isReporter})}}
\par
{\bkmkstart AAAAAAAEXW}
{\bkmkend AAAAAAAEXW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v regTest\:doctest::detail}
{\xe \v doctest::detail\:regTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} int doctest::detail::regTest (const {\b TestCase} &  {\i tc})}}
\par
{\bkmkstart AAAAAAAEXX}
{\bkmkend AAAAAAAEXX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v reporterCreator\:doctest::detail}
{\xe \v doctest::detail\:reporterCreator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename Reporter > {\b IReporter} * doctest::detail::reporterCreator (const {\b ContextOptions} &  {\i o})}}
\par
{\bkmkstart AAAAAAAEXY}
{\bkmkend AAAAAAAEXY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1937                                                         \{\par
1938         {\cf19 return} {\cf17 new} Reporter(o);\par
1939     \}\par
}
}
{\xe \v setTestSuite\:doctest::detail}
{\xe \v doctest::detail\:setTestSuite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} int doctest::detail::setTestSuite (const {\b TestSuite} &  {\i ts})}}
\par
{\bkmkstart AAAAAAAEXZ}
{\bkmkend AAAAAAAEXZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stringifyBinaryExpr\:doctest::detail}
{\xe \v doctest::detail\:stringifyBinaryExpr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename L , typename R > {\b String} doctest::detail::stringifyBinaryExpr (const {\b DOCTEST_REF_WRAP}(L)  {\i lhs}, const char *  {\i op}, const {\b DOCTEST_REF_WRAP}(R)  {\i rhs})}}
\par
{\bkmkstart AAAAAAAEYA}
{\bkmkend AAAAAAAEYA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1166                                                               \{\par
1167         {\cf20 // NOLINTNEXTLINE(clang-analyzer-cplusplus.NewDeleteLeaks)}\par
1168         {\cf19 return} toString(lhs) + op + toString(rhs);\par
1169     \}\par
}
}
{\xe \v throwException\:doctest::detail}
{\xe \v doctest::detail\:throwException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} void doctest::detail::throwException ()}}
\par
{\bkmkstart AAAAAAAEYB}
{\bkmkend AAAAAAAEYB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tlssPop\:doctest::detail}
{\xe \v doctest::detail\:tlssPop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b String} doctest::detail::tlssPop ()}}
\par
{\bkmkstart AAAAAAAEYC}
{\bkmkend AAAAAAAEYC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tlssPush\:doctest::detail}
{\xe \v doctest::detail\:tlssPush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b std::ostream} * doctest::detail::tlssPush ()}}
\par
{\bkmkstart AAAAAAAEYD}
{\bkmkend AAAAAAAEYD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toStream\:doctest::detail}
{\xe \v doctest::detail\:toStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} void doctest::detail::toStream ({\b std::ostream} *  {\i s}, {\b bool}  {\i in})}}
\par
{\bkmkstart AAAAAAAEYE}
{\bkmkend AAAAAAAEYE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toStream\:doctest::detail}
{\xe \v doctest::detail\:toStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} void doctest::detail::toStream ({\b std::ostream} *  {\i s}, char  {\i in})}}
\par
{\bkmkstart AAAAAAAEYF}
{\bkmkend AAAAAAAEYF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toStream\:doctest::detail}
{\xe \v doctest::detail\:toStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} void doctest::detail::toStream ({\b std::ostream} *  {\i s}, char signed  {\i in})}}
\par
{\bkmkstart AAAAAAAEYG}
{\bkmkend AAAAAAAEYG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toStream\:doctest::detail}
{\xe \v doctest::detail\:toStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} void doctest::detail::toStream ({\b std::ostream} *  {\i s}, char unsigned  {\i in})}}
\par
{\bkmkstart AAAAAAAEYH}
{\bkmkend AAAAAAAEYH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toStream\:doctest::detail}
{\xe \v doctest::detail\:toStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void doctest::detail::toStream ({\b std::ostream} *  {\i s}, const T &  {\i value})}}
\par
{\bkmkstart AAAAAAAEYI}
{\bkmkend AAAAAAAEYI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1661                                                  \{\par
1662         StringStream<T>::convert(s, value);\par
1663     \}\par
}
}
{\xe \v toStream\:doctest::detail}
{\xe \v doctest::detail\:toStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} void doctest::detail::toStream ({\b std::ostream} *  {\i s}, double  {\i in})}}
\par
{\bkmkstart AAAAAAAEYJ}
{\bkmkend AAAAAAAEYJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toStream\:doctest::detail}
{\xe \v doctest::detail\:toStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} void doctest::detail::toStream ({\b std::ostream} *  {\i s}, double long  {\i in})}}
\par
{\bkmkstart AAAAAAAEYK}
{\bkmkend AAAAAAAEYK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toStream\:doctest::detail}
{\xe \v doctest::detail\:toStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} void doctest::detail::toStream ({\b std::ostream} *  {\i s}, float  {\i in})}}
\par
{\bkmkstart AAAAAAAEYL}
{\bkmkend AAAAAAAEYL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toStream\:doctest::detail}
{\xe \v doctest::detail\:toStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} void doctest::detail::toStream ({\b std::ostream} *  {\i s}, int  {\i in})}}
\par
{\bkmkstart AAAAAAAEYM}
{\bkmkend AAAAAAAEYM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toStream\:doctest::detail}
{\xe \v doctest::detail\:toStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} void doctest::detail::toStream ({\b std::ostream} *  {\i s}, int long  {\i in})}}
\par
{\bkmkstart AAAAAAAEYN}
{\bkmkend AAAAAAAEYN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toStream\:doctest::detail}
{\xe \v doctest::detail\:toStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} void doctest::detail::toStream ({\b std::ostream} *  {\i s}, int long long  {\i in})}}
\par
{\bkmkstart AAAAAAAEYO}
{\bkmkend AAAAAAAEYO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toStream\:doctest::detail}
{\xe \v doctest::detail\:toStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} void doctest::detail::toStream ({\b std::ostream} *  {\i s}, int long long unsigned  {\i in})}}
\par
{\bkmkstart AAAAAAAEYP}
{\bkmkend AAAAAAAEYP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toStream\:doctest::detail}
{\xe \v doctest::detail\:toStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} void doctest::detail::toStream ({\b std::ostream} *  {\i s}, int long unsigned  {\i in})}}
\par
{\bkmkstart AAAAAAAEYQ}
{\bkmkend AAAAAAAEYQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toStream\:doctest::detail}
{\xe \v doctest::detail\:toStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} void doctest::detail::toStream ({\b std::ostream} *  {\i s}, int short  {\i in})}}
\par
{\bkmkstart AAAAAAAEYR}
{\bkmkend AAAAAAAEYR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toStream\:doctest::detail}
{\xe \v doctest::detail\:toStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} void doctest::detail::toStream ({\b std::ostream} *  {\i s}, int short unsigned  {\i in})}}
\par
{\bkmkstart AAAAAAAEYS}
{\bkmkend AAAAAAAEYS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toStream\:doctest::detail}
{\xe \v doctest::detail\:toStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} void doctest::detail::toStream ({\b std::ostream} *  {\i s}, int unsigned  {\i in})}}
\par
{\bkmkstart AAAAAAAEYT}
{\bkmkend AAAAAAAEYT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type_to_string\:doctest::detail}
{\xe \v doctest::detail\:type_to_string}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > const char * doctest::detail::type_to_string ()}}
\par
{\bkmkstart AAAAAAAEYU}
{\bkmkend AAAAAAAEYU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 972                                  \{\par
973         {\cf19 return} {\cf22 "<>"};\par
974     \}\par
}
}
{\xe \v unary_assert\:doctest::detail}
{\xe \v doctest::detail\:unary_assert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename L > {\b DOCTEST_NOINLINE} {\b bool} doctest::detail::unary_assert ({\b assertType::Enum}  {\i at}, const char *  {\i file}, int  {\i line}, const char *  {\i expr}, const {\b DOCTEST_REF_WRAP}(L)  {\i val})}}
\par
{\bkmkstart AAAAAAAEYV}
{\bkmkend AAAAAAAEYV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCLINT bitwise operator in conditional\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1585                                                                                         \{\par
1586         {\cf18 bool} failed = !val;\par
1587 \par
1588         {\cf19 if}(at & assertType::is_false) \par
1589             failed = !failed;\par
1590 \par
1591         {\cf20 // ###################################################################################}\par
1592         {\cf20 // IF THE DEBUGGER BREAKS HERE - GO 1 LEVEL UP IN THE CALLSTACK FOR THE FAILING ASSERT}\par
1593         {\cf20 // THIS IS THE EFFECT OF HAVING 'DOCTEST_CONFIG_SUPER_FAST_ASSERTS' DEFINED}\par
1594         {\cf20 // ###################################################################################}\par
1595         DOCTEST_ASSERT_OUT_OF_TESTS(toString(val));\par
1596         DOCTEST_ASSERT_IN_TESTS(toString(val));\par
1597         {\cf19 return} !failed;\par
1598     \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 
{\xe \v TestCase\:doctest::detail}
{\xe \v doctest::detail\:TestCase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b DOCTEST_INTERFACE} {\b doctest::detail::TestCase}}}
\par
{\bkmkstart AAAAAAAEYW}
{\bkmkend AAAAAAAEYW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace doctest::detail::assertAction\par \pard\plain 
{\tc\tcl2 \v doctest::detail::assertAction}
{\xe \v doctest::detail::assertAction}
{\bkmkstart AAAAAAAFDT}
{\bkmkend AAAAAAAFDT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Enum} \{ {\b nothing} = 0
, {\b dbgbreak} = 1
, {\b shouldthrow} = 2
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 
{\xe \v Enum\:doctest::detail::assertAction}
{\xe \v doctest::detail::assertAction\:Enum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b doctest::detail::assertAction::Enum}}}
\par
{\bkmkstart AAAAAAAFDU}
{\bkmkend AAAAAAAFDU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v nothing\:doctest::detail::assertAction}
{\xe \v doctest::detail::assertAction\:nothing}
{\qr nothing{\bkmkstart AAAAAAAFDV}
{\bkmkend AAAAAAAFDV}
\cell }{\cell }{\row }
{\xe \v dbgbreak\:doctest::detail::assertAction}
{\xe \v doctest::detail::assertAction\:dbgbreak}
{\qr dbgbreak{\bkmkstart AAAAAAAFDW}
{\bkmkend AAAAAAAFDW}
\cell }{\cell }{\row }
{\xe \v shouldthrow\:doctest::detail::assertAction}
{\xe \v doctest::detail::assertAction\:shouldthrow}
{\qr shouldthrow{\bkmkstart AAAAAAAFDX}
{\bkmkend AAAAAAAFDX}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1529         \{\par
1530             nothing     = 0,\par
1531             dbgbreak    = 1,\par
1532             shouldthrow = 2\par
1533         \};\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace doctest::detail::binaryAssertComparison\par \pard\plain 
{\tc\tcl2 \v doctest::detail::binaryAssertComparison}
{\xe \v doctest::detail::binaryAssertComparison}
{\bkmkstart AAAAAAAFDY}
{\bkmkend AAAAAAAFDY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Enum} \{ {\b eq} = 0
, {\b ne}
, {\b gt}
, {\b lt}
, {\b ge}
, {\b le}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 
{\xe \v Enum\:doctest::detail::binaryAssertComparison}
{\xe \v doctest::detail::binaryAssertComparison\:Enum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b doctest::detail::binaryAssertComparison::Enum}}}
\par
{\bkmkstart AAAAAAAFDZ}
{\bkmkend AAAAAAAFDZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v eq\:doctest::detail::binaryAssertComparison}
{\xe \v doctest::detail::binaryAssertComparison\:eq}
{\qr eq{\bkmkstart AAAAAAAFEA}
{\bkmkend AAAAAAAFEA}
\cell }{\cell }{\row }
{\xe \v ne\:doctest::detail::binaryAssertComparison}
{\xe \v doctest::detail::binaryAssertComparison\:ne}
{\qr ne{\bkmkstart AAAAAAAFEB}
{\bkmkend AAAAAAAFEB}
\cell }{\cell }{\row }
{\xe \v gt\:doctest::detail::binaryAssertComparison}
{\xe \v doctest::detail::binaryAssertComparison\:gt}
{\qr gt{\bkmkstart AAAAAAAFEC}
{\bkmkend AAAAAAAFEC}
\cell }{\cell }{\row }
{\xe \v lt\:doctest::detail::binaryAssertComparison}
{\xe \v doctest::detail::binaryAssertComparison\:lt}
{\qr lt{\bkmkstart AAAAAAAFED}
{\bkmkend AAAAAAAFED}
\cell }{\cell }{\row }
{\xe \v ge\:doctest::detail::binaryAssertComparison}
{\xe \v doctest::detail::binaryAssertComparison\:ge}
{\qr ge{\bkmkstart AAAAAAAFEE}
{\bkmkend AAAAAAAFEE}
\cell }{\cell }{\row }
{\xe \v le\:doctest::detail::binaryAssertComparison}
{\xe \v doctest::detail::binaryAssertComparison\:le}
{\qr le{\bkmkstart AAAAAAAFEF}
{\bkmkend AAAAAAAFEF}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1468         \{\par
1469             eq = 0,\par
1470             ne,\par
1471             gt,\par
1472             lt,\par
1473             ge,\par
1474             le\par
1475         \};\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace doctest::detail::has_insertion_operator_impl\par \pard\plain 
{\tc\tcl2 \v doctest::detail::has_insertion_operator_impl}
{\xe \v doctest::detail::has_insertion_operator_impl}
{\bkmkstart AAAAAAAFEG}
{\bkmkend AAAAAAAFEG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b check}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b check< T, decltype(os()<< val< T >(), void())>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b std::ostream} & {\b os} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T > {\b DOCTEST_REF_WRAP} (T) val()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v DOCTEST_REF_WRAP\:doctest::detail::has_insertion_operator_impl}
{\xe \v doctest::detail::has_insertion_operator_impl\:DOCTEST_REF_WRAP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > doctest::detail::has_insertion_operator_impl::DOCTEST_REF_WRAP (T )}}
\par
{\bkmkstart AAAAAAAFEH}
{\bkmkend AAAAAAAFEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v os\:doctest::detail::has_insertion_operator_impl}
{\xe \v doctest::detail::has_insertion_operator_impl\:os}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b std::ostream} & doctest::detail::has_insertion_operator_impl::os ()}}
\par
{\bkmkstart AAAAAAAFEI}
{\bkmkend AAAAAAAFEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace doctest::TestCaseFailureReason\par \pard\plain 
{\tc\tcl2 \v doctest::TestCaseFailureReason}
{\xe \v doctest::TestCaseFailureReason}
{\bkmkstart AAAAAAAFEN}
{\bkmkend AAAAAAAFEN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Enum} \{ {\b None} = 0
, {\b AssertFailure} = 1
, {\b Exception} = 2
, {\b Crash} = 4
, {\b TooManyFailedAsserts} = 8
, {\b Timeout} = 16
, {\b ShouldHaveFailedButDidnt} = 32
, {\b ShouldHaveFailedAndDid} = 64
, {\b DidntFailExactlyNumTimes} = 128
, {\b FailedExactlyNumTimes} = 256
, {\b CouldHaveFailedAndDid} = 512
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 
{\xe \v Enum\:doctest::TestCaseFailureReason}
{\xe \v doctest::TestCaseFailureReason\:Enum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b doctest::TestCaseFailureReason::Enum}}}
\par
{\bkmkstart AAAAAAAFEO}
{\bkmkend AAAAAAAFEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v None\:doctest::TestCaseFailureReason}
{\xe \v doctest::TestCaseFailureReason\:None}
{\qr None{\bkmkstart AAAAAAAFEP}
{\bkmkend AAAAAAAFEP}
\cell }{\cell }{\row }
{\xe \v AssertFailure\:doctest::TestCaseFailureReason}
{\xe \v doctest::TestCaseFailureReason\:AssertFailure}
{\qr AssertFailure{\bkmkstart AAAAAAAFEQ}
{\bkmkend AAAAAAAFEQ}
\cell }{\cell }{\row }
{\xe \v Exception\:doctest::TestCaseFailureReason}
{\xe \v doctest::TestCaseFailureReason\:Exception}
{\qr Exception{\bkmkstart AAAAAAAFER}
{\bkmkend AAAAAAAFER}
\cell }{\cell }{\row }
{\xe \v Crash\:doctest::TestCaseFailureReason}
{\xe \v doctest::TestCaseFailureReason\:Crash}
{\qr Crash{\bkmkstart AAAAAAAFES}
{\bkmkend AAAAAAAFES}
\cell }{\cell }{\row }
{\xe \v TooManyFailedAsserts\:doctest::TestCaseFailureReason}
{\xe \v doctest::TestCaseFailureReason\:TooManyFailedAsserts}
{\qr TooManyFailedAsserts{\bkmkstart AAAAAAAFET}
{\bkmkend AAAAAAAFET}
\cell }{\cell }{\row }
{\xe \v Timeout\:doctest::TestCaseFailureReason}
{\xe \v doctest::TestCaseFailureReason\:Timeout}
{\qr Timeout{\bkmkstart AAAAAAAFEU}
{\bkmkend AAAAAAAFEU}
\cell }{\cell }{\row }
{\xe \v ShouldHaveFailedButDidnt\:doctest::TestCaseFailureReason}
{\xe \v doctest::TestCaseFailureReason\:ShouldHaveFailedButDidnt}
{\qr ShouldHaveFailedButDidnt{\bkmkstart AAAAAAAFEV}
{\bkmkend AAAAAAAFEV}
\cell }{\cell }{\row }
{\xe \v ShouldHaveFailedAndDid\:doctest::TestCaseFailureReason}
{\xe \v doctest::TestCaseFailureReason\:ShouldHaveFailedAndDid}
{\qr ShouldHaveFailedAndDid{\bkmkstart AAAAAAAFEW}
{\bkmkend AAAAAAAFEW}
\cell }{\cell }{\row }
{\xe \v DidntFailExactlyNumTimes\:doctest::TestCaseFailureReason}
{\xe \v doctest::TestCaseFailureReason\:DidntFailExactlyNumTimes}
{\qr DidntFailExactlyNumTimes{\bkmkstart AAAAAAAFEX}
{\bkmkend AAAAAAAFEX}
\cell }{\cell }{\row }
{\xe \v FailedExactlyNumTimes\:doctest::TestCaseFailureReason}
{\xe \v doctest::TestCaseFailureReason\:FailedExactlyNumTimes}
{\qr FailedExactlyNumTimes{\bkmkstart AAAAAAAFEY}
{\bkmkend AAAAAAAFEY}
\cell }{\cell }{\row }
{\xe \v CouldHaveFailedAndDid\:doctest::TestCaseFailureReason}
{\xe \v doctest::TestCaseFailureReason\:CouldHaveFailedAndDid}
{\qr CouldHaveFailedAndDid{\bkmkstart AAAAAAAFEZ}
{\bkmkend AAAAAAAFEZ}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1834     \{\par
1835         None                     = 0,\par
1836         AssertFailure            = 1,   {\cf20 // an assertion has failed in the test case}\par
1837         Exception                = 2,   {\cf20 // test case threw an exception}\par
1838         Crash                    = 4,   {\cf20 // a crash...}\par
1839         TooManyFailedAsserts     = 8,   {\cf20 // the abort-after option}\par
1840         Timeout                  = 16,  {\cf20 // see the timeout decorator}\par
1841         ShouldHaveFailedButDidnt = 32,  {\cf20 // see the should_fail decorator}\par
1842         ShouldHaveFailedAndDid   = 64,  {\cf20 // see the should_fail decorator}\par
1843         DidntFailExactlyNumTimes = 128, {\cf20 // see the expected_failures decorator}\par
1844         FailedExactlyNumTimes    = 256, {\cf20 // see the expected_failures decorator}\par
1845         CouldHaveFailedAndDid    = 512  {\cf20 // see the may_fail decorator}\par
1846     \};\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace doctest_detail_test_suite_ns\par \pard\plain 
{\tc\tcl2 \v doctest_detail_test_suite_ns}
{\xe \v doctest_detail_test_suite_ns}
{\bkmkstart AAAAAAAFFA}
{\bkmkend AAAAAAAFFA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b doctest::detail::TestSuite} & {\b getCurrentTestSuite} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v getCurrentTestSuite\:doctest_detail_test_suite_ns}
{\xe \v doctest_detail_test_suite_ns\:getCurrentTestSuite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} {\b doctest::detail::TestSuite} & doctest_detail_test_suite_ns::getCurrentTestSuite ()}}
\par
{\bkmkstart AAAAAAAFFB}
{\bkmkend AAAAAAAFFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace Fonts\par \pard\plain 
{\tc\tcl2 \v Fonts}
{\xe \v Fonts}
{\bkmkstart AAAAAAAFFC}
{\bkmkend AAAAAAAFFC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b PRESS_START_2P} = "./assets/fonts/PressStart2P.ttf"\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 
{\xe \v PRESS_START_2P\:Fonts}
{\xe \v Fonts\:PRESS_START_2P}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string Fonts::PRESS_START_2P = "./assets/fonts/PressStart2P.ttf"}}
\par
{\bkmkstart AAAAAAAFFD}
{\bkmkend AAAAAAAFFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace Icons\par \pard\plain 
{\tc\tcl2 \v Icons}
{\xe \v Icons}
{\bkmkstart AAAAAAAFFE}
{\bkmkend AAAAAAAFFE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b AIM} = "./assets/imgs/icons/IconAim.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b EXPLOSION} = "./assets/imgs/icons/IconExplosion.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b EYE} = "./assets/imgs/icons/IconEye.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b HEART} = "./assets/imgs/icons/IconHeart.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b SKULL} = "./assets/imgs/icons/IconSkull.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b RIGHT_ARROW_BLACK} = "./assets/imgs/icons/IconRightArrowBlack.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b LEFT_ARROW_BLACK} = "./assets/imgs/icons/IconLeftArrowBlack.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b ROTATE_ARROW} = "./assets/imgs/icons/IconRotate.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b RED_X} = "./assets/imgs/icons/IconRedX.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b LOGO} = "./assets/imgs/icons/Logo.png"\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 
{\xe \v AIM\:Icons}
{\xe \v Icons\:AIM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string Icons::AIM = "./assets/imgs/icons/IconAim.png"}}
\par
{\bkmkstart AAAAAAAFFF}
{\bkmkend AAAAAAAFFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EXPLOSION\:Icons}
{\xe \v Icons\:EXPLOSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string Icons::EXPLOSION = "./assets/imgs/icons/IconExplosion.png"}}
\par
{\bkmkstart AAAAAAAFFG}
{\bkmkend AAAAAAAFFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EYE\:Icons}
{\xe \v Icons\:EYE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string Icons::EYE = "./assets/imgs/icons/IconEye.png"}}
\par
{\bkmkstart AAAAAAAFFH}
{\bkmkend AAAAAAAFFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v HEART\:Icons}
{\xe \v Icons\:HEART}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string Icons::HEART = "./assets/imgs/icons/IconHeart.png"}}
\par
{\bkmkstart AAAAAAAFFI}
{\bkmkend AAAAAAAFFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LEFT_ARROW_BLACK\:Icons}
{\xe \v Icons\:LEFT_ARROW_BLACK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string Icons::LEFT_ARROW_BLACK = "./assets/imgs/icons/IconLeftArrowBlack.png"}}
\par
{\bkmkstart AAAAAAAFFJ}
{\bkmkend AAAAAAAFFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LOGO\:Icons}
{\xe \v Icons\:LOGO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string Icons::LOGO = "./assets/imgs/icons/Logo.png"}}
\par
{\bkmkstart AAAAAAAFFK}
{\bkmkend AAAAAAAFFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RED_X\:Icons}
{\xe \v Icons\:RED_X}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string Icons::RED_X = "./assets/imgs/icons/IconRedX.png"}}
\par
{\bkmkstart AAAAAAAFFL}
{\bkmkend AAAAAAAFFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RIGHT_ARROW_BLACK\:Icons}
{\xe \v Icons\:RIGHT_ARROW_BLACK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string Icons::RIGHT_ARROW_BLACK = "./assets/imgs/icons/IconRightArrowBlack.png"}}
\par
{\bkmkstart AAAAAAAFFM}
{\bkmkend AAAAAAAFFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ROTATE_ARROW\:Icons}
{\xe \v Icons\:ROTATE_ARROW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string Icons::ROTATE_ARROW = "./assets/imgs/icons/IconRotate.png"}}
\par
{\bkmkstart AAAAAAAFFN}
{\bkmkend AAAAAAAFFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SKULL\:Icons}
{\xe \v Icons\:SKULL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string Icons::SKULL = "./assets/imgs/icons/IconSkull.png"}}
\par
{\bkmkstart AAAAAAAFFO}
{\bkmkend AAAAAAAFFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace ScoreFormatter\par \pard\plain 
{\tc\tcl2 \v ScoreFormatter}
{\xe \v ScoreFormatter}
{\bkmkstart AAAAAAAFFP}
{\bkmkend AAAAAAAFFP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b buildLabelWithValue} (const std::string label, const unsigned int value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Build a string combaning the label and value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b buildProportionLabel} (const std::string label, const unsigned int overValue, const unsigned int underValue)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Built a string combaning the label and two values in a porportion. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v buildLabelWithValue\:ScoreFormatter}
{\xe \v ScoreFormatter\:buildLabelWithValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string ScoreFormatter::buildLabelWithValue (const std::string  {\i label}, const unsigned int  {\i value})}}
\par
{\bkmkstart AAAAAAAFFQ}
{\bkmkend AAAAAAAFFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Build a string combaning the label and value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i label} \cell }{is the score category text. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{is the value of the score category.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the built string combaning the label and value. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 6                                                                                              \{\par
7     std::stringstream labelWithValue;\par
8     labelWithValue.clear();\par
9     labelWithValue << label << std::to_string(value);\par
10 \par
11     {\cf19 return} labelWithValue.str();\par
12 \}\par
}
}
{\xe \v buildProportionLabel\:ScoreFormatter}
{\xe \v ScoreFormatter\:buildProportionLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string ScoreFormatter::buildProportionLabel (const std::string  {\i label}, const unsigned int  {\i overValue}, const unsigned int  {\i underValue})}}
\par
{\bkmkstart AAAAAAAFFR}
{\bkmkend AAAAAAAFFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Built a string combaning the label and two values in a porportion. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i label} \cell }{is the score category text. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i overValue} \cell }{is the numerator on the division. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i underValue} \cell }{is the denominator on the division.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the built string combaning the label and two values in the porportion. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14                                                                                                                                  \{\par
15     std::stringstream labelWithValue;\par
16     labelWithValue.clear();\par
17     labelWithValue << label <<  std::to_string(overValue) << {\cf22 "/"} << std::to_string(underValue);\par
18 \par
19     {\cf19 return} labelWithValue.str();\par
20 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace Screens\par \pard\plain 
{\tc\tcl2 \v Screens}
{\xe \v Screens}
{\bkmkstart AAAAAAAFFS}
{\bkmkend AAAAAAAFFS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b EndGameScreen}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GameScreen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PositioningScreen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ScoreScreen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Screen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ScreenManager}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TitleScreen}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace std\par \pard\plain 
{\tc\tcl2 \v std}
{\xe \v std}
{\bkmkstart AAAAAAAFHN}
{\bkmkend AAAAAAAFHN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b basic_istream}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b basic_ostream}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b char_traits}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b tuple}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es de Tipos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef decltype(nullptr) {\b nullptr_t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b basic_ostream}< char, {\b char_traits}< char > > {\b ostream}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b basic_istream}< char, {\b char_traits}< char > > {\b istream}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es dos tipos\par
\pard\plain 
{\xe \v istream\:std}
{\xe \v std\:istream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b basic_istream}<char, {\b char_traits}<char> > {\b std::istream}}}
\par
{\bkmkstart AAAAAAAFHO}
{\bkmkend AAAAAAAFHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nullptr_t\:std}
{\xe \v std\:nullptr_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef decltype(nullptr) {\b std::nullptr_t}}}
\par
{\bkmkstart AAAAAAAFHP}
{\bkmkend AAAAAAAFHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ostream\:std}
{\xe \v std\:ostream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b basic_ostream}<char, {\b char_traits}<char> > {\b std::ostream}}}
\par
{\bkmkstart AAAAAAAFHQ}
{\bkmkend AAAAAAAFHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace Views\par \pard\plain 
{\tc\tcl2 \v Views}
{\xe \v Views}
{\bkmkstart AAAAAAAFHV}
{\bkmkend AAAAAAAFHV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b BattleshipDisplay}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b BoardDisplay}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CrusierDisplay}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b EndGameScoreDisplay}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GameBoardDisplay}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GamePositionDisplay}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GameScoreDisplay}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MatchResultDisplay}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PlayerRegistredScore}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PositionDisplay}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PositioningBoardDisplay}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PositioningPositionDisplay}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SubmarineDisplay}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TroopDisplay}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TroopPositioningOption}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b View}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b WarningPopUp}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Classes{\tc \v Classes}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe doctest::Approx\par \pard\plain 
{\tc\tcl2 \v doctest::Approx}
{\xe \v doctest::Approx}
{\bkmkstart AAAAAAAENG}
{\bkmkend AAAAAAAENG}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Approx} (double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Approx} {\b operator()} (double value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Approx} & {\b epsilon} (double newEpsilon)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Approx} & {\b scale} (double newScale)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Amigos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} friend {\b bool} {\b operator==} (double lhs, const {\b Approx} &rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} friend {\b bool} {\b operator==} (const {\b Approx} &lhs, double rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} friend {\b bool} {\b operator!=} (double lhs, const {\b Approx} &rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} friend {\b bool} {\b operator!=} (const {\b Approx} &lhs, double rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} friend {\b bool} {\b operator<=} (double lhs, const {\b Approx} &rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} friend {\b bool} {\b operator<=} (const {\b Approx} &lhs, double rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} friend {\b bool} {\b operator>=} (double lhs, const {\b Approx} &rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} friend {\b bool} {\b operator>=} (const {\b Approx} &lhs, double rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} friend {\b bool} {\b operator<} (double lhs, const {\b Approx} &rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} friend {\b bool} {\b operator<} (const {\b Approx} &lhs, double rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} friend {\b bool} {\b operator>} (double lhs, const {\b Approx} &rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} friend {\b bool} {\b operator>} (const {\b Approx} &lhs, double rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} friend {\b String} {\b toString} (const {\b Approx} &in)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Approx\:doctest::Approx}
{\xe \v doctest::Approx\:Approx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::Approx::Approx (double  {\i value}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAENH}
{\bkmkend AAAAAAAENH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v epsilon\:doctest::Approx}
{\xe \v doctest::Approx\:epsilon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Approx} & doctest::Approx::epsilon (double  {\i newEpsilon})}}
\par
{\bkmkstart AAAAAAAENI}
{\bkmkend AAAAAAAENI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator()\:doctest::Approx}
{\xe \v doctest::Approx\:operator()}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Approx} doctest::Approx::operator() (double  {\i value}) const}}
\par
{\bkmkstart AAAAAAAENJ}
{\bkmkend AAAAAAAENJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scale\:doctest::Approx}
{\xe \v doctest::Approx\:scale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Approx} & doctest::Approx::scale (double  {\i newScale})}}
\par
{\bkmkstart AAAAAAAENK}
{\bkmkend AAAAAAAENK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos s\'EDmbolos amigos e relacionados\par
\pard\plain 
{\xe \v operator!=\:doctest::Approx}
{\xe \v doctest::Approx\:operator!=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} friend {\b bool} operator!= (const {\b Approx} &  {\i lhs}, double  {\i rhs}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAENL}
{\bkmkend AAAAAAAENL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator!=\:doctest::Approx}
{\xe \v doctest::Approx\:operator!=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} friend {\b bool} operator!= (double  {\i lhs}, const {\b Approx} &  {\i rhs}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAENM}
{\bkmkend AAAAAAAENM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator<\:doctest::Approx}
{\xe \v doctest::Approx\:operator<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} friend {\b bool} operator< (const {\b Approx} &  {\i lhs}, double  {\i rhs}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAENN}
{\bkmkend AAAAAAAENN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator<\:doctest::Approx}
{\xe \v doctest::Approx\:operator<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} friend {\b bool} operator< (double  {\i lhs}, const {\b Approx} &  {\i rhs}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAENO}
{\bkmkend AAAAAAAENO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator<=\:doctest::Approx}
{\xe \v doctest::Approx\:operator<=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} friend {\b bool} operator<= (const {\b Approx} &  {\i lhs}, double  {\i rhs}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAENP}
{\bkmkend AAAAAAAENP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator<=\:doctest::Approx}
{\xe \v doctest::Approx\:operator<=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} friend {\b bool} operator<= (double  {\i lhs}, const {\b Approx} &  {\i rhs}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAENQ}
{\bkmkend AAAAAAAENQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator==\:doctest::Approx}
{\xe \v doctest::Approx\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} friend {\b bool} operator== (const {\b Approx} &  {\i lhs}, double  {\i rhs}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAENR}
{\bkmkend AAAAAAAENR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator==\:doctest::Approx}
{\xe \v doctest::Approx\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} friend {\b bool} operator== (double  {\i lhs}, const {\b Approx} &  {\i rhs}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAENS}
{\bkmkend AAAAAAAENS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator>\:doctest::Approx}
{\xe \v doctest::Approx\:operator>}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} friend {\b bool} operator> (const {\b Approx} &  {\i lhs}, double  {\i rhs}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAENT}
{\bkmkend AAAAAAAENT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator>\:doctest::Approx}
{\xe \v doctest::Approx\:operator>}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} friend {\b bool} operator> (double  {\i lhs}, const {\b Approx} &  {\i rhs}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAENU}
{\bkmkend AAAAAAAENU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator>=\:doctest::Approx}
{\xe \v doctest::Approx\:operator>=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} friend {\b bool} operator>= (const {\b Approx} &  {\i lhs}, double  {\i rhs}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAENV}
{\bkmkend AAAAAAAENV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator>=\:doctest::Approx}
{\xe \v doctest::Approx\:operator>=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} friend {\b bool} operator>= (double  {\i lhs}, const {\b Approx} &  {\i rhs}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAENW}
{\bkmkend AAAAAAAENW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toString\:doctest::Approx}
{\xe \v doctest::Approx\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_INTERFACE} friend {\b String} toString (const {\b Approx} &  {\i in}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAENX}
{\bkmkend AAAAAAAENX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura doctest::AssertData\par \pard\plain 
{\tc\tcl2 \v doctest::AssertData}
{\xe \v doctest::AssertData}
{\bkmkstart AAAAAAAENY}
{\bkmkend AAAAAAAENY}
\par
{
{\f2 #include <doctest.hpp>}}\par
Diagrama de hierarquia da classe doctest::AssertData:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structdoctest_1_1_assert_data.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b TestCaseData} * {\b m_test_case}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b assertType::Enum} {\b m_at}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b m_file}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b m_line}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b m_expr}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b m_failed}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b m_threw}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b String} {\b m_exception}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b String} {\b m_decomp}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b m_threw_as}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b m_exception_type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b m_exception_string}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v m_at\:doctest::AssertData}
{\xe \v doctest::AssertData\:m_at}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b assertType::Enum} doctest::AssertData::m_at}}
\par
{\bkmkstart AAAAAAAENZ}
{\bkmkend AAAAAAAENZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_decomp\:doctest::AssertData}
{\xe \v doctest::AssertData\:m_decomp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b String} doctest::AssertData::m_decomp}}
\par
{\bkmkstart AAAAAAAEOA}
{\bkmkend AAAAAAAEOA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_exception\:doctest::AssertData}
{\xe \v doctest::AssertData\:m_exception}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b String} doctest::AssertData::m_exception}}
\par
{\bkmkstart AAAAAAAEOB}
{\bkmkend AAAAAAAEOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_exception_string\:doctest::AssertData}
{\xe \v doctest::AssertData\:m_exception_string}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* doctest::AssertData::m_exception_string}}
\par
{\bkmkstart AAAAAAAEOC}
{\bkmkend AAAAAAAEOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_exception_type\:doctest::AssertData}
{\xe \v doctest::AssertData\:m_exception_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* doctest::AssertData::m_exception_type}}
\par
{\bkmkstart AAAAAAAEOD}
{\bkmkend AAAAAAAEOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_expr\:doctest::AssertData}
{\xe \v doctest::AssertData\:m_expr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* doctest::AssertData::m_expr}}
\par
{\bkmkstart AAAAAAAEOE}
{\bkmkend AAAAAAAEOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_failed\:doctest::AssertData}
{\xe \v doctest::AssertData\:m_failed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::AssertData::m_failed}}
\par
{\bkmkstart AAAAAAAEOF}
{\bkmkend AAAAAAAEOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_file\:doctest::AssertData}
{\xe \v doctest::AssertData\:m_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* doctest::AssertData::m_file}}
\par
{\bkmkstart AAAAAAAEOG}
{\bkmkend AAAAAAAEOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_line\:doctest::AssertData}
{\xe \v doctest::AssertData\:m_line}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int doctest::AssertData::m_line}}
\par
{\bkmkstart AAAAAAAEOH}
{\bkmkend AAAAAAAEOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_test_case\:doctest::AssertData}
{\xe \v doctest::AssertData\:m_test_case}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b TestCaseData}* doctest::AssertData::m_test_case}}
\par
{\bkmkstart AAAAAAAEOI}
{\bkmkend AAAAAAAEOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_threw\:doctest::AssertData}
{\xe \v doctest::AssertData\:m_threw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::AssertData::m_threw}}
\par
{\bkmkstart AAAAAAAEOJ}
{\bkmkend AAAAAAAEOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_threw_as\:doctest::AssertData}
{\xe \v doctest::AssertData\:m_threw_as}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::AssertData::m_threw_as}}
\par
{\bkmkstart AAAAAAAEOK}
{\bkmkend AAAAAAAEOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe AssetsLoader\par \pard\plain 
{\tc\tcl2 \v AssetsLoader}
{\xe \v AssetsLoader}
{\bkmkstart AAAAAAADPB}
{\bkmkend AAAAAAADPB}
\par
{
{\f2 #include <AssetsLoader.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~AssetsLoader} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Assets Loarder and unload all assets. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Texture2D} {\b loadImage} (const std::string path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load a certain image from it's path if it's not already loaded. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Font} {\b loadFont} (const std::string path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load a certain font from it's path if it's not already loaded. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::shared_ptr< {\b AssetsLoader} > {\b getAssetLoader} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the instance of the Assets Loader. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ~AssetsLoader\:AssetsLoader}
{\xe \v AssetsLoader\:~AssetsLoader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AssetsLoader::~AssetsLoader (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADPC}
{\bkmkend AAAAAAADPC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Assets Loarder and unload all assets. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12                             \{\par
13     unloadFonts();\par
14     unloadImages();\par
15 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getAssetLoader\:AssetsLoader}
{\xe \v AssetsLoader\:getAssetLoader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::shared_ptr< {\b AssetsLoader} > AssetsLoader::getAssetLoader (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADPD}
{\bkmkend AAAAAAADPD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the instance of the Assets Loader. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The instance of the Assets Loader. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 33                                                          \{\par
34     {\cf19 if}(instance == {\cf17 nullptr}) \{\par
35         instance = std::shared_ptr<AssetsLoader>({\cf17 new} AssetsLoader());\par
36     \}\par
37 \par
38     {\cf19 return} instance;\par
39 \}\par
}
}
{\xe \v loadFont\:AssetsLoader}
{\xe \v AssetsLoader\:loadFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Font} AssetsLoader::loadFont (const std::string  {\i path})}}
\par
{\bkmkstart AAAAAAADPE}
{\bkmkend AAAAAAADPE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load a certain font from it's path if it's not already loaded. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{is the path to the asset.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A {\b Font} copy object from the loaded asset. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 25                                                 \{\par
26     {\cf19 if}(fonts.find(path) == fonts.end()) \{\par
27         fonts.insert(std::pair<std::string, Font>(path, LoadFont(path.c_str())));\par
28     \}\par
29     \par
30     {\cf19 return} fonts.at(path);\par
31 \}\par
}
}
{\xe \v loadImage\:AssetsLoader}
{\xe \v AssetsLoader\:loadImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Texture2D} AssetsLoader::loadImage (const std::string  {\i path})}}
\par
{\bkmkstart AAAAAAADPF}
{\bkmkend AAAAAAADPF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load a certain image from it's path if it's not already loaded. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{is the path to the asset.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A Texture2D copy object from the loaded asset. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17                                                       \{\par
18     {\cf19 if}(images.find(path) == images.end()) \{\par
19         images.insert(std::pair<std::string, Texture2D>(path, LoadTexture(path.c_str())));\par
20     \}\par
21 \par
22     {\cf19 return} images.at(path);\par
23 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/shared/{\b AssetsLoader.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/shared/{\b AssetsLoader.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura AudioStream\par \pard\plain 
{\tc\tcl2 \v AudioStream}
{\xe \v AudioStream}
{\bkmkstart AAAAAAADPG}
{\bkmkend AAAAAAADPG}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b rAudioBuffer} * {\b buffer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b rAudioProcessor} * {\b processor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b sampleRate}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b sampleSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b channels}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v buffer\:AudioStream}
{\xe \v AudioStream\:buffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b rAudioBuffer}* AudioStream::buffer}}
\par
{\bkmkstart AAAAAAADPH}
{\bkmkend AAAAAAADPH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v channels\:AudioStream}
{\xe \v AudioStream\:channels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int AudioStream::channels}}
\par
{\bkmkstart AAAAAAADPI}
{\bkmkend AAAAAAADPI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v processor\:AudioStream}
{\xe \v AudioStream\:processor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b rAudioProcessor}* AudioStream::processor}}
\par
{\bkmkstart AAAAAAADPJ}
{\bkmkend AAAAAAADPJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sampleRate\:AudioStream}
{\xe \v AudioStream\:sampleRate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int AudioStream::sampleRate}}
\par
{\bkmkstart AAAAAAADPK}
{\bkmkend AAAAAAADPK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sampleSize\:AudioStream}
{\xe \v AudioStream\:sampleSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int AudioStream::sampleSize}}
\par
{\bkmkstart AAAAAAADPL}
{\bkmkend AAAAAAADPL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Classe std::basic_istream< charT, traits >\par \pard\plain 
{\tc\tcl2 \v std::basic_istream< charT, traits >}
{\xe \v std::basic_istream< charT, traits >}
{\bkmkstart AAAAAAAFHR}
{\bkmkend AAAAAAAFHR}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Classe std::basic_ostream< charT, traits >\par \pard\plain 
{\tc\tcl2 \v std::basic_ostream< charT, traits >}
{\xe \v std::basic_ostream< charT, traits >}
{\bkmkstart AAAAAAAFHS}
{\bkmkend AAAAAAAFHS}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Battleship\par \pard\plain 
{\tc\tcl2 \v Battleship}
{\xe \v Battleship}
{\bkmkstart AAAAAAADPM}
{\bkmkend AAAAAAADPM}
\par
{
{\f2 #include <Battleship.hpp>}}\par
Diagrama de hierarquia da classe Battleship:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_battleship.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Battleship} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Battleship} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Battleship} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual unsigned int {\b getInitialHealth} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the initial health attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Troop}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Troop} (const unsigned int {\b health})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new {\b Troop} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Troop} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Troop} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b takeDamage} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Make the troop take damage, decreasing its health. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b isDead} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines if the troop is dead. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPosition} (const {\b Point} initialPosition, const {\b Orientation} orientation)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the positioning of the troop. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\b Point} > {\b getOccupiedPositions} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the ocuppied positions points, in order. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b getHealth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the health attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual unsigned int {\b getInitialHealth} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the initial health attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::map< {\b Point}, std::string > {\b getImages} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the images attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getImageInPoint} (const {\b Point} point) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the image associated in a certain point. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b containsPoint} (const {\b Point} point) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verify if the point is within the troop shape. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::string {\b getTroopName} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the standard battleship name. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros p\'FAblicos est\'E1ticos herdados de {\b Troop}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::string {\b getTroopName} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the standard troop name. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const unsigned int {\b INITIAL_HEALTH} = 4\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b positionHorizontally} (const {\b Point} initialPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Positions the battleship horizontally. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b positionVertically} (const {\b Point} initialPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Positions the battleship vertically. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros protegidos herdados de {\b Troop}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b positionHorizontally} (const {\b Point} initialPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract function with the desire to position the troop horizontally. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b positionVertically} (const {\b Point} initialPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract function with the desire to position the troop vertically. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b buildImagesMap} (const std::string folderPathWithSpriteName)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Associate points where the troop was positioned to it's images paths. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Troop}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b health} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\b Point} > {\b shape}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::map< {\b Point}, std::string > {\b images}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Battleship\:Battleship}
{\xe \v Battleship\:Battleship}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Battleship::Battleship ()}}
\par
{\bkmkstart AAAAAAADPN}
{\bkmkend AAAAAAADPN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new battleship with default health values.  \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 16 : Troop(INITIAL_HEALTH) \{\}\par
}
}
{\xe \v ~Battleship\:Battleship}
{\xe \v Battleship\:~Battleship}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Battleship::~Battleship (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADPO}
{\bkmkend AAAAAAADPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Battleship} object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getInitialHealth\:Battleship}
{\xe \v Battleship\:getInitialHealth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Battleship::getInitialHealth () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADPP}
{\bkmkend AAAAAAADPP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the initial health attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Initial health attribute value. \par
}}}{
Implementa {\b Troop} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 33                                                 \{\par
34     {\cf19 return} INITIAL_HEALTH;\par
35 \}\par
}
}
{\xe \v getTroopName\:Battleship}
{\xe \v Battleship\:getTroopName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Battleship::getTroopName (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADPR}
{\bkmkend AAAAAAADPR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the standard battleship name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A string with the standard battleship name. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12                                    \{\par
13     {\cf19 return} {\cf22 "Encouracado"};\par
14 \}\par
}
}
{\xe \v positionHorizontally\:Battleship}
{\xe \v Battleship\:positionHorizontally}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Battleship::positionHorizontally (const {\b Point}  {\i initialPosition}){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADPS}
{\bkmkend AAAAAAADPS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Positions the battleship horizontally. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i initialPosition} \cell }{The point which corresponds to the initial position of the positioning. \cell }
{\row }
}
}{
Reimplementa {\b Troop} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 19                                                                  \{\par
20     Troop::positionHorizontally(initialPosition);\par
21     buildImagesMap(BATTLESHIP_HORIZONTAL_SPRITE_PATH_WITH_PREFIX);\par
22 \par
23     {\cf19 return};\par
24 \}\par
}
}
{\xe \v positionVertically\:Battleship}
{\xe \v Battleship\:positionVertically}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Battleship::positionVertically (const {\b Point}  {\i initialPosition}){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADPU}
{\bkmkend AAAAAAADPU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Positions the battleship vertically. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i initialPosition} \cell }{The point which corresponds to the initial position of the positioning. \cell }
{\row }
}
}{
Reimplementa {\b Troop} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 26                                                                \{\par
27     Troop::positionVertically(initialPosition);\par
28     buildImagesMap(BATTLESHIP_VERTICAL_SPRITE_PATH_WITH_PREFIX);\par
29 \par
30     {\cf19 return};\par
31 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v INITIAL_HEALTH\:Battleship}
{\xe \v Battleship\:INITIAL_HEALTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned int Battleship::INITIAL_HEALTH = 4{\f2 [static]}}}
\par
{\bkmkstart AAAAAAADPW}
{\bkmkend AAAAAAADPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Battleship} standard troop health. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/{\b Battleship.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/{\b Battleship.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Views::BattleshipDisplay\par \pard\plain 
{\tc\tcl2 \v Views::BattleshipDisplay}
{\xe \v Views::BattleshipDisplay}
{\bkmkstart AAAAAAAFHW}
{\bkmkend AAAAAAAFHW}
\par
{
{\f2 #include <BattleshipDisplay.hpp>}}\par
Diagrama de hierarquia da classe Views::BattleshipDisplay:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_views_1_1_battleship_display.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BattleshipDisplay} (const unsigned int amount)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the selection to place {\b Battleship} troop. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~BattleshipDisplay} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Battleship} Display view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::shared_ptr< {\b Troop} > {\b getTroopInstance} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a {\b Battleship} instantiated object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::string {\b getTroopClassName} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the troop class name. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Views::TroopDisplay}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TroopDisplay} (const unsigned int amount, const std::string troopName, const std::string troopImagePath)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the template of a troop that can be positioned. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~TroopDisplay} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Troop} Display view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkClick} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the troop display was clicked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkMouseOver} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse is over the troop display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAmount} (const unsigned int amount)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the amount of troops that can be placed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b getAmount} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the amount of this troop type that can be placed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b decrementAmount} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrement the amount of available troops that can be placed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b incrementAmount} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increment the amount of available troops that can be placed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTroopName} (const std::string troopName)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the name of the troop that will be displayed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getTroopName} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the troop name. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::string {\b getTroopClassName} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the troop class name. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::shared_ptr< {\b Troop} > {\b getTroopInstance} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a instantiated object of a troop. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTroopImageWidth} (const float {\b width})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width of the full sprite of the troop diplayed. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Views::View}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~View} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b View} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Component} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Component}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the render contract of components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getXPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the X position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getYPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Vector2} {\b getPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::IClickable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkClick} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the troop display was clicked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkMouseOver} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse is over the troop display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setEnabled} (const {\b bool} {\b enabled})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the enabled attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b isEnabled} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the button is enable. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_WIDTH} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_HEIGHT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Vector2} {\b DEFAULT_INITIAL_POSITION} = \{ 0, 0 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros protegidos herdados de {\b Views::TroopDisplay}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b width} = {\b DEFAUT_INITIAL_WIDTH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b height} = {\b DEFAUT_INITIAL_HEIGHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b position} = {\b DEFAULT_INITIAL_POSITION}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::IClickable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b enabled} = {\b true}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v BattleshipDisplay\:Views::BattleshipDisplay}
{\xe \v Views::BattleshipDisplay\:BattleshipDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::BattleshipDisplay::BattleshipDisplay (const unsigned int  {\i amount})}}
\par
{\bkmkstart AAAAAAAFHX}
{\bkmkend AAAAAAAFHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the selection to place {\b Battleship} troop. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i amount} \cell }{is the amount of that troop can be placed. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12                                                                    :\par
13     TroopDisplay(amount, Battleship::getTroopName(), BATTLESHIP_HORIZONTAL_FULL_SPRITE) \{\par
14     setXPosition(0.0);\par
15     setYPosition(0.0);\par
16 \}\par
}
}
{\xe \v ~BattleshipDisplay\:Views::BattleshipDisplay}
{\xe \v Views::BattleshipDisplay\:~BattleshipDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::BattleshipDisplay::~BattleshipDisplay (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFHY}
{\bkmkend AAAAAAAFHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Battleship} Display view. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 18 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getTroopClassName\:Views::BattleshipDisplay}
{\xe \v Views::BattleshipDisplay\:getTroopClassName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Views::BattleshipDisplay::getTroopClassName () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFHZ}
{\bkmkend AAAAAAAFHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the troop class name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The troop class name value. \par
}}}{
Implementa {\b Views::TroopDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFIA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 26                                                           \{\par
27     {\cf19 return} {\cf17 typeid}(Battleship).name();\par
28 \}\par
}
}
{\xe \v getTroopInstance\:Views::BattleshipDisplay}
{\xe \v Views::BattleshipDisplay\:getTroopInstance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::shared_ptr< {\b Troop} > Views::BattleshipDisplay::getTroopInstance () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFIB}
{\bkmkend AAAAAAAFIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a {\b Battleship} instantiated object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Battleship} instance. \par
}}}{
Implementa {\b Views::TroopDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFIC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 22                                                                     \{\par
23     {\cf19 return} std::shared_ptr<Troop>({\cf17 new} Battleship());\par
24 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/{\b BattleshipDisplay.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/{\b BattleshipDisplay.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Board\par \pard\plain 
{\tc\tcl2 \v Board}
{\xe \v Board}
{\bkmkstart AAAAAAADPX}
{\bkmkend AAAAAAADPX}
\par
{
{\f2 #include <Board.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Board} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Board} (const int width, const int height)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor with specific width and heigth. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Board} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Board} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b positionTroop} (const std::shared_ptr< {\b Troop} > troop)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tries to position a troop with a valid positioning and initial point. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removeTroop} (const std::shared_ptr< {\b Troop} > troop)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes a troop from all positions in the board. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b isPositionValid} (const std::vector< {\b Point} > &positionCoordinates) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the position the troops intends to occupy is valid. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b doesPositionContainsTroop} (const {\b Point} coodinate) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if a point in the board contains a troop. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b isPointWithinBoundaries} (const {\b Point} point) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if a point is within the board's boundaries. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the heigth of the board. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width of the board. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::shared_ptr< {\b Troop} > > {\b getTroops} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the troops in the board. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::shared_ptr< {\b Position} > {\b getPosition} (const int x, const int y) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the reference to a position in the board. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Board\:Board}
{\xe \v Board\:Board}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Board::Board ()}}
\par
{\bkmkstart AAAAAAADPY}
{\bkmkend AAAAAAADPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct board with default height and width.  \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 10 : Board(DEFAULT_BOARD_AMOUNT_HORIZONTAL_CELLS, DEFAULT_BOARD_AMOUNT_VERTICAL_CELLS) \{\}\par
}
}
{\xe \v Board\:Board}
{\xe \v Board\:Board}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Board::Board (const int  {\i width}, const int  {\i height})}}
\par
{\bkmkstart AAAAAAADPZ}
{\bkmkend AAAAAAADPZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor with specific width and heigth. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i width} \cell }{The board width. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i height} \cell }{The board heigth. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12                                               \{\par
13     setHeight(height);\par
14     setWidth(width);\par
15 \par
16     initializeBoardPositions();\par
17 \}\par
}
}
{\xe \v ~Board\:Board}
{\xe \v Board\:~Board}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Board::~Board (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADQA}
{\bkmkend AAAAAAADQA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Board} object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 19 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v doesPositionContainsTroop\:Board}
{\xe \v Board\:doesPositionContainsTroop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Board::doesPositionContainsTroop (const {\b Point}  {\i coodinate}) const}}
\par
{\bkmkstart AAAAAAADQB}
{\bkmkend AAAAAAADQB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if a point in the board contains a troop. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i coodinate} \cell }{The point containing coordinates which will be checked for a troop. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Whether the point has a troop or not. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 67                                                                   \{\par
68     {\cf19 if}(!isPointWithinBoundaries(coordinate)) {\cf19 throw} std::invalid_argument({\cf22 "Point is out of boundaries"});\par
69     {\cf19 return} board[coordinate.getX()][coordinate.getY()]->hasTroop();\par
70 \}\par
}
}
{\xe \v getHeight\:Board}
{\xe \v Board\:getHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Board::getHeight () const}}
\par
{\bkmkstart AAAAAAADQC}
{\bkmkend AAAAAAADQC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the heigth of the board. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The value of the board's height. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 87                            \{\par
88     {\cf19 return} height;\par
89 \}\par
}
}
{\xe \v getPosition\:Board}
{\xe \v Board\:getPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::shared_ptr< {\b Position} > Board::getPosition (const int  {\i x}, const int  {\i y}) const}}
\par
{\bkmkstart AAAAAAADQD}
{\bkmkend AAAAAAADQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the reference to a position in the board. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{The x value of the position. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{The y value of the position \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A pointer to the original value of the position object in x and y coordinates. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 105                                                                          \{\par
106     {\cf19 if}(!isPointWithinBoundaries(Point(x,y))) {\cf19 throw} std::invalid_argument({\cf22 "Points out of boundaries"});\par
107     {\cf19 return} board[x][y];\par
108 \}\par
}
}
{\xe \v getTroops\:Board}
{\xe \v Board\:getTroops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< std::shared_ptr< {\b Troop} > > Board::getTroops () const}}
\par
{\bkmkstart AAAAAAADQE}
{\bkmkend AAAAAAADQE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the troops in the board. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
All troops positioned in the board. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 101                                                        \{\par
102     {\cf19 return} troops;\par
103 \}\par
}
}
{\xe \v getWidth\:Board}
{\xe \v Board\:getWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Board::getWidth () const}}
\par
{\bkmkstart AAAAAAADQF}
{\bkmkend AAAAAAADQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width of the board. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The value of the board's width. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 97                           \{\par
98     {\cf19 return} width;\par
99 \}\par
}
}
{\xe \v isPointWithinBoundaries\:Board}
{\xe \v Board\:isPointWithinBoundaries}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Board::isPointWithinBoundaries (const {\b Point}  {\i point}) const}}
\par
{\bkmkstart AAAAAAADQG}
{\bkmkend AAAAAAADQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if a point is within the board's boundaries. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i point} \cell }{The point containing coordinates which will be checked. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Whether the coordinates in the point are within the board's boundaries. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 72                                                            \{\par
73     {\cf18 bool} verifyX = point.getX() >= 0 && point.getX() < getWidth();\par
74     {\cf18 bool} verifyY = point.getY() >= 0 && point.getY() < getHeight();\par
75 \par
76     {\cf19 return} (verifyX && verifyY);\par
77 \}\par
}
}
{\xe \v isPositionValid\:Board}
{\xe \v Board\:isPositionValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Board::isPositionValid (const std::vector< {\b Point} > &  {\i positionCoordinates}) const}}
\par
{\bkmkstart AAAAAAADQH}
{\bkmkend AAAAAAADQH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the position the troops intends to occupy is valid. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i positionCoordinates} \cell }{A vector of points which represents the point which the troop will occupy. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Whether the positioning is valid. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 57                                                                              \{\par
58     {\cf19 for}(Point coordinate : positionCoordinates) \{\par
59         {\cf19 if}(!isPointWithinBoundaries(coordinate) || doesPositionContainsTroop(coordinate)) \{\par
60             {\cf19 return} {\cf17 false};\par
61         \}\par
62     \}\par
63 \par
64     {\cf19 return} {\cf17 true};\par
65 \}\par
}
}
{\xe \v positionTroop\:Board}
{\xe \v Board\:positionTroop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Board::positionTroop (const std::shared_ptr< {\b Troop} >  {\i troop})}}
\par
{\bkmkstart AAAAAAADQI}
{\bkmkend AAAAAAADQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tries to position a troop with a valid positioning and initial point. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i troop} \cell }{The troop which will be positioned. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 33                                                          \{\par
34     {\cf19 if}(troop->getOccupiedPositions().size() == 0) {\cf19 throw} std::invalid_argument({\cf22 "Troop has not been positioned yet"});\par
35     {\cf19 if}(!isPositionValid(troop->getOccupiedPositions())) {\cf19 throw} std::invalid_argument({\cf22 "Position occupied by troop is invalid"});\par
36     {\cf19 for}(Point coordinates : troop->getOccupiedPositions())\{\par
37         board[coordinates.getX()][coordinates.getY()]->setTroop(troop);\par
38     \}\par
39 \par
40     troops.push_back(troop);\par
41     {\cf19 return};\par
42 \}\par
}
}
{\xe \v removeTroop\:Board}
{\xe \v Board\:removeTroop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Board::removeTroop (const std::shared_ptr< {\b Troop} >  {\i troop})}}
\par
{\bkmkstart AAAAAAADQJ}
{\bkmkend AAAAAAADQJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes a troop from all positions in the board. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i troop} \cell }{A pointer to the troop to be removed. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 44                                                         \{\par
45     {\cf19 for}(Point coordinates : troop->getOccupiedPositions()) \{\par
46         board[coordinates.getX()][coordinates.getY()]->setTroop({\cf17 nullptr});\par
47     \}\par
48 \par
49     std::vector<std::shared_ptr<Troop>>::iterator iterator = std::find(troops.begin(), troops.end(), troop);\par
50     {\cf19 if}(iterator != troops.end()) \{\par
51         troops.erase(iterator);\par
52     \}\par
53     \par
54     {\cf19 return};\par
55 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/{\b Board.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/{\b Board.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Views::BoardDisplay\par \pard\plain 
{\tc\tcl2 \v Views::BoardDisplay}
{\xe \v Views::BoardDisplay}
{\bkmkstart AAAAAAAFID}
{\bkmkend AAAAAAAFID}
\par
{
{\f2 #include <BoardDisplay.hpp>}}\par
Diagrama de hierarquia da classe Views::BoardDisplay:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_views_1_1_board_display.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BoardDisplay} (const unsigned int {\b amountHorizontalCells}, const unsigned int {\b amountVerticalCells})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the basic template for the troop display with a new logic position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BoardDisplay} (std::shared_ptr< {\b Board} > {\b logicBoard})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the basic template for the troop display with a new logic position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~BoardDisplay} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Board} Display view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b getAmountHorizontalCells} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the amount of horizontal cells the board has. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b getAmountVerticalCells} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the amount of vertical cells the board has. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::vector< std::shared_ptr< {\b PositionDisplay} > > > {\b getCells} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the board cells objects. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Views::View}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~View} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b View} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Component} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Component}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the render contract of components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getXPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the X position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getYPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Vector2} {\b getPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position attribute. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b initializeCells} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiate the board cells components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b buildBackground} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Build background style. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::unique_ptr< {\b Components::Image} > {\b background} = nullptr\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::vector< std::shared_ptr< {\b PositionDisplay} > > > {\b cells}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b amountHorizontalCells} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b amountVerticalCells} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::shared_ptr< {\b Board} > {\b logicBoard} = nullptr\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b width} = {\b DEFAUT_INITIAL_WIDTH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b height} = {\b DEFAUT_INITIAL_HEIGHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b position} = {\b DEFAULT_INITIAL_POSITION}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_WIDTH} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_HEIGHT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Vector2} {\b DEFAULT_INITIAL_POSITION} = \{ 0, 0 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v BoardDisplay\:Views::BoardDisplay}
{\xe \v Views::BoardDisplay\:BoardDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::BoardDisplay::BoardDisplay (const unsigned int  {\i amountHorizontalCells}, const unsigned int  {\i amountVerticalCells})}}
\par
{\bkmkstart AAAAAAAFIE}
{\bkmkend AAAAAAAFIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the basic template for the troop display with a new logic position. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i amountHorizontalCells} \cell }{is the amount of horizontal cells that the board has. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i amountVerticalCells} \cell }{is the amount of vertical cells that the board has. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14                                                                                                                 :\par
15     background({\cf17 new} Components::Image(Backgrounds::BOARD)),\par
16     logicBoard({\cf17 new} Board(amountHorizontalCells, amountVerticalCells)) \{\par
17     setAmountHorizontalCells(amountHorizontalCells);\par
18     setAmountVerticalCells(amountVerticalCells);\par
19 \par
20     setXPosition(0.0);\par
21     setYPosition(0.0);\par
22 \}\par
}
}
{\xe \v BoardDisplay\:Views::BoardDisplay}
{\xe \v Views::BoardDisplay\:BoardDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::BoardDisplay::BoardDisplay (std::shared_ptr< {\b Board} >  {\i logicBoard})}}
\par
{\bkmkstart AAAAAAAFIF}
{\bkmkend AAAAAAAFIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the basic template for the troop display with a new logic position. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i logicBoard} \cell }{is logic part of the board. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 24                                                                :\par
25     background({\cf17 new} Components::Image(Backgrounds::BOARD)),\par
26     logicBoard(logicBoard) \{\par
27     setAmountHorizontalCells(logicBoard->getWidth());\par
28     setAmountVerticalCells(logicBoard->getHeight());\par
29 \par
30     setXPosition(0.0);\par
31     setYPosition(0.0);\par
32 \}\par
}
}
{\xe \v ~BoardDisplay\:Views::BoardDisplay}
{\xe \v Views::BoardDisplay\:~BoardDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::BoardDisplay::~BoardDisplay (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFIG}
{\bkmkend AAAAAAAFIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Board} Display view. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 34 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v buildBackground\:Views::BoardDisplay}
{\xe \v Views::BoardDisplay\:buildBackground}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::BoardDisplay::buildBackground (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAFIH}
{\bkmkend AAAAAAAFIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Build background style. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 67                                         \{\par
68     background->setHeight(getCellsMatrixHeight() + getBoardPadding());\par
69     background->setWidth(getCellsMatrixWidth() + getBoardPadding());\par
70 \par
71     {\cf19 return};\par
72 \}\par
}
}
{\xe \v findHeight\:Views::BoardDisplay}
{\xe \v Views::BoardDisplay\:findHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::BoardDisplay::findHeight (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFII}
{\bkmkend AAAAAAAFII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 62                                    \{\par
63     this->height = background->getHeight();\par
64     {\cf19 return};\par
65 \}\par
}
}
{\xe \v findWidth\:Views::BoardDisplay}
{\xe \v Views::BoardDisplay\:findWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::BoardDisplay::findWidth (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFIJ}
{\bkmkend AAAAAAAFIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 57                                   \{\par
58     this->width = background->getWidth();\par
59     {\cf19 return};\par
60 \}\par
}
}
{\xe \v getAmountHorizontalCells\:Views::BoardDisplay}
{\xe \v Views::BoardDisplay\:getAmountHorizontalCells}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Views::BoardDisplay::getAmountHorizontalCells () const}}
\par
{\bkmkstart AAAAAAAFIK}
{\bkmkend AAAAAAAFIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the amount of horizontal cells the board has. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The amount of horizontal cells the board has. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 129                                                                \{\par
130     {\cf19 return} amountHorizontalCells;\par
131 \}\par
}
}
{\xe \v getAmountVerticalCells\:Views::BoardDisplay}
{\xe \v Views::BoardDisplay\:getAmountVerticalCells}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Views::BoardDisplay::getAmountVerticalCells () const}}
\par
{\bkmkstart AAAAAAAFIL}
{\bkmkend AAAAAAAFIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the amount of vertical cells the board has. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The amount of vertical cells the board has. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 138                                                              \{\par
139     {\cf19 return} amountVerticalCells;\par
140 \}\par
}
}
{\xe \v getCells\:Views::BoardDisplay}
{\xe \v Views::BoardDisplay\:getCells}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< std::vector< std::shared_ptr< {\b Views::PositionDisplay} > > > Views::BoardDisplay::getCells () const}}
\par
{\bkmkstart AAAAAAAFIM}
{\bkmkend AAAAAAAFIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the board cells objects. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Matrix} of the board cells. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 142                                                                                             \{\par
143     {\cf19 return} cells;\par
144 \}\par
}
}
{\xe \v initializeCells\:Views::BoardDisplay}
{\xe \v Views::BoardDisplay\:initializeCells}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Views::BoardDisplay::initializeCells (){\f2 [protected]}, {\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAFIN}
{\bkmkend AAAAAAAFIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiate the board cells components. }}\par
{
Implementado por {\b Views::GameBoardDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFIO \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Views::PositioningBoardDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFIP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v render\:Views::BoardDisplay}
{\xe \v Views::BoardDisplay\:render}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::BoardDisplay::render (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEIG}
{\bkmkend AAAAAAAEIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }}\par
{
Implementa {\b Components::Component} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEED \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 36                                \{\par
37     background->render();\par
38 \par
39     {\cf19 for}({\cf18 unsigned} {\cf18 int} i = 0; i < cells.size(); i++) \{\par
40         {\cf19 for}({\cf18 unsigned} {\cf18 int} j = 0; j < cells[i].size(); j++) \{\par
41             cells[i][j]->render();\par
42         \}\par
43     \}\par
44 \par
45     {\cf19 return};\par
46 \}\par
}
}
{\xe \v updateInnerComponentsPositions\:Views::BoardDisplay}
{\xe \v Views::BoardDisplay\:updateInnerComponentsPositions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::BoardDisplay::updateInnerComponentsPositions (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFIQ}
{\bkmkend AAAAAAAFIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 50                                                        \{\par
51     positionBackground();\par
52     positionCells();\par
53 \par
54     {\cf19 return};\par
55 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v amountHorizontalCells\:Views::BoardDisplay}
{\xe \v Views::BoardDisplay\:amountHorizontalCells}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Views::BoardDisplay::amountHorizontalCells = 0{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAFIR}
{\bkmkend AAAAAAAFIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v amountVerticalCells\:Views::BoardDisplay}
{\xe \v Views::BoardDisplay\:amountVerticalCells}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Views::BoardDisplay::amountVerticalCells = 0{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAFIS}
{\bkmkend AAAAAAAFIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v background\:Views::BoardDisplay}
{\xe \v Views::BoardDisplay\:background}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::unique_ptr<{\b Components::Image}> Views::BoardDisplay::background = nullptr{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAFIT}
{\bkmkend AAAAAAAFIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cells\:Views::BoardDisplay}
{\xe \v Views::BoardDisplay\:cells}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<std::vector<std::shared_ptr<{\b PositionDisplay}> > > Views::BoardDisplay::cells{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAFIU}
{\bkmkend AAAAAAAFIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v logicBoard\:Views::BoardDisplay}
{\xe \v Views::BoardDisplay\:logicBoard}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::shared_ptr<{\b Board}> Views::BoardDisplay::logicBoard = nullptr{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAFIV}
{\bkmkend AAAAAAAFIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/shared/{\b BoardDisplay.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/shared/{\b BoardDisplay.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura BoneInfo\par \pard\plain 
{\tc\tcl2 \v BoneInfo}
{\xe \v BoneInfo}
{\bkmkstart AAAAAAADQK}
{\bkmkend AAAAAAADQK}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b name} [32]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b parent}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v name\:BoneInfo}
{\xe \v BoneInfo\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char BoneInfo::name[32]}}
\par
{\bkmkstart AAAAAAADQL}
{\bkmkend AAAAAAADQL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parent\:BoneInfo}
{\xe \v BoneInfo\:parent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int BoneInfo::parent}}
\par
{\bkmkstart AAAAAAADQM}
{\bkmkend AAAAAAADQM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura BoundingBox\par \pard\plain 
{\tc\tcl2 \v BoundingBox}
{\xe \v BoundingBox}
{\bkmkstart AAAAAAADQN}
{\bkmkend AAAAAAADQN}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} {\b min}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} {\b max}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v max\:BoundingBox}
{\xe \v BoundingBox\:max}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} BoundingBox::max}}
\par
{\bkmkstart AAAAAAADQO}
{\bkmkend AAAAAAADQO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v min\:BoundingBox}
{\xe \v BoundingBox\:min}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} BoundingBox::min}}
\par
{\bkmkstart AAAAAAADQP}
{\bkmkend AAAAAAADQP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Components::Button\par \pard\plain 
{\tc\tcl2 \v Components::Button}
{\xe \v Components::Button}
{\bkmkstart AAAAAAAEDT}
{\bkmkend AAAAAAAEDT}
\par
{
{\f2 #include <Button.hpp>}}\par
Diagrama de hierarquia da classe Components::Button:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_components_1_1_button.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Button} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Button} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Button} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the component in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkClick} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the troop display was clicked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkMouseOver} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse is over the troop display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBackgroundColor} (const {\b Color} color)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the background color attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Color} {\b getBackgroundColor} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the background color attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMouseHoverBackgroundColor} (const {\b Color} color)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the background color when the mouse is over the button. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Color} {\b getMouseHoverBackgroundColor} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the background color attribute when the mouse is over. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setHeight} (const float {\b height})=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setWidth} (const float {\b width})=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::ResizableComponent}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~ResizableComponent} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b ResizableComponent} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setHeight} (const float {\b height}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setWidth} (const float {\b width}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Component} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Component}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the render contract of components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getXPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the X position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getYPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Vector2} {\b getPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position attribute. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setHeight} (const float height)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setWidth} (const float width)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::IClickable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkClick} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the troop display was clicked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkMouseOver} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse is over the troop display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setEnabled} (const {\b bool} {\b enabled})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the enabled attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b isEnabled} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the button is enable. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Color} {\b DEFAULT_BACKGROUND_COLOR} = {\b DEFAULT_BALCK}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_WIDTH} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_HEIGHT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Vector2} {\b DEFAULT_INITIAL_POSITION} = \{ 0, 0 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Rectangle} {\b background}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Color} {\b backgroundColor} = {\b DEFAULT_BACKGROUND_COLOR}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Color} {\b mouseHoverBackgroundColor} = {\b DEFAULT_BACKGROUND_COLOR}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b width} = {\b DEFAUT_INITIAL_WIDTH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b height} = {\b DEFAUT_INITIAL_HEIGHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b position} = {\b DEFAULT_INITIAL_POSITION}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::IClickable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b enabled} = {\b true}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Button\:Components::Button}
{\xe \v Components::Button\:Button}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Components::Button::Button ()}}
\par
{\bkmkstart AAAAAAAEDU}
{\bkmkend AAAAAAAEDU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b Button} component. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 10                          \{\par
11     setXPosition(0.0);\par
12     setYPosition(0.0);\par
13 \}\par
}
}
{\xe \v ~Button\:Components::Button}
{\xe \v Components::Button\:~Button}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Components::Button::~Button (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEDV}
{\bkmkend AAAAAAAEDV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Button} component. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 15 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v checkClick\:Components::Button}
{\xe \v Components::Button\:checkClick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Components::Button::checkClick (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEDW}
{\bkmkend AAAAAAAEDW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the troop display was clicked. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Boolean that indicates if the troop display was clicked. \par
}}}{
Implementa {\b Components::IClickable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEDX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 35                                   \{\par
36     {\cf19 return} (checkMouseOver() && IsMouseButtonReleased(MOUSE_BUTTON_LEFT));\par
37 \}\par
}
}
{\xe \v checkMouseOver\:Components::Button}
{\xe \v Components::Button\:checkMouseOver}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Components::Button::checkMouseOver (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEDY}
{\bkmkend AAAAAAAEDY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse is over the troop display. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Boolean that indicates if the mouse is over the troop display. \par
}}}{
Implementa {\b Components::IClickable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEDZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 39                                       \{\par
40     {\cf19 return} (isEnabled() && CheckCollisionPointRec(GetMousePosition(), background));\par
41 \}\par
}
}
{\xe \v getBackgroundColor\:Components::Button}
{\xe \v Components::Button\:getBackgroundColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Color} Components::Button::getBackgroundColor () const}}
\par
{\bkmkstart AAAAAAAEEA}
{\bkmkend AAAAAAAEEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the background color attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Background color attribute value. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 50                                                  \{\par
51     {\cf19 return} backgroundColor;\par
52 \}\par
}
}
{\xe \v getMouseHoverBackgroundColor\:Components::Button}
{\xe \v Components::Button\:getMouseHoverBackgroundColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Color} Components::Button::getMouseHoverBackgroundColor () const}}
\par
{\bkmkstart AAAAAAAEEB}
{\bkmkend AAAAAAAEEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the background color attribute when the mouse is over. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Background color attribute value when the mouse is over. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 59                                                            \{\par
60     {\cf19 return} mouseHoverBackgroundColor;\par
61 \}\par
}
}
{\xe \v render\:Components::Button}
{\xe \v Components::Button\:render}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::Button::render (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEEC}
{\bkmkend AAAAAAAEEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the component in the interface. }}\par
{
Implementa {\b Components::Component} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEED \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplementado por {\b Components::ButtonIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEE \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::ButtonText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEF \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Components::ButtonTextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17                               \{\par
18     background.x = getXPosition();\par
19     background.y = getYPosition();\par
20     background.height = getHeight();\par
21     background.width = getWidth();\par
22 \par
23     Color renderedBackgroundColor;\par
24     {\cf19 if}(checkMouseOver()) \{\par
25         renderedBackgroundColor = getMouseHoverBackgroundColor();\par
26     \}\par
27     {\cf19 else} \{\par
28         renderedBackgroundColor = getBackgroundColor();\par
29     \}\par
30 \par
31     DrawRectangleRec(background, renderedBackgroundColor);\par
32     {\cf19 return};\par
33 \}\par
}
}
{\xe \v setBackgroundColor\:Components::Button}
{\xe \v Components::Button\:setBackgroundColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::Button::setBackgroundColor (const {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAAEEH}
{\bkmkend AAAAAAAEEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the background color attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i color} \cell }{is the new color of the background. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 45                                                            \{\par
46     this->backgroundColor = color;\par
47     {\cf19 return};\par
48 \}\par
}
}
{\xe \v setHeight\:Components::Button}
{\xe \v Components::Button\:setHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Components::Button::setHeight (const float  {\i height}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAEEI}
{\bkmkend AAAAAAAEEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i height} \cell }{is the new value to height. \cell }
{\row }
}
}{
Reimplementa {\b Components::ResizableComponent} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Implementado por {\b Components::ButtonIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::ButtonText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEL \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Components::ButtonTextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setMouseHoverBackgroundColor\:Components::Button}
{\xe \v Components::Button\:setMouseHoverBackgroundColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::Button::setMouseHoverBackgroundColor (const {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAAEEN}
{\bkmkend AAAAAAAEEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the background color when the mouse is over the button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i color} \cell }{is the new color of the background when the mouse is over the button. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 54                                                                      \{\par
55     this->mouseHoverBackgroundColor = color;\par
56     {\cf19 return};\par
57 \}\par
}
}
{\xe \v setWidth\:Components::Button}
{\xe \v Components::Button\:setWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Components::Button::setWidth (const float  {\i width}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAEEO}
{\bkmkend AAAAAAAEEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i width} \cell }{is the new value to width. \cell }
{\row }
}
}{
Reimplementa {\b Components::ResizableComponent} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Implementado por {\b Components::ButtonIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::ButtonText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEER \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Components::ButtonTextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEES \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v background\:Components::Button}
{\xe \v Components::Button\:background}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Rectangle} Components::Button::background{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEET}
{\bkmkend AAAAAAAEET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v backgroundColor\:Components::Button}
{\xe \v Components::Button\:backgroundColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Color} Components::Button::backgroundColor = {\b DEFAULT_BACKGROUND_COLOR}{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEEU}
{\bkmkend AAAAAAAEEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DEFAULT_BACKGROUND_COLOR\:Components::Button}
{\xe \v Components::Button\:DEFAULT_BACKGROUND_COLOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Color} Components::Button::DEFAULT_BACKGROUND_COLOR = {\b DEFAULT_BALCK}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEEV}
{\bkmkend AAAAAAAEEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mouseHoverBackgroundColor\:Components::Button}
{\xe \v Components::Button\:mouseHoverBackgroundColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Color} Components::Button::mouseHoverBackgroundColor = {\b DEFAULT_BACKGROUND_COLOR}{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEEW}
{\bkmkend AAAAAAAEEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/{\b Button.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/button/{\b Button.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Components::ButtonIcon\par \pard\plain 
{\tc\tcl2 \v Components::ButtonIcon}
{\xe \v Components::ButtonIcon}
{\bkmkstart AAAAAAAEEX}
{\bkmkend AAAAAAAEEX}
\par
{
{\f2 #include <ButtonIcon.hpp>}}\par
Diagrama de hierarquia da classe Components::ButtonIcon:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_components_1_1_button_icon.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ButtonIcon} (const std::string path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ButtonIcon} (const std::string path, const float {\b height}, const float {\b width})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b ButtonIcon} component defining it height and width. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~ButtonIcon} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b ButtonIcon} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the component in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setIconHeight} (const float {\b height})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Icon Height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getIconHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the icon height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setIconWidth} (const float {\b width})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Icon Width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getIconWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the icon width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setIconPath} (const std::string path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the path attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getIconPath} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the default image path attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setHoverIconPath} (const std::string path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the path to the icon when the mouse is over. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getHoverIconPath} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the image path when the button is hovered. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setHeight} (const float {\b height}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setWidth} (const float {\b width}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Button}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Button} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Button} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Button} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the component in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkClick} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the troop display was clicked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkMouseOver} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse is over the troop display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBackgroundColor} (const {\b Color} color)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the background color attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Color} {\b getBackgroundColor} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the background color attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMouseHoverBackgroundColor} (const {\b Color} color)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the background color when the mouse is over the button. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Color} {\b getMouseHoverBackgroundColor} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the background color attribute when the mouse is over. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setHeight} (const float {\b height})=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setWidth} (const float {\b width})=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::ResizableComponent}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~ResizableComponent} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b ResizableComponent} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setHeight} (const float {\b height}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setWidth} (const float {\b width}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Component} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Component}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the render contract of components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getXPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the X position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getYPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Vector2} {\b getPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position attribute. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setHeight} (const float height)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setWidth} (const float width)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::IClickable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkClick} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the troop display was clicked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkMouseOver} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse is over the troop display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setEnabled} (const {\b bool} {\b enabled})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the enabled attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b isEnabled} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the button is enable. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Button}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Color} {\b DEFAULT_BACKGROUND_COLOR} = {\b DEFAULT_BALCK}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_WIDTH} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_HEIGHT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Vector2} {\b DEFAULT_INITIAL_POSITION} = \{ 0, 0 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Button}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Rectangle} {\b background}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Color} {\b backgroundColor} = {\b DEFAULT_BACKGROUND_COLOR}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Color} {\b mouseHoverBackgroundColor} = {\b DEFAULT_BACKGROUND_COLOR}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b width} = {\b DEFAUT_INITIAL_WIDTH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b height} = {\b DEFAUT_INITIAL_HEIGHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b position} = {\b DEFAULT_INITIAL_POSITION}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::IClickable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b enabled} = {\b true}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ButtonIcon\:Components::ButtonIcon}
{\xe \v Components::ButtonIcon\:ButtonIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Components::ButtonIcon::ButtonIcon (const std::string  {\i path})}}
\par
{\bkmkstart AAAAAAAEEY}
{\bkmkend AAAAAAAEEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b ButtonIcon} component. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{is the path to the icon displayed in the button. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 9                                                      : icon({\cf17 new} Components::Image(path)) \{\par
10     setIconPath(path);\par
11     setHoverIconPath(path);\par
12 \par
13     setHeight(getIconHeight());\par
14     setWidth(getIconWidth());\par
15 \par
16     setXPosition(0.0);\par
17     setYPosition(0.0);\par
18 \}\par
}
}
{\xe \v ButtonIcon\:Components::ButtonIcon}
{\xe \v Components::ButtonIcon\:ButtonIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Components::ButtonIcon::ButtonIcon (const std::string  {\i path}, const float  {\i height}, const float  {\i width})}}
\par
{\bkmkstart AAAAAAAEEZ}
{\bkmkend AAAAAAAEEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b ButtonIcon} component defining it height and width. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{is the path to the icon displayed in the button. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i height} \cell }{is the height of the icon \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i width} \cell }{is the width of the icon \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 20                                                                                             :\par
21     icon({\cf17 new} Components::Image(path, height, width)) \{\par
22     setIconPath(path);\par
23     setHoverIconPath(path);\par
24 \par
25     setHeight(getIconHeight());\par
26     setWidth(getIconWidth());\par
27 \par
28     setXPosition(0.0);\par
29     setYPosition(0.0);\par
30 \}\par
}
}
{\xe \v ~ButtonIcon\:Components::ButtonIcon}
{\xe \v Components::ButtonIcon\:~ButtonIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Components::ButtonIcon::~ButtonIcon (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEFA}
{\bkmkend AAAAAAAEFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b ButtonIcon} component. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 32 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getHoverIconPath\:Components::ButtonIcon}
{\xe \v Components::ButtonIcon\:getHoverIconPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Components::ButtonIcon::getHoverIconPath () const}}
\par
{\bkmkstart AAAAAAAEFB}
{\bkmkend AAAAAAAEFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the image path when the button is hovered. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Image} path when the button is hovered attribute value. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 93                                                        \{\par
94     {\cf19 return} hoveredIconPath;\par
95 \}\par
}
}
{\xe \v getIconHeight\:Components::ButtonIcon}
{\xe \v Components::ButtonIcon\:getIconHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Components::ButtonIcon::getIconHeight () const}}
\par
{\bkmkstart AAAAAAAEFC}
{\bkmkend AAAAAAAEFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the icon height attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Icon height attribute value. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 62                                                 \{\par
63     {\cf19 return} icon->getHeight();\par
64 \}\par
}
}
{\xe \v getIconPath\:Components::ButtonIcon}
{\xe \v Components::ButtonIcon\:getIconPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Components::ButtonIcon::getIconPath () const}}
\par
{\bkmkstart AAAAAAAEFD}
{\bkmkend AAAAAAAEFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the default image path attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Default path attribute value. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 84                                                   \{\par
85     {\cf19 return} defaultIconPath;\par
86 \}\par
}
}
{\xe \v getIconWidth\:Components::ButtonIcon}
{\xe \v Components::ButtonIcon\:getIconWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Components::ButtonIcon::getIconWidth () const}}
\par
{\bkmkstart AAAAAAAEFE}
{\bkmkend AAAAAAAEFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the icon width attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Icon width attribute value. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 75                                                \{\par
76     {\cf19 return} icon->getWidth();\par
77 \}\par
}
}
{\xe \v render\:Components::ButtonIcon}
{\xe \v Components::ButtonIcon\:render}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonIcon::render (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEEE}
{\bkmkend AAAAAAAEEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the component in the interface. }}\par
{
Reimplementa {\b Components::Button} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 34                                   \{\par
35     Components::Button::render();\par
36 \par
37     icon->setXPosition(background.x + (background.width - icon->getWidth()) / 2);\par
38     icon->setYPosition(background.y + (background.height - icon->getHeight()) / 2);\par
39 \par
40     {\cf19 if}(checkMouseOver() && icon->getPath() != hoveredIconPath) \{\par
41         icon->setPath(hoveredIconPath);\par
42     \}\par
43     {\cf19 else} {\cf19 if}(!checkMouseOver() && icon->getPath() != defaultIconPath) \{\par
44         icon->setPath(defaultIconPath);\par
45     \}\par
46 \par
47     icon->render();\par
48     {\cf19 return};\par
49 \}\par
}
}
{\xe \v setHeight\:Components::ButtonIcon}
{\xe \v Components::ButtonIcon\:setHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonIcon::setHeight (const float  {\i height}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEEK}
{\bkmkend AAAAAAAEEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i height} \cell }{is the new value to height. \cell }
{\row }
}
}{
Implementa {\b Components::Button} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 97                                                        \{\par
98     this->height = height;\par
99 \par
100     {\cf19 if}(icon->getHeight() > height) \{\par
101         icon->setHeight(height);\par
102         {\cf19 return};\par
103     \}\par
104     {\cf19 return};\par
105 \}\par
}
}
{\xe \v setHoverIconPath\:Components::ButtonIcon}
{\xe \v Components::ButtonIcon\:setHoverIconPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonIcon::setHoverIconPath (const std::string  {\i path})}}
\par
{\bkmkstart AAAAAAAEFF}
{\bkmkend AAAAAAAEFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the path to the icon when the mouse is over. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{is the new value to path for the icon when the mouse is over. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 88                                                                 \{\par
89     hoveredIconPath = path;\par
90     {\cf19 return};\par
91 \}\par
}
}
{\xe \v setIconHeight\:Components::ButtonIcon}
{\xe \v Components::ButtonIcon\:setIconHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonIcon::setIconHeight (const float  {\i height})}}
\par
{\bkmkstart AAAAAAAEFG}
{\bkmkend AAAAAAAEFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Icon Height attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i height} \cell }{is the new value height. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 53                                                            \{\par
54     {\cf19 if}(height > getHeight()) \{\par
55         {\cf19 return};\par
56     \}\par
57     \par
58     icon->setHeight(height);\par
59     {\cf19 return};\par
60 \}\par
}
}
{\xe \v setIconPath\:Components::ButtonIcon}
{\xe \v Components::ButtonIcon\:setIconPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonIcon::setIconPath (const std::string  {\i path})}}
\par
{\bkmkstart AAAAAAAEFH}
{\bkmkend AAAAAAAEFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the path attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{is the new value to path. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 79                                                            \{\par
80     defaultIconPath = path;\par
81     {\cf19 return};\par
82 \}\par
}
}
{\xe \v setIconWidth\:Components::ButtonIcon}
{\xe \v Components::ButtonIcon\:setIconWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonIcon::setIconWidth (const float  {\i width})}}
\par
{\bkmkstart AAAAAAAEFI}
{\bkmkend AAAAAAAEFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Icon Width attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i width} \cell }{is the new value width. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 66                                                          \{\par
67     {\cf19 if}(width > getWidth()) \{\par
68         {\cf19 return};\par
69     \}\par
70 \par
71     icon->setWidth(width);\par
72     {\cf19 return};\par
73 \}\par
}
}
{\xe \v setWidth\:Components::ButtonIcon}
{\xe \v Components::ButtonIcon\:setWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonIcon::setWidth (const float  {\i width}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEEQ}
{\bkmkend AAAAAAAEEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i width} \cell }{is the new value to width. \cell }
{\row }
}
}{
Implementa {\b Components::Button} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 107                                                      \{\par
108     this->width = width;\par
109 \par
110     {\cf19 if}(icon->getWidth() > width) \{\par
111         icon->setWidth(width);\par
112         {\cf19 return};\par
113     \}\par
114     {\cf19 return};\par
115 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/{\b ButtonIcon.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/button/{\b ButtonIcon.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Components::ButtonText\par \pard\plain 
{\tc\tcl2 \v Components::ButtonText}
{\xe \v Components::ButtonText}
{\bkmkstart AAAAAAAEFJ}
{\bkmkend AAAAAAAEFJ}
\par
{
{\f2 #include <ButtonText.hpp>}}\par
Diagrama de hierarquia da classe Components::ButtonText:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_components_1_1_button_text.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ButtonText} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ButtonText} (const std::string labelText)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b ButtonText} component recieving the text of it. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~ButtonText} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b ButtonText} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the component in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setText} (const std::string text) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the text content. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getText} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text that the button display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFontSize} (const float fontSize) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font size attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getFontSize} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font size attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFontFamily} (const {\b Font} font) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font family attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Font} {\b getFontFamily} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font family attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTextColor} (const {\b Color} color) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the color attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Color} {\b getTextColor} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text color attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMouseHoverTextColor} (const {\b Color} color)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the color of the text when the mouse is over. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Color} {\b getMouseHoverTextColor} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text color when the mouse is hover the button. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setHeight} (const float {\b height}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setWidth} (const float {\b width}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Button}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Button} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Button} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Button} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the component in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkClick} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the troop display was clicked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkMouseOver} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse is over the troop display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBackgroundColor} (const {\b Color} color)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the background color attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Color} {\b getBackgroundColor} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the background color attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMouseHoverBackgroundColor} (const {\b Color} color)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the background color when the mouse is over the button. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Color} {\b getMouseHoverBackgroundColor} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the background color attribute when the mouse is over. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setHeight} (const float {\b height})=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setWidth} (const float {\b width})=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::ResizableComponent}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~ResizableComponent} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b ResizableComponent} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setHeight} (const float {\b height}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setWidth} (const float {\b width}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Component} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Component}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the render contract of components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getXPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the X position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getYPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Vector2} {\b getPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position attribute. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setHeight} (const float height)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setWidth} (const float width)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::IClickable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkClick} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the troop display was clicked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkMouseOver} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse is over the troop display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setEnabled} (const {\b bool} {\b enabled})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the enabled attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b isEnabled} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the button is enable. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setText} (const std::string content)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the text content. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::string {\b getText} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text that the button display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setFontSize} (const float fontSize)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font size attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getFontSize} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font size attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setFontFamily} (const {\b Font} font)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font family attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Font} {\b getFontFamily} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font family attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setTextColor} (const {\b Color} color)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the color attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Color} {\b getTextColor} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text color attribute. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Button}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Color} {\b DEFAULT_BACKGROUND_COLOR} = {\b DEFAULT_BALCK}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_WIDTH} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_HEIGHT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Vector2} {\b DEFAULT_INITIAL_POSITION} = \{ 0, 0 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Button}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Rectangle} {\b background}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Color} {\b backgroundColor} = {\b DEFAULT_BACKGROUND_COLOR}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Color} {\b mouseHoverBackgroundColor} = {\b DEFAULT_BACKGROUND_COLOR}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b width} = {\b DEFAUT_INITIAL_WIDTH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b height} = {\b DEFAUT_INITIAL_HEIGHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b position} = {\b DEFAULT_INITIAL_POSITION}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::IClickable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b enabled} = {\b true}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ButtonText\:Components::ButtonText}
{\xe \v Components::ButtonText\:ButtonText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Components::ButtonText::ButtonText ()}}
\par
{\bkmkstart AAAAAAAEFK}
{\bkmkend AAAAAAAEFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b ButtonText} component. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12                                  :\par
13     text({\cf17 new} Text()) \{\par
14     setDefaultValues();\par
15 \}\par
}
}
{\xe \v ButtonText\:Components::ButtonText}
{\xe \v Components::ButtonText\:ButtonText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Components::ButtonText::ButtonText (const std::string  {\i labelText})}}
\par
{\bkmkstart AAAAAAAEFL}
{\bkmkend AAAAAAAEFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b ButtonText} component recieving the text of it. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i labelText} \cell }{is the text within the button \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17                                                           :\par
18     text({\cf17 new} Text(labelText)) \{\par
19     setDefaultValues();\par
20 \}\par
}
}
{\xe \v ~ButtonText\:Components::ButtonText}
{\xe \v Components::ButtonText\:~ButtonText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Components::ButtonText::~ButtonText (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEFM}
{\bkmkend AAAAAAAEFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b ButtonText} component. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 22 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getFontFamily\:Components::ButtonText}
{\xe \v Components::ButtonText\:getFontFamily}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Font} Components::ButtonText::getFontFamily () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEFN}
{\bkmkend AAAAAAAEFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font family attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Font} family attribute value. \par
}}}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 78                                                \{\par
79     {\cf19 return} text->getFontFamily();\par
80 \}\par
}
}
{\xe \v getFontSize\:Components::ButtonText}
{\xe \v Components::ButtonText\:getFontSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Components::ButtonText::getFontSize () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEFP}
{\bkmkend AAAAAAAEFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font size attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Font} size attribute value. \par
}}}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 69                                               \{\par
70     {\cf19 return} text->getFontSize();\par
71 \}\par
}
}
{\xe \v getMouseHoverTextColor\:Components::ButtonText}
{\xe \v Components::ButtonText\:getMouseHoverTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Color} Components::ButtonText::getMouseHoverTextColor () const}}
\par
{\bkmkstart AAAAAAAEFR}
{\bkmkend AAAAAAAEFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text color when the mouse is hover the button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Text} color hover attribute value. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 96                                                          \{\par
97     {\cf19 return} mouseHoverTextColor;\par
98 \}\par
}
}
{\xe \v getText\:Components::ButtonText}
{\xe \v Components::ButtonText\:getText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Components::ButtonText::getText () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEFS}
{\bkmkend AAAAAAAEFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text that the button display. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Text} attribute value. \par
}}}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 60                                               \{\par
61     {\cf19 return} text->getText();\par
62 \}\par
}
}
{\xe \v getTextColor\:Components::ButtonText}
{\xe \v Components::ButtonText\:getTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Color} Components::ButtonText::getTextColor () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEFU}
{\bkmkend AAAAAAAEFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text color attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Text} color attribute value. \par
}}}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 87                                                \{\par
88     {\cf19 return} textColor;\par
89 \}\par
}
}
{\xe \v render\:Components::ButtonText}
{\xe \v Components::ButtonText\:render}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonText::render (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEEF}
{\bkmkend AAAAAAAEEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the component in the interface. }}\par
{
Reimplementa {\b Components::Button} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 24                                   \{\par
25     Components::Button::render();\par
26 \par
27     {\cf19 if}(checkMouseOver()) \{\par
28         text->setTextColor(getMouseHoverTextColor());\par
29     \}\par
30     {\cf19 else} \{\par
31         text->setTextColor(getTextColor());\par
32     \}\par
33 \par
34     text->setXPosition(background.x + (background.width - text->getWidth()) / 2);\par
35     text->setYPosition(background.y + (background.height - text->getHeight()) / 2);\par
36     \par
37     text->render();\par
38     {\cf19 return};\par
39 \}\par
}
}
{\xe \v setFontFamily\:Components::ButtonText}
{\xe \v Components::ButtonText\:setFontFamily}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonText::setFontFamily (const {\b Font}  {\i font}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEFW}
{\bkmkend AAAAAAAEFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font family attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i font} \cell }{is the new font family. \cell }
{\row }
}
}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 73                                                         \{\par
74     this->text->setFontFamily(font);\par
75     {\cf19 return};\par
76 \}\par
}
}
{\xe \v setFontSize\:Components::ButtonText}
{\xe \v Components::ButtonText\:setFontSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonText::setFontSize (const float  {\i fontSize}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEFY}
{\bkmkend AAAAAAAEFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font size attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fontSize} \cell }{is the new value to the font size. \cell }
{\row }
}
}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 64                                                            \{\par
65     text->setFontSize(fontSize);\par
66     {\cf19 return};\par
67 \}\par
}
}
{\xe \v setHeight\:Components::ButtonText}
{\xe \v Components::ButtonText\:setHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonText::setHeight (const float  {\i height}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEEL}
{\bkmkend AAAAAAAEEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i height} \cell }{is the new value to height. \cell }
{\row }
}
}{
Implementa {\b Components::Button} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 100                                                        \{\par
101     {\cf19 if}(text->getHeight() > height) \{\par
102         this->height = text->getHeight();\par
103         {\cf19 return};\par
104     \}\par
105 \par
106     this->height = height;\par
107     {\cf19 return};\par
108 \}\par
}
}
{\xe \v setMouseHoverTextColor\:Components::ButtonText}
{\xe \v Components::ButtonText\:setMouseHoverTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonText::setMouseHoverTextColor (const {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAAEGA}
{\bkmkend AAAAAAAEGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the color of the text when the mouse is over. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i color} \cell }{is the new value to color the text will be rendered when the mouse is over. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 91                                                                    \{\par
92     this->mouseHoverTextColor = color;\par
93     {\cf19 return};\par
94 \}\par
}
}
{\xe \v setText\:Components::ButtonText}
{\xe \v Components::ButtonText\:setText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonText::setText (const std::string  {\i text}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEGB}
{\bkmkend AAAAAAAEGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the text content. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i text} \cell }{is the text that will be displayed. \cell }
{\row }
}
}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 55                                                        \{\par
56     this->text->setText(text);\par
57     {\cf19 return};\par
58 \}\par
}
}
{\xe \v setTextColor\:Components::ButtonText}
{\xe \v Components::ButtonText\:setTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonText::setTextColor (const {\b Color}  {\i color}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEGD}
{\bkmkend AAAAAAAEGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the color attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i color} \cell }{is the new text color. \cell }
{\row }
}
}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 82                                                          \{\par
83     this->textColor = color;\par
84     {\cf19 return};\par
85 \}\par
}
}
{\xe \v setWidth\:Components::ButtonText}
{\xe \v Components::ButtonText\:setWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonText::setWidth (const float  {\i width}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEER}
{\bkmkend AAAAAAAEER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i width} \cell }{is the new value to width. \cell }
{\row }
}
}{
Implementa {\b Components::Button} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 110                                                      \{\par
111     {\cf19 if}(text->getWidth() > width) \{\par
112         this->width = text->getWidth();\par
113         {\cf19 return};\par
114     \}\par
115 \par
116     this->width = width;\par
117     {\cf19 return};\par
118 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/{\b ButtonText.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/button/{\b ButtonText.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Components::ButtonTextIcon\par \pard\plain 
{\tc\tcl2 \v Components::ButtonTextIcon}
{\xe \v Components::ButtonTextIcon}
{\bkmkstart AAAAAAAEGF}
{\bkmkend AAAAAAAEGF}
\par
{
{\f2 #include <ButtonTextIcon.hpp>}}\par
Diagrama de hierarquia da classe Components::ButtonTextIcon:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_components_1_1_button_text_icon.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ButtonTextIcon} (const std::string iconPath, const std::string label)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~ButtonTextIcon} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b ButtonTextIcon} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the component in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setHeight} (const float {\b height}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setWidth} (const float {\b width}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setIconPath} (const std::string path) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the path attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::string {\b getIconPath} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the icon path attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setIconHeight} (const float {\b height}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Icon Height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getIconHeight} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the icon height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setIconWidth} (const float {\b width}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Icon Width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getIconWidth} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the icon width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setText} (const std::string content) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the text content. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::string {\b getText} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text that the button display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setFontSize} (const float fontSize) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font size attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getFontSize} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font size attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setFontFamily} (const {\b Font} font) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font family attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Font} {\b getFontFamily} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font family attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setTextColor} (const {\b Color} color) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the color attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Color} {\b getTextColor} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text color attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setMouseHoverTextColor} (const {\b Color} color)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the color of the text when the mouse is over. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Color} {\b getMouseHoverTextColor} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text color when the mouse is hover the button. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Button}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Button} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Button} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Button} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the component in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkClick} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the troop display was clicked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkMouseOver} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse is over the troop display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBackgroundColor} (const {\b Color} color)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the background color attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Color} {\b getBackgroundColor} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the background color attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMouseHoverBackgroundColor} (const {\b Color} color)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the background color when the mouse is over the button. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Color} {\b getMouseHoverBackgroundColor} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the background color attribute when the mouse is over. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setHeight} (const float {\b height})=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setWidth} (const float {\b width})=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::ResizableComponent}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~ResizableComponent} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b ResizableComponent} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setHeight} (const float {\b height}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setWidth} (const float {\b width}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Component} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Component}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the render contract of components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getXPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the X position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getYPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Vector2} {\b getPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position attribute. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setHeight} (const float height)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setWidth} (const float width)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::IClickable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkClick} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the troop display was clicked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkMouseOver} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse is over the troop display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setEnabled} (const {\b bool} {\b enabled})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the enabled attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b isEnabled} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the button is enable. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setIconPath} (const std::string path)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the path attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::string {\b getIconPath} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the default image path attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setIconHeight} (const float height)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Icon Height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getIconHeight} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the icon height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setIconWidth} (const float width)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Icon Width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getIconWidth} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the icon width attribute. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setText} (const std::string content)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the text content. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::string {\b getText} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text that the button display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setFontSize} (const float fontSize)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font size attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getFontSize} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font size attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setFontFamily} (const {\b Font} font)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font family attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Font} {\b getFontFamily} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font family attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setTextColor} (const {\b Color} color)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the color attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Color} {\b getTextColor} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text color attribute. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Button}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Color} {\b DEFAULT_BACKGROUND_COLOR} = {\b DEFAULT_BALCK}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_WIDTH} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_HEIGHT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Vector2} {\b DEFAULT_INITIAL_POSITION} = \{ 0, 0 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Button}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Rectangle} {\b background}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Color} {\b backgroundColor} = {\b DEFAULT_BACKGROUND_COLOR}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Color} {\b mouseHoverBackgroundColor} = {\b DEFAULT_BACKGROUND_COLOR}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b width} = {\b DEFAUT_INITIAL_WIDTH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b height} = {\b DEFAUT_INITIAL_HEIGHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b position} = {\b DEFAULT_INITIAL_POSITION}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::IClickable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b enabled} = {\b true}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ButtonTextIcon\:Components::ButtonTextIcon}
{\xe \v Components::ButtonTextIcon\:ButtonTextIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Components::ButtonTextIcon::ButtonTextIcon (const std::string  {\i iconPath}, const std::string  {\i label})}}
\par
{\bkmkstart AAAAAAAEGG}
{\bkmkend AAAAAAAEGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b ButtonTextIcon} component. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i iconPath} \cell }{is the path to the icon that will be dsplayed \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i label} \cell }{is the text that will be displayed after the icon \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 13                                                                                         :\par
14     content({\cf17 new} Components::TextIcon(iconPath, label)) \{\par
15     setWidth(getDefaultWidth());\par
16     setHeight(getDefaultHeight());\par
17 \par
18     setXPosition(0.0);\par
19     setYPosition(0.0);\par
20 \}\par
}
}
{\xe \v ~ButtonTextIcon\:Components::ButtonTextIcon}
{\xe \v Components::ButtonTextIcon\:~ButtonTextIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Components::ButtonTextIcon::~ButtonTextIcon (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEGH}
{\bkmkend AAAAAAAEGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b ButtonTextIcon} component. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 22 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getFontFamily\:Components::ButtonTextIcon}
{\xe \v Components::ButtonTextIcon\:getFontFamily}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Font} Components::ButtonTextIcon::getFontFamily () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEGI}
{\bkmkend AAAAAAAEGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font family attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Font} family attribute value. \par
}}}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 164                                                    \{\par
165     {\cf19 return} content->getFontFamily();\par
166 \}\par
}
}
{\xe \v getFontSize\:Components::ButtonTextIcon}
{\xe \v Components::ButtonTextIcon\:getFontSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Components::ButtonTextIcon::getFontSize () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEGJ}
{\bkmkend AAAAAAAEGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font size attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Font} size attribute value. \par
}}}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 151                                                   \{\par
152     {\cf19 return} content->getFontSize();\par
153 \}\par
}
}
{\xe \v getIconHeight\:Components::ButtonTextIcon}
{\xe \v Components::ButtonTextIcon\:getIconHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Components::ButtonTextIcon::getIconHeight () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEGK}
{\bkmkend AAAAAAAEGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the icon height attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Icon height attribute value. \par
}}}{
Implementa {\b Components::IDisplayIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 112                                                     \{\par
113     {\cf19 return} content->getIconHeight();\par
114 \}\par
}
}
{\xe \v getIconPath\:Components::ButtonTextIcon}
{\xe \v Components::ButtonTextIcon\:getIconPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Components::ButtonTextIcon::getIconPath () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEGM}
{\bkmkend AAAAAAAEGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the icon path attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Icon path attribute value. \par
}}}{
Implementa {\b Components::IDisplayIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 99                                                       \{\par
100     {\cf19 return} content->getIconPath();\par
101 \}\par
}
}
{\xe \v getIconWidth\:Components::ButtonTextIcon}
{\xe \v Components::ButtonTextIcon\:getIconWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Components::ButtonTextIcon::getIconWidth () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEGO}
{\bkmkend AAAAAAAEGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the icon width attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Icon width attribute value. \par
}}}{
Implementa {\b Components::IDisplayIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 125                                                    \{\par
126     {\cf19 return} content->getIconWidth();\par
127 \}\par
}
}
{\xe \v getMouseHoverTextColor\:Components::ButtonTextIcon}
{\xe \v Components::ButtonTextIcon\:getMouseHoverTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Color} Components::ButtonTextIcon::getMouseHoverTextColor () const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEGQ}
{\bkmkend AAAAAAAEGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text color when the mouse is hover the button. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Text} color hover attribute value. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 182                                                              \{\par
183     {\cf19 return} mouseHoverTextColor;\par
184 \}\par
}
}
{\xe \v getText\:Components::ButtonTextIcon}
{\xe \v Components::ButtonTextIcon\:getText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Components::ButtonTextIcon::getText () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEGR}
{\bkmkend AAAAAAAEGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text that the button display. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Text} content attribute value. \par
}}}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 138                                                   \{\par
139     {\cf19 return} content->getText();\par
140 \}\par
}
}
{\xe \v getTextColor\:Components::ButtonTextIcon}
{\xe \v Components::ButtonTextIcon\:getTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Color} Components::ButtonTextIcon::getTextColor () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEGS}
{\bkmkend AAAAAAAEGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text color attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Text} color attribute value. \par
}}}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 173                                                    \{\par
174     {\cf19 return} textColor;\par
175 \}\par
}
}
{\xe \v render\:Components::ButtonTextIcon}
{\xe \v Components::ButtonTextIcon\:render}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonTextIcon::render (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEEG}
{\bkmkend AAAAAAAEEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the component in the interface. }}\par
{
Reimplementa {\b Components::Button} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 24                                       \{\par
25     Components::Button::render();\par
26     Color renderedTextColor;\par
27 \par
28     {\cf19 if}(checkMouseOver()) \{\par
29         renderedTextColor = getMouseHoverTextColor();\par
30     \}\par
31     {\cf19 else} \{\par
32         renderedTextColor = getTextColor();\par
33     \}\par
34 \par
35     content->setTextColor(renderedTextColor);\par
36     content->render();\par
37     {\cf19 return};\par
38 \}\par
}
}
{\xe \v setFontFamily\:Components::ButtonTextIcon}
{\xe \v Components::ButtonTextIcon\:setFontFamily}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonTextIcon::setFontFamily (const {\b Font}  {\i font}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEGT}
{\bkmkend AAAAAAAEGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font family attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i font} \cell }{is the new font family. \cell }
{\row }
}
}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 155                                                             \{\par
156     content->setFontFamily(font);\par
157     \par
158     updateHeight();\par
159     updateWidth();\par
160 \par
161     {\cf19 return};\par
162 \}\par
}
}
{\xe \v setFontSize\:Components::ButtonTextIcon}
{\xe \v Components::ButtonTextIcon\:setFontSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonTextIcon::setFontSize (const float  {\i fontSize}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEGU}
{\bkmkend AAAAAAAEGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font size attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fontSize} \cell }{is the new value to the font size. \cell }
{\row }
}
}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 142                                                                \{\par
143     content->setFontSize(fontSize);\par
144     \par
145     updateHeight();\par
146     updateWidth();\par
147 \par
148     {\cf19 return};\par
149 \}\par
}
}
{\xe \v setHeight\:Components::ButtonTextIcon}
{\xe \v Components::ButtonTextIcon\:setHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonTextIcon::setHeight (const float  {\i height}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEEM}
{\bkmkend AAAAAAAEEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i height} \cell }{is the new value to height. \cell }
{\row }
}
}{
Implementa {\b Components::Button} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 80                                                            \{\par
81     this->height = (height < content->getHeight()) ? content->getHeight() : height;\par
82     background.height = this->height;\par
83     \par
84     {\cf19 return};\par
85 \}\par
}
}
{\xe \v setIconHeight\:Components::ButtonTextIcon}
{\xe \v Components::ButtonTextIcon\:setIconHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonTextIcon::setIconHeight (const float  {\i height}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEGV}
{\bkmkend AAAAAAAEGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Icon Height attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i height} \cell }{is the new value height. \cell }
{\row }
}
}{
Implementa {\b Components::IDisplayIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 103                                                                \{\par
104     {\cf19 if}(height > getHeight()) \{\par
105         setHeight(height);\par
106     \}\par
107 \par
108     content->setIconHeight(height);\par
109     {\cf19 return};\par
110 \}\par
}
}
{\xe \v setIconPath\:Components::ButtonTextIcon}
{\xe \v Components::ButtonTextIcon\:setIconPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonTextIcon::setIconPath (const std::string  {\i path}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEGX}
{\bkmkend AAAAAAAEGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the path attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{is the new value to path. \cell }
{\row }
}
}{
Implementa {\b Components::IDisplayIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 94                                                                \{\par
95     content->setIconPath(path);\par
96     {\cf19 return};\par
97 \}\par
}
}
{\xe \v setIconWidth\:Components::ButtonTextIcon}
{\xe \v Components::ButtonTextIcon\:setIconWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonTextIcon::setIconWidth (const float  {\i width}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEGZ}
{\bkmkend AAAAAAAEGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Icon Width attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i width} \cell }{is the new value width. \cell }
{\row }
}
}{
Implementa {\b Components::IDisplayIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 116                                                              \{ \par
117     {\cf19 if}(width > getWidth()) \{\par
118         setWidth(width);\par
119     \}\par
120 \par
121     content->setIconWidth(width);\par
122     {\cf19 return};\par
123 \}\par
}
}
{\xe \v setMouseHoverTextColor\:Components::ButtonTextIcon}
{\xe \v Components::ButtonTextIcon\:setMouseHoverTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonTextIcon::setMouseHoverTextColor (const {\b Color}  {\i color}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEHB}
{\bkmkend AAAAAAAEHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the color of the text when the mouse is over. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i color} \cell }{is the new value to color the text will be rendered when the mouse is over. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 177                                                                        \{\par
178     mouseHoverTextColor = color;\par
179     {\cf19 return};\par
180 \}\par
}
}
{\xe \v setPosition\:Components::ButtonTextIcon}
{\xe \v Components::ButtonTextIcon\:setPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonTextIcon::setPosition (const float  {\i xPosition}, const float  {\i yPosition}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEHC}
{\bkmkend AAAAAAAEHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i xPosition} \cell }{is the new value to x axis in the position. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i yPosition} \cell }{is the new value to y axis in the position. \cell }
{\row }
}
}{
Reimplementa {\b Components::Component} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 200                                                                                        \{\par
201     position.x = xPosition;\par
202     position.y = yPosition;\par
203     updateInnerComponentsPositions();\par
204 \par
205     {\cf19 return};\par
206 \}\par
}
}
{\xe \v setPosition\:Components::ButtonTextIcon}
{\xe \v Components::ButtonTextIcon\:setPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonTextIcon::setPosition (const {\b Vector2}  {\i position}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEHE}
{\bkmkend AAAAAAAEHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i position} \cell }{is the new value to the position. \cell }
{\row }
}
}{
Reimplementa {\b Components::Component} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 208                                                                  \{\par
209     this->position = position;\par
210     updateInnerComponentsPositions();\par
211 \par
212     {\cf19 return};\par
213 \}\par
}
}
{\xe \v setText\:Components::ButtonTextIcon}
{\xe \v Components::ButtonTextIcon\:setText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonTextIcon::setText (const std::string  {\i content}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEHG}
{\bkmkend AAAAAAAEHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the text content. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i text} \cell }{is the text that will be displayed. \cell }
{\row }
}
}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 129                                                               \{\par
130     this->content->setText(content);\par
131     \par
132     updateHeight();\par
133     updateWidth();\par
134 \par
135     {\cf19 return};\par
136 \}\par
}
}
{\xe \v setTextColor\:Components::ButtonTextIcon}
{\xe \v Components::ButtonTextIcon\:setTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonTextIcon::setTextColor (const {\b Color}  {\i color}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEHH}
{\bkmkend AAAAAAAEHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the color attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i color} \cell }{is the new text color. \cell }
{\row }
}
}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 168                                                              \{\par
169     textColor = color;\par
170     {\cf19 return};\par
171 \}\par
}
}
{\xe \v setWidth\:Components::ButtonTextIcon}
{\xe \v Components::ButtonTextIcon\:setWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonTextIcon::setWidth (const float  {\i width}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEES}
{\bkmkend AAAAAAAEES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i width} \cell }{is the new value to width. \cell }
{\row }
}
}{
Implementa {\b Components::Button} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 87                                                          \{\par
88     this->width = (width < content->getWidth()) ? content->getWidth() : width;\par
89     background.width = this->width;\par
90     \par
91     {\cf19 return};\par
92 \}\par
}
}
{\xe \v setXPosition\:Components::ButtonTextIcon}
{\xe \v Components::ButtonTextIcon\:setXPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonTextIcon::setXPosition (const float  {\i xPosition}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEHI}
{\bkmkend AAAAAAAEHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i xPosition} \cell }{is the new value to x axis in the position. \cell }
{\row }
}
}{
Reimplementa {\b Components::Component} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 186                                                                  \{\par
187     position.x = xPosition;\par
188     updateInnerComponentsPositions();\par
189 \par
190     {\cf19 return};\par
191 \}\par
}
}
{\xe \v setYPosition\:Components::ButtonTextIcon}
{\xe \v Components::ButtonTextIcon\:setYPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonTextIcon::setYPosition (const float  {\i yPosition}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEHK}
{\bkmkend AAAAAAAEHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i yPosition} \cell }{is the new value to y axis in the position. \cell }
{\row }
}
}{
Reimplementa {\b Components::Component} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 193                                                                  \{\par
194     position.y = yPosition;\par
195     updateInnerComponentsPositions();\par
196 \par
197     {\cf19 return};\par
198 \}\par
}
}
{\xe \v updateInnerComponentsPositions\:Components::ButtonTextIcon}
{\xe \v Components::ButtonTextIcon\:updateInnerComponentsPositions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ButtonTextIcon::updateInnerComponentsPositions (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEHM}
{\bkmkend AAAAAAAEHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 42                                                               \{\par
43     background.x = getXPosition();\par
44     background.y = getYPosition();\par
45 \par
46     content->setXPosition(background.x + (background.width - content->getWidth()) / 2);\par
47     content->setYPosition(background.y + (background.height - content->getHeight()) / 2);\par
48 \par
49     {\cf19 return};\par
50 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/{\b ButtonTextIcon.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/button/{\b ButtonTextIcon.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura Camera2D\par \pard\plain 
{\tc\tcl2 \v Camera2D}
{\xe \v Camera2D}
{\bkmkstart AAAAAAADQQ}
{\bkmkend AAAAAAADQQ}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b offset}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b target}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b rotation}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b zoom}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v offset\:Camera2D}
{\xe \v Camera2D\:offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector2} Camera2D::offset}}
\par
{\bkmkstart AAAAAAADQR}
{\bkmkend AAAAAAADQR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rotation\:Camera2D}
{\xe \v Camera2D\:rotation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Camera2D::rotation}}
\par
{\bkmkstart AAAAAAADQS}
{\bkmkend AAAAAAADQS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v target\:Camera2D}
{\xe \v Camera2D\:target}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector2} Camera2D::target}}
\par
{\bkmkstart AAAAAAADQT}
{\bkmkend AAAAAAADQT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v zoom\:Camera2D}
{\xe \v Camera2D\:zoom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Camera2D::zoom}}
\par
{\bkmkstart AAAAAAADQU}
{\bkmkend AAAAAAADQU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura Camera3D\par \pard\plain 
{\tc\tcl2 \v Camera3D}
{\xe \v Camera3D}
{\bkmkstart AAAAAAADQV}
{\bkmkend AAAAAAADQV}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} {\b position}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} {\b target}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} {\b up}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b fovy}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b projection}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v fovy\:Camera3D}
{\xe \v Camera3D\:fovy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Camera3D::fovy}}
\par
{\bkmkstart AAAAAAADQW}
{\bkmkend AAAAAAADQW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v position\:Camera3D}
{\xe \v Camera3D\:position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} Camera3D::position}}
\par
{\bkmkstart AAAAAAADQX}
{\bkmkend AAAAAAADQX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v projection\:Camera3D}
{\xe \v Camera3D\:projection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Camera3D::projection}}
\par
{\bkmkstart AAAAAAADQY}
{\bkmkend AAAAAAADQY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v target\:Camera3D}
{\xe \v Camera3D\:target}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} Camera3D::target}}
\par
{\bkmkstart AAAAAAADQZ}
{\bkmkend AAAAAAADQZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v up\:Camera3D}
{\xe \v Camera3D\:up}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} Camera3D::up}}
\par
{\bkmkstart AAAAAAADRA}
{\bkmkend AAAAAAADRA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura std::char_traits< charT >\par \pard\plain 
{\tc\tcl2 \v std::char_traits< charT >}
{\xe \v std::char_traits< charT >}
{\bkmkstart AAAAAAAFHT}
{\bkmkend AAAAAAAFHT}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura doctest::detail::has_insertion_operator_impl::check< class, class >\par \pard\plain 
{\tc\tcl2 \v doctest::detail::has_insertion_operator_impl::check< class, class >}
{\xe \v doctest::detail::has_insertion_operator_impl::check< class, class >}
{\bkmkstart AAAAAAAFEJ}
{\bkmkend AAAAAAAFEJ}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b DOCTEST_CONSTEXPR} {\b bool} {\b value} = {\b false}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v value\:doctest::detail::has_insertion_operator_impl::check< class, class >}
{\xe \v doctest::detail::has_insertion_operator_impl::check< class, class >\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class , class  = void> {\b DOCTEST_CONSTEXPR} {\b bool} {\b doctest::detail::has_insertion_operator_impl::check}< class, class >::value = {\b false}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFEK}
{\bkmkend AAAAAAAFEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura doctest::detail::has_insertion_operator_impl::check< T, decltype(os()<< val< T >(), void())>\par \pard\plain 
{\tc\tcl2 \v doctest::detail::has_insertion_operator_impl::check< T, decltype(os()<< val< T >(), void())>}
{\xe \v doctest::detail::has_insertion_operator_impl::check< T, decltype(os()<< val< T >(), void())>}
{\bkmkstart AAAAAAAFEL}
{\bkmkend AAAAAAAFEL}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b DOCTEST_CONSTEXPR} {\b bool} {\b value} = {\b true}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v value\:doctest::detail::has_insertion_operator_impl::check< T, decltype(os()<< val< T >(), void())>}
{\xe \v doctest::detail::has_insertion_operator_impl::check< T, decltype(os()<< val< T >(), void())>\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > {\b DOCTEST_CONSTEXPR} {\b bool} {\b doctest::detail::has_insertion_operator_impl::check}< T, decltype({\b os}()<< val< T >(), void())>::value = {\b true}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFEM}
{\bkmkend AAAAAAAFEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura Color\par \pard\plain 
{\tc\tcl2 \v Color}
{\xe \v Color}
{\bkmkstart AAAAAAADRB}
{\bkmkend AAAAAAADRB}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b r}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b g}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b b}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b a}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v a\:Color}
{\xe \v Color\:a}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char Color::a}}
\par
{\bkmkstart AAAAAAADRC}
{\bkmkend AAAAAAADRC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v b\:Color}
{\xe \v Color\:b}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char Color::b}}
\par
{\bkmkstart AAAAAAADRD}
{\bkmkend AAAAAAADRD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g\:Color}
{\xe \v Color\:g}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char Color::g}}
\par
{\bkmkstart AAAAAAADRE}
{\bkmkend AAAAAAADRE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v r\:Color}
{\xe \v Color\:r}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char Color::r}}
\par
{\bkmkstart AAAAAAADRF}
{\bkmkend AAAAAAADRF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Components::Component\par \pard\plain 
{\tc\tcl2 \v Components::Component}
{\xe \v Components::Component}
{\bkmkstart AAAAAAAEHN}
{\bkmkend AAAAAAAEHN}
\par
{
{\f2 #include <Component.hpp>}}\par
Diagrama de hierarquia da classe Components::Component:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_components_1_1_component.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Component} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Component}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the render contract of components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getXPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the X position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getYPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Vector2} {\b getPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position attribute. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_WIDTH} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_HEIGHT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Vector2} {\b DEFAULT_INITIAL_POSITION} = \{ 0, 0 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b width} = {\b DEFAUT_INITIAL_WIDTH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b height} = {\b DEFAUT_INITIAL_HEIGHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b position} = {\b DEFAULT_INITIAL_POSITION}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ~Component\:Components::Component}
{\xe \v Components::Component\:~Component}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Components::Component::~Component (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEHO}
{\bkmkend AAAAAAAEHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Component}. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 9 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getHeight\:Components::Component}
{\xe \v Components::Component\:getHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Components::Component::getHeight () const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEHP}
{\bkmkend AAAAAAAEHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the height attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Height attribute value. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17                                            \{\par
18     {\cf19 return} height;\par
19 \}\par
}
}
{\xe \v getPosition\:Components::Component}
{\xe \v Components::Component\:getPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector2} Components::Component::getPosition () const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEHQ}
{\bkmkend AAAAAAAEHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
position attribute value. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 51                                                \{\par
52     {\cf19 return} position;\par
53 \}\par
}
}
{\xe \v getWidth\:Components::Component}
{\xe \v Components::Component\:getWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Components::Component::getWidth () const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEHR}
{\bkmkend AAAAAAAEHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Width attribute value. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 13                                           \{\par
14     {\cf19 return} width;\par
15 \}\par
}
}
{\xe \v getXPosition\:Components::Component}
{\xe \v Components::Component\:getXPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Components::Component::getXPosition () const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEHS}
{\bkmkend AAAAAAAEHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the X position attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
X position attribute value. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 26                                               \{\par
27     {\cf19 return} position.x;\par
28 \}\par
}
}
{\xe \v getYPosition\:Components::Component}
{\xe \v Components::Component\:getYPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Components::Component::getYPosition () const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEHT}
{\bkmkend AAAAAAAEHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Y position attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Y position attribute value. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 35                                               \{\par
36     {\cf19 return} position.y;\par
37 \}\par
}
}
{\xe \v render\:Components::Component}
{\xe \v Components::Component\:render}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Components::Component::render (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAEED}
{\bkmkend AAAAAAAEED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the render contract of components. }}\par
{
Implementado por {\b Components::Image} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::Button} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEC \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::ButtonIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEE \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::ButtonText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::ButtonTextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::Text} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::TextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHW \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::EndGameScoreDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHX \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::GamePositionDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::GameScoreDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::PositioningPositionDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIA \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::TroopDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIB \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::TroopPositioningOption} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIC \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::WarningPopUp} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEID \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::MatchResultDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIE \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::PlayerRegistredScore} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::BoardDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIG \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Views::PositionDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setPosition\:Components::Component}
{\xe \v Components::Component\:setPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::Component::setPosition (const float  {\i xPosition}, const float  {\i yPosition}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEHD}
{\bkmkend AAAAAAAEHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i xPosition} \cell }{is the new value to x axis in the position. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i yPosition} \cell }{is the new value to y axis in the position. \cell }
{\row }
}
}{
Reimplementado por {\b Components::ButtonTextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHC \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEII \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 39                                                                                   \{\par
40     setXPosition(xPosition);\par
41     setYPosition(yPosition);\par
42 \par
43     {\cf19 return};\par
44 \}\par
}
}
{\xe \v setPosition\:Components::Component}
{\xe \v Components::Component\:setPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::Component::setPosition (const {\b Vector2}  {\i position}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEHF}
{\bkmkend AAAAAAAEHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i position} \cell }{is the new value to the position. \cell }
{\row }
}
}{
Reimplementado por {\b Components::ButtonTextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHE \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 46                                                             \{\par
47     this->position = position;\par
48     {\cf19 return};\par
49 \}\par
}
}
{\xe \v setXPosition\:Components::Component}
{\xe \v Components::Component\:setXPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::Component::setXPosition (const float  {\i xPosition}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEHJ}
{\bkmkend AAAAAAAEHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i xPosition} \cell }{is the new value to x axis in the position. \cell }
{\row }
}
}{
Reimplementado por {\b Components::ButtonTextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHI \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21                                                             \{\par
22     this->position.x = xPosition;\par
23     {\cf19 return};\par
24 \}\par
}
}
{\xe \v setYPosition\:Components::Component}
{\xe \v Components::Component\:setYPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::Component::setYPosition (const float  {\i yPosition}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEHL}
{\bkmkend AAAAAAAEHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i yPosition} \cell }{is the new value to y axis in the position. \cell }
{\row }
}
}{
Reimplementado por {\b Components::ButtonTextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHK \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 30                                                             \{\par
31     this->position.y = yPosition;\par
32     {\cf19 return};\par
33 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v DEFAULT_INITIAL_POSITION\:Components::Component}
{\xe \v Components::Component\:DEFAULT_INITIAL_POSITION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Vector2} Components::Component::DEFAULT_INITIAL_POSITION = \{ 0, 0 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEIM}
{\bkmkend AAAAAAAEIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DEFAUT_INITIAL_HEIGHT\:Components::Component}
{\xe \v Components::Component\:DEFAUT_INITIAL_HEIGHT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const float Components::Component::DEFAUT_INITIAL_HEIGHT = 1{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEIN}
{\bkmkend AAAAAAAEIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DEFAUT_INITIAL_WIDTH\:Components::Component}
{\xe \v Components::Component\:DEFAUT_INITIAL_WIDTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const float Components::Component::DEFAUT_INITIAL_WIDTH = 1{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEIO}
{\bkmkend AAAAAAAEIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v height\:Components::Component}
{\xe \v Components::Component\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Components::Component::height = {\b DEFAUT_INITIAL_HEIGHT}{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEIP}
{\bkmkend AAAAAAAEIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v position\:Components::Component}
{\xe \v Components::Component\:position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector2} Components::Component::position = {\b DEFAULT_INITIAL_POSITION}{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEIQ}
{\bkmkend AAAAAAAEIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v width\:Components::Component}
{\xe \v Components::Component\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Components::Component::width = {\b DEFAUT_INITIAL_WIDTH}{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEIR}
{\bkmkend AAAAAAAEIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/{\b Component.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/component/{\b Component.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe doctest::Context\par \pard\plain 
{\tc\tcl2 \v doctest::Context}
{\xe \v doctest::Context}
{\bkmkstart AAAAAAAEOL}
{\bkmkend AAAAAAAEOL}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Context} (int argc=0, const char *const *argv=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Context} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyCommandLine} (int argc, const char *const *argv)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addFilter} (const char *filter, const char *value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clearFilters} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOption} (const char *option, {\b bool} value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOption} (const char *option, int value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOption} (const char *option, const char *value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b shouldExit} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAsDefaultForAssertsOutOfTestCases} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAssertHandler} ({\b detail::assert_handler} ah)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCout} ({\b std::ostream} *out)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b run} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Context\:doctest::Context}
{\xe \v doctest::Context\:Context}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::Context::Context (int  {\i argc} = {\f2 0}, const char *const *  {\i argv} = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAEOM}
{\bkmkend AAAAAAAEOM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~Context\:doctest::Context}
{\xe \v doctest::Context\:~Context}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::Context::~Context ()}}
\par
{\bkmkstart AAAAAAAEON}
{\bkmkend AAAAAAAEON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v addFilter\:doctest::Context}
{\xe \v doctest::Context\:addFilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void doctest::Context::addFilter (const char *  {\i filter}, const char *  {\i value})}}
\par
{\bkmkstart AAAAAAAEOO}
{\bkmkend AAAAAAAEOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v applyCommandLine\:doctest::Context}
{\xe \v doctest::Context\:applyCommandLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void doctest::Context::applyCommandLine (int  {\i argc}, const char *const *  {\i argv})}}
\par
{\bkmkstart AAAAAAAEOP}
{\bkmkend AAAAAAAEOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clearFilters\:doctest::Context}
{\xe \v doctest::Context\:clearFilters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void doctest::Context::clearFilters ()}}
\par
{\bkmkstart AAAAAAAEOQ}
{\bkmkend AAAAAAAEOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v run\:doctest::Context}
{\xe \v doctest::Context\:run}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int doctest::Context::run ()}}
\par
{\bkmkstart AAAAAAAEOR}
{\bkmkend AAAAAAAEOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setAsDefaultForAssertsOutOfTestCases\:doctest::Context}
{\xe \v doctest::Context\:setAsDefaultForAssertsOutOfTestCases}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void doctest::Context::setAsDefaultForAssertsOutOfTestCases ()}}
\par
{\bkmkstart AAAAAAAEOS}
{\bkmkend AAAAAAAEOS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setAssertHandler\:doctest::Context}
{\xe \v doctest::Context\:setAssertHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void doctest::Context::setAssertHandler ({\b detail::assert_handler}  {\i ah})}}
\par
{\bkmkstart AAAAAAAEOT}
{\bkmkend AAAAAAAEOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setCout\:doctest::Context}
{\xe \v doctest::Context\:setCout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void doctest::Context::setCout ({\b std::ostream} *  {\i out})}}
\par
{\bkmkstart AAAAAAAEOU}
{\bkmkend AAAAAAAEOU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setOption\:doctest::Context}
{\xe \v doctest::Context\:setOption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void doctest::Context::setOption (const char *  {\i option}, {\b bool}  {\i value})}}
\par
{\bkmkstart AAAAAAAEOV}
{\bkmkend AAAAAAAEOV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setOption\:doctest::Context}
{\xe \v doctest::Context\:setOption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void doctest::Context::setOption (const char *  {\i option}, const char *  {\i value})}}
\par
{\bkmkstart AAAAAAAEOW}
{\bkmkend AAAAAAAEOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setOption\:doctest::Context}
{\xe \v doctest::Context\:setOption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void doctest::Context::setOption (const char *  {\i option}, int  {\i value})}}
\par
{\bkmkstart AAAAAAAEOX}
{\bkmkend AAAAAAAEOX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v shouldExit\:doctest::Context}
{\xe \v doctest::Context\:shouldExit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::Context::shouldExit ()}}
\par
{\bkmkstart AAAAAAAEOY}
{\bkmkend AAAAAAAEOY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura doctest::ContextOptions\par \pard\plain 
{\tc\tcl2 \v doctest::ContextOptions}
{\xe \v doctest::ContextOptions}
{\bkmkstart AAAAAAAEOZ}
{\bkmkend AAAAAAAEOZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCLINT too many fields. }}\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b std::ostream} * {\b cout} = nullptr\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b String} {\b binary_name}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b detail::TestCase} * {\b currentTest} = nullptr\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b String} {\b out}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b String} {\b order_by}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b rand_seed}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b first}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b last}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b abort_after}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b subcase_filter_levels}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b success}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b case_sensitive}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b exit}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b duration}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b minimal}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b quiet}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b no_throw}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b no_exitcode}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b no_run}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b no_intro}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b no_version}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b no_colors}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b force_colors}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b no_breaks}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b no_skip}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b gnu_file_line}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b no_path_in_filenames}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b no_line_numbers}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b no_debug_output}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b no_skipped_summary}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b no_time_in_output}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b help}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b version}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b count}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b list_test_cases}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b list_test_suites}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b list_reporters}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCLINT too many fields. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v abort_after\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:abort_after}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int doctest::ContextOptions::abort_after}}
\par
{\bkmkstart AAAAAAAEPA}
{\bkmkend AAAAAAAEPA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v binary_name\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:binary_name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b String} doctest::ContextOptions::binary_name}}
\par
{\bkmkstart AAAAAAAEPB}
{\bkmkend AAAAAAAEPB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v case_sensitive\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:case_sensitive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::ContextOptions::case_sensitive}}
\par
{\bkmkstart AAAAAAAEPC}
{\bkmkend AAAAAAAEPC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v count\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::ContextOptions::count}}
\par
{\bkmkstart AAAAAAAEPD}
{\bkmkend AAAAAAAEPD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cout\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:cout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b std::ostream}* doctest::ContextOptions::cout = nullptr}}
\par
{\bkmkstart AAAAAAAEPE}
{\bkmkend AAAAAAAEPE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v currentTest\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:currentTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b detail::TestCase}* doctest::ContextOptions::currentTest = nullptr}}
\par
{\bkmkstart AAAAAAAEPF}
{\bkmkend AAAAAAAEPF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v duration\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:duration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::ContextOptions::duration}}
\par
{\bkmkstart AAAAAAAEPG}
{\bkmkend AAAAAAAEPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v exit\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:exit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::ContextOptions::exit}}
\par
{\bkmkstart AAAAAAAEPH}
{\bkmkend AAAAAAAEPH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v first\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:first}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned doctest::ContextOptions::first}}
\par
{\bkmkstart AAAAAAAEPI}
{\bkmkend AAAAAAAEPI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v force_colors\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:force_colors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::ContextOptions::force_colors}}
\par
{\bkmkstart AAAAAAAEPJ}
{\bkmkend AAAAAAAEPJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v gnu_file_line\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:gnu_file_line}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::ContextOptions::gnu_file_line}}
\par
{\bkmkstart AAAAAAAEPK}
{\bkmkend AAAAAAAEPK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v help\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:help}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::ContextOptions::help}}
\par
{\bkmkstart AAAAAAAEPL}
{\bkmkend AAAAAAAEPL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v last\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:last}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned doctest::ContextOptions::last}}
\par
{\bkmkstart AAAAAAAEPM}
{\bkmkend AAAAAAAEPM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v list_reporters\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:list_reporters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::ContextOptions::list_reporters}}
\par
{\bkmkstart AAAAAAAEPN}
{\bkmkend AAAAAAAEPN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v list_test_cases\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:list_test_cases}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::ContextOptions::list_test_cases}}
\par
{\bkmkstart AAAAAAAEPO}
{\bkmkend AAAAAAAEPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v list_test_suites\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:list_test_suites}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::ContextOptions::list_test_suites}}
\par
{\bkmkstart AAAAAAAEPP}
{\bkmkend AAAAAAAEPP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minimal\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:minimal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::ContextOptions::minimal}}
\par
{\bkmkstart AAAAAAAEPQ}
{\bkmkend AAAAAAAEPQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v no_breaks\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:no_breaks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::ContextOptions::no_breaks}}
\par
{\bkmkstart AAAAAAAEPR}
{\bkmkend AAAAAAAEPR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v no_colors\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:no_colors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::ContextOptions::no_colors}}
\par
{\bkmkstart AAAAAAAEPS}
{\bkmkend AAAAAAAEPS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v no_debug_output\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:no_debug_output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::ContextOptions::no_debug_output}}
\par
{\bkmkstart AAAAAAAEPT}
{\bkmkend AAAAAAAEPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v no_exitcode\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:no_exitcode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::ContextOptions::no_exitcode}}
\par
{\bkmkstart AAAAAAAEPU}
{\bkmkend AAAAAAAEPU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v no_intro\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:no_intro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::ContextOptions::no_intro}}
\par
{\bkmkstart AAAAAAAEPV}
{\bkmkend AAAAAAAEPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v no_line_numbers\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:no_line_numbers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::ContextOptions::no_line_numbers}}
\par
{\bkmkstart AAAAAAAEPW}
{\bkmkend AAAAAAAEPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v no_path_in_filenames\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:no_path_in_filenames}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::ContextOptions::no_path_in_filenames}}
\par
{\bkmkstart AAAAAAAEPX}
{\bkmkend AAAAAAAEPX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v no_run\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:no_run}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::ContextOptions::no_run}}
\par
{\bkmkstart AAAAAAAEPY}
{\bkmkend AAAAAAAEPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v no_skip\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:no_skip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::ContextOptions::no_skip}}
\par
{\bkmkstart AAAAAAAEPZ}
{\bkmkend AAAAAAAEPZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v no_skipped_summary\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:no_skipped_summary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::ContextOptions::no_skipped_summary}}
\par
{\bkmkstart AAAAAAAEQA}
{\bkmkend AAAAAAAEQA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v no_throw\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:no_throw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::ContextOptions::no_throw}}
\par
{\bkmkstart AAAAAAAEQB}
{\bkmkend AAAAAAAEQB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v no_time_in_output\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:no_time_in_output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::ContextOptions::no_time_in_output}}
\par
{\bkmkstart AAAAAAAEQC}
{\bkmkend AAAAAAAEQC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v no_version\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:no_version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::ContextOptions::no_version}}
\par
{\bkmkstart AAAAAAAEQD}
{\bkmkend AAAAAAAEQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v order_by\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:order_by}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b String} doctest::ContextOptions::order_by}}
\par
{\bkmkstart AAAAAAAEQE}
{\bkmkend AAAAAAAEQE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v out\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:out}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b String} doctest::ContextOptions::out}}
\par
{\bkmkstart AAAAAAAEQF}
{\bkmkend AAAAAAAEQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v quiet\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:quiet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::ContextOptions::quiet}}
\par
{\bkmkstart AAAAAAAEQG}
{\bkmkend AAAAAAAEQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rand_seed\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:rand_seed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned doctest::ContextOptions::rand_seed}}
\par
{\bkmkstart AAAAAAAEQH}
{\bkmkend AAAAAAAEQH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subcase_filter_levels\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:subcase_filter_levels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int doctest::ContextOptions::subcase_filter_levels}}
\par
{\bkmkstart AAAAAAAEQI}
{\bkmkend AAAAAAAEQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v success\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:success}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::ContextOptions::success}}
\par
{\bkmkstart AAAAAAAEQJ}
{\bkmkend AAAAAAAEQJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v version\:doctest::ContextOptions}
{\xe \v doctest::ContextOptions\:version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::ContextOptions::version}}
\par
{\bkmkstart AAAAAAAEQK}
{\bkmkend AAAAAAAEQK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Classe doctest::detail::ContextScope< L >\par \pard\plain 
{\tc\tcl2 \v doctest::detail::ContextScope< L >}
{\xe \v doctest::detail::ContextScope< L >}
{\bkmkstart AAAAAAAEYX}
{\bkmkend AAAAAAAEYX}
\par
{
{\f2 #include <doctest.hpp>}}\par
Diagrama de hierarquia da classe doctest::detail::ContextScope< L >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdoctest_1_1detail_1_1_context_scope.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ContextScope} (const L &lambda)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ContextScope} ({\b ContextScope} &&other)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b stringify} ({\b std::ostream} *s) const override\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~ContextScope} () override\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b doctest::IContextScope}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b IContextScope} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~IContextScope} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b stringify} ({\b std::ostream} *) const =0\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros protegidos herdados de {\b doctest::detail::ContextScopeBase}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ContextScopeBase} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ContextScopeBase} ({\b ContextScopeBase} &&other)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b destroy} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b doctest::detail::ContextScopeBase}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b need_to_destroy} \{{\b true}\}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ContextScope\:doctest::detail::ContextScope< L >}
{\xe \v doctest::detail::ContextScope< L >\:ContextScope}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename L > {\b doctest::detail::ContextScope}< L >::ContextScope (const L &  {\i lambda}){\f2 [inline]}, {\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAEYY}
{\bkmkend AAAAAAAEYY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1702 : lambda_(lambda) \{\}\par
}
}
{\xe \v ContextScope\:doctest::detail::ContextScope< L >}
{\xe \v doctest::detail::ContextScope< L >\:ContextScope}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename L > {\b doctest::detail::ContextScope}< L >::ContextScope ({\b ContextScope}< L > &&  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEYZ}
{\bkmkend AAAAAAAEYZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1704 : ContextScopeBase({\cf17 static_cast<}ContextScopeBase&&{\cf17 >}(other)), lambda_(other.lambda_) \{\}\par
}
}
{\xe \v ~ContextScope\:doctest::detail::ContextScope< L >}
{\xe \v doctest::detail::ContextScope< L >\:~ContextScope}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename L > {\b doctest::detail::ContextScope}< L >::~{\b ContextScope} (){\f2 [inline]}, {\f2 [override]}}}
\par
{\bkmkstart AAAAAAAEZA}
{\bkmkend AAAAAAAEZA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1708                                  \{\par
1709             {\cf19 if} (need_to_destroy) \{\par
1710                 destroy();\par
1711             \}\par
1712         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v stringify\:doctest::detail::ContextScope< L >}
{\xe \v doctest::detail::ContextScope< L >\:stringify}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename L > void {\b doctest::detail::ContextScope}< L >::stringify ({\b std::ostream} *  {\i s}) const{\f2 [inline]}, {\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEQV}
{\bkmkend AAAAAAAEQV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b doctest::IContextScope} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEQU \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1706 \{ lambda_(s); \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe doctest::detail::ContextScopeBase\par \pard\plain 
{\tc\tcl2 \v doctest::detail::ContextScopeBase}
{\xe \v doctest::detail::ContextScopeBase}
{\bkmkstart AAAAAAAEZB}
{\bkmkend AAAAAAAEZB}
\par
{
{\f2 #include <doctest.hpp>}}\par
Diagrama de hierarquia da classe doctest::detail::ContextScopeBase:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdoctest_1_1detail_1_1_context_scope_base.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ContextScopeBase} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ContextScopeBase} ({\b ContextScopeBase} &&other)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b destroy} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b need_to_destroy} \{{\b true}\}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b doctest::IContextScope}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b IContextScope} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~IContextScope} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b stringify} ({\b std::ostream} *) const =0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ContextScopeBase\:doctest::detail::ContextScopeBase}
{\xe \v doctest::detail::ContextScopeBase\:ContextScopeBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::detail::ContextScopeBase::ContextScopeBase (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZC}
{\bkmkend AAAAAAAEZC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ContextScopeBase\:doctest::detail::ContextScopeBase}
{\xe \v doctest::detail::ContextScopeBase\:ContextScopeBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::detail::ContextScopeBase::ContextScopeBase ({\b ContextScopeBase} &&  {\i other}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZD}
{\bkmkend AAAAAAAEZD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v destroy\:doctest::detail::ContextScopeBase}
{\xe \v doctest::detail::ContextScopeBase\:destroy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void doctest::detail::ContextScopeBase::destroy (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZE}
{\bkmkend AAAAAAAEZE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v need_to_destroy\:doctest::detail::ContextScopeBase}
{\xe \v doctest::detail::ContextScopeBase\:need_to_destroy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::detail::ContextScopeBase::need_to_destroy \{{\b true}\}{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZF}
{\bkmkend AAAAAAAEZF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Crusier\par \pard\plain 
{\tc\tcl2 \v Crusier}
{\xe \v Crusier}
{\bkmkstart AAAAAAADRG}
{\bkmkend AAAAAAADRG}
\par
{
{\f2 #include <Crusier.hpp>}}\par
Diagrama de hierarquia da classe Crusier:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_crusier.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Crusier} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Crusier} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Crusier} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual unsigned int {\b getInitialHealth} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the initial health attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Troop}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Troop} (const unsigned int {\b health})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new {\b Troop} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Troop} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Troop} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b takeDamage} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Make the troop take damage, decreasing its health. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b isDead} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines if the troop is dead. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPosition} (const {\b Point} initialPosition, const {\b Orientation} orientation)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the positioning of the troop. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\b Point} > {\b getOccupiedPositions} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the ocuppied positions points, in order. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b getHealth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the health attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual unsigned int {\b getInitialHealth} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the initial health attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::map< {\b Point}, std::string > {\b getImages} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the images attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getImageInPoint} (const {\b Point} point) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the image associated in a certain point. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b containsPoint} (const {\b Point} point) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verify if the point is within the troop shape. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::string {\b getTroopName} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the standard crusier name. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros p\'FAblicos est\'E1ticos herdados de {\b Troop}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::string {\b getTroopName} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the standard troop name. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const unsigned int {\b INITIAL_HEALTH} = 3\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b positionHorizontally} (const {\b Point} initialPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Positions the crusier horizontally. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b positionVertically} (const {\b Point} initialPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Positions the crusier vertically. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros protegidos herdados de {\b Troop}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b positionHorizontally} (const {\b Point} initialPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract function with the desire to position the troop horizontally. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b positionVertically} (const {\b Point} initialPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract function with the desire to position the troop vertically. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b buildImagesMap} (const std::string folderPathWithSpriteName)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Associate points where the troop was positioned to it's images paths. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Troop}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b health} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\b Point} > {\b shape}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::map< {\b Point}, std::string > {\b images}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Crusier\:Crusier}
{\xe \v Crusier\:Crusier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Crusier::Crusier ()}}
\par
{\bkmkstart AAAAAAADRH}
{\bkmkend AAAAAAADRH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new crusier with default health values.  \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 16 : Troop(INITIAL_HEALTH) \{\}\par
}
}
{\xe \v ~Crusier\:Crusier}
{\xe \v Crusier\:~Crusier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Crusier::~Crusier (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADRI}
{\bkmkend AAAAAAADRI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Crusier} object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getInitialHealth\:Crusier}
{\xe \v Crusier\:getInitialHealth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Crusier::getInitialHealth () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADRJ}
{\bkmkend AAAAAAADRJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the initial health attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Initial health attribute value. \par
}}}{
Implementa {\b Troop} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 33                                              \{\par
34     {\cf19 return} INITIAL_HEALTH;   \par
35 \}\par
}
}
{\xe \v getTroopName\:Crusier}
{\xe \v Crusier\:getTroopName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Crusier::getTroopName (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADRK}
{\bkmkend AAAAAAADRK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the standard crusier name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A string with the standard crusier name. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12                                 \{\par
13     {\cf19 return} {\cf22 "Crusador"};\par
14 \}\par
}
}
{\xe \v positionHorizontally\:Crusier}
{\xe \v Crusier\:positionHorizontally}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Crusier::positionHorizontally (const {\b Point}  {\i initialPosition}){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADRL}
{\bkmkend AAAAAAADRL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Positions the crusier horizontally. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i initialPosition} \cell }{The point which corresponds to the initial position of the positioning. \cell }
{\row }
}
}{
Reimplementa {\b Troop} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 19                                                               \{\par
20     Troop::positionHorizontally(initialPosition);\par
21     buildImagesMap(CRUSIER_HORIZONTAL_SPRITE_PATH_WITH_PREFIX);\par
22 \par
23     {\cf19 return};\par
24 \}\par
}
}
{\xe \v positionVertically\:Crusier}
{\xe \v Crusier\:positionVertically}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Crusier::positionVertically (const {\b Point}  {\i initialPosition}){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADRM}
{\bkmkend AAAAAAADRM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Positions the crusier vertically. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i initialPosition} \cell }{The point which corresponds to the initial position of the positioning. \cell }
{\row }
}
}{
Reimplementa {\b Troop} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 26                                                             \{\par
27     Troop::positionVertically(initialPosition);\par
28     buildImagesMap(CRUSIER_VERTICAL_SPRITE_PATH_WITH_PREFIX);\par
29 \par
30     {\cf19 return};\par
31 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v INITIAL_HEALTH\:Crusier}
{\xe \v Crusier\:INITIAL_HEALTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned int Crusier::INITIAL_HEALTH = 3{\f2 [static]}}}
\par
{\bkmkstart AAAAAAADRN}
{\bkmkend AAAAAAADRN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Crusier} standard troop health. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/{\b Crusier.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/{\b Crusier.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Views::CrusierDisplay\par \pard\plain 
{\tc\tcl2 \v Views::CrusierDisplay}
{\xe \v Views::CrusierDisplay}
{\bkmkstart AAAAAAAFIW}
{\bkmkend AAAAAAAFIW}
\par
{
{\f2 #include <CrusierDisplay.hpp>}}\par
Diagrama de hierarquia da classe Views::CrusierDisplay:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_views_1_1_crusier_display.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CrusierDisplay} (const unsigned int amount)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the selection to place {\b Crusier} troop. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~CrusierDisplay} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Crusier} Display view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::shared_ptr< {\b Troop} > {\b getTroopInstance} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a {\b Crusier} instantiated object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::string {\b getTroopClassName} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the troop class name. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Views::TroopDisplay}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TroopDisplay} (const unsigned int amount, const std::string troopName, const std::string troopImagePath)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the template of a troop that can be positioned. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~TroopDisplay} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Troop} Display view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkClick} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the troop display was clicked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkMouseOver} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse is over the troop display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAmount} (const unsigned int amount)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the amount of troops that can be placed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b getAmount} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the amount of this troop type that can be placed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b decrementAmount} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrement the amount of available troops that can be placed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b incrementAmount} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increment the amount of available troops that can be placed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTroopName} (const std::string troopName)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the name of the troop that will be displayed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getTroopName} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the troop name. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::string {\b getTroopClassName} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the troop class name. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::shared_ptr< {\b Troop} > {\b getTroopInstance} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a instantiated object of a troop. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTroopImageWidth} (const float {\b width})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width of the full sprite of the troop diplayed. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Views::View}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~View} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b View} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Component} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Component}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the render contract of components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getXPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the X position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getYPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Vector2} {\b getPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::IClickable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkClick} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the troop display was clicked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkMouseOver} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse is over the troop display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setEnabled} (const {\b bool} {\b enabled})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the enabled attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b isEnabled} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the button is enable. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_WIDTH} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_HEIGHT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Vector2} {\b DEFAULT_INITIAL_POSITION} = \{ 0, 0 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros protegidos herdados de {\b Views::TroopDisplay}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b width} = {\b DEFAUT_INITIAL_WIDTH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b height} = {\b DEFAUT_INITIAL_HEIGHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b position} = {\b DEFAULT_INITIAL_POSITION}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::IClickable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b enabled} = {\b true}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v CrusierDisplay\:Views::CrusierDisplay}
{\xe \v Views::CrusierDisplay\:CrusierDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::CrusierDisplay::CrusierDisplay (const unsigned int  {\i amount})}}
\par
{\bkmkstart AAAAAAAFIX}
{\bkmkend AAAAAAAFIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the selection to place {\b Crusier} troop. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i amount} \cell }{is the amount of that troop can be placed. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12                                                              :\par
13     TroopDisplay(amount, Crusier::getTroopName(), CRUSIER_HORIZONTAL_FULL_SPRITE) \{\par
14     setXPosition(0.0);\par
15     setYPosition(0.0);\par
16 \}\par
}
}
{\xe \v ~CrusierDisplay\:Views::CrusierDisplay}
{\xe \v Views::CrusierDisplay\:~CrusierDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::CrusierDisplay::~CrusierDisplay (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFIY}
{\bkmkend AAAAAAAFIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Crusier} Display view. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 18 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getTroopClassName\:Views::CrusierDisplay}
{\xe \v Views::CrusierDisplay\:getTroopClassName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Views::CrusierDisplay::getTroopClassName () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFIZ}
{\bkmkend AAAAAAAFIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the troop class name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The troop class name value. \par
}}}{
Implementa {\b Views::TroopDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFIA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 26                                                        \{\par
27     {\cf19 return} {\cf17 typeid}(Crusier).name();\par
28 \}\par
}
}
{\xe \v getTroopInstance\:Views::CrusierDisplay}
{\xe \v Views::CrusierDisplay\:getTroopInstance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::shared_ptr< {\b Troop} > Views::CrusierDisplay::getTroopInstance () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFJA}
{\bkmkend AAAAAAAFJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a {\b Crusier} instantiated object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Crusier} instance. \par
}}}{
Implementa {\b Views::TroopDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFIC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 22                                                                  \{\par
23     {\cf19 return} std::shared_ptr<Troop>({\cf17 new} Crusier());\par
24 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/{\b CrusierDisplay.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/{\b CrusierDisplay.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura doctest::CurrentTestCaseStats\par \pard\plain 
{\tc\tcl2 \v doctest::CurrentTestCaseStats}
{\xe \v doctest::CurrentTestCaseStats}
{\bkmkstart AAAAAAAEQL}
{\bkmkend AAAAAAAEQL}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b numAssertsCurrentTest}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b numAssertsFailedCurrentTest}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b seconds}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b failure_flags}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b testCaseSuccess}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v failure_flags\:doctest::CurrentTestCaseStats}
{\xe \v doctest::CurrentTestCaseStats\:failure_flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int doctest::CurrentTestCaseStats::failure_flags}}
\par
{\bkmkstart AAAAAAAEQM}
{\bkmkend AAAAAAAEQM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v numAssertsCurrentTest\:doctest::CurrentTestCaseStats}
{\xe \v doctest::CurrentTestCaseStats\:numAssertsCurrentTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int doctest::CurrentTestCaseStats::numAssertsCurrentTest}}
\par
{\bkmkstart AAAAAAAEQN}
{\bkmkend AAAAAAAEQN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v numAssertsFailedCurrentTest\:doctest::CurrentTestCaseStats}
{\xe \v doctest::CurrentTestCaseStats\:numAssertsFailedCurrentTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int doctest::CurrentTestCaseStats::numAssertsFailedCurrentTest}}
\par
{\bkmkstart AAAAAAAEQO}
{\bkmkend AAAAAAAEQO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v seconds\:doctest::CurrentTestCaseStats}
{\xe \v doctest::CurrentTestCaseStats\:seconds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double doctest::CurrentTestCaseStats::seconds}}
\par
{\bkmkstart AAAAAAAEQP}
{\bkmkend AAAAAAAEQP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v testCaseSuccess\:doctest::CurrentTestCaseStats}
{\xe \v doctest::CurrentTestCaseStats\:testCaseSuccess}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::CurrentTestCaseStats::testCaseSuccess}}
\par
{\bkmkstart AAAAAAAEQQ}
{\bkmkend AAAAAAAEQQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe CustomException\par \pard\plain 
{\tc\tcl2 \v CustomException}
{\xe \v CustomException}
{\bkmkstart AAAAAAADRO}
{\bkmkend AAAAAAADRO}
\par
{
{\f2 #include <CustomException.hpp>}}\par
Diagrama de hierarquia da classe CustomException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_custom_exception.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CustomException} (const std::string {\b message})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs new {\b CustomException} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~CustomException} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Custom Exception object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getMessage} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the exception message. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b message} = ""\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v CustomException\:CustomException}
{\xe \v CustomException\:CustomException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CustomException::CustomException (const std::string  {\i message})}}
\par
{\bkmkstart AAAAAAADRP}
{\bkmkend AAAAAAADRP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs new {\b CustomException} object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i message} \cell }{The message associated with the object. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 6                                                         \{\par
7     this->message = message;\par
8 \}\par
}
}
{\xe \v ~CustomException\:CustomException}
{\xe \v CustomException\:~CustomException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CustomException::~CustomException (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADRQ}
{\bkmkend AAAAAAADRQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Custom Exception object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 10 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getMessage\:CustomException}
{\xe \v CustomException\:getMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string CustomException::getMessage () const}}
\par
{\bkmkstart AAAAAAADRR}
{\bkmkend AAAAAAADRR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the exception message. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A string with the value of the message. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14                                             \{\par
15     {\cf19 return} message;\par
16 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v message\:CustomException}
{\xe \v CustomException\:message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string CustomException::message = ""{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADRS}
{\bkmkend AAAAAAADRS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
String of the message associated with the exception. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/exceptions/{\b CustomException.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/exceptions/{\b CustomException.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura doctest::detail::deferred_false< T >\par \pard\plain 
{\tc\tcl2 \v doctest::detail::deferred_false< T >}
{\xe \v doctest::detail::deferred_false< T >}
{\bkmkstart AAAAAAAEZG}
{\bkmkend AAAAAAAEZG}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b bool} {\b value} = {\b false}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v value\:doctest::detail::deferred_false< T >}
{\xe \v doctest::detail::deferred_false< T >\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > const {\b bool} {\b doctest::detail::deferred_false}< T >::value = {\b false}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEZH}
{\bkmkend AAAAAAAEZH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura doctest::detail::enable_if< CONDITION, TYPE >\par \pard\plain 
{\tc\tcl2 \v doctest::detail::enable_if< CONDITION, TYPE >}
{\xe \v doctest::detail::enable_if< CONDITION, TYPE >}
{\bkmkstart AAAAAAAEZI}
{\bkmkend AAAAAAAEZI}
\par
{
{\f2 #include <doctest.hpp>}}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura doctest::detail::enable_if< true, TYPE >\par \pard\plain 
{\tc\tcl2 \v doctest::detail::enable_if< true, TYPE >}
{\xe \v doctest::detail::enable_if< true, TYPE >}
{\bkmkstart AAAAAAAEZJ}
{\bkmkend AAAAAAAEZJ}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef TYPE {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:doctest::detail::enable_if< true, TYPE >}
{\xe \v doctest::detail::enable_if< true, TYPE >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename TYPE > typedef TYPE {\b doctest::detail::enable_if}< {\b true}, TYPE >::type}}
\par
{\bkmkstart AAAAAAAEZK}
{\bkmkend AAAAAAAEZK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Views::EndGameScoreDisplay\par \pard\plain 
{\tc\tcl2 \v Views::EndGameScoreDisplay}
{\xe \v Views::EndGameScoreDisplay}
{\bkmkstart AAAAAAAFJB}
{\bkmkend AAAAAAAFJB}
\par
{
{\f2 #include <EndGameScoreDisplay.hpp>}}\par
Diagrama de hierarquia da classe Views::EndGameScoreDisplay:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_views_1_1_end_game_score_display.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EndGameScoreDisplay} (const {\b Score} score)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the End Game {\b Score} based on a player score. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~EndGameScoreDisplay} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b EndGameScoreDisplay} view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Score} {\b getPlayerScore} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the player score attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Views::View}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~View} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b View} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Component} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Component}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the render contract of components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getXPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the X position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getYPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Vector2} {\b getPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position attribute. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_WIDTH} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_HEIGHT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Vector2} {\b DEFAULT_INITIAL_POSITION} = \{ 0, 0 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b width} = {\b DEFAUT_INITIAL_WIDTH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b height} = {\b DEFAUT_INITIAL_HEIGHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b position} = {\b DEFAULT_INITIAL_POSITION}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v EndGameScoreDisplay\:Views::EndGameScoreDisplay}
{\xe \v Views::EndGameScoreDisplay\:EndGameScoreDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::EndGameScoreDisplay::EndGameScoreDisplay (const {\b Score}  {\i score})}}
\par
{\bkmkstart AAAAAAAFJC}
{\bkmkend AAAAAAAFJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the End Game {\b Score} based on a player score. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17                                                                \{\par
18     {\cf17 const} std::string LABEL_NAVIOS_DESTRUIDOS = {\cf22 "Navios Destruidos:"};\par
19     {\cf17 const} std::string LABEL_NAVIOS_RESTANTES = {\cf22 "Navios Restantes:"};\par
20     {\cf17 const} std::string LABEL_NAVIOS_PERDIDOS = {\cf22 "Navios Perdidos:"};\par
21     {\cf17 const} std::string LABEL_PRECISAO = {\cf22 "Precisao:"};\par
22 \par
23     setPlayerScore(score);\par
24 \par
25     labels.push_back(std::shared_ptr<Components::TextIcon>({\cf17 new} Components::TextIcon(Icons::EXPLOSION, ScoreFormatter::buildLabelWithValue(LABEL_NAVIOS_DESTRUIDOS, getPlayerScore().getDestroyedTroops()))));\par
26     labels.push_back(std::shared_ptr<Components::TextIcon>({\cf17 new} Components::TextIcon(Icons::HEART, ScoreFormatter::buildLabelWithValue(LABEL_NAVIOS_RESTANTES, getPlayerScore().getRemainingTroops()))));\par
27     labels.push_back(std::shared_ptr<Components::TextIcon>({\cf17 new} Components::TextIcon(Icons::SKULL, ScoreFormatter::buildLabelWithValue(LABEL_NAVIOS_PERDIDOS, getPlayerScore().getLostTroops()))));\par
28     labels.push_back(std::shared_ptr<Components::TextIcon>({\cf17 new} Components::TextIcon(Icons::AIM, ScoreFormatter::buildProportionLabel(LABEL_PRECISAO, getPlayerScore().getHitShoots(), getPlayerScore().getTotalAmountShoots()))));\par
29     defineLabelsSizes();\par
30 \par
31     setXPosition(0.0);\par
32     setYPosition(0.0);\par
33 \par
34     findWidth();\par
35     findHeight();\par
36 \}\par
}
}
{\xe \v ~EndGameScoreDisplay\:Views::EndGameScoreDisplay}
{\xe \v Views::EndGameScoreDisplay\:~EndGameScoreDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::EndGameScoreDisplay::~EndGameScoreDisplay (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFJD}
{\bkmkend AAAAAAAFJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b EndGameScoreDisplay} view. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 38 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v findHeight\:Views::EndGameScoreDisplay}
{\xe \v Views::EndGameScoreDisplay\:findHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::EndGameScoreDisplay::findHeight (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFJE}
{\bkmkend AAAAAAAFJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 69                                           \{\par
70     {\cf19 if}(labels.size() <= 0) \{\par
71         {\cf19 return};\par
72     \}\par
73 \par
74     height = abs(labels[labels.size()-1]->getYPosition() - labels[0]->getYPosition() + labels[labels.size()-1]->getHeight());\par
75     {\cf19 return};\par
76 \}\par
}
}
{\xe \v findWidth\:Views::EndGameScoreDisplay}
{\xe \v Views::EndGameScoreDisplay\:findWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::EndGameScoreDisplay::findWidth (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFJF}
{\bkmkend AAAAAAAFJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 56                                          \{\par
57     {\cf18 float} highestWidth = 0.0;\par
58 \par
59     {\cf19 for}({\cf17 auto}&& label : labels) \{\par
60         {\cf19 if}(highestWidth < label->getWidth()) \{\par
61             highestWidth = label->getWidth();\par
62         \}\par
63     \}\par
64 \par
65     width = highestWidth;\par
66     {\cf19 return};\par
67 \}\par
}
}
{\xe \v getPlayerScore\:Views::EndGameScoreDisplay}
{\xe \v Views::EndGameScoreDisplay\:getPlayerScore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Score} Views::EndGameScoreDisplay::getPlayerScore () const}}
\par
{\bkmkstart AAAAAAAFJG}
{\bkmkend AAAAAAAFJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the player score attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Player} score attribute copy. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 118                                                      \{\par
119     {\cf19 return} playerScore;\par
120 \}\par
}
}
{\xe \v render\:Views::EndGameScoreDisplay}
{\xe \v Views::EndGameScoreDisplay\:render}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::EndGameScoreDisplay::render (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEHX}
{\bkmkend AAAAAAAEHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }}\par
{
Implementa {\b Components::Component} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEED \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 40                                       \{\par
41     {\cf19 for}({\cf17 auto}&& label : labels) \{\par
42         label->render();\par
43     \}\par
44     \par
45     {\cf19 return};\par
46 \}\par
}
}
{\xe \v updateInnerComponentsPositions\:Views::EndGameScoreDisplay}
{\xe \v Views::EndGameScoreDisplay\:updateInnerComponentsPositions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::EndGameScoreDisplay::updateInnerComponentsPositions (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFJH}
{\bkmkend AAAAAAAFJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 50                                                               \{\par
51     poisitionLabels();\par
52 \par
53     {\cf19 return};\par
54 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/endGame/{\b EndGameScoreDisplay.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/endGame/{\b EndGameScoreDisplay.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Screens::EndGameScreen\par \pard\plain 
{\tc\tcl2 \v Screens::EndGameScreen}
{\xe \v Screens::EndGameScreen}
{\bkmkstart AAAAAAAFFT}
{\bkmkend AAAAAAAFFT}
\par
{
{\f2 #include <EndGameScreen.hpp>}}\par
Diagrama de hierarquia da classe Screens::EndGameScreen:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_screens_1_1_end_game_screen.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EndGameScreen} (const {\b Player} &player1, const {\b Player} &player2)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create End Game {\b Screen}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~EndGameScreen} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the End Game {\b Screen}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Player} {\b getPlayer1} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the player 1 data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Player} {\b getPlayer2} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the player 2 data. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Screens::Screen}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Screen} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Screen} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the basic setup to render a screen with raylib. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b isActive} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the window is active. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b renderScreen} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the window in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b handleEvents} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handle any event that can be trigged in the interface. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b renderScreen} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the window in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b handleEvents} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handle any event that can be trigged in the interface. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros p\'FAblicos est\'E1ticos herdados de {\b Screens::Screen}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static float {\b getDisplayHeight} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the display window height. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static float {\b getDisplayWidth} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the display width. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Screens::Screen}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b isWindowActive} = {\b true}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v EndGameScreen\:Screens::EndGameScreen}
{\xe \v Screens::EndGameScreen\:EndGameScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Screens::EndGameScreen::EndGameScreen (const {\b Player} &  {\i player1}, const {\b Player} &  {\i player2})}}
\par
{\bkmkstart AAAAAAAFFU}
{\bkmkend AAAAAAAFFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create End Game {\b Screen}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i player1} \cell }{is the player 1 data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i player2} \cell }{is the player 2 data. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 25                                                                                 :\par
26     backgroundImage({\cf17 new} Components::Image(Backgrounds::MAIN)),\par
27     player1Name({\cf17 new} Components::Text()),\par
28     player1Status({\cf17 new} Components::Text()),\par
29     player1ScoreDisplay({\cf17 new} Views::EndGameScoreDisplay(*player1.getScore())),\par
30     player2Name({\cf17 new} Components::Text()),\par
31     player2Status({\cf17 new} Components::Text()),\par
32     player2ScoreDisplay({\cf17 new} Views::EndGameScoreDisplay(*player2.getScore())),\par
33     buttonVoltar({\cf17 new} Components::ButtonText) \{\par
34     setPlayer1(player1);\par
35     setPlayer2(player2);\par
36 \par
37     buildBackgroundImage();\par
38     buildPlayer1SectionTitle();\par
39     buildPlayer1ScoreDisplay();\par
40 \par
41     buildDivisionLine();\par
42 \par
43     buildPlayer2SectionTitle();\par
44     buildPlayer2ScoreDisplay();\par
45 \par
46     buildButtonVoltar();\par
47 \}\par
}
}
{\xe \v ~EndGameScreen\:Screens::EndGameScreen}
{\xe \v Screens::EndGameScreen\:~EndGameScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Screens::EndGameScreen::~EndGameScreen (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFFV}
{\bkmkend AAAAAAAFFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the End Game {\b Screen}. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 49 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getPlayer1\:Screens::EndGameScreen}
{\xe \v Screens::EndGameScreen\:getPlayer1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Player} Screens::EndGameScreen::getPlayer1 () const}}
\par
{\bkmkstart AAAAAAAFFW}
{\bkmkend AAAAAAAFFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the player 1 data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Player} 1 data copy. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 240                                               \{\par
241     {\cf19 return} player1;\par
242 \}\par
}
}
{\xe \v getPlayer2\:Screens::EndGameScreen}
{\xe \v Screens::EndGameScreen\:getPlayer2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Player} Screens::EndGameScreen::getPlayer2 () const}}
\par
{\bkmkstart AAAAAAAFFX}
{\bkmkend AAAAAAAFFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the player 2 data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Player} 2 data copy. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 249                                               \{\par
250     {\cf19 return} player2;\par
251 \}\par
}
}
{\xe \v handleEvents\:Screens::EndGameScreen}
{\xe \v Screens::EndGameScreen\:handleEvents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Screens::EndGameScreen::handleEvents (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFFY}
{\bkmkend AAAAAAAFFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handle any event that can be trigged in the interface. }}\par
{
Implementa {\b Screens::Screen} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFFZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 66                                         \{\par
67     {\cf19 if}(buttonVoltar->checkClick()) \{\par
68         std::shared_ptr<Screen> titleScreen({\cf17 new} TitleScreen());\par
69         ScreenManager::getScreenManager()->loadScreen(titleScreen);\par
70     \}\par
71     {\cf19 return};\par
72 \}\par
}
}
{\xe \v renderScreen\:Screens::EndGameScreen}
{\xe \v Screens::EndGameScreen\:renderScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Screens::EndGameScreen::renderScreen (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFGA}
{\bkmkend AAAAAAAFGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the window in the interface. }}\par
{
Implementa {\b Screens::Screen} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFGB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 51                                         \{\par
52     renderBackground();\par
53     \par
54     renderPlayer1SectionTitle();\par
55     player1ScoreDisplay->render();\par
56     \par
57     renderDivisionLine();\par
58 \par
59     renderPlayer2SectionTitle();\par
60     player2ScoreDisplay->render();\par
61 \par
62     buttonVoltar->render();\par
63     {\cf19 return};\par
64 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/endGame/{\b EndGameScreen.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/endGame/{\b EndGameScreen.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Classe doctest::detail::ExceptionTranslator< T >\par \pard\plain 
{\tc\tcl2 \v doctest::detail::ExceptionTranslator< T >}
{\xe \v doctest::detail::ExceptionTranslator< T >}
{\bkmkstart AAAAAAAEZL}
{\bkmkend AAAAAAAEZL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCLINT destructor of virtual class. }}\par
{
{\f2 #include <doctest.hpp>}}\par
Diagrama de hierarquia da classe doctest::detail::ExceptionTranslator< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdoctest_1_1detail_1_1_exception_translator.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExceptionTranslator} ({\b String}(*translateFunction)(T))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b translate} ({\b String} &res) const override\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b doctest::detail::IExceptionTranslator}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b IExceptionTranslator} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~IExceptionTranslator} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b translate} ({\b String} &) const =0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<typename T>\par
class doctest::detail::ExceptionTranslator< T >\par
}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCLINT destructor of virtual class. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ExceptionTranslator\:doctest::detail::ExceptionTranslator< T >}
{\xe \v doctest::detail::ExceptionTranslator< T >\:ExceptionTranslator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b doctest::detail::ExceptionTranslator}< T >::ExceptionTranslator ({\b String}(*)(T)  {\i translateFunction}){\f2 [inline]}, {\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAEZM}
{\bkmkend AAAAAAAEZM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1612                 : m_translateFunction(translateFunction) \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v translate\:doctest::detail::ExceptionTranslator< T >}
{\xe \v doctest::detail::ExceptionTranslator< T >\:translate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b bool} {\b doctest::detail::ExceptionTranslator}< T >::translate ({\b String} &  {\i res}) const{\f2 [inline]}, {\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEZN}
{\bkmkend AAAAAAAEZN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b doctest::detail::IExceptionTranslator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEZO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1614                                                    \{\par
1615 {\cf21 #ifndef DOCTEST_CONFIG_NO_EXCEPTIONS}\par
1616             {\cf19 try} \{\par
1617                 {\cf19 throw}; {\cf20 // lgtm [cpp/rethrow-no-exception]}\par
1618                 {\cf20 // cppcheck-suppress catchExceptionByValue}\par
1619             \} {\cf19 catch}(T ex) \{                    {\cf20 // NOLINT}\par
1620                 res = m_translateFunction(ex); \par
1621                 {\cf19 return} {\cf17 true};\par
1622             \} {\cf19 catch}(...) \{\}         \par
1623 {\cf21 #endif                              }{\cf20 // DOCTEST_CONFIG_NO_EXCEPTIONS}\par
1624             {\cf17 static_cast<}{\cf18 void}{\cf17 >}(res); {\cf20 // to silence -Wunused-parameter}\par
1625             {\cf19 return} {\cf17 false};\par
1626         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura doctest::detail::Expression_lhs< L >\par \pard\plain 
{\tc\tcl2 \v doctest::detail::Expression_lhs< L >}
{\xe \v doctest::detail::Expression_lhs< L >}
{\bkmkstart AAAAAAAEZP}
{\bkmkend AAAAAAAEZP}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Expression_lhs} (L &&in, {\b assertType::Enum} at)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_NOINLINE} {\b operator Result} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b operator L} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
L {\b lhs}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b assertType::Enum} {\b m_at}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Expression_lhs\:doctest::detail::Expression_lhs< L >}
{\xe \v doctest::detail::Expression_lhs< L >\:Expression_lhs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename L > {\b doctest::detail::Expression_lhs}< L >::Expression_lhs (L &&  {\i in}, {\b assertType::Enum}  {\i at}){\f2 [inline]}, {\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAEZQ}
{\bkmkend AAAAAAAEZQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1323                 : lhs(doctest::detail::forward<L>(in))\par
1324                 , m_at(at) \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator L\:doctest::detail::Expression_lhs< L >}
{\xe \v doctest::detail::Expression_lhs< L >\:operator L}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename L > {\b doctest::detail::Expression_lhs}< L >::operator L () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEZR}
{\bkmkend AAAAAAAEZR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1340 \{ {\cf19 return} lhs; \}\par
}
}
{\xe \v operator Result\:doctest::detail::Expression_lhs< L >}
{\xe \v doctest::detail::Expression_lhs< L >\:operator Result}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename L > {\b DOCTEST_NOINLINE} {\b doctest::detail::Expression_lhs}< L >::operator {\b Result} (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEZS}
{\bkmkend AAAAAAAEZS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCLINT bitwise operator in conditional\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1326                                            \{\par
1327 {\cf20 // this is needed only for MSVC 2015}\par
1328 DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH(4800) {\cf20 // 'int': forcing value to bool}\par
1329             bool res = static_cast<{\cf18 bool}>(lhs);\par
1330 DOCTEST_MSVC_SUPPRESS_WARNING_POP\par
1331             if(m_at & assertType::is_false) \par
1332                 res = !res;\par
1333 \par
1334             if(!res || getContextOptions()->success)\par
1335                 return Result(res, toString(lhs));\par
1336             return Result(res);\par
1337         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v lhs\:doctest::detail::Expression_lhs< L >}
{\xe \v doctest::detail::Expression_lhs< L >\:lhs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename L > L {\b doctest::detail::Expression_lhs}< L >::lhs}}
\par
{\bkmkstart AAAAAAAEZT}
{\bkmkend AAAAAAAEZT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_at\:doctest::detail::Expression_lhs< L >}
{\xe \v doctest::detail::Expression_lhs< L >\:m_at}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename L > {\b assertType::Enum} {\b doctest::detail::Expression_lhs}< L >::m_at}}
\par
{\bkmkstart AAAAAAAEZU}
{\bkmkend AAAAAAAEZU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura doctest::detail::ExpressionDecomposer\par \pard\plain 
{\tc\tcl2 \v doctest::detail::ExpressionDecomposer}
{\xe \v doctest::detail::ExpressionDecomposer}
{\bkmkstart AAAAAAAEZV}
{\bkmkend AAAAAAAEZV}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExpressionDecomposer} ({\b assertType::Enum} at)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename L > {\b Expression_lhs}< const L > {\b operator<<} (const L &&operand)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename L , typename {\b enable_if}<!{\b doctest::detail::is_rvalue_reference}< L >::value, void >::type *  = nullptr> {\b Expression_lhs}< const L & > {\b operator<<} (const L &operand)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b assertType::Enum} {\b m_at}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ExpressionDecomposer\:doctest::detail::ExpressionDecomposer}
{\xe \v doctest::detail::ExpressionDecomposer\:ExpressionDecomposer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::detail::ExpressionDecomposer::ExpressionDecomposer ({\b assertType::Enum}  {\i at})}}
\par
{\bkmkstart AAAAAAAEZW}
{\bkmkend AAAAAAAEZW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator<<\:doctest::detail::ExpressionDecomposer}
{\xe \v doctest::detail::ExpressionDecomposer\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename L > {\b Expression_lhs}< const L > doctest::detail::ExpressionDecomposer::operator<< (const L &&  {\i operand}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEZX}
{\bkmkend AAAAAAAEZX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1397                                                               \{\par
1398             {\cf19 return} Expression_lhs<const L>(doctest::detail::forward<const L>(operand), m_at);\par
1399         \}\par
}
}
{\xe \v operator<<\:doctest::detail::ExpressionDecomposer}
{\xe \v doctest::detail::ExpressionDecomposer\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename L , typename {\b enable_if}<!{\b doctest::detail::is_rvalue_reference}< L >::value, void >::type *  = nullptr> {\b Expression_lhs}< const L & > doctest::detail::ExpressionDecomposer::operator<< (const L &  {\i operand}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEZY}
{\bkmkend AAAAAAAEZY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1402                                                               \{\par
1403             {\cf19 return} Expression_lhs<const L&>(operand, m_at);\par
1404         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v m_at\:doctest::detail::ExpressionDecomposer}
{\xe \v doctest::detail::ExpressionDecomposer\:m_at}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b assertType::Enum} doctest::detail::ExpressionDecomposer::m_at}}
\par
{\bkmkstart AAAAAAAEZZ}
{\bkmkend AAAAAAAEZZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe FileHandler\par \pard\plain 
{\tc\tcl2 \v FileHandler}
{\xe \v FileHandler}
{\bkmkstart AAAAAAADRT}
{\bkmkend AAAAAAADRT}
\par
{
{\f2 #include <FileHandler.hpp>}}\par
Diagrama de hierarquia da classe FileHandler:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_file_handler.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FileHandler} (const std::string name, const char mode)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new {\b FileHandler} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~FileHandler} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the File Handler object. Closes the file. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::fstream {\b file}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char {\b PLACEHOLDERCHAR} = '$'\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v FileHandler\:FileHandler}
{\xe \v FileHandler\:FileHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FileHandler::FileHandler (const std::string  {\i name}, const char  {\i mode})}}
\par
{\bkmkstart AAAAAAADRU}
{\bkmkend AAAAAAADRU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new {\b FileHandler} object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs given a name and interacting mode. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{The name of the file to be interacted with. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mode} \cell }{The mode of reading the file, available modes are reading ('r'), writing ('w'), and appending ('a'). \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 10                                                               \{\par
11     {\cf19 if}(mode == {\cf23 'r'}) \{\par
12         file.open(name, std::fstream::in);\par
13 \par
14         {\cf19 if}(!file) \{ \par
15             {\cf19 throw} std::invalid_argument({\cf22 "File sent for reading does not exist"});\par
16         \}\par
17     \}\par
18     {\cf19 else} {\cf19 if}(mode == {\cf23 'w'}) \{\par
19         file.open(name, std::fstream::out);\par
20     \}\par
21     {\cf19 else} {\cf19 if}(mode == {\cf23 'a'}) \{\par
22         file.open(name, std::fstream::in | std::fstream::app);\par
23     \}\par
24     {\cf19 else} \{\par
25         {\cf19 throw} std::invalid_argument({\cf22 "Invalid mode selected"}); \par
26     \}\par
27 \}\par
}
}
{\xe \v ~FileHandler\:FileHandler}
{\xe \v FileHandler\:~FileHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FileHandler::~FileHandler ()}}
\par
{\bkmkstart AAAAAAADRV}
{\bkmkend AAAAAAADRV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the File Handler object. Closes the file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 29                           \{\par
30     file.close();\par
31 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v file\:FileHandler}
{\xe \v FileHandler\:file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::fstream FileHandler::file{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADRW}
{\bkmkend AAAAAAADRW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PLACEHOLDERCHAR\:FileHandler}
{\xe \v FileHandler\:PLACEHOLDERCHAR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char FileHandler::PLACEHOLDERCHAR = '$'{\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADRX}
{\bkmkend AAAAAAADRX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The char placeholder for future replacement on strings to bypass reading strings for a stream with spaces, and the file stream which will be used. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/fileHandler/{\b FileHandler.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/fileHandler/{\b FileHandler.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura doctest::detail::filldata< T >\par \pard\plain 
{\tc\tcl2 \v doctest::detail::filldata< T >}
{\xe \v doctest::detail::filldata< T >}
{\bkmkstart AAAAAAAFAA}
{\bkmkend AAAAAAAFAA}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b fill} ({\b std::ostream} *stream, const T &in)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v fill\:doctest::detail::filldata< T >}
{\xe \v doctest::detail::filldata< T >\:fill}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > static void {\b doctest::detail::filldata}< T >::fill ({\b std::ostream} *  {\i stream}, const T &  {\i in}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFAB}
{\bkmkend AAAAAAAFAB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 910                                                           \{\par
911           *stream << in;\par
912         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura doctest::detail::filldata< const char[N]>\par \pard\plain 
{\tc\tcl2 \v doctest::detail::filldata< const char[N]>}
{\xe \v doctest::detail::filldata< const char[N]>}
{\bkmkstart AAAAAAAFAC}
{\bkmkend AAAAAAAFAC}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b fill} ({\b std::ostream} *stream, const char(&in)[N])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v fill\:doctest::detail::filldata< const char[N]>}
{\xe \v doctest::detail::filldata< const char[N]>\:fill}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<unsigned long N> static void {\b doctest::detail::filldata}< const char[N]>::fill ({\b std::ostream} *  {\i stream}, const char(&)  {\i in}[N]){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFAD}
{\bkmkend AAAAAAAFAD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 929                                                                  \{\par
930             *stream << in;\par
931         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura doctest::detail::filldata< T[N]>\par \pard\plain 
{\tc\tcl2 \v doctest::detail::filldata< T[N]>}
{\xe \v doctest::detail::filldata< T[N]>}
{\bkmkstart AAAAAAAFAE}
{\bkmkend AAAAAAAFAE}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b fill} ({\b std::ostream} *stream, const T(&in)[N])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v fill\:doctest::detail::filldata< T[N]>}
{\xe \v doctest::detail::filldata< T[N]>\:fill}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T , unsigned long N> static void {\b doctest::detail::filldata}< T[N]>::fill ({\b std::ostream} *  {\i stream}, const T(&)  {\i in}[N]){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFAF}
{\bkmkend AAAAAAAFAF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 918                                                                \{\par
919             {\cf19 for} ({\cf18 unsigned} {\cf18 long} i = 0; i < N; i++) \{\par
920                 *stream << in[i];\par
921             \}\par
922         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura Font\par \pard\plain 
{\tc\tcl2 \v Font}
{\xe \v Font}
{\bkmkstart AAAAAAADRY}
{\bkmkend AAAAAAADRY}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b baseSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b glyphCount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b glyphPadding}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Texture2D} {\b texture}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Rectangle} * {\b recs}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GlyphInfo} * {\b glyphs}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v baseSize\:Font}
{\xe \v Font\:baseSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Font::baseSize}}
\par
{\bkmkstart AAAAAAADRZ}
{\bkmkend AAAAAAADRZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v glyphCount\:Font}
{\xe \v Font\:glyphCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Font::glyphCount}}
\par
{\bkmkstart AAAAAAADSA}
{\bkmkend AAAAAAADSA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v glyphPadding\:Font}
{\xe \v Font\:glyphPadding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Font::glyphPadding}}
\par
{\bkmkstart AAAAAAADSB}
{\bkmkend AAAAAAADSB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v glyphs\:Font}
{\xe \v Font\:glyphs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GlyphInfo}* Font::glyphs}}
\par
{\bkmkstart AAAAAAADSC}
{\bkmkend AAAAAAADSC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v recs\:Font}
{\xe \v Font\:recs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Rectangle}* Font::recs}}
\par
{\bkmkstart AAAAAAADSD}
{\bkmkend AAAAAAADSD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v texture\:Font}
{\xe \v Font\:texture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Texture2D} Font::texture}}
\par
{\bkmkstart AAAAAAADSE}
{\bkmkend AAAAAAADSE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Views::GameBoardDisplay\par \pard\plain 
{\tc\tcl2 \v Views::GameBoardDisplay}
{\xe \v Views::GameBoardDisplay}
{\bkmkstart AAAAAAAFJI}
{\bkmkend AAAAAAAFJI}
\par
{
{\f2 #include <GameBoardDisplay.hpp>}}\par
Diagrama de hierarquia da classe Views::GameBoardDisplay:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_views_1_1_game_board_display.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GameBoardDisplay} (const unsigned int {\b amountHorizontalCells}, const unsigned int {\b amountVerticalCells})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the Game {\b Board} of a player with a new logic board. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GameBoardDisplay} (std::shared_ptr< {\b Board} > {\b logicBoard})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the Game {\b Board} of a player based on a existing logic board. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~GameBoardDisplay} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Game {\b Board} view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b enable} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable all click detection on the board. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b disable} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disable all click detection on the board. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b revealTroops} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set all positions to show their troops if they have one. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b hideTroops} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set all positions to hide their troops it they have one. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::vector< std::shared_ptr< {\b Views::GamePositionDisplay} > > > {\b getCellsAsGameCells} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the board cells as game cells objects. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Views::BoardDisplay}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BoardDisplay} (const unsigned int {\b amountHorizontalCells}, const unsigned int {\b amountVerticalCells})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the basic template for the troop display with a new logic position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BoardDisplay} (std::shared_ptr< {\b Board} > {\b logicBoard})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the basic template for the troop display with a new logic position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~BoardDisplay} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Board} Display view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b getAmountHorizontalCells} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the amount of horizontal cells the board has. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b getAmountVerticalCells} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the amount of vertical cells the board has. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::vector< std::shared_ptr< {\b PositionDisplay} > > > {\b getCells} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the board cells objects. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Views::View}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~View} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b View} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Component} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Component}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the render contract of components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getXPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the X position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getYPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Vector2} {\b getPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position attribute. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b initializeCells} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiate the board cells components. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros protegidos herdados de {\b Views::BoardDisplay}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b initializeCells} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiate the board cells components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b buildBackground} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Build background style. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_WIDTH} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_HEIGHT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Vector2} {\b DEFAULT_INITIAL_POSITION} = \{ 0, 0 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Views::BoardDisplay}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::unique_ptr< {\b Components::Image} > {\b background} = nullptr\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::vector< std::shared_ptr< {\b PositionDisplay} > > > {\b cells}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b amountHorizontalCells} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b amountVerticalCells} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::shared_ptr< {\b Board} > {\b logicBoard} = nullptr\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b width} = {\b DEFAUT_INITIAL_WIDTH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b height} = {\b DEFAUT_INITIAL_HEIGHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b position} = {\b DEFAULT_INITIAL_POSITION}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v GameBoardDisplay\:Views::GameBoardDisplay}
{\xe \v Views::GameBoardDisplay\:GameBoardDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::GameBoardDisplay::GameBoardDisplay (const unsigned int  {\i amountHorizontalCells}, const unsigned int  {\i amountVerticalCells})}}
\par
{\bkmkstart AAAAAAAFJJ}
{\bkmkend AAAAAAAFJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the Game {\b Board} of a player with a new logic board. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i amountHorizontalCells} \cell }{is the amount of horizontal cells that the board has. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i amountVerticalCells} \cell }{is the amount of vertical cells that the board has. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14                                                                                                                         :\par
15     BoardDisplay(amountHorizontalCells, amountVerticalCells) \{\par
16     buildComponent();\par
17 \}\par
}
}
{\xe \v GameBoardDisplay\:Views::GameBoardDisplay}
{\xe \v Views::GameBoardDisplay\:GameBoardDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::GameBoardDisplay::GameBoardDisplay (std::shared_ptr< {\b Board} >  {\i logicBoard})}}
\par
{\bkmkstart AAAAAAAFJK}
{\bkmkend AAAAAAAFJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the Game {\b Board} of a player based on a existing logic board. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i logicBoard} \cell }{is logic part of the board. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 20                                                                        :\par
21     BoardDisplay(logicBoard) \{\par
22     buildComponent();\par
23 \}\par
}
}
{\xe \v ~GameBoardDisplay\:Views::GameBoardDisplay}
{\xe \v Views::GameBoardDisplay\:~GameBoardDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::GameBoardDisplay::~GameBoardDisplay (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFJL}
{\bkmkend AAAAAAAFJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Game {\b Board} view. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 25 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v disable\:Views::GameBoardDisplay}
{\xe \v Views::GameBoardDisplay\:disable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::GameBoardDisplay::disable ()}}
\par
{\bkmkstart AAAAAAAFJM}
{\bkmkend AAAAAAAFJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disable all click detection on the board. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 62                                     \{\par
63     {\cf19 for}({\cf18 unsigned} {\cf18 int} i = 0; i < cells.size(); i++) \{\par
64         {\cf19 for}({\cf18 unsigned} {\cf18 int} j = 0; j < cells[i].size(); j++) \{\par
65             cells[i][j]->setEnabled({\cf17 false});\par
66         \}\par
67     \}\par
68     {\cf19 return};\par
69 \}\par
}
}
{\xe \v enable\:Views::GameBoardDisplay}
{\xe \v Views::GameBoardDisplay\:enable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::GameBoardDisplay::enable ()}}
\par
{\bkmkstart AAAAAAAFJN}
{\bkmkend AAAAAAAFJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable all click detection on the board. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 53                                    \{\par
54     {\cf19 for}({\cf18 unsigned} {\cf18 int} i = 0; i < cells.size(); i++) \{\par
55         {\cf19 for}({\cf18 unsigned} {\cf18 int} j = 0; j < cells[i].size(); j++) \{\par
56             cells[i][j]->setEnabled({\cf17 true});\par
57         \}\par
58     \}\par
59     {\cf19 return};\par
60 \}\par
}
}
{\xe \v getCellsAsGameCells\:Views::GameBoardDisplay}
{\xe \v Views::GameBoardDisplay\:getCellsAsGameCells}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< std::vector< std::shared_ptr< {\b Views::GamePositionDisplay} > > > Views::GameBoardDisplay::getCellsAsGameCells () const}}
\par
{\bkmkstart AAAAAAAFJO}
{\bkmkend AAAAAAAFJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the board cells as game cells objects. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Matrix} of the board cells as game cells. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 98                                                                                                                \{\par
99     std::vector<std::vector<std::shared_ptr<GamePositionDisplay>>> positioningCells;\par
100 \par
101     {\cf19 for}({\cf18 unsigned} {\cf18 int} i = 0; i < cells.size(); i++) \{\par
102         positioningCells.push_back(std::vector<std::shared_ptr<GamePositionDisplay>>());\par
103         {\cf19 for}({\cf18 unsigned} {\cf18 int} j = 0; j < cells[i].size(); j++) \{\par
104             positioningCells[i].push_back(std::dynamic_pointer_cast<GamePositionDisplay>(cells[i][j]));\par
105         \}\par
106     \}\par
107 \par
108     {\cf19 return} positioningCells;\par
109 \}\par
}
}
{\xe \v hideTroops\:Views::GameBoardDisplay}
{\xe \v Views::GameBoardDisplay\:hideTroops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::GameBoardDisplay::hideTroops ()}}
\par
{\bkmkstart AAAAAAAFJP}
{\bkmkend AAAAAAAFJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set all positions to hide their troops it they have one. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 83                                        \{\par
84     std::vector<std::shared_ptr<Troop>> troops = logicBoard->getTroops();\par
85 \par
86     {\cf19 for}({\cf17 auto}&& troop : troops) \{\par
87         {\cf19 for}(Point position : troop->getOccupiedPositions()) \{\par
88             std::shared_ptr<GamePositionDisplay> troopPosition = std::dynamic_pointer_cast<GamePositionDisplay>(cells[position.getX()][position.getY()]);\par
89             troopPosition->setRevealTroop({\cf17 false});\par
90         \}\par
91     \}\par
92 \par
93     {\cf19 return};\par
94 \}\par
}
}
{\xe \v initializeCells\:Views::GameBoardDisplay}
{\xe \v Views::GameBoardDisplay\:initializeCells}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::GameBoardDisplay::initializeCells (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFIO}
{\bkmkend AAAAAAAFIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiate the board cells components. }}\par
{
Implementa {\b Views::BoardDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFIN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 41                                             \{\par
42     {\cf19 for}({\cf18 unsigned} {\cf18 int} i = 0; i < getAmountVerticalCells(); i++) \{\par
43         cells.push_back(std::vector<std::shared_ptr<PositionDisplay>>());\par
44 \par
45         {\cf19 for}({\cf18 unsigned} {\cf18 int} j = 0; j < getAmountHorizontalCells(); j++) \{\par
46             cells[i].push_back(std::shared_ptr<PositionDisplay>({\cf17 new} GamePositionDisplay(logicBoard->getPosition(i, j))));\par
47         \}\par
48     \}\par
49 \par
50     {\cf19 return};\par
51 \}\par
}
}
{\xe \v revealTroops\:Views::GameBoardDisplay}
{\xe \v Views::GameBoardDisplay\:revealTroops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::GameBoardDisplay::revealTroops ()}}
\par
{\bkmkstart AAAAAAAFJQ}
{\bkmkend AAAAAAAFJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set all positions to show their troops if they have one. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 71                                          \{\par
72     std::vector<std::vector<std::shared_ptr<GamePositionDisplay>>> positions = getCellsAsGameCells();\par
73 \par
74     {\cf19 for}({\cf18 unsigned} {\cf18 int} i = 0; i < positions.size(); i++) \{\par
75         {\cf19 for}({\cf18 unsigned} {\cf18 int} j = 0; j < positions[i].size(); j++) \{\par
76             positions[i][j]->setRevealTroop({\cf17 true});\par
77         \}\par
78     \}\par
79 \par
80     {\cf19 return};\par
81 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/{\b GameBoardDisplay.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/game/{\b GameBoardDisplay.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe GameManager\par \pard\plain 
{\tc\tcl2 \v GameManager}
{\xe \v GameManager}
{\bkmkstart AAAAAAADSF}
{\bkmkend AAAAAAADSF}
\par
{
{\f2 #include <GameManager.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GameManager} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~GameManager} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Game Manager object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b startGame} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the game with player positioning, then loads proper screens and begins the game. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b endGame} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ends the game, getting eachs player's stats. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GameParameters} {\b getGameParameters} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current game parameters. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::shared_ptr< {\b GameManager} > {\b getInstance} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the instance of the current game. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v GameManager\:GameManager}
{\xe \v GameManager\:GameManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GameManager::GameManager ()}}
\par
{\bkmkstart AAAAAAADSG}
{\bkmkend AAAAAAADSG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the game manager and initializes the player score.  \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21                          \{\par
22     initializeMatch();\par
23 \}\par
}
}
{\xe \v ~GameManager\:GameManager}
{\xe \v GameManager\:~GameManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GameManager::~GameManager (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADSH}
{\bkmkend AAAAAAADSH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Game Manager object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 25 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v endGame\:GameManager}
{\xe \v GameManager\:endGame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GameManager::endGame ()}}
\par
{\bkmkstart AAAAAAADSI}
{\bkmkend AAAAAAADSI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ends the game, getting eachs player's stats. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 67                           \{\par
68     registerScores();\par
69 \par
70     std::shared_ptr<Screens::Screen> endGameScreen({\cf17 new} Screens::EndGameScreen(*match->getPlayer1(), *match->getPlayer2()));\par
71     Screens::ScreenManager::getScreenManager()->loadScreen(endGameScreen);\par
72 \par
73     resetGameManager();\par
74     initializeMatch();\par
75 \par
76     {\cf19 return};\par
77 \}\par
}
}
{\xe \v getGameParameters\:GameManager}
{\xe \v GameManager\:getGameParameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GameParameters} GameManager::getGameParameters () const}}
\par
{\bkmkstart AAAAAAADSJ}
{\bkmkend AAAAAAADSJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current game parameters. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The value of the current game parameters. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 99                                                     \{\par
100     {\cf19 return} gameParameters;\par
101 \}\par
}
}
{\xe \v getInstance\:GameManager}
{\xe \v GameManager\:getInstance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::shared_ptr< {\b GameManager} > GameManager::getInstance (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADSK}
{\bkmkend AAAAAAADSK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the instance of the current game. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A pointer referencing the gameManager instance. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 103                                                     \{\par
104     {\cf19 if}(instance == {\cf17 nullptr}) \{\par
105         instance = std::shared_ptr<GameManager>({\cf17 new} GameManager());\par
106     \}\par
107 \par
108     {\cf19 return} instance;\par
109 \}\par
}
}
{\xe \v startGame\:GameManager}
{\xe \v GameManager\:startGame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GameManager::startGame ()}}
\par
{\bkmkstart AAAAAAADSL}
{\bkmkend AAAAAAADSL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the game with player positioning, then loads proper screens and begins the game. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 27                             \{\par
28     {\cf19 if}(!player1HasPositionedTroops) \{\par
29         startPlayerPositioningTurn(match->getPlayer1());\par
30         player1HasPositionedTroops = {\cf17 true};\par
31         {\cf19 return};\par
32     \}\par
33 \par
34     {\cf19 if}(!player2HasPositionedTroops) \{\par
35         startPlayerPositioningTurn(match->getPlayer2());\par
36         player2HasPositionedTroops = {\cf17 true};\par
37         {\cf19 return};\par
38     \}\par
39 \par
40     std::shared_ptr<Screens::Screen> gameScreen({\cf17 new} Screens::GameScreen(match));\par
41     Screens::ScreenManager::getScreenManager()->loadScreen(gameScreen);\par
42 \par
43     {\cf19 return};\par
44 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/game/{\b GameManager.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/game/{\b GameManager.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe GameParameters\par \pard\plain 
{\tc\tcl2 \v GameParameters}
{\xe \v GameParameters}
{\bkmkstart AAAAAAADSM}
{\bkmkend AAAAAAADSM}
\par
{
{\f2 #include <GameParameters.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GameParameters} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~GameParameters} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Game Parameters object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAmountSubmarineTroops} (const int amountSubmarineTroops)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the new amount of submarine troops. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getAmountSubmarineTroops} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the amount of submarine troops. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAmountCrusierTroops} (const int amountCrusierTroops)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the new amount of crusier troops. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getAmountCrusierTroops} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the amount of crusier troops. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAmountBattleshipTroops} (const int amountBattleshipTroops)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the new amount of battleship troops. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getAmountBattleshipTroops} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the amount of battleship troops. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBoardAmountHorizontalCells} (const int boardAmountHorizontalCells)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the number of horizontal cells on the board. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getBoardAmountHorizontalCells} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number of horizontal cells on the board. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBoardAmountVerticalCells} (const int boardAmountVerticalCells)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the number of vertical cells on the board. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getBoardAmountVerticalCells} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number of vertical cells on the board. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getTotalAmountOfTroops} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the total amount of troops a player can have. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v GameParameters\:GameParameters}
{\xe \v GameParameters\:GameParameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GameParameters::GameParameters ()}}
\par
{\bkmkstart AAAAAAADSN}
{\bkmkend AAAAAAADSN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs gameParameters, nothing to set here.  \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 8 \{\}\par
}
}
{\xe \v ~GameParameters\:GameParameters}
{\xe \v GameParameters\:~GameParameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GameParameters::~GameParameters (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADSO}
{\bkmkend AAAAAAADSO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Game Parameters object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 9 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getAmountBattleshipTroops\:GameParameters}
{\xe \v GameParameters\:getAmountBattleshipTroops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int GameParameters::getAmountBattleshipTroops () const}}
\par
{\bkmkstart AAAAAAADSP}
{\bkmkend AAAAAAADSP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the amount of battleship troops. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The value of the amount of battleship troops. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 39                                                     \{\par
40     {\cf19 return} amountBattleshipTroops;\par
41 \}\par
}
}
{\xe \v getAmountCrusierTroops\:GameParameters}
{\xe \v GameParameters\:getAmountCrusierTroops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int GameParameters::getAmountCrusierTroops () const}}
\par
{\bkmkstart AAAAAAADSQ}
{\bkmkend AAAAAAADSQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the amount of crusier troops. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The value of the amount of crusier troops. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 29                                                  \{\par
30     {\cf19 return} amountCrusierTroops;\par
31 \}\par
}
}
{\xe \v getAmountSubmarineTroops\:GameParameters}
{\xe \v GameParameters\:getAmountSubmarineTroops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int GameParameters::getAmountSubmarineTroops () const}}
\par
{\bkmkstart AAAAAAADSR}
{\bkmkend AAAAAAADSR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the amount of submarine troops. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The value of the amount of submarine troops. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 19                                                    \{\par
20     {\cf19 return} amountSubmarineTroops;\par
21 \}\par
}
}
{\xe \v getBoardAmountHorizontalCells\:GameParameters}
{\xe \v GameParameters\:getBoardAmountHorizontalCells}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int GameParameters::getBoardAmountHorizontalCells () const}}
\par
{\bkmkstart AAAAAAADSS}
{\bkmkend AAAAAAADSS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number of horizontal cells on the board. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
int The value of the number of horizontal cells on the board. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 49                                                         \{\par
50     {\cf19 return} boardAmountHorizontalCells;\par
51 \}\par
}
}
{\xe \v getBoardAmountVerticalCells\:GameParameters}
{\xe \v GameParameters\:getBoardAmountVerticalCells}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int GameParameters::getBoardAmountVerticalCells () const}}
\par
{\bkmkstart AAAAAAADST}
{\bkmkend AAAAAAADST}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number of vertical cells on the board. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
int The value of the number of vertical cells on the board. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 59                                                       \{\par
60     {\cf19 return} boardAmountVerticalCells;\par
61 \}\par
}
}
{\xe \v getTotalAmountOfTroops\:GameParameters}
{\xe \v GameParameters\:getTotalAmountOfTroops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int GameParameters::getTotalAmountOfTroops () const}}
\par
{\bkmkstart AAAAAAADSU}
{\bkmkend AAAAAAADSU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the total amount of troops a player can have. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
int that is the total amount of troops a player can have. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 63                                                  \{\par
64     {\cf19 return} getAmountBattleshipTroops() + getAmountCrusierTroops() + getAmountSubmarineTroops();\par
65 \}\par
}
}
{\xe \v setAmountBattleshipTroops\:GameParameters}
{\xe \v GameParameters\:setAmountBattleshipTroops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GameParameters::setAmountBattleshipTroops (const int  {\i amountBattleshipTroops})}}
\par
{\bkmkstart AAAAAAADSV}
{\bkmkend AAAAAAADSV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the new amount of battleship troops. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i amountSubmarineTroops} \cell }{The new amount of battleship troops to be used. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 33                                                                                \{\par
34     {\cf19 if}(amountBattleshipTroops < 0) {\cf19 throw} std::invalid_argument({\cf22 "Value cannot be negative"});\par
35     this->amountBattleshipTroops = amountBattleshipTroops;\par
36     {\cf19 return};\par
37 \}\par
}
}
{\xe \v setAmountCrusierTroops\:GameParameters}
{\xe \v GameParameters\:setAmountCrusierTroops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GameParameters::setAmountCrusierTroops (const int  {\i amountCrusierTroops})}}
\par
{\bkmkstart AAAAAAADSW}
{\bkmkend AAAAAAADSW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the new amount of crusier troops. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i amountSubmarineTroops} \cell }{The new amount of crusier troops to be used. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 23                                                                          \{\par
24     {\cf19 if}(amountCrusierTroops < 0) {\cf19 throw} std::invalid_argument({\cf22 "Value cannot be negative"});\par
25     this->amountCrusierTroops = amountCrusierTroops;\par
26     {\cf19 return};\par
27 \}\par
}
}
{\xe \v setAmountSubmarineTroops\:GameParameters}
{\xe \v GameParameters\:setAmountSubmarineTroops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GameParameters::setAmountSubmarineTroops (const int  {\i amountSubmarineTroops})}}
\par
{\bkmkstart AAAAAAADSX}
{\bkmkend AAAAAAADSX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the new amount of submarine troops. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i amountSubmarineTroops} \cell }{The new amount of submarine troops to be used. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 13                                                                              \{\par
14     {\cf19 if}(amountSubmarineTroops < 0) {\cf19 throw} std::invalid_argument({\cf22 "Value cannot be negative"});\par
15     this->amountSubmarineTroops = amountSubmarineTroops;\par
16     {\cf19 return};\par
17 \}\par
}
}
{\xe \v setBoardAmountHorizontalCells\:GameParameters}
{\xe \v GameParameters\:setBoardAmountHorizontalCells}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GameParameters::setBoardAmountHorizontalCells (const int  {\i boardAmountHorizontalCells})}}
\par
{\bkmkstart AAAAAAADSY}
{\bkmkend AAAAAAADSY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the number of horizontal cells on the board. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i boardAmountHorizontalCells} \cell }{The new value of horizontal cells on the board. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 43                                                                                        \{\par
44     {\cf19 if}(boardAmountHorizontalCells < 0) {\cf19 throw} std::invalid_argument({\cf22 "Value cannot be negative"}); \par
45     this->boardAmountHorizontalCells = boardAmountHorizontalCells;\par
46     {\cf19 return};\par
47 \}\par
}
}
{\xe \v setBoardAmountVerticalCells\:GameParameters}
{\xe \v GameParameters\:setBoardAmountVerticalCells}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GameParameters::setBoardAmountVerticalCells (const int  {\i boardAmountVerticalCells})}}
\par
{\bkmkstart AAAAAAADSZ}
{\bkmkend AAAAAAADSZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the number of vertical cells on the board. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i boardAmountHorizontalCells} \cell }{The new value of vertical cells on the board. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 53                                                                                    \{\par
54     {\cf19 if}(boardAmountVerticalCells < 0) {\cf19 throw} std::invalid_argument({\cf22 "Value cannot be negative"}); \par
55     this->boardAmountVerticalCells = boardAmountVerticalCells;\par
56     {\cf19 return};\par
57 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/game/{\b GameParameters.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/game/{\b GameParameters.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Views::GamePositionDisplay\par \pard\plain 
{\tc\tcl2 \v Views::GamePositionDisplay}
{\xe \v Views::GamePositionDisplay}
{\bkmkstart AAAAAAAFJR}
{\bkmkend AAAAAAAFJR}
\par
{
{\f2 #include <GamePositionDisplay.hpp>}}\par
Diagrama de hierarquia da classe Views::GamePositionDisplay:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_views_1_1_game_position_display.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GamePositionDisplay} (const {\b Point} boardCoordinates)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the Game {\b Position} that builds a board of a player with a new logic position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GamePositionDisplay} (std::shared_ptr< {\b Position} > {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the Game {\b Position} that builds a board of a player based on a logic position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~GamePositionDisplay} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Game {\b Position} view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkClick} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the game position was clicked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRevealTroop} (const {\b bool} option)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets if the position should show the troop. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b shouldRevealTroop} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if should display the troop position in the game board. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Views::PositionDisplay}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PositionDisplay} (const {\b Point} boardCoordinates)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the basic template for the troop display with a new logic position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PositionDisplay} (std::shared_ptr< {\b Position} > {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the basic template for the troop display with a new logic position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~PositionDisplay} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Position} Display view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkClick} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the position was clicked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkMouseOver} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse is over the position display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Point} {\b getCoordinates} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the coodinates the position is place. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTroop} (const std::shared_ptr< {\b Troop} > troop)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the troop that is in the position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::shared_ptr< {\b Troop} > {\b getTroop} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the troop in the position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTroopImage} (const std::string path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the troop image that will be displayed on this position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTroopImage} (const std::shared_ptr< {\b Troop} > troop)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the troop image that will be displayed on this position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b containsTroop} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the position contains a troop. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Views::View}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~View} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b View} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Component} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Component}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the render contract of components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getXPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the X position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getYPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Vector2} {\b getPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::IClickable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkClick} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the troop display was clicked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkMouseOver} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse is over the troop display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setEnabled} (const {\b bool} {\b enabled})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the enabled attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b isEnabled} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the button is enable. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros protegidos herdados de {\b Views::PositionDisplay}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getDefaultImageSize} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get image within the position size value. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_WIDTH} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_HEIGHT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Vector2} {\b DEFAULT_INITIAL_POSITION} = \{ 0, 0 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Views::PositionDisplay}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::unique_ptr< {\b Components::Image} > {\b troopImage} = nullptr\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Rectangle} {\b background}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Color} {\b backgroundColor} = {\b DEFAULT_BALCK}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Color} {\b hoveredBackgroundColor} = {\b DEFAULT_BALCK}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::shared_ptr< {\b Position} > {\b position} = nullptr\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b width} = {\b DEFAUT_INITIAL_WIDTH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b height} = {\b DEFAUT_INITIAL_HEIGHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b position} = {\b DEFAULT_INITIAL_POSITION}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::IClickable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b enabled} = {\b true}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v GamePositionDisplay\:Views::GamePositionDisplay}
{\xe \v Views::GamePositionDisplay\:GamePositionDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::GamePositionDisplay::GamePositionDisplay (const {\b Point}  {\i boardCoordinates})}}
\par
{\bkmkstart AAAAAAAFJS}
{\bkmkend AAAAAAAFJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the Game {\b Position} that builds a board of a player with a new logic position. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i boardCoordinates} \cell }{is the coordinates that the position is placed. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 13                                                                           :\par
14     PositionDisplay(boardCoordinates),\par
15     hitImage({\cf17 new} Components::Image()) \{\par
16     buildComponent();\par
17 \}\par
}
}
{\xe \v GamePositionDisplay\:Views::GamePositionDisplay}
{\xe \v Views::GamePositionDisplay\:GamePositionDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::GamePositionDisplay::GamePositionDisplay (std::shared_ptr< {\b Position} >  {\i position})}}
\par
{\bkmkstart AAAAAAAFJT}
{\bkmkend AAAAAAAFJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the Game {\b Position} that builds a board of a player based on a logic position. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i position} \cell }{is the logic position that will base the display. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 19                                                                               :\par
20     PositionDisplay(position),\par
21     hitImage({\cf17 new} Components::Image()) \{\par
22     buildComponent();\par
23 \}\par
}
}
{\xe \v ~GamePositionDisplay\:Views::GamePositionDisplay}
{\xe \v Views::GamePositionDisplay\:~GamePositionDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::GamePositionDisplay::~GamePositionDisplay (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFJU}
{\bkmkend AAAAAAAFJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Game {\b Position} view. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 25 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v checkClick\:Views::GamePositionDisplay}
{\xe \v Views::GamePositionDisplay\:checkClick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Views::GamePositionDisplay::checkClick (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEIT}
{\bkmkend AAAAAAAEIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the game position was clicked. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Boolean that indicates if the game position was clicked. \par
}}}{
Reimplementa {\b Views::PositionDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 93                                           \{\par
94     {\cf19 if}(!wasClicked && PositionDisplay::checkClick()) \{\par
95         wasClicked = {\cf17 true};\par
96         {\cf19 return} {\cf17 true};\par
97     \}\par
98 \par
99     {\cf19 return} {\cf17 false};\par
100 \}\par
}
}
{\xe \v render\:Views::GamePositionDisplay}
{\xe \v Views::GamePositionDisplay\:render}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::GamePositionDisplay::render (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEHY}
{\bkmkend AAAAAAAEHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }}\par
{
Implementa {\b Views::PositionDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 41                                       \{\par
42     {\cf19 if}(containsTroop()) \{\par
43         handleTroopRender();\par
44     \}\par
45     {\cf19 else} \{\par
46         handleDefaultRender();\par
47     \}\par
48     \par
49     {\cf19 return};\par
50 \}\par
}
}
{\xe \v setRevealTroop\:Views::GamePositionDisplay}
{\xe \v Views::GamePositionDisplay\:setRevealTroop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::GamePositionDisplay::setRevealTroop (const {\b bool}  {\i option})}}
\par
{\bkmkstart AAAAAAAFJV}
{\bkmkend AAAAAAAFJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets if the position should show the troop. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i option} \cell }{is the flag to show or not the troop. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 135                                                                \{\par
136     this->revealTroop = option;\par
137     {\cf19 return};\par
138 \}\par
}
}
{\xe \v shouldRevealTroop\:Views::GamePositionDisplay}
{\xe \v Views::GamePositionDisplay\:shouldRevealTroop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Views::GamePositionDisplay::shouldRevealTroop () const}}
\par
{\bkmkstart AAAAAAAFJW}
{\bkmkend AAAAAAAFJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if should display the troop position in the game board. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Reveal troop attribute value. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 140                                                        \{\par
141     {\cf19 return} revealTroop;\par
142 \}\par
}
}
{\xe \v updateInnerComponentsPositions\:Views::GamePositionDisplay}
{\xe \v Views::GamePositionDisplay\:updateInnerComponentsPositions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::GamePositionDisplay::updateInnerComponentsPositions (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFJX}
{\bkmkend AAAAAAAFJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }}\par
{
Reimplementa {\b Views::PositionDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFJY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 104                                                               \{\par
105     PositionDisplay::updateInnerComponentsPositions();\par
106     positionHitImage();\par
107 \par
108     {\cf19 return};\par
109 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/{\b GamePositionDisplay.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/game/{\b GamePositionDisplay.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Views::GameScoreDisplay\par \pard\plain 
{\tc\tcl2 \v Views::GameScoreDisplay}
{\xe \v Views::GameScoreDisplay}
{\bkmkstart AAAAAAAFJZ}
{\bkmkend AAAAAAAFJZ}
\par
{
{\f2 #include <GameScoreDisplay.hpp>}}\par
Diagrama de hierarquia da classe Views::GameScoreDisplay:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_views_1_1_game_score_display.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GameScoreDisplay} (const std::shared_ptr< {\b Score} > score)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the Game {\b Score} of a player based on a logic score. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~GameScoreDisplay} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Game {\b Score} view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateLabels} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update score labels values. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Score} {\b getPlayerScore} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the player score attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Views::View}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~View} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b View} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Component} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Component}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the render contract of components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getXPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the X position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getYPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Vector2} {\b getPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position attribute. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_WIDTH} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_HEIGHT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Vector2} {\b DEFAULT_INITIAL_POSITION} = \{ 0, 0 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b width} = {\b DEFAUT_INITIAL_WIDTH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b height} = {\b DEFAUT_INITIAL_HEIGHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b position} = {\b DEFAULT_INITIAL_POSITION}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v GameScoreDisplay\:Views::GameScoreDisplay}
{\xe \v Views::GameScoreDisplay\:GameScoreDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::GameScoreDisplay::GameScoreDisplay (const std::shared_ptr< {\b Score} >  {\i score})}}
\par
{\bkmkstart AAAAAAAFKA}
{\bkmkend AAAAAAAFKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the Game {\b Score} of a player based on a logic score. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i score} \cell }{is the logic score that will base the display. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 23                                                                         \{\par
24     setPlayerScore(score);\par
25 \par
26     labels.push_back(std::shared_ptr<Components::TextIcon>({\cf17 new} Components::TextIcon(Icons::EXPLOSION, ScoreFormatter::buildLabelWithValue(LABEL_NAVIOS_DESTRUIDOS, getPlayerScore().getDestroyedTroops()))));\par
27     labels.push_back(std::shared_ptr<Components::TextIcon>({\cf17 new} Components::TextIcon(Icons::HEART, ScoreFormatter::buildLabelWithValue(LABEL_NAVIOS_RESTANTES, getPlayerScore().getRemainingTroops()))));\par
28     labels.push_back(std::shared_ptr<Components::TextIcon>({\cf17 new} Components::TextIcon(Icons::SKULL, ScoreFormatter::buildLabelWithValue(LABEL_NAVIOS_PERDIDOS, getPlayerScore().getLostTroops()))));\par
29     defineLabelsSizes();\par
30 \par
31     setXPosition(0.0);\par
32     setYPosition(0.0);\par
33 \par
34     findWidth();\par
35     findHeight();\par
36 \}\par
}
}
{\xe \v ~GameScoreDisplay\:Views::GameScoreDisplay}
{\xe \v Views::GameScoreDisplay\:~GameScoreDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::GameScoreDisplay::~GameScoreDisplay (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFKB}
{\bkmkend AAAAAAAFKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Game {\b Score} view. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 38 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v findHeight\:Views::GameScoreDisplay}
{\xe \v Views::GameScoreDisplay\:findHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::GameScoreDisplay::findHeight (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFKC}
{\bkmkend AAAAAAAFKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 69                                        \{\par
70     {\cf19 if}(labels.size() <= 0) \{\par
71         {\cf19 return};\par
72     \}\par
73 \par
74     height = abs(labels[labels.size()-1]->getYPosition() - labels[0]->getYPosition() + labels[labels.size()-1]->getHeight());\par
75     {\cf19 return};\par
76 \}\par
}
}
{\xe \v findWidth\:Views::GameScoreDisplay}
{\xe \v Views::GameScoreDisplay\:findWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::GameScoreDisplay::findWidth (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFKD}
{\bkmkend AAAAAAAFKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 56                                       \{\par
57     {\cf18 float} highestWidth = 0.0;\par
58 \par
59     {\cf19 for}({\cf17 auto}&& label : labels) \{\par
60         {\cf19 if}(highestWidth < label->getWidth()) \{\par
61             highestWidth = label->getWidth();\par
62         \}\par
63     \}\par
64 \par
65     width = highestWidth;\par
66     {\cf19 return};\par
67 \}\par
}
}
{\xe \v getPlayerScore\:Views::GameScoreDisplay}
{\xe \v Views::GameScoreDisplay\:getPlayerScore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Score} Views::GameScoreDisplay::getPlayerScore () const}}
\par
{\bkmkstart AAAAAAAFKE}
{\bkmkend AAAAAAAFKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the player score attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Player} score attribute copy. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 127                                                   \{\par
128     {\cf19 return} *playerScore;\par
129 \}\par
}
}
{\xe \v render\:Views::GameScoreDisplay}
{\xe \v Views::GameScoreDisplay\:render}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::GameScoreDisplay::render (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEHZ}
{\bkmkend AAAAAAAEHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }}\par
{
Implementa {\b Components::Component} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEED \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 40                                    \{\par
41     {\cf19 for}({\cf17 auto}&& label : labels) \{\par
42         label->render();\par
43     \}\par
44     \par
45     {\cf19 return};\par
46 \}\par
}
}
{\xe \v updateInnerComponentsPositions\:Views::GameScoreDisplay}
{\xe \v Views::GameScoreDisplay\:updateInnerComponentsPositions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::GameScoreDisplay::updateInnerComponentsPositions (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFKF}
{\bkmkend AAAAAAAFKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 50                                                            \{\par
51     poisitionLabels();\par
52 \par
53     {\cf19 return};\par
54 \}\par
}
}
{\xe \v updateLabels\:Views::GameScoreDisplay}
{\xe \v Views::GameScoreDisplay\:updateLabels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::GameScoreDisplay::updateLabels ()}}
\par
{\bkmkstart AAAAAAAFKG}
{\bkmkend AAAAAAAFKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update score labels values. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 110                                          \{\par
111     labels[0]->setText(ScoreFormatter::buildLabelWithValue(LABEL_NAVIOS_DESTRUIDOS, getPlayerScore().getDestroyedTroops()));\par
112     labels[1]->setText(ScoreFormatter::buildLabelWithValue(LABEL_NAVIOS_RESTANTES, getPlayerScore().getRemainingTroops()));\par
113     labels[2]->setText(ScoreFormatter::buildLabelWithValue(LABEL_NAVIOS_PERDIDOS, getPlayerScore().getLostTroops()));\par
114 \par
115     {\cf19 return};\par
116 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/{\b GameScoreDisplay.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/game/{\b GameScoreDisplay.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Screens::GameScreen\par \pard\plain 
{\tc\tcl2 \v Screens::GameScreen}
{\xe \v Screens::GameScreen}
{\bkmkstart AAAAAAAFGC}
{\bkmkend AAAAAAAFGC}
\par
{
{\f2 #include <GameScreen.hpp>}}\par
Diagrama de hierarquia da classe Screens::GameScreen:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_screens_1_1_game_screen.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GameScreen} (std::shared_ptr< {\b Match} > match)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create Game {\b Screen}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~GameScreen} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Game {\b Screen}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Match} {\b getActualMatch} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the actual match attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Screens::Screen}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Screen} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Screen} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the basic setup to render a screen with raylib. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b isActive} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the window is active. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b renderScreen} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the window in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b handleEvents} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handle any event that can be trigged in the interface. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b renderScreen} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the window in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b handleEvents} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handle any event that can be trigged in the interface. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros p\'FAblicos est\'E1ticos herdados de {\b Screens::Screen}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static float {\b getDisplayHeight} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the display window height. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static float {\b getDisplayWidth} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the display width. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Screens::Screen}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b isWindowActive} = {\b true}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v GameScreen\:Screens::GameScreen}
{\xe \v Screens::GameScreen\:GameScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Screens::GameScreen::GameScreen (std::shared_ptr< {\b Match} >  {\i match})}}
\par
{\bkmkstart AAAAAAAFGD}
{\bkmkend AAAAAAAFGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create Game {\b Screen}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i match} \cell }{is the actual game match data. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 24                                                         :\par
25     player1Name({\cf17 new} Components::Text(match->getPlayer1()->getName())),\par
26     player1Board({\cf17 new} Views::GameBoardDisplay(match->getPlayer1()->getBoard())),\par
27     player1RevealTroopsButton({\cf17 new} Components::ButtonTextIcon(Icons::EYE, BUTTON_TEXT_ICON_LABEL)),\par
28     player1ScoreDisplay({\cf17 new} Views::GameScoreDisplay(match->getPlayer1()->getScore())),\par
29     \par
30     player2Name({\cf17 new} Components::Text(match->getPlayer2()->getName())),\par
31     player2Board({\cf17 new} Views::GameBoardDisplay(match->getPlayer2()->getBoard())),\par
32     player2RevealTroopsButton({\cf17 new} Components::ButtonTextIcon(Icons::EYE, BUTTON_TEXT_ICON_LABEL)),\par
33     player2ScoreDisplay({\cf17 new} Views::GameScoreDisplay(match->getPlayer2()->getScore())) \{\par
34     setActualMatch(match);\par
35 \par
36     buildBackground();\par
37 \par
38     buildPlayer1Name();\par
39     buildPlayer1Board();\par
40     buildPlayer1RevealTroopsButton();\par
41     buildPlayer1ScoreDisplay();\par
42         \par
43     buildDivisionLine();\par
44         \par
45     buildPlayer2Name();\par
46     buildPlayer2Board();\par
47     buildPlayer2RevealTroopsButton();\par
48     buildPlayer2ScoreDisplay();\par
49 \par
50     startPlayer1Turn();\par
51 \}\par
}
}
{\xe \v ~GameScreen\:Screens::GameScreen}
{\xe \v Screens::GameScreen\:~GameScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Screens::GameScreen::~GameScreen (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFGE}
{\bkmkend AAAAAAAFGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Game {\b Screen}. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 53 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getActualMatch\:Screens::GameScreen}
{\xe \v Screens::GameScreen\:getActualMatch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Match} Screens::GameScreen::getActualMatch () const}}
\par
{\bkmkstart AAAAAAAFGF}
{\bkmkend AAAAAAAFGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the actual match attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Actual match attribute copy. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 368                                               \{\par
369     {\cf19 return} *match;\par
370 \}\par
}
}
{\xe \v handleEvents\:Screens::GameScreen}
{\xe \v Screens::GameScreen\:handleEvents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Screens::GameScreen::handleEvents (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFGG}
{\bkmkend AAAAAAAFGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handle any event that can be trigged in the interface. }}\par
{
Implementa {\b Screens::Screen} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFFZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 71                                      \{\par
72     {\cf19 if}(match->isPlayer1Turn()) \{\par
73         verifyPlayerBoardClick(player2Board);\par
74         verifyPlayerRevealTroopsClick(player1RevealTroopsButton, player1Board);\par
75     \}\par
76     {\cf19 else} \{\par
77         verifyPlayerBoardClick(player1Board);\par
78         verifyPlayerRevealTroopsClick(player2RevealTroopsButton, player2Board);\par
79     \}\par
80 \par
81     {\cf19 return};\par
82 \}\par
}
}
{\xe \v renderScreen\:Screens::GameScreen}
{\xe \v Screens::GameScreen\:renderScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Screens::GameScreen::renderScreen (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFGH}
{\bkmkend AAAAAAAFGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the window in the interface. }}\par
{
Implementa {\b Screens::Screen} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFGB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 55                                      \{\par
56     renderBackground();\par
57 \par
58     player1Name->render();\par
59     player1RevealTroopsButton->render();\par
60     player1Board->render();\par
61     player1ScoreDisplay->render();\par
62     \par
63     renderDivisionLine();\par
64     \par
65     player2Name->render();\par
66     player2RevealTroopsButton->render();\par
67     player2Board->render();\par
68     player2ScoreDisplay->render();\par
69 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/{\b GameScreen.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/game/{\b GameScreen.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura GlyphInfo\par \pard\plain 
{\tc\tcl2 \v GlyphInfo}
{\xe \v GlyphInfo}
{\bkmkstart AAAAAAADTA}
{\bkmkend AAAAAAADTA}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b value}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b offsetX}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b offsetY}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b advanceX}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Image} {\b image}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v advanceX\:GlyphInfo}
{\xe \v GlyphInfo\:advanceX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int GlyphInfo::advanceX}}
\par
{\bkmkstart AAAAAAADTB}
{\bkmkend AAAAAAADTB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v image\:GlyphInfo}
{\xe \v GlyphInfo\:image}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Image} GlyphInfo::image}}
\par
{\bkmkstart AAAAAAADTC}
{\bkmkend AAAAAAADTC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v offsetX\:GlyphInfo}
{\xe \v GlyphInfo\:offsetX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int GlyphInfo::offsetX}}
\par
{\bkmkstart AAAAAAADTD}
{\bkmkend AAAAAAADTD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v offsetY\:GlyphInfo}
{\xe \v GlyphInfo\:offsetY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int GlyphInfo::offsetY}}
\par
{\bkmkstart AAAAAAADTE}
{\bkmkend AAAAAAADTE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v value\:GlyphInfo}
{\xe \v GlyphInfo\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int GlyphInfo::value}}
\par
{\bkmkstart AAAAAAADTF}
{\bkmkend AAAAAAADTF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura GuiStyleProp\par \pard\plain 
{\tc\tcl2 \v GuiStyleProp}
{\xe \v GuiStyleProp}
{\bkmkstart AAAAAAADTG}
{\bkmkend AAAAAAADTG}
\par
{
{\f2 #include <raygui.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short {\b controlId}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short {\b propertyId}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b propertyValue}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v controlId\:GuiStyleProp}
{\xe \v GuiStyleProp\:controlId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short GuiStyleProp::controlId}}
\par
{\bkmkstart AAAAAAADTH}
{\bkmkend AAAAAAADTH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v propertyId\:GuiStyleProp}
{\xe \v GuiStyleProp\:propertyId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short GuiStyleProp::propertyId}}
\par
{\bkmkstart AAAAAAADTI}
{\bkmkend AAAAAAADTI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v propertyValue\:GuiStyleProp}
{\xe \v GuiStyleProp\:propertyValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int GuiStyleProp::propertyValue}}
\par
{\bkmkstart AAAAAAADTJ}
{\bkmkend AAAAAAADTJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raygui.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/libs/{\b raygui.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura GuiTextBoxState\par \pard\plain 
{\tc\tcl2 \v GuiTextBoxState}
{\xe \v GuiTextBoxState}
{\bkmkstart AAAAAAADTK}
{\bkmkend AAAAAAADTK}
\par
{
{\f2 #include <gui_textbox_extended.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cursor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b start}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b index}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b select}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v cursor\:GuiTextBoxState}
{\xe \v GuiTextBoxState\:cursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int GuiTextBoxState::cursor}}
\par
{\bkmkstart AAAAAAADTL}
{\bkmkend AAAAAAADTL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v index\:GuiTextBoxState}
{\xe \v GuiTextBoxState\:index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int GuiTextBoxState::index}}
\par
{\bkmkstart AAAAAAADTM}
{\bkmkend AAAAAAADTM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v select\:GuiTextBoxState}
{\xe \v GuiTextBoxState\:select}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int GuiTextBoxState::select}}
\par
{\bkmkstart AAAAAAADTN}
{\bkmkend AAAAAAADTN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v start\:GuiTextBoxState}
{\xe \v GuiTextBoxState\:start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int GuiTextBoxState::start}}
\par
{\bkmkstart AAAAAAADTO}
{\bkmkend AAAAAAADTO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b gui_textbox_extended.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Components::IClickable\par \pard\plain 
{\tc\tcl2 \v Components::IClickable}
{\xe \v Components::IClickable}
{\bkmkstart AAAAAAAEIS}
{\bkmkend AAAAAAAEIS}
\par
{
{\f2 #include <IClickable.hpp>}}\par
Diagrama de hierarquia da classe Components::IClickable:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_components_1_1_i_clickable.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkClick} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the troop display was clicked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkMouseOver} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse is over the troop display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setEnabled} (const {\b bool} {\b enabled})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the enabled attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b isEnabled} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the button is enable. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b enabled} = {\b true}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v checkClick\:Components::IClickable}
{\xe \v Components::IClickable\:checkClick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b bool} Components::IClickable::checkClick (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAEDX}
{\bkmkend AAAAAAAEDX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the troop display was clicked. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Boolean that indicates if the troop display was clicked. \par
}}}{
Implementado por {\b Components::Button} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEDW \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::GamePositionDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::TroopDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIU \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Views::PositionDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v checkMouseOver\:Components::IClickable}
{\xe \v Components::IClickable\:checkMouseOver}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b bool} Components::IClickable::checkMouseOver (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAEDZ}
{\bkmkend AAAAAAAEDZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse is over the troop display. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Boolean that indicates if the mouse is over the troop display. \par
}}}{
Implementado por {\b Components::Button} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEDY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::TroopDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIW \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Views::PositionDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v isEnabled\:Components::IClickable}
{\xe \v Components::IClickable\:isEnabled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Components::IClickable::isEnabled () const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEIY}
{\bkmkend AAAAAAAEIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the button is enable. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Enabled attribute value. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 10                                            \{\par
11     {\cf19 return} enabled;\par
12 \}\par
}
}
{\xe \v setEnabled\:Components::IClickable}
{\xe \v Components::IClickable\:setEnabled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::IClickable::setEnabled (const {\b bool}  {\i enabled}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEIZ}
{\bkmkend AAAAAAAEIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the enabled attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i enabled} \cell }{is the new value to the attribute. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5                                                         \{\par
6     this->enabled = enabled;\par
7     {\cf19 return};\par
8 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v enabled\:Components::IClickable}
{\xe \v Components::IClickable\:enabled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Components::IClickable::enabled = {\b true}{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEJA}
{\bkmkend AAAAAAAEJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/{\b IClickable.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/component/{\b IClickable.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura doctest::IContextScope\par \pard\plain 
{\tc\tcl2 \v doctest::IContextScope}
{\xe \v doctest::IContextScope}
{\bkmkstart AAAAAAAEQR}
{\bkmkend AAAAAAAEQR}
\par
{
{\f2 #include <doctest.hpp>}}\par
Diagrama de hierarquia da classe doctest::IContextScope:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structdoctest_1_1_i_context_scope.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b IContextScope} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~IContextScope} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b stringify} ({\b std::ostream} *) const =0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v IContextScope\:doctest::IContextScope}
{\xe \v doctest::IContextScope\:IContextScope}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::IContextScope::IContextScope ()}}
\par
{\bkmkstart AAAAAAAEQS}
{\bkmkend AAAAAAAEQS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~IContextScope\:doctest::IContextScope}
{\xe \v doctest::IContextScope\:~IContextScope}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual doctest::IContextScope::~IContextScope (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEQT}
{\bkmkend AAAAAAAEQT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v stringify\:doctest::IContextScope}
{\xe \v doctest::IContextScope\:stringify}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void doctest::IContextScope::stringify ({\b std::ostream} * ) const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAEQU}
{\bkmkend AAAAAAAEQU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementado por {\b doctest::detail::ContextScope< L >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEQV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Components::IDisplayIcon\par \pard\plain 
{\tc\tcl2 \v Components::IDisplayIcon}
{\xe \v Components::IDisplayIcon}
{\bkmkstart AAAAAAAEJB}
{\bkmkend AAAAAAAEJB}
\par
{
{\f2 #include <IDisplayIcon.hpp>}}\par
Diagrama de hierarquia da classe Components::IDisplayIcon:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_components_1_1_i_display_icon.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setIconPath} (const std::string path)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the path attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::string {\b getIconPath} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the default image path attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setIconHeight} (const float height)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Icon Height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getIconHeight} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the icon height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setIconWidth} (const float width)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Icon Width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getIconWidth} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the icon width attribute. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getIconHeight\:Components::IDisplayIcon}
{\xe \v Components::IDisplayIcon\:getIconHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual float Components::IDisplayIcon::getIconHeight () const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAEGL}
{\bkmkend AAAAAAAEGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the icon height attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Icon height attribute value. \par
}}}{
Implementado por {\b Components::ButtonTextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGK \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Components::TextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getIconPath\:Components::IDisplayIcon}
{\xe \v Components::IDisplayIcon\:getIconPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual std::string Components::IDisplayIcon::getIconPath () const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAEGN}
{\bkmkend AAAAAAAEGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the default image path attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Default path attribute value. \par
}}}{
Implementado por {\b Components::ButtonTextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGM \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Components::TextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getIconWidth\:Components::IDisplayIcon}
{\xe \v Components::IDisplayIcon\:getIconWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual float Components::IDisplayIcon::getIconWidth () const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAEGP}
{\bkmkend AAAAAAAEGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the icon width attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Icon width attribute value. \par
}}}{
Implementado por {\b Components::ButtonTextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGO \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Components::TextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setIconHeight\:Components::IDisplayIcon}
{\xe \v Components::IDisplayIcon\:setIconHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Components::IDisplayIcon::setIconHeight (const float  {\i height}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAEGW}
{\bkmkend AAAAAAAEGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Icon Height attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i height} \cell }{is the new value height. \cell }
{\row }
}
}{
Implementado por {\b Components::ButtonTextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGV \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Components::TextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setIconPath\:Components::IDisplayIcon}
{\xe \v Components::IDisplayIcon\:setIconPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Components::IDisplayIcon::setIconPath (const std::string  {\i path}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAEGY}
{\bkmkend AAAAAAAEGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the path attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{is the new value to path. \cell }
{\row }
}
}{
Implementado por {\b Components::ButtonTextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGX \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Components::TextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setIconWidth\:Components::IDisplayIcon}
{\xe \v Components::IDisplayIcon\:setIconWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Components::IDisplayIcon::setIconWidth (const float  {\i width}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAEHA}
{\bkmkend AAAAAAAEHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Icon Width attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i width} \cell }{is the new value width. \cell }
{\row }
}
}{
Implementado por {\b Components::ButtonTextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGZ \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Components::TextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/{\b IDisplayIcon.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Components::IDisplayText\par \pard\plain 
{\tc\tcl2 \v Components::IDisplayText}
{\xe \v Components::IDisplayText}
{\bkmkstart AAAAAAAEJI}
{\bkmkend AAAAAAAEJI}
\par
{
{\f2 #include <IDisplayText.hpp>}}\par
Diagrama de hierarquia da classe Components::IDisplayText:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_components_1_1_i_display_text.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setText} (const std::string content)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the text content. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::string {\b getText} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text that the button display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setFontSize} (const float fontSize)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font size attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getFontSize} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font size attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setFontFamily} (const {\b Font} font)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font family attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Font} {\b getFontFamily} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font family attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setTextColor} (const {\b Color} color)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the color attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Color} {\b getTextColor} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text color attribute. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getFontFamily\:Components::IDisplayText}
{\xe \v Components::IDisplayText\:getFontFamily}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Font} Components::IDisplayText::getFontFamily () const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAEFO}
{\bkmkend AAAAAAAEFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font family attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Font} family attribute value. \par
}}}{
Implementado por {\b Components::ButtonText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFN \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::ButtonTextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::Text} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJJ \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Components::TextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getFontSize\:Components::IDisplayText}
{\xe \v Components::IDisplayText\:getFontSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual float Components::IDisplayText::getFontSize () const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAEFQ}
{\bkmkend AAAAAAAEFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font size attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Font} size attribute value. \par
}}}{
Implementado por {\b Components::ButtonText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::ButtonTextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::Text} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJL \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Components::TextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getText\:Components::IDisplayText}
{\xe \v Components::IDisplayText\:getText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual std::string Components::IDisplayText::getText () const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAEFT}
{\bkmkend AAAAAAAEFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text that the button display. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Text} attribute value. \par
}}}{
Implementado por {\b Components::ButtonText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::ButtonTextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGR \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::Text} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJN \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Components::TextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getTextColor\:Components::IDisplayText}
{\xe \v Components::IDisplayText\:getTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Color} Components::IDisplayText::getTextColor () const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAEFV}
{\bkmkend AAAAAAAEFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text color attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Text} color attribute value. \par
}}}{
Implementado por {\b Components::ButtonText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::ButtonTextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::Text} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJP \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Components::TextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setFontFamily\:Components::IDisplayText}
{\xe \v Components::IDisplayText\:setFontFamily}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Components::IDisplayText::setFontFamily (const {\b Font}  {\i font}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAEFX}
{\bkmkend AAAAAAAEFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font family attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i font} \cell }{is the new font family. \cell }
{\row }
}
}{
Implementado por {\b Components::ButtonText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFW \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::ButtonTextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::Text} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJR \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Components::TextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setFontSize\:Components::IDisplayText}
{\xe \v Components::IDisplayText\:setFontSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Components::IDisplayText::setFontSize (const float  {\i fontSize}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAEFZ}
{\bkmkend AAAAAAAEFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font size attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fontSize} \cell }{is the new value to the font size. \cell }
{\row }
}
}{
Implementado por {\b Components::ButtonText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::ButtonTextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::Text} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJT \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Components::TextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJU \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setText\:Components::IDisplayText}
{\xe \v Components::IDisplayText\:setText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Components::IDisplayText::setText (const std::string  {\i content}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAEGC}
{\bkmkend AAAAAAAEGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the text content. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i text} \cell }{is the text that will be displayed. \cell }
{\row }
}
}{
Implementado por {\b Components::ButtonTextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::Text} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::ButtonText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGB \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Components::TextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setTextColor\:Components::IDisplayText}
{\xe \v Components::IDisplayText\:setTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Components::IDisplayText::setTextColor (const {\b Color}  {\i color}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAEGE}
{\bkmkend AAAAAAAEGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the color attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i color} \cell }{is the new text color. \cell }
{\row }
}
}{
Implementado por {\b Components::ButtonText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::ButtonTextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHH \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::Text} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJX \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Components::TextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/{\b IDisplayText.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura doctest::detail::IExceptionTranslator\par \pard\plain 
{\tc\tcl2 \v doctest::detail::IExceptionTranslator}
{\xe \v doctest::detail::IExceptionTranslator}
{\bkmkstart AAAAAAAFAG}
{\bkmkend AAAAAAAFAG}
\par
{
{\f2 #include <doctest.hpp>}}\par
Diagrama de hierarquia da classe doctest::detail::IExceptionTranslator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structdoctest_1_1detail_1_1_i_exception_translator.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b IExceptionTranslator} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~IExceptionTranslator} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b translate} ({\b String} &) const =0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v IExceptionTranslator\:doctest::detail::IExceptionTranslator}
{\xe \v doctest::detail::IExceptionTranslator\:IExceptionTranslator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::detail::IExceptionTranslator::IExceptionTranslator ()}}
\par
{\bkmkstart AAAAAAAFAH}
{\bkmkend AAAAAAAFAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~IExceptionTranslator\:doctest::detail::IExceptionTranslator}
{\xe \v doctest::detail::IExceptionTranslator\:~IExceptionTranslator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual doctest::detail::IExceptionTranslator::~IExceptionTranslator (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFAI}
{\bkmkend AAAAAAAFAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v translate\:doctest::detail::IExceptionTranslator}
{\xe \v doctest::detail::IExceptionTranslator\:translate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b bool} doctest::detail::IExceptionTranslator::translate ({\b String} & ) const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAEZO}
{\bkmkend AAAAAAAEZO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementado por {\b doctest::detail::ExceptionTranslator< T >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEZN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Components::Image\par \pard\plain 
{\tc\tcl2 \v Components::Image}
{\xe \v Components::Image}
{\bkmkstart AAAAAAAEJZ}
{\bkmkend AAAAAAAEJZ}
\par
{
{\f2 #include <Image.hpp>}}\par
Diagrama de hierarquia da classe Components::Image:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_components_1_1_image.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Image} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Image} (const std::string path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b Image} component defining it's path. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Image} (const std::string path, const float {\b height}, const float {\b width})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b Image} component defining it's height and width. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Image} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Image} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the component in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPath} (const std::string path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the path attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getPath} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the image path attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setHeight} (const float {\b height}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setWidth} (const float {\b width}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::ResizableComponent}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~ResizableComponent} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b ResizableComponent} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setHeight} (const float {\b height}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setWidth} (const float {\b width}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Component} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Component}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the render contract of components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getXPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the X position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getYPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Vector2} {\b getPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position attribute. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setHeight} (const float height)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setWidth} (const float width)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAULT_WIDTH} = 64\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAULT_HEIGHT} = 64\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_WIDTH} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_HEIGHT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Vector2} {\b DEFAULT_INITIAL_POSITION} = \{ 0, 0 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b width} = {\b DEFAUT_INITIAL_WIDTH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b height} = {\b DEFAUT_INITIAL_HEIGHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b position} = {\b DEFAULT_INITIAL_POSITION}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Image\:Components::Image}
{\xe \v Components::Image\:Image}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Image::Image ()}}
\par
{\bkmkstart AAAAAAAEKA}
{\bkmkend AAAAAAAEKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 11                        \{\par
12     setWidth(DEFAULT_WIDTH);\par
13     setHeight(DEFAULT_HEIGHT);\par
14 \par
15     setXPosition(0.0);\par
16     setYPosition(0.0);\par
17 \}\par
}
}
{\xe \v Image\:Components::Image}
{\xe \v Components::Image\:Image}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Image::Image (const std::string  {\i path})}}
\par
{\bkmkstart AAAAAAAEKB}
{\bkmkend AAAAAAAEKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b Image} component defining it's path. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{is the path to the image that will be displayed. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 19                                            \{\par
20     setPath(path);\par
21     setWidth(DEFAULT_WIDTH);\par
22     setHeight(DEFAULT_HEIGHT);\par
23 \par
24     setXPosition(0.0);\par
25     setYPosition(0.0);\par
26 \}\par
}
}
{\xe \v Image\:Components::Image}
{\xe \v Components::Image\:Image}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Image::Image (const std::string  {\i path}, const float  {\i height}, const float  {\i width})}}
\par
{\bkmkstart AAAAAAAEKC}
{\bkmkend AAAAAAAEKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b Image} component defining it's height and width. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{is the path to the image that will be displayed. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i height} \cell }{is the height of the image. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i width} \cell }{is the width of the image. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 28                                                                                   \{\par
29     setPath(path);\par
30     setHeight(height);\par
31     setWidth(width);\par
32 \par
33     setXPosition(0.0);\par
34     setYPosition(0.0);\par
35 \}\par
}
}
{\xe \v ~Image\:Components::Image}
{\xe \v Components::Image\:~Image}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Image::~Image (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEKD}
{\bkmkend AAAAAAAEKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Image} component. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 37 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getPath\:Components::Image}
{\xe \v Components::Image\:getPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Image::getPath () const}}
\par
{\bkmkstart AAAAAAAEKE}
{\bkmkend AAAAAAAEKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the image path attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Image} path attribute value. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 72                                          \{\par
73     {\cf19 return} path;\par
74 \}\par
}
}
{\xe \v render\:Components::Image}
{\xe \v Components::Image\:render}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Image::render (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEHU}
{\bkmkend AAAAAAAEHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the component in the interface. }}\par
{
Implementa {\b Components::Component} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEED \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 39                              \{\par
40     DrawTextureV(\par
41         content,\par
42         getPosition(),\par
43         WHITE\par
44     );\par
45 \par
46     {\cf19 return};\par
47 \}\par
}
}
{\xe \v setHeight\:Components::Image}
{\xe \v Components::Image\:setHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Image::setHeight (const float  {\i height}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEKF}
{\bkmkend AAAAAAAEKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i height} \cell }{is the new value to height. \cell }
{\row }
}
}{
Reimplementa {\b Components::ResizableComponent} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 76                                                   \{\par
77     this->height = height;\par
78     content.height = height;\par
79 \par
80     {\cf19 return};\par
81 \}\par
}
}
{\xe \v setPath\:Components::Image}
{\xe \v Components::Image\:setPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Image::setPath (const std::string  {\i path})}}
\par
{\bkmkstart AAAAAAAEKG}
{\bkmkend AAAAAAAEKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the path attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{is the new value to path. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 65                                                   \{\par
66     this->path = path;\par
67     updateImage();\par
68 \par
69     {\cf19 return};\par
70 \}\par
}
}
{\xe \v setWidth\:Components::Image}
{\xe \v Components::Image\:setWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Image::setWidth (const float  {\i width}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEKH}
{\bkmkend AAAAAAAEKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i width} \cell }{is the new value to width. \cell }
{\row }
}
}{
Reimplementa {\b Components::ResizableComponent} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 83                                                 \{\par
84     this->width = width;\par
85     content.width = width;\par
86 \par
87     {\cf19 return};\par
88 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v DEFAULT_HEIGHT\:Components::Image}
{\xe \v Components::Image\:DEFAULT_HEIGHT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const float Image::DEFAULT_HEIGHT = 64{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEKI}
{\bkmkend AAAAAAAEKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DEFAULT_WIDTH\:Components::Image}
{\xe \v Components::Image\:DEFAULT_WIDTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const float Image::DEFAULT_WIDTH = 64{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEKJ}
{\bkmkend AAAAAAAEKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/image/{\b Image.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/image/{\b Image.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura Image\par \pard\plain 
{\tc\tcl2 \v Image}
{\xe \v Image}
{\bkmkstart AAAAAAADTP}
{\bkmkend AAAAAAADTP}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b data}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b width}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b height}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mipmaps}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b format}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v data\:Image}
{\xe \v Image\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* Image::data}}
\par
{\bkmkstart AAAAAAADTQ}
{\bkmkend AAAAAAADTQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v format\:Image}
{\xe \v Image\:format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Image::format}}
\par
{\bkmkstart AAAAAAADTR}
{\bkmkend AAAAAAADTR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v height\:Image}
{\xe \v Image\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Image::height}}
\par
{\bkmkstart AAAAAAADTS}
{\bkmkend AAAAAAADTS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mipmaps\:Image}
{\xe \v Image\:mipmaps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Image::mipmaps}}
\par
{\bkmkstart AAAAAAADTT}
{\bkmkend AAAAAAADTT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v width\:Image}
{\xe \v Image\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Image::width}}
\par
{\bkmkstart AAAAAAADTU}
{\bkmkend AAAAAAADTU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe InvalidPositionException\par \pard\plain 
{\tc\tcl2 \v InvalidPositionException}
{\xe \v InvalidPositionException}
{\bkmkstart AAAAAAADTV}
{\bkmkend AAAAAAADTV}
\par
{
{\f2 #include <InvalidPositionException.hpp>}}\par
Diagrama de hierarquia da classe InvalidPositionException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_invalid_position_exception.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b InvalidPositionException} (const std::string {\b message})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new InvalidPosition object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~InvalidPositionException} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Invalid {\b Position} Exception object. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b CustomException}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CustomException} (const std::string {\b message})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs new {\b CustomException} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~CustomException} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Custom Exception object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getMessage} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the exception message. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b CustomException}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b message} = ""\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v InvalidPositionException\:InvalidPositionException}
{\xe \v InvalidPositionException\:InvalidPositionException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
InvalidPositionException::InvalidPositionException (const std::string  {\i message})}}
\par
{\bkmkstart AAAAAAADTW}
{\bkmkend AAAAAAADTW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new InvalidPosition object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i message} \cell }{The message associated with the exception. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 6 : CustomException(message) \{\}\par
}
}
{\xe \v ~InvalidPositionException\:InvalidPositionException}
{\xe \v InvalidPositionException\:~InvalidPositionException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
InvalidPositionException::~InvalidPositionException (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADTX}
{\bkmkend AAAAAAADTX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Invalid {\b Position} Exception object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 8 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/exceptions/{\b InvalidPositionException.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/exceptions/{\b InvalidPositionException.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura doctest::IReporter\par \pard\plain 
{\tc\tcl2 \v doctest::IReporter}
{\xe \v doctest::IReporter}
{\bkmkstart AAAAAAAEQW}
{\bkmkend AAAAAAAEQW}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b report_query} (const {\b QueryData} &)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b test_run_start} ()=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b test_run_end} (const {\b TestRunStats} &)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b test_case_start} (const {\b TestCaseData} &)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b test_case_reenter} (const {\b TestCaseData} &)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b test_case_end} (const {\b CurrentTestCaseStats} &)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b test_case_exception} (const {\b TestCaseException} &)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b subcase_start} (const {\b SubcaseSignature} &)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b subcase_end} ()=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b log_assert} (const {\b AssertData} &)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b log_message} (const {\b MessageData} &)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b test_case_skipped} (const {\b TestCaseData} &)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~IReporter} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b get_num_active_contexts} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b IContextScope} *const * {\b get_active_contexts} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b get_num_stringified_contexts} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b String} * {\b get_stringified_contexts} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ~IReporter\:doctest::IReporter}
{\xe \v doctest::IReporter\:~IReporter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual doctest::IReporter::~IReporter (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEQX}
{\bkmkend AAAAAAAEQX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v get_active_contexts\:doctest::IReporter}
{\xe \v doctest::IReporter\:get_active_contexts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const {\b IContextScope} *const  * doctest::IReporter::get_active_contexts (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQY}
{\bkmkend AAAAAAAEQY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v get_num_active_contexts\:doctest::IReporter}
{\xe \v doctest::IReporter\:get_num_active_contexts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int doctest::IReporter::get_num_active_contexts (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQZ}
{\bkmkend AAAAAAAEQZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v get_num_stringified_contexts\:doctest::IReporter}
{\xe \v doctest::IReporter\:get_num_stringified_contexts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int doctest::IReporter::get_num_stringified_contexts (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAERA}
{\bkmkend AAAAAAAERA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v get_stringified_contexts\:doctest::IReporter}
{\xe \v doctest::IReporter\:get_stringified_contexts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const {\b String} * doctest::IReporter::get_stringified_contexts (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAERB}
{\bkmkend AAAAAAAERB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v log_assert\:doctest::IReporter}
{\xe \v doctest::IReporter\:log_assert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void doctest::IReporter::log_assert (const {\b AssertData} & ){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAERC}
{\bkmkend AAAAAAAERC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v log_message\:doctest::IReporter}
{\xe \v doctest::IReporter\:log_message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void doctest::IReporter::log_message (const {\b MessageData} & ){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAERD}
{\bkmkend AAAAAAAERD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v report_query\:doctest::IReporter}
{\xe \v doctest::IReporter\:report_query}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void doctest::IReporter::report_query (const {\b QueryData} & ){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAERE}
{\bkmkend AAAAAAAERE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subcase_end\:doctest::IReporter}
{\xe \v doctest::IReporter\:subcase_end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void doctest::IReporter::subcase_end (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAERF}
{\bkmkend AAAAAAAERF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subcase_start\:doctest::IReporter}
{\xe \v doctest::IReporter\:subcase_start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void doctest::IReporter::subcase_start (const {\b SubcaseSignature} & ){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAERG}
{\bkmkend AAAAAAAERG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v test_case_end\:doctest::IReporter}
{\xe \v doctest::IReporter\:test_case_end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void doctest::IReporter::test_case_end (const {\b CurrentTestCaseStats} & ){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAERH}
{\bkmkend AAAAAAAERH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v test_case_exception\:doctest::IReporter}
{\xe \v doctest::IReporter\:test_case_exception}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void doctest::IReporter::test_case_exception (const {\b TestCaseException} & ){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAERI}
{\bkmkend AAAAAAAERI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v test_case_reenter\:doctest::IReporter}
{\xe \v doctest::IReporter\:test_case_reenter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void doctest::IReporter::test_case_reenter (const {\b TestCaseData} & ){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAERJ}
{\bkmkend AAAAAAAERJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v test_case_skipped\:doctest::IReporter}
{\xe \v doctest::IReporter\:test_case_skipped}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void doctest::IReporter::test_case_skipped (const {\b TestCaseData} & ){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAERK}
{\bkmkend AAAAAAAERK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v test_case_start\:doctest::IReporter}
{\xe \v doctest::IReporter\:test_case_start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void doctest::IReporter::test_case_start (const {\b TestCaseData} & ){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAERL}
{\bkmkend AAAAAAAERL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v test_run_end\:doctest::IReporter}
{\xe \v doctest::IReporter\:test_run_end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void doctest::IReporter::test_run_end (const {\b TestRunStats} & ){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAERM}
{\bkmkend AAAAAAAERM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v test_run_start\:doctest::IReporter}
{\xe \v doctest::IReporter\:test_run_start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void doctest::IReporter::test_run_start (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAERN}
{\bkmkend AAAAAAAERN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Components::IResizable\par \pard\plain 
{\tc\tcl2 \v Components::IResizable}
{\xe \v Components::IResizable}
{\bkmkstart AAAAAAAEKK}
{\bkmkend AAAAAAAEKK}
\par
{
{\f2 #include <IResizable.hpp>}}\par
Diagrama de hierarquia da classe Components::IResizable:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_components_1_1_i_resizable.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setHeight} (const float height)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setWidth} (const float width)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v setHeight\:Components::IResizable}
{\xe \v Components::IResizable\:setHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Components::IResizable::setHeight (const float  {\i height}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAEKL}
{\bkmkend AAAAAAAEKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i height} \cell }{is the new value to height. \cell }
{\row }
}
}{
Implementado por {\b Components::ButtonIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::ButtonText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::ButtonTextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::ResizableComponent} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::Image} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKF \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Components::Button} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setWidth\:Components::IResizable}
{\xe \v Components::IResizable\:setWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Components::IResizable::setWidth (const float  {\i width}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAEKM}
{\bkmkend AAAAAAAEKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i width} \cell }{is the new value to width. \cell }
{\row }
}
}{
Implementado por {\b Components::ButtonIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::ButtonText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEER \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::ButtonTextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEES \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::ResizableComponent} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::Image} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKH \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Components::Button} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/{\b IResizable.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura doctest::detail::is_enum< T >\par \pard\plain 
{\tc\tcl2 \v doctest::detail::is_enum< T >}
{\xe \v doctest::detail::is_enum< T >}
{\bkmkstart AAAAAAAFAJ}
{\bkmkend AAAAAAAFAJ}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b DOCTEST_CONSTEXPR} {\b bool} {\b value} = __is_enum(T)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v value\:doctest::detail::is_enum< T >}
{\xe \v doctest::detail::is_enum< T >\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > {\b DOCTEST_CONSTEXPR} {\b bool} {\b doctest::detail::is_enum}< T >::value = __is_enum(T){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFAK}
{\bkmkend AAAAAAAFAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura doctest::detail::is_lvalue_reference< T >\par \pard\plain 
{\tc\tcl2 \v doctest::detail::is_lvalue_reference< T >}
{\xe \v doctest::detail::is_lvalue_reference< T >}
{\bkmkstart AAAAAAAFAL}
{\bkmkend AAAAAAAFAL}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b bool} {\b value} ={\b false}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v value\:doctest::detail::is_lvalue_reference< T >}
{\xe \v doctest::detail::is_lvalue_reference< T >\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > const {\b bool} {\b doctest::detail::is_lvalue_reference}< T >::value ={\b false}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFAM}
{\bkmkend AAAAAAAFAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura doctest::detail::is_lvalue_reference< T & >\par \pard\plain 
{\tc\tcl2 \v doctest::detail::is_lvalue_reference< T & >}
{\xe \v doctest::detail::is_lvalue_reference< T & >}
{\bkmkstart AAAAAAAFAN}
{\bkmkend AAAAAAAFAN}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b bool} {\b value} ={\b true}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v value\:doctest::detail::is_lvalue_reference< T & >}
{\xe \v doctest::detail::is_lvalue_reference< T & >\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > const {\b bool} {\b doctest::detail::is_lvalue_reference}< T & >::value ={\b true}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFAO}
{\bkmkend AAAAAAAFAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura doctest::detail::is_rvalue_reference< T >\par \pard\plain 
{\tc\tcl2 \v doctest::detail::is_rvalue_reference< T >}
{\xe \v doctest::detail::is_rvalue_reference< T >}
{\bkmkstart AAAAAAAFAP}
{\bkmkend AAAAAAAFAP}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b bool} {\b value} ={\b false}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v value\:doctest::detail::is_rvalue_reference< T >}
{\xe \v doctest::detail::is_rvalue_reference< T >\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > const {\b bool} {\b doctest::detail::is_rvalue_reference}< T >::value ={\b false}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFAQ}
{\bkmkend AAAAAAAFAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura doctest::detail::is_rvalue_reference< T && >\par \pard\plain 
{\tc\tcl2 \v doctest::detail::is_rvalue_reference< T && >}
{\xe \v doctest::detail::is_rvalue_reference< T && >}
{\bkmkstart AAAAAAAFAR}
{\bkmkend AAAAAAAFAR}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b bool} {\b value} ={\b true}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v value\:doctest::detail::is_rvalue_reference< T && >}
{\xe \v doctest::detail::is_rvalue_reference< T && >\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > const {\b bool} {\b doctest::detail::is_rvalue_reference}< T && >::value ={\b true}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFAS}
{\bkmkend AAAAAAAFAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Match\par \pard\plain 
{\tc\tcl2 \v Match}
{\xe \v Match}
{\bkmkstart AAAAAAADTY}
{\bkmkend AAAAAAADTY}
\par
{
{\f2 #include <Match.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Match} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Match} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Match} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b passTurn} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Finish the actual turn and start the next one. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b isPlayer1Turn} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if it's the player 1 turn. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b isPlayer2Turn} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if it's the player 2 turn. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b incrementPlayer1Score} (const {\b bool} wasTroopDestroyed)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update the player 1 score when making an play. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b incrementPlayer1AmountShots} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increment the total amount of shots the player 1 has done. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b incrementPlayer2Score} (const {\b bool} wasTroopDestroyed)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update the player 2 score when making an play. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b incrementPlayer2AmountShots} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increment the total amount of shots the player 2 has done. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::shared_ptr< {\b Player} > {\b getPlayer1} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the player1 attribute by reference. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::shared_ptr< {\b Player} > {\b getPlayer2} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the player2 attribute by reference. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MatchResults} {\b getResults} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the matchResults affiliated to the current match. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b hasGameFinished} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verify if the game has reach it's end. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Match\:Match}
{\xe \v Match\:Match}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Match::Match ()}}
\par
{\bkmkstart AAAAAAADTZ}
{\bkmkend AAAAAAADTZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates the id, and both players' names.  \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 11              : \par
12     player1({\cf17 new} Player({\cf22 "Jogador1"})), \par
13     player2({\cf17 new} Player({\cf22 "Jogador2"})) \{\par
14     {\cf18 id} = createMatchId();\par
15 \}\par
}
}
{\xe \v ~Match\:Match}
{\xe \v Match\:~Match}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Match::~Match (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADUA}
{\bkmkend AAAAAAADUA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Match} object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getPlayer1\:Match}
{\xe \v Match\:getPlayer1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::shared_ptr< {\b Player} > Match::getPlayer1 () const}}
\par
{\bkmkstart AAAAAAADUB}
{\bkmkend AAAAAAADUB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the player1 attribute by reference. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A pointer containing the original player1 attribute. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 96                                               \{\par
97     {\cf19 return} player1;\par
98 \}\par
}
}
{\xe \v getPlayer2\:Match}
{\xe \v Match\:getPlayer2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::shared_ptr< {\b Player} > Match::getPlayer2 () const}}
\par
{\bkmkstart AAAAAAADUC}
{\bkmkend AAAAAAADUC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the player2 attribute by reference. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A pointer containing the original player2 attribute. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 100                                               \{\par
101     {\cf19 return} player2;\par
102 \}\par
}
}
{\xe \v getResults\:Match}
{\xe \v Match\:getResults}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MatchResults} Match::getResults () const}}
\par
{\bkmkstart AAAAAAADUD}
{\bkmkend AAAAAAADUD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the matchResults affiliated to the current match. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A matchResults attribute with relevant match data for storage. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 104                                      \{\par
105     {\cf19 return} MatchResults(getPlayer1()->getName(), *(getPlayer1()->getScore()), getPlayer2()->getName(), *(getPlayer2()->getScore()), {\cf18 id});\par
106 \}\par
}
}
{\xe \v hasGameFinished\:Match}
{\xe \v Match\:hasGameFinished}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Match::hasGameFinished () const}}
\par
{\bkmkstart AAAAAAADUE}
{\bkmkend AAAAAAADUE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verify if the game has reach it's end. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
an boolean that says if the game has ended or not. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 37                                   \{\par
38     {\cf19 return} (!getPlayer1()->getScore()->isWinner() || !getPlayer2()->getScore()->isWinner());\par
39 \}\par
}
}
{\xe \v incrementPlayer1AmountShots\:Match}
{\xe \v Match\:incrementPlayer1AmountShots}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Match::incrementPlayer1AmountShots ()}}
\par
{\bkmkstart AAAAAAADUF}
{\bkmkend AAAAAAADUF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increment the total amount of shots the player 1 has done. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 54                                         \{\par
55     getPlayer1()->getScore()->incrementTotalAmountShoots();\par
56     {\cf19 return};\par
57 \}    \par
}
}
{\xe \v incrementPlayer1Score\:Match}
{\xe \v Match\:incrementPlayer1Score}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Match::incrementPlayer1Score (const {\b bool}  {\i wasTroopDestroyed})}}
\par
{\bkmkstart AAAAAAADUG}
{\bkmkend AAAAAAADUG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update the player 1 score when making an play. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i wasTroopDestroyed} \cell }{If the troop was destroyed. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 41                                                               \{\par
42     getPlayer1()->getScore()->incrementHitShoots();\par
43 \par
44     {\cf19 if}(wasTroopDestroyed) \{\par
45         getPlayer1()->getScore()->incrementDestroyedTroops();\par
46 \par
47         getPlayer2()->getScore()->decrementRemainingTroops();\par
48         getPlayer2()->getScore()->incrementLostTroops();\par
49     \}\par
50 \par
51     {\cf19 return};\par
52 \}\par
}
}
{\xe \v incrementPlayer2AmountShots\:Match}
{\xe \v Match\:incrementPlayer2AmountShots}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Match::incrementPlayer2AmountShots ()}}
\par
{\bkmkstart AAAAAAADUH}
{\bkmkend AAAAAAADUH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increment the total amount of shots the player 2 has done. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 72                                         \{\par
73     getPlayer2()->getScore()->incrementTotalAmountShoots();\par
74     {\cf19 return};\par
75 \}\par
}
}
{\xe \v incrementPlayer2Score\:Match}
{\xe \v Match\:incrementPlayer2Score}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Match::incrementPlayer2Score (const {\b bool}  {\i wasTroopDestroyed})}}
\par
{\bkmkstart AAAAAAADUI}
{\bkmkend AAAAAAADUI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update the player 2 score when making an play. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i wasTroopDestroyed} \cell }{If the troop was destroyed. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 59                                                               \{\par
60     getPlayer2()->getScore()->incrementHitShoots();\par
61 \par
62     {\cf19 if}(wasTroopDestroyed) \{\par
63         getPlayer2()->getScore()->incrementDestroyedTroops();\par
64 \par
65         getPlayer1()->getScore()->decrementRemainingTroops();\par
66         getPlayer1()->getScore()->incrementLostTroops();\par
67     \}\par
68 \par
69     {\cf19 return};\par
70 \}\par
}
}
{\xe \v isPlayer1Turn\:Match}
{\xe \v Match\:isPlayer1Turn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Match::isPlayer1Turn () const}}
\par
{\bkmkstart AAAAAAADUJ}
{\bkmkend AAAAAAADUJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if it's the player 1 turn. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
an boolean that says if it's player 1 turn or not. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 29                                 \{\par
30     {\cf19 return} (currentTurn % 2 == 0);\par
31 \}\par
}
}
{\xe \v isPlayer2Turn\:Match}
{\xe \v Match\:isPlayer2Turn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Match::isPlayer2Turn () const}}
\par
{\bkmkstart AAAAAAADUK}
{\bkmkend AAAAAAADUK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if it's the player 2 turn. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
an boolean that says if it's player 2 turn or not. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 33                                 \{\par
34     {\cf19 return} (currentTurn % 2 != 0);\par
35 \}\par
}
}
{\xe \v passTurn\:Match}
{\xe \v Match\:passTurn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Match::passTurn ()}}
\par
{\bkmkstart AAAAAAADUL}
{\bkmkend AAAAAAADUL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Finish the actual turn and start the next one. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 19                      \{\par
20     currentTurn++;\par
21 \par
22     {\cf19 if}(hasGameFinished()) \{\par
23         GameManager::getInstance()->endGame();\par
24     \}\par
25 \par
26     {\cf19 return};\par
27 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/{\b Match.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/match/{\b Match.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Views::MatchResultDisplay\par \pard\plain 
{\tc\tcl2 \v Views::MatchResultDisplay}
{\xe \v Views::MatchResultDisplay}
{\bkmkstart AAAAAAAFKH}
{\bkmkend AAAAAAAFKH}
\par
{
{\f2 #include <MatchResultDisplay.hpp>}}\par
Diagrama de hierarquia da classe Views::MatchResultDisplay:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_views_1_1_match_result_display.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MatchResultDisplay} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the section that displays a complete match results. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~MatchResultDisplay} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Match} Result Display view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b update} (const {\b MatchResults} matchResult)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update the view values based on the matchResults. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MatchResults} {\b getMatchResult} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the match results attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Views::View}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~View} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b View} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Component} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Component}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the render contract of components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getXPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the X position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getYPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Vector2} {\b getPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position attribute. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_WIDTH} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_HEIGHT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Vector2} {\b DEFAULT_INITIAL_POSITION} = \{ 0, 0 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b width} = {\b DEFAUT_INITIAL_WIDTH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b height} = {\b DEFAUT_INITIAL_HEIGHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b position} = {\b DEFAULT_INITIAL_POSITION}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v MatchResultDisplay\:Views::MatchResultDisplay}
{\xe \v Views::MatchResultDisplay\:MatchResultDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::MatchResultDisplay::MatchResultDisplay ()}}
\par
{\bkmkstart AAAAAAAFKI}
{\bkmkend AAAAAAAFKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the section that displays a complete match results. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 16                                             :\par
17     title({\cf17 new} Components::Text()),\par
18     matchDateTime({\cf17 new} Components::Text()),\par
19     player1RegistredScore({\cf17 new} PlayerRegistredScore()),\par
20     player2RegistredScore({\cf17 new} PlayerRegistredScore()) \{\par
21     setXPosition(0.0);\par
22     setYPosition(0.0);\par
23 \par
24     findHeight();\par
25     findWidth();\par
26 \}\par
}
}
{\xe \v ~MatchResultDisplay\:Views::MatchResultDisplay}
{\xe \v Views::MatchResultDisplay\:~MatchResultDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::MatchResultDisplay::~MatchResultDisplay (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFKJ}
{\bkmkend AAAAAAAFKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Match} Result Display view. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 28 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v findHeight\:Views::MatchResultDisplay}
{\xe \v Views::MatchResultDisplay\:findHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::MatchResultDisplay::findHeight (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFKK}
{\bkmkend AAAAAAAFKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 69                                          \{\par
70     height = abs(title->getYPosition() - player2RegistredScore->getYPosition()) + player2RegistredScore->getHeight();\par
71     {\cf19 return};\par
72 \}\par
}
}
{\xe \v findWidth\:Views::MatchResultDisplay}
{\xe \v Views::MatchResultDisplay\:findWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::MatchResultDisplay::findWidth (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFKL}
{\bkmkend AAAAAAAFKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 64                                         \{\par
65     width = title->getWidth();\par
66     {\cf19 return};\par
67 \}\par
}
}
{\xe \v getMatchResult\:Views::MatchResultDisplay}
{\xe \v Views::MatchResultDisplay\:getMatchResult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MatchResults} Views::MatchResultDisplay::getMatchResult () const}}
\par
{\bkmkstart AAAAAAAFKM}
{\bkmkend AAAAAAAFKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the match results attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Match} results attribute copy. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 161                                                            \{\par
162     {\cf19 return} matchResult;\par
163 \}\par
}
}
{\xe \v render\:Views::MatchResultDisplay}
{\xe \v Views::MatchResultDisplay\:render}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::MatchResultDisplay::render (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEIE}
{\bkmkend AAAAAAAEIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }}\par
{
Implementa {\b Components::Component} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEED \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 30                                      \{\par
31     renderTitle();\par
32 \par
33     player1RegistredScore->render();\par
34     player2RegistredScore->render();\par
35 \par
36     {\cf19 return};\par
37 \}\par
}
}
{\xe \v update\:Views::MatchResultDisplay}
{\xe \v Views::MatchResultDisplay\:update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::MatchResultDisplay::update (const {\b MatchResults}  {\i matchResult})}}
\par
{\bkmkstart AAAAAAAFKN}
{\bkmkend AAAAAAAFKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update the view values based on the matchResults. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i matchResult} \cell }{is the results of the mach that will be displayed on the view. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 41                                                                    \{\par
42     setMatchResult(matchResult);\par
43 \par
44     player1RegistredScore->update(getMatchResult().getPlayer1Name(), getMatchResult().getPlayer1Score());\par
45     player2RegistredScore->update(getMatchResult().getPlayer2Name(), getMatchResult().getPlayer2Score());\par
46 \par
47     buildTitle();\par
48     buildMatchDateTime();\par
49     buildDivisionLines();\par
50 \par
51     findWidth();\par
52     findHeight();\par
53 \par
54     {\cf19 return};\par
55 \}\par
}
}
{\xe \v updateInnerComponentsPositions\:Views::MatchResultDisplay}
{\xe \v Views::MatchResultDisplay\:updateInnerComponentsPositions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::MatchResultDisplay::updateInnerComponentsPositions (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFKO}
{\bkmkend AAAAAAAFKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 57                                                              \{\par
58     positionTitle();\par
59     positionScores();\par
60 \par
61     {\cf19 return};\par
62 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/score/{\b MatchResultDisplay.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/score/{\b MatchResultDisplay.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe MatchResults\par \pard\plain 
{\tc\tcl2 \v MatchResults}
{\xe \v MatchResults}
{\bkmkstart AAAAAAADUM}
{\bkmkend AAAAAAADUM}
\par
{
{\f2 #include <MatchResults.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MatchResults} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MatchResults} (const std::string player1Name, const {\b Score} player1Score, const std::string player2Name, const {\b Score} player2Score, const std::string id)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new matchResults object with pre-determined values. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~MatchResults} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Match} Results object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPlayer1Name} (const std::string name)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the 1st player name. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getPlayer1Name} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the 1st player name. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPlayer1Score} (const {\b Score} score)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the score associated to the 1st player. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Score} {\b getPlayer1Score} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the score associated to the first player. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPlayer2Name} (const std::string name)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the 2nd player name. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getPlayer2Name} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the 2nd player name. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPlayer2Score} (const {\b Score} score)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the score associated to the 2nd player. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Score} {\b getPlayer2Score} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the score associated to the second player. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setId} (const std::string id)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set a new id of a match. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getId} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the id of the matchResult. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v MatchResults\:MatchResults}
{\xe \v MatchResults\:MatchResults}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatchResults::MatchResults ()}}
\par
{\bkmkstart AAAAAAADUN}
{\bkmkend AAAAAAADUN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a standard {\b MatchResults} object, with all values blank.  \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 8 \{\}\par
}
}
{\xe \v MatchResults\:MatchResults}
{\xe \v MatchResults\:MatchResults}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatchResults::MatchResults (const std::string  {\i player1Name}, const {\b Score}  {\i player1Score}, const std::string  {\i player2Name}, const {\b Score}  {\i player2Score}, const std::string  {\i id})}}
\par
{\bkmkstart AAAAAAADUO}
{\bkmkend AAAAAAADUO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new matchResults object with pre-determined values. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i player1Name} \cell }{The name of the 1st player. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i player1Score} \cell }{The score associated to the first player. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i player2Name} \cell }{The name of the second player. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i player2Score} \cell }{The score associated with the second player. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{The id of the match in the correct format. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 10                                                                                                                                                            \{\par
11     setPlayer1Name(player1Name);\par
12     setPlayer1Score(player1Score);\par
13 \par
14     setPlayer2Name(player2Name);\par
15     setPlayer2Score(player2Score);\par
16 \par
17     setId({\cf18 id});\par
18 \}\par
}
}
{\xe \v ~MatchResults\:MatchResults}
{\xe \v MatchResults\:~MatchResults}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatchResults::~MatchResults (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADUP}
{\bkmkend AAAAAAADUP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Match} Results object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 20 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getId\:MatchResults}
{\xe \v MatchResults\:getId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string MatchResults::getId () const}}
\par
{\bkmkstart AAAAAAADUQ}
{\bkmkend AAAAAAADUQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the id of the matchResult. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A string with the value of the id of a matchResult. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 67                                     \{\par
68     {\cf19 return} id;\par
69 \}\par
}
}
{\xe \v getPlayer1Name\:MatchResults}
{\xe \v MatchResults\:getPlayer1Name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string MatchResults::getPlayer1Name () const}}
\par
{\bkmkstart AAAAAAADUR}
{\bkmkend AAAAAAADUR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the 1st player name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A string with the value of the first player name. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 29                                              \{\par
30     {\cf19 return} player1Name;\par
31 \}\par
}
}
{\xe \v getPlayer1Score\:MatchResults}
{\xe \v MatchResults\:getPlayer1Score}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Score} MatchResults::getPlayer1Score () const}}
\par
{\bkmkstart AAAAAAADUS}
{\bkmkend AAAAAAADUS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the score associated to the first player. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The value of the score instance associated to the first player. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 38                                           \{\par
39     {\cf19 return} player1Score;\par
40 \}\par
}
}
{\xe \v getPlayer2Name\:MatchResults}
{\xe \v MatchResults\:getPlayer2Name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string MatchResults::getPlayer2Name () const}}
\par
{\bkmkstart AAAAAAADUT}
{\bkmkend AAAAAAADUT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the 2nd player name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A string with the value of the second player name. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 47                                              \{\par
48     {\cf19 return} player2Name;\par
49 \}\par
}
}
{\xe \v getPlayer2Score\:MatchResults}
{\xe \v MatchResults\:getPlayer2Score}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Score} MatchResults::getPlayer2Score () const}}
\par
{\bkmkstart AAAAAAADUU}
{\bkmkend AAAAAAADUU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the score associated to the second player. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The value of the score instance associated to the second player. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 56                                           \{\par
57     {\cf19 return} player2Score;\par
58 \}\par
}
}
{\xe \v setId\:MatchResults}
{\xe \v MatchResults\:setId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MatchResults::setId (const std::string  {\i id})}}
\par
{\bkmkstart AAAAAAADUV}
{\bkmkend AAAAAAADUV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set a new id of a match. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{The new id of the match in the correct format. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 60                                            \{\par
61     {\cf19 if}({\cf18 id} == {\cf22 ""}) {\cf19 throw} std::invalid_argument({\cf22 "Id cannot be blank"});\par
62     {\cf19 else} {\cf19 if}({\cf18 id}.find({\cf23 ' '}) != std::string::npos) {\cf19 throw} std::invalid_argument({\cf22 "Id cannot have spaces"});\par
63     this->{\cf18 id} = id;\par
64     {\cf19 return};\par
65 \}\par
}
}
{\xe \v setPlayer1Name\:MatchResults}
{\xe \v MatchResults\:setPlayer1Name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MatchResults::setPlayer1Name (const std::string  {\i name})}}
\par
{\bkmkstart AAAAAAADUW}
{\bkmkend AAAAAAADUW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the 1st player name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{The new name associated to the first player. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 24                                                       \{\par
25     this->player1Name = name;\par
26     {\cf19 return};\par
27 \}\par
}
}
{\xe \v setPlayer1Score\:MatchResults}
{\xe \v MatchResults\:setPlayer1Score}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MatchResults::setPlayer1Score (const {\b Score}  {\i score})}}
\par
{\bkmkstart AAAAAAADUX}
{\bkmkend AAAAAAADUX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the score associated to the 1st player. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i score} \cell }{The new score that will be associated to the first player. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 33                                                     \{\par
34     this->player1Score = score;\par
35     {\cf19 return};\par
36 \}\par
}
}
{\xe \v setPlayer2Name\:MatchResults}
{\xe \v MatchResults\:setPlayer2Name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MatchResults::setPlayer2Name (const std::string  {\i name})}}
\par
{\bkmkstart AAAAAAADUY}
{\bkmkend AAAAAAADUY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the 2nd player name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{The new name associated to the second player. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 42                                                       \{\par
43     this->player2Name = name;\par
44     {\cf19 return};\par
45 \}\par
}
}
{\xe \v setPlayer2Score\:MatchResults}
{\xe \v MatchResults\:setPlayer2Score}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MatchResults::setPlayer2Score (const {\b Score}  {\i score})}}
\par
{\bkmkstart AAAAAAADUZ}
{\bkmkend AAAAAAADUZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the score associated to the 2nd player. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i score} \cell }{The new score that will be associated to the second player. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 51                                                     \{\par
52     this->player2Score = score;\par
53     {\cf19 return};\par
54 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/{\b MatchResults.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/match/{\b MatchResults.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura Material\par \pard\plain 
{\tc\tcl2 \v Material}
{\xe \v Material}
{\bkmkstart AAAAAAADVA}
{\bkmkend AAAAAAADVA}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Shader} {\b shader}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MaterialMap} * {\b maps}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b params} [4]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v maps\:Material}
{\xe \v Material\:maps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MaterialMap}* Material::maps}}
\par
{\bkmkstart AAAAAAADVB}
{\bkmkend AAAAAAADVB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v params\:Material}
{\xe \v Material\:params}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Material::params[4]}}
\par
{\bkmkstart AAAAAAADVC}
{\bkmkend AAAAAAADVC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v shader\:Material}
{\xe \v Material\:shader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Shader} Material::shader}}
\par
{\bkmkstart AAAAAAADVD}
{\bkmkend AAAAAAADVD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura MaterialMap\par \pard\plain 
{\tc\tcl2 \v MaterialMap}
{\xe \v MaterialMap}
{\bkmkstart AAAAAAADVE}
{\bkmkend AAAAAAADVE}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Texture2D} {\b texture}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Color} {\b color}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b value}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v color\:MaterialMap}
{\xe \v MaterialMap\:color}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Color} MaterialMap::color}}
\par
{\bkmkstart AAAAAAADVF}
{\bkmkend AAAAAAADVF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v texture\:MaterialMap}
{\xe \v MaterialMap\:texture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Texture2D} MaterialMap::texture}}
\par
{\bkmkstart AAAAAAADVG}
{\bkmkend AAAAAAADVG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v value\:MaterialMap}
{\xe \v MaterialMap\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float MaterialMap::value}}
\par
{\bkmkstart AAAAAAADVH}
{\bkmkend AAAAAAADVH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura Matrix\par \pard\plain 
{\tc\tcl2 \v Matrix}
{\xe \v Matrix}
{\bkmkstart AAAAAAADVI}
{\bkmkend AAAAAAADVI}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b m0}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b m4}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b m8}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b m12}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b m1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b m5}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b m9}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b m13}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b m2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b m6}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b m10}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b m14}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b m3}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b m7}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b m11}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b m15}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v m0\:Matrix}
{\xe \v Matrix\:m0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Matrix::m0}}
\par
{\bkmkstart AAAAAAADVJ}
{\bkmkend AAAAAAADVJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m1\:Matrix}
{\xe \v Matrix\:m1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Matrix::m1}}
\par
{\bkmkstart AAAAAAADVK}
{\bkmkend AAAAAAADVK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m10\:Matrix}
{\xe \v Matrix\:m10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Matrix::m10}}
\par
{\bkmkstart AAAAAAADVL}
{\bkmkend AAAAAAADVL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m11\:Matrix}
{\xe \v Matrix\:m11}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Matrix::m11}}
\par
{\bkmkstart AAAAAAADVM}
{\bkmkend AAAAAAADVM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m12\:Matrix}
{\xe \v Matrix\:m12}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Matrix::m12}}
\par
{\bkmkstart AAAAAAADVN}
{\bkmkend AAAAAAADVN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m13\:Matrix}
{\xe \v Matrix\:m13}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Matrix::m13}}
\par
{\bkmkstart AAAAAAADVO}
{\bkmkend AAAAAAADVO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m14\:Matrix}
{\xe \v Matrix\:m14}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Matrix::m14}}
\par
{\bkmkstart AAAAAAADVP}
{\bkmkend AAAAAAADVP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m15\:Matrix}
{\xe \v Matrix\:m15}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Matrix::m15}}
\par
{\bkmkstart AAAAAAADVQ}
{\bkmkend AAAAAAADVQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m2\:Matrix}
{\xe \v Matrix\:m2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Matrix::m2}}
\par
{\bkmkstart AAAAAAADVR}
{\bkmkend AAAAAAADVR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m3\:Matrix}
{\xe \v Matrix\:m3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Matrix::m3}}
\par
{\bkmkstart AAAAAAADVS}
{\bkmkend AAAAAAADVS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m4\:Matrix}
{\xe \v Matrix\:m4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Matrix::m4}}
\par
{\bkmkstart AAAAAAADVT}
{\bkmkend AAAAAAADVT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m5\:Matrix}
{\xe \v Matrix\:m5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Matrix::m5}}
\par
{\bkmkstart AAAAAAADVU}
{\bkmkend AAAAAAADVU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m6\:Matrix}
{\xe \v Matrix\:m6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Matrix::m6}}
\par
{\bkmkstart AAAAAAADVV}
{\bkmkend AAAAAAADVV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m7\:Matrix}
{\xe \v Matrix\:m7}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Matrix::m7}}
\par
{\bkmkstart AAAAAAADVW}
{\bkmkend AAAAAAADVW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m8\:Matrix}
{\xe \v Matrix\:m8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Matrix::m8}}
\par
{\bkmkstart AAAAAAADVX}
{\bkmkend AAAAAAADVX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m9\:Matrix}
{\xe \v Matrix\:m9}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Matrix::m9}}
\par
{\bkmkstart AAAAAAADVY}
{\bkmkend AAAAAAADVY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura Mesh\par \pard\plain 
{\tc\tcl2 \v Mesh}
{\xe \v Mesh}
{\bkmkstart AAAAAAADVZ}
{\bkmkend AAAAAAADVZ}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b vertexCount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b triangleCount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float * {\b vertices}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float * {\b texcoords}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float * {\b texcoords2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float * {\b normals}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float * {\b tangents}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char * {\b colors}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short * {\b indices}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float * {\b animVertices}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float * {\b animNormals}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char * {\b boneIds}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float * {\b boneWeights}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b vaoId}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int * {\b vboId}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v animNormals\:Mesh}
{\xe \v Mesh\:animNormals}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float* Mesh::animNormals}}
\par
{\bkmkstart AAAAAAADWA}
{\bkmkend AAAAAAADWA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v animVertices\:Mesh}
{\xe \v Mesh\:animVertices}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float* Mesh::animVertices}}
\par
{\bkmkstart AAAAAAADWB}
{\bkmkend AAAAAAADWB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v boneIds\:Mesh}
{\xe \v Mesh\:boneIds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char* Mesh::boneIds}}
\par
{\bkmkstart AAAAAAADWC}
{\bkmkend AAAAAAADWC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v boneWeights\:Mesh}
{\xe \v Mesh\:boneWeights}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float* Mesh::boneWeights}}
\par
{\bkmkstart AAAAAAADWD}
{\bkmkend AAAAAAADWD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v colors\:Mesh}
{\xe \v Mesh\:colors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char* Mesh::colors}}
\par
{\bkmkstart AAAAAAADWE}
{\bkmkend AAAAAAADWE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v indices\:Mesh}
{\xe \v Mesh\:indices}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short* Mesh::indices}}
\par
{\bkmkstart AAAAAAADWF}
{\bkmkend AAAAAAADWF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v normals\:Mesh}
{\xe \v Mesh\:normals}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float* Mesh::normals}}
\par
{\bkmkstart AAAAAAADWG}
{\bkmkend AAAAAAADWG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tangents\:Mesh}
{\xe \v Mesh\:tangents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float* Mesh::tangents}}
\par
{\bkmkstart AAAAAAADWH}
{\bkmkend AAAAAAADWH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v texcoords\:Mesh}
{\xe \v Mesh\:texcoords}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float* Mesh::texcoords}}
\par
{\bkmkstart AAAAAAADWI}
{\bkmkend AAAAAAADWI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v texcoords2\:Mesh}
{\xe \v Mesh\:texcoords2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float* Mesh::texcoords2}}
\par
{\bkmkstart AAAAAAADWJ}
{\bkmkend AAAAAAADWJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v triangleCount\:Mesh}
{\xe \v Mesh\:triangleCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Mesh::triangleCount}}
\par
{\bkmkstart AAAAAAADWK}
{\bkmkend AAAAAAADWK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v vaoId\:Mesh}
{\xe \v Mesh\:vaoId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Mesh::vaoId}}
\par
{\bkmkstart AAAAAAADWL}
{\bkmkend AAAAAAADWL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v vboId\:Mesh}
{\xe \v Mesh\:vboId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int* Mesh::vboId}}
\par
{\bkmkstart AAAAAAADWM}
{\bkmkend AAAAAAADWM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v vertexCount\:Mesh}
{\xe \v Mesh\:vertexCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Mesh::vertexCount}}
\par
{\bkmkstart AAAAAAADWN}
{\bkmkend AAAAAAADWN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v vertices\:Mesh}
{\xe \v Mesh\:vertices}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float* Mesh::vertices}}
\par
{\bkmkstart AAAAAAADWO}
{\bkmkend AAAAAAADWO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura doctest::detail::MessageBuilder\par \pard\plain 
{\tc\tcl2 \v doctest::detail::MessageBuilder}
{\xe \v doctest::detail::MessageBuilder}
{\bkmkstart AAAAAAAFAT}
{\bkmkend AAAAAAAFAT}
\par
{
{\f2 #include <doctest.hpp>}}\par
Diagrama de hierarquia da classe doctest::detail::MessageBuilder:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structdoctest_1_1detail_1_1_message_builder.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MessageBuilder} (const char *file, int line, {\b assertType::Enum} severity)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MessageBuilder} ()=delete\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~MessageBuilder} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > {\b MessageBuilder} & {\b operator,} (const T &in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > {\b MessageBuilder} & {\b operator<<} (const T &in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > {\b MessageBuilder} & {\b operator*} (const T &in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b log} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b react} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b std::ostream} * {\b m_stream}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b logged} = {\b false}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos herdados de {\b doctest::MessageData}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b String} {\b m_string}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b m_file}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b m_line}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b assertType::Enum} {\b m_severity}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v MessageBuilder\:doctest::detail::MessageBuilder}
{\xe \v doctest::detail::MessageBuilder\:MessageBuilder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::detail::MessageBuilder::MessageBuilder (const char *  {\i file}, int  {\i line}, {\b assertType::Enum}  {\i severity})}}
\par
{\bkmkstart AAAAAAAFAU}
{\bkmkend AAAAAAAFAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MessageBuilder\:doctest::detail::MessageBuilder}
{\xe \v doctest::detail::MessageBuilder\:MessageBuilder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::detail::MessageBuilder::MessageBuilder (){\f2 [delete]}}}
\par
{\bkmkstart AAAAAAAFAV}
{\bkmkend AAAAAAAFAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~MessageBuilder\:doctest::detail::MessageBuilder}
{\xe \v doctest::detail::MessageBuilder\:~MessageBuilder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::detail::MessageBuilder::~MessageBuilder ()}}
\par
{\bkmkstart AAAAAAAFAW}
{\bkmkend AAAAAAAFAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v log\:doctest::detail::MessageBuilder}
{\xe \v doctest::detail::MessageBuilder\:log}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::detail::MessageBuilder::log ()}}
\par
{\bkmkstart AAAAAAAFAX}
{\bkmkend AAAAAAAFAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator*\:doctest::detail::MessageBuilder}
{\xe \v doctest::detail::MessageBuilder\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b MessageBuilder} & doctest::detail::MessageBuilder::operator* (const T &  {\i in}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFAY}
{\bkmkend AAAAAAAFAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1740 \{ {\cf19 return} this->operator,(in); \}\par
}
}
{\xe \v operator,\:doctest::detail::MessageBuilder}
{\xe \v doctest::detail::MessageBuilder\:operator,}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b MessageBuilder} & doctest::detail::MessageBuilder::operator, (const T &  {\i in}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFAZ}
{\bkmkend AAAAAAAFAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1726                                                \{\par
1727             toStream(m_stream, in);\par
1728             {\cf19 return} *{\cf17 this};\par
1729         \}\par
}
}
{\xe \v operator<<\:doctest::detail::MessageBuilder}
{\xe \v doctest::detail::MessageBuilder\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b MessageBuilder} & doctest::detail::MessageBuilder::operator<< (const T &  {\i in}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFBA}
{\bkmkend AAAAAAAFBA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1733 \{ {\cf19 return} this->operator,(in); \}\par
}
}
{\xe \v react\:doctest::detail::MessageBuilder}
{\xe \v doctest::detail::MessageBuilder\:react}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void doctest::detail::MessageBuilder::react ()}}
\par
{\bkmkstart AAAAAAAFBB}
{\bkmkend AAAAAAAFBB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v logged\:doctest::detail::MessageBuilder}
{\xe \v doctest::detail::MessageBuilder\:logged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::detail::MessageBuilder::logged = {\b false}}}
\par
{\bkmkstart AAAAAAAFBC}
{\bkmkend AAAAAAAFBC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_stream\:doctest::detail::MessageBuilder}
{\xe \v doctest::detail::MessageBuilder\:m_stream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b std::ostream}* doctest::detail::MessageBuilder::m_stream}}
\par
{\bkmkstart AAAAAAAFBD}
{\bkmkend AAAAAAAFBD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura doctest::MessageData\par \pard\plain 
{\tc\tcl2 \v doctest::MessageData}
{\xe \v doctest::MessageData}
{\bkmkstart AAAAAAAERO}
{\bkmkend AAAAAAAERO}
\par
{
{\f2 #include <doctest.hpp>}}\par
Diagrama de hierarquia da classe doctest::MessageData:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structdoctest_1_1_message_data.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b String} {\b m_string}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b m_file}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b m_line}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b assertType::Enum} {\b m_severity}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v m_file\:doctest::MessageData}
{\xe \v doctest::MessageData\:m_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* doctest::MessageData::m_file}}
\par
{\bkmkstart AAAAAAAERP}
{\bkmkend AAAAAAAERP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_line\:doctest::MessageData}
{\xe \v doctest::MessageData\:m_line}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int doctest::MessageData::m_line}}
\par
{\bkmkstart AAAAAAAERQ}
{\bkmkend AAAAAAAERQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_severity\:doctest::MessageData}
{\xe \v doctest::MessageData\:m_severity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b assertType::Enum} doctest::MessageData::m_severity}}
\par
{\bkmkstart AAAAAAAERR}
{\bkmkend AAAAAAAERR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_string\:doctest::MessageData}
{\xe \v doctest::MessageData\:m_string}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b String} doctest::MessageData::m_string}}
\par
{\bkmkstart AAAAAAAERS}
{\bkmkend AAAAAAAERS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura Model\par \pard\plain 
{\tc\tcl2 \v Model}
{\xe \v Model}
{\bkmkstart AAAAAAADWP}
{\bkmkend AAAAAAADWP}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Matrix} {\b transform}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b meshCount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b materialCount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Mesh} * {\b meshes}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Material} * {\b materials}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b meshMaterial}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b boneCount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BoneInfo} * {\b bones}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Transform} * {\b bindPose}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v bindPose\:Model}
{\xe \v Model\:bindPose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Transform}* Model::bindPose}}
\par
{\bkmkstart AAAAAAADWQ}
{\bkmkend AAAAAAADWQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v boneCount\:Model}
{\xe \v Model\:boneCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Model::boneCount}}
\par
{\bkmkstart AAAAAAADWR}
{\bkmkend AAAAAAADWR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bones\:Model}
{\xe \v Model\:bones}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BoneInfo}* Model::bones}}
\par
{\bkmkstart AAAAAAADWS}
{\bkmkend AAAAAAADWS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v materialCount\:Model}
{\xe \v Model\:materialCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Model::materialCount}}
\par
{\bkmkstart AAAAAAADWT}
{\bkmkend AAAAAAADWT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v materials\:Model}
{\xe \v Model\:materials}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Material}* Model::materials}}
\par
{\bkmkstart AAAAAAADWU}
{\bkmkend AAAAAAADWU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v meshCount\:Model}
{\xe \v Model\:meshCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Model::meshCount}}
\par
{\bkmkstart AAAAAAADWV}
{\bkmkend AAAAAAADWV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v meshes\:Model}
{\xe \v Model\:meshes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Mesh}* Model::meshes}}
\par
{\bkmkstart AAAAAAADWW}
{\bkmkend AAAAAAADWW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v meshMaterial\:Model}
{\xe \v Model\:meshMaterial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* Model::meshMaterial}}
\par
{\bkmkstart AAAAAAADWX}
{\bkmkend AAAAAAADWX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v transform\:Model}
{\xe \v Model\:transform}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Matrix} Model::transform}}
\par
{\bkmkstart AAAAAAADWY}
{\bkmkend AAAAAAADWY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura ModelAnimation\par \pard\plain 
{\tc\tcl2 \v ModelAnimation}
{\xe \v ModelAnimation}
{\bkmkstart AAAAAAADWZ}
{\bkmkend AAAAAAADWZ}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b boneCount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b frameCount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BoneInfo} * {\b bones}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Transform} ** {\b framePoses}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v boneCount\:ModelAnimation}
{\xe \v ModelAnimation\:boneCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ModelAnimation::boneCount}}
\par
{\bkmkstart AAAAAAADXA}
{\bkmkend AAAAAAADXA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bones\:ModelAnimation}
{\xe \v ModelAnimation\:bones}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BoneInfo}* ModelAnimation::bones}}
\par
{\bkmkstart AAAAAAADXB}
{\bkmkend AAAAAAADXB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v frameCount\:ModelAnimation}
{\xe \v ModelAnimation\:frameCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ModelAnimation::frameCount}}
\par
{\bkmkstart AAAAAAADXC}
{\bkmkend AAAAAAADXC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v framePoses\:ModelAnimation}
{\xe \v ModelAnimation\:framePoses}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Transform}** ModelAnimation::framePoses}}
\par
{\bkmkstart AAAAAAADXD}
{\bkmkend AAAAAAADXD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura Music\par \pard\plain 
{\tc\tcl2 \v Music}
{\xe \v Music}
{\bkmkstart AAAAAAADXE}
{\bkmkend AAAAAAADXE}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AudioStream} {\b stream}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b frameCount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b looping}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ctxType}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b ctxData}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v ctxData\:Music}
{\xe \v Music\:ctxData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* Music::ctxData}}
\par
{\bkmkstart AAAAAAADXF}
{\bkmkend AAAAAAADXF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ctxType\:Music}
{\xe \v Music\:ctxType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Music::ctxType}}
\par
{\bkmkstart AAAAAAADXG}
{\bkmkend AAAAAAADXG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v frameCount\:Music}
{\xe \v Music\:frameCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Music::frameCount}}
\par
{\bkmkstart AAAAAAADXH}
{\bkmkend AAAAAAADXH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v looping\:Music}
{\xe \v Music\:looping}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Music::looping}}
\par
{\bkmkstart AAAAAAADXI}
{\bkmkend AAAAAAADXI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stream\:Music}
{\xe \v Music\:stream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AudioStream} Music::stream}}
\par
{\bkmkstart AAAAAAADXJ}
{\bkmkend AAAAAAADXJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura NPatchInfo\par \pard\plain 
{\tc\tcl2 \v NPatchInfo}
{\xe \v NPatchInfo}
{\bkmkstart AAAAAAADXK}
{\bkmkend AAAAAAADXK}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Rectangle} {\b source}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b left}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b top}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b right}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b bottom}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b layout}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v bottom\:NPatchInfo}
{\xe \v NPatchInfo\:bottom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int NPatchInfo::bottom}}
\par
{\bkmkstart AAAAAAADXL}
{\bkmkend AAAAAAADXL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v layout\:NPatchInfo}
{\xe \v NPatchInfo\:layout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int NPatchInfo::layout}}
\par
{\bkmkstart AAAAAAADXM}
{\bkmkend AAAAAAADXM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v left\:NPatchInfo}
{\xe \v NPatchInfo\:left}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int NPatchInfo::left}}
\par
{\bkmkstart AAAAAAADXN}
{\bkmkend AAAAAAADXN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v right\:NPatchInfo}
{\xe \v NPatchInfo\:right}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int NPatchInfo::right}}
\par
{\bkmkstart AAAAAAADXO}
{\bkmkend AAAAAAADXO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v source\:NPatchInfo}
{\xe \v NPatchInfo\:source}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Rectangle} NPatchInfo::source}}
\par
{\bkmkstart AAAAAAADXP}
{\bkmkend AAAAAAADXP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v top\:NPatchInfo}
{\xe \v NPatchInfo\:top}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int NPatchInfo::top}}
\par
{\bkmkstart AAAAAAADXQ}
{\bkmkend AAAAAAADXQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Player\par \pard\plain 
{\tc\tcl2 \v Player}
{\xe \v Player}
{\bkmkstart AAAAAAADXR}
{\bkmkend AAAAAAADXR}
\par
{
{\f2 #include <Player.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Player} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Player} (const std::string name)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new {\b Player} object given a name. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Player} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Player} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setName} (const std::string name)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set a new name of the player. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getName} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the player name attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::shared_ptr< {\b Score} > {\b getScore} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the player score. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::shared_ptr< {\b Board} > {\b getBoard} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the player board. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Player\:Player}
{\xe \v Player\:Player}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Player::Player ()}}
\par
{\bkmkstart AAAAAAADXS}
{\bkmkend AAAAAAADXS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a player with default name.  \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14 : Player({\cf22 "Player"}) \{\}\par
}
}
{\xe \v Player\:Player}
{\xe \v Player\:Player}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Player::Player (const std::string  {\i name})}}
\par
{\bkmkstart AAAAAAADXT}
{\bkmkend AAAAAAADXT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new {\b Player} object given a name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a player with a custom name. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{The name which will be associated to the player. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 10                                    : score({\cf17 new} Score()), board({\cf17 new} Board()) \{\par
11         setName(name);\par
12 \}\par
}
}
{\xe \v ~Player\:Player}
{\xe \v Player\:~Player}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Player::~Player (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADXU}
{\bkmkend AAAAAAADXU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Player} object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 16 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getBoard\:Player}
{\xe \v Player\:getBoard}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::shared_ptr< {\b Board} > Player::getBoard () const}}
\par
{\bkmkstart AAAAAAADXV}
{\bkmkend AAAAAAADXV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the player board. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A pointer to the original board of the player. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 34                                             \{\par
35     {\cf19 return} board;\par
36 \}\par
}
}
{\xe \v getName\:Player}
{\xe \v Player\:getName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Player::getName () const}}
\par
{\bkmkstart AAAAAAADXW}
{\bkmkend AAAAAAADXW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the player name attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The value of a string with the player name. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 26                                 \{ \par
27     {\cf19 return} name;\par
28 \}\par
}
}
{\xe \v getScore\:Player}
{\xe \v Player\:getScore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::shared_ptr< {\b Score} > Player::getScore () const}}
\par
{\bkmkstart AAAAAAADXX}
{\bkmkend AAAAAAADXX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the player score. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A pointer to the original score of the player. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 30                                             \{\par
31     {\cf19 return} score;\par
32 \}\par
}
}
{\xe \v setName\:Player}
{\xe \v Player\:setName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Player::setName (const std::string  {\i name})}}
\par
{\bkmkstart AAAAAAADXY}
{\bkmkend AAAAAAADXY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set a new name of the player. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{The new name of the player. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 20                                          \{\par
21     {\cf19 if}(name == {\cf22 ""}) {\cf19 throw} std::invalid_argument({\cf22 "Name cannot be empty"});\par
22     this->name = name;\par
23     {\cf19 return};\par
24 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/{\b Player.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/match/{\b Player.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Views::PlayerRegistredScore\par \pard\plain 
{\tc\tcl2 \v Views::PlayerRegistredScore}
{\xe \v Views::PlayerRegistredScore}
{\bkmkstart AAAAAAAFKP}
{\bkmkend AAAAAAAFKP}
\par
{
{\f2 #include <PlayerRegistredScore.hpp>}}\par
Diagrama de hierarquia da classe Views::PlayerRegistredScore:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_views_1_1_player_registred_score.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PlayerRegistredScore} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the section that displays the score of a player in a match. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~PlayerRegistredScore} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Player} Registred {\b Score} view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b update} (const std::string playerName, const {\b Score} playerScore)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update the view values based on the playerName and playerScore. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getPlayerName} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the player name attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Score} {\b getPlayerScore} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the player score attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Views::View}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~View} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b View} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Component} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Component}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the render contract of components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getXPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the X position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getYPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Vector2} {\b getPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position attribute. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_WIDTH} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_HEIGHT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Vector2} {\b DEFAULT_INITIAL_POSITION} = \{ 0, 0 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b width} = {\b DEFAUT_INITIAL_WIDTH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b height} = {\b DEFAUT_INITIAL_HEIGHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b position} = {\b DEFAULT_INITIAL_POSITION}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v PlayerRegistredScore\:Views::PlayerRegistredScore}
{\xe \v Views::PlayerRegistredScore\:PlayerRegistredScore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::PlayerRegistredScore::PlayerRegistredScore ()}}
\par
{\bkmkstart AAAAAAAFKQ}
{\bkmkend AAAAAAAFKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the section that displays the score of a player in a match. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14                                                 : playerNameLabel({\cf17 new} Components::Text()) \{\par
15     scoreLabels.push_back(std::unique_ptr<Components::Text>({\cf17 new} Components::Text()));\par
16     scoreLabels.push_back(std::unique_ptr<Components::Text>({\cf17 new} Components::Text()));\par
17     scoreLabels.push_back(std::unique_ptr<Components::Text>({\cf17 new} Components::Text()));\par
18 \par
19     setXPosition(0.0);\par
20     setYPosition(0.0);\par
21 \par
22     findHeight();\par
23     findWidth();\par
24 \}\par
}
}
{\xe \v ~PlayerRegistredScore\:Views::PlayerRegistredScore}
{\xe \v Views::PlayerRegistredScore\:~PlayerRegistredScore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::PlayerRegistredScore::~PlayerRegistredScore (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFKR}
{\bkmkend AAAAAAAFKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Player} Registred {\b Score} view. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 26 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v findHeight\:Views::PlayerRegistredScore}
{\xe \v Views::PlayerRegistredScore\:findHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::PlayerRegistredScore::findHeight (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFKS}
{\bkmkend AAAAAAAFKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 118                                            \{\par
119     height = abs(playerNameLabel->getYPosition() - scoreLabels[scoreLabels.size() - 1]->getYPosition()) + scoreLabels[scoreLabels.size() - 1]->getHeight();\par
120     {\cf19 return};\par
121 \}\par
}
}
{\xe \v findWidth\:Views::PlayerRegistredScore}
{\xe \v Views::PlayerRegistredScore\:findWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::PlayerRegistredScore::findWidth (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFKT}
{\bkmkend AAAAAAAFKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 103                                           \{\par
104     {\cf18 float} heighestWidth = playerNameLabel->getWidth();\par
105 \par
106     {\cf19 for}({\cf17 auto}&& scoreLabel : scoreLabels) \{\par
107         {\cf18 float} labelWidth = getLabelMarginLeft() + scoreLabel->getWidth();\par
108 \par
109         {\cf19 if}(labelWidth > heighestWidth) \{\par
110             heighestWidth = labelWidth;\par
111         \}\par
112     \}\par
113 \par
114     width = heighestWidth;\par
115     {\cf19 return};\par
116 \}\par
}
}
{\xe \v getPlayerName\:Views::PlayerRegistredScore}
{\xe \v Views::PlayerRegistredScore\:getPlayerName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Views::PlayerRegistredScore::getPlayerName () const}}
\par
{\bkmkstart AAAAAAAFKU}
{\bkmkend AAAAAAAFKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the player name attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Player} name attribute value. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 136                                                          \{\par
137     {\cf19 return} playerName;\par
138 \}\par
}
}
{\xe \v getPlayerScore\:Views::PlayerRegistredScore}
{\xe \v Views::PlayerRegistredScore\:getPlayerScore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Score} Views::PlayerRegistredScore::getPlayerScore () const}}
\par
{\bkmkstart AAAAAAAFKV}
{\bkmkend AAAAAAAFKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the player score attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Player} score attribute copy. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 145                                                       \{\par
146     {\cf19 return} playerScore;\par
147 \}\par
}
}
{\xe \v render\:Views::PlayerRegistredScore}
{\xe \v Views::PlayerRegistredScore\:render}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::PlayerRegistredScore::render (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEIF}
{\bkmkend AAAAAAAEIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }}\par
{
Implementa {\b Components::Component} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEED \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 28                                        \{\par
29     playerNameLabel->render();\par
30 \par
31     {\cf19 for}({\cf17 auto}&& scoreLabel : scoreLabels) \{\par
32         scoreLabel->render();\par
33     \}\par
34 \par
35     {\cf19 return};\par
36 \}\par
}
}
{\xe \v update\:Views::PlayerRegistredScore}
{\xe \v Views::PlayerRegistredScore\:update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::PlayerRegistredScore::update (const std::string  {\i playerName}, const {\b Score}  {\i playerScore})}}
\par
{\bkmkstart AAAAAAAFKW}
{\bkmkend AAAAAAAFKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update the view values based on the playerName and playerScore. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i playerName} \cell }{is the name of the player that will be displayed on the view. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i playerScore} \cell }{is the score of the player that will be displayed on the view. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 40                                                                                           \{\par
41     {\cf17 const} std::string LABEL_NAVIOS_DESTRUIDOS = {\cf22 "*Navios Destruidos:"};\par
42     {\cf17 const} std::string LABEL_NAVIOS_RESTANTES = {\cf22 "*Navios Restantes:"};\par
43     {\cf17 const} std::string LABEL_PRECISAO = {\cf22 "*Precisao:"};\par
44 \par
45     setPlayerName(playerName);\par
46     playerNameLabel->setText(playerName);\par
47     definePlayerNameTextSize();\par
48 \par
49     setPlayerScore(playerScore);\par
50     scoreLabels[0]->setText(ScoreFormatter::buildLabelWithValue(LABEL_NAVIOS_DESTRUIDOS, getPlayerScore().getDestroyedTroops()));\par
51     scoreLabels[1]->setText(ScoreFormatter::buildLabelWithValue(LABEL_NAVIOS_RESTANTES, getPlayerScore().getRemainingTroops()));\par
52     scoreLabels[2]->setText(ScoreFormatter::buildProportionLabel(LABEL_PRECISAO, getPlayerScore().getHitShoots(), getPlayerScore().getTotalAmountShoots()));\par
53     defineScoreLabelsTextSize();\par
54 \par
55     findWidth();\par
56     findHeight();\par
57 \par
58     {\cf19 return};\par
59 \}\par
}
}
{\xe \v updateInnerComponentsPositions\:Views::PlayerRegistredScore}
{\xe \v Views::PlayerRegistredScore\:updateInnerComponentsPositions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::PlayerRegistredScore::updateInnerComponentsPositions (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFKX}
{\bkmkend AAAAAAAFKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 61                                                                \{\par
62     positionPlayerNameLabel();\par
63     positionPlayerScoreLabels();\par
64 \par
65     {\cf19 return};\par
66 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/score/{\b PlayerRegistredScore.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/score/{\b PlayerRegistredScore.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Point\par \pard\plain 
{\tc\tcl2 \v Point}
{\xe \v Point}
{\bkmkstart AAAAAAADXZ}
{\bkmkend AAAAAAADXZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Point} class used for positioning and board manipulations. }}\par
{
{\f2 #include <Point.hpp>}}\par
Diagrama de hierarquia da classe Point:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_point.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Point} (const int {\b x}, const int {\b y})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new {\b Point} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Point} (const {\b Point} &point)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Point} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Point} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setX} (const int {\b x})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set value of x. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getX} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the value of x. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setY} (const int {\b y})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the value of y. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getY} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the value of y. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b operator==} (const {\b Point} &other) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Equals comparator overloader. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b operator<} (const {\b Point} &other) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"<" operator overloader }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Point} {\b operator+} (const {\b Point} &other) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"+" operator overloader }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b x} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b y} = 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Point} class used for positioning and board manipulations. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Point\:Point}
{\xe \v Point\:Point}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Point::Point (const int  {\i x}, const int  {\i y})}}
\par
{\bkmkstart AAAAAAADYA}
{\bkmkend AAAAAAADYA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new {\b Point} object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create a new point given x and y values. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{The x position in a plane/matrix. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{The y position in a plane/matrix. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4                                      \{\par
5     setX(x);\par
6     setY(y);\par
7 \}\par
}
}
{\xe \v Point\:Point}
{\xe \v Point\:Point}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Point::Point (const {\b Point} &  {\i point})}}
\par
{\bkmkstart AAAAAAADYB}
{\bkmkend AAAAAAADYB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new point given another point object. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i point} \cell }{The point which will be copied. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 9                                \{\par
10     setX(point.getX());\par
11     setY(point.getY());\par
12 \}\par
}
}
{\xe \v ~Point\:Point}
{\xe \v Point\:~Point}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Point::~Point (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADYC}
{\bkmkend AAAAAAADYC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Point} object. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getX\:Point}
{\xe \v Point\:getX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Point::getX () const}}
\par
{\bkmkstart AAAAAAADYD}
{\bkmkend AAAAAAADYD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the value of x. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A copy of the value of x. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 24                       \{\par
25     {\cf19 return} x;\par
26 \}\par
}
}
{\xe \v getY\:Point}
{\xe \v Point\:getY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Point::getY () const}}
\par
{\bkmkstart AAAAAAADYE}
{\bkmkend AAAAAAADYE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the value of y. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A copy of the value of y. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 34                       \{\par
35     {\cf19 return} y;\par
36 \}\par
}
}
{\xe \v operator+\:Point}
{\xe \v Point\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Point} Point::operator+ (const {\b Point} &  {\i other}) const}}
\par
{\bkmkstart AAAAAAADYF}
{\bkmkend AAAAAAADYF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"+" operator overloader }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i other} \cell }{The other point object instance that will be added. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A point instance with x and y values being the sum of both instances x and y values, respectively. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 54                                                \{\par
55     {\cf19 return} Point(this->getX() + other.getX(), this->getY() + other.getY());\par
56 \}\par
}
}
{\xe \v operator<\:Point}
{\xe \v Point\:operator<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Point::operator< (const {\b Point} &  {\i other}) const}}
\par
{\bkmkstart AAAAAAADYG}
{\bkmkend AAAAAAADYG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"<" operator overloader }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i other} \cell }{The other point instance that will be compared. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true If x is smaller than the other instance. If equal, if y is smaller than the other instance. \par
false If x is greater than the other instance. If equal, if y is greater than the other instance. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 46                                               \{\par
47     {\cf19 if}(this->getX() == other.getX()) \{\par
48         {\cf19 return} this->getY() < other.getY();\par
49     \}\par
50 \par
51     {\cf19 return} this->getX() < other.getX();\par
52 \}\par
}
}
{\xe \v operator==\:Point}
{\xe \v Point\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Point::operator== (const {\b Point} &  {\i other}) const}}
\par
{\bkmkstart AAAAAAADYH}
{\bkmkend AAAAAAADYH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Equals comparator overloader. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i other} \cell }{The other point object instance that will be compared. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Whether x and y on both instances are equal, respectively. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 42                                                \{\par
43     {\cf19 return} this->getX() == other.getX() && this->getY() == other.getY();\par
44 \}\par
}
}
{\xe \v setX\:Point}
{\xe \v Point\:setX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Point::setX (const int  {\i x})}}
\par
{\bkmkstart AAAAAAADYI}
{\bkmkend AAAAAAADYI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set value of x. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{New value of x. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 18                             \{\par
19     {\cf19 if}(x < 0) {\cf19 throw} std::invalid_argument({\cf22 "Point cannot have negative x"});\par
20     this->x = x;\par
21     {\cf19 return};\par
22 \}\par
}
}
{\xe \v setY\:Point}
{\xe \v Point\:setY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Point::setY (const int  {\i y})}}
\par
{\bkmkstart AAAAAAADYJ}
{\bkmkend AAAAAAADYJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the value of y. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{New value of y. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 28                             \{\par
29     {\cf19 if}(y < 0) {\cf19 throw} std::invalid_argument({\cf22 "Point cannot have negative y"});\par
30     this->y = y;\par
31     {\cf19 return};\par
32 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v x\:Point}
{\xe \v Point\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Point::x = 0{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADYK}
{\bkmkend AAAAAAADYK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Representations of x and y positions on a plane/matrix. \par
}}
{\xe \v y\:Point}
{\xe \v Point\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Point::y = 0{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADYL}
{\bkmkend AAAAAAADYL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/{\b Point.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/{\b Point.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Position\par \pard\plain 
{\tc\tcl2 \v Position}
{\xe \v Position}
{\bkmkstart AAAAAAADYM}
{\bkmkend AAAAAAADYM}
\par
{
{\f2 #include <Position.hpp>}}\par
Diagrama de hierarquia da classe Position:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_position.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Position} (const int {\b x}, const int {\b y})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new {\b Position} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Position} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Position} destructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTroop} (std::shared_ptr< {\b Troop} > troop)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the troop attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::shared_ptr< {\b Troop} > {\b getTroop} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the troop attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b hasTroop} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verify if the position has a troop on it. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Point}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Point} (const int {\b x}, const int {\b y})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new {\b Point} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Point} (const {\b Point} &point)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Point} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Point} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setX} (const int {\b x})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set value of x. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getX} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the value of x. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setY} (const int {\b y})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the value of y. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getY} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the value of y. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b operator==} (const {\b Point} &other) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Equals comparator overloader. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b operator<} (const {\b Point} &other) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"<" operator overloader }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Point} {\b operator+} (const {\b Point} &other) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"+" operator overloader }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Point}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b x} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b y} = 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Position\:Position}
{\xe \v Position\:Position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Position::Position (const int  {\i x}, const int  {\i y})}}
\par
{\bkmkstart AAAAAAADYN}
{\bkmkend AAAAAAADYN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new {\b Position} object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{x position in a plane or matrix. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{y position in a plane or matrix. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 7 : Point(x, y) \{\}\par
}
}
{\xe \v ~Position\:Position}
{\xe \v Position\:~Position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Position::~Position (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADYO}
{\bkmkend AAAAAAADYO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Position} destructor. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 9 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getTroop\:Position}
{\xe \v Position\:getTroop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::shared_ptr< {\b Troop} > Position::getTroop () const}}
\par
{\bkmkstart AAAAAAADYP}
{\bkmkend AAAAAAADYP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the troop attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A shared pointer to the troop attribute. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 22                                               \{\par
23     {\cf19 return} troop;\par
24 \}\par
}
}
{\xe \v hasTroop\:Position}
{\xe \v Position\:hasTroop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Position::hasTroop () const}}
\par
{\bkmkstart AAAAAAADYQ}
{\bkmkend AAAAAAADYQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verify if the position has a troop on it. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
an boolean that says the position contains an troop; \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 11                               \{\par
12     {\cf19 return} (troop != {\cf17 nullptr});\par
13 \}\par
}
}
{\xe \v setTroop\:Position}
{\xe \v Position\:setTroop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Position::setTroop (std::shared_ptr< {\b Troop} >  {\i troop})}}
\par
{\bkmkstart AAAAAAADYR}
{\bkmkend AAAAAAADYR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the troop attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i troop} \cell }{A shared pointer to the troop attribute. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17                                                   \{\par
18     this->troop = troop;\par
19     {\cf19 return};\par
20 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/{\b Position.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/{\b Position.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Views::PositionDisplay\par \pard\plain 
{\tc\tcl2 \v Views::PositionDisplay}
{\xe \v Views::PositionDisplay}
{\bkmkstart AAAAAAAFKY}
{\bkmkend AAAAAAAFKY}
\par
{
{\f2 #include <PositionDisplay.hpp>}}\par
Diagrama de hierarquia da classe Views::PositionDisplay:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_views_1_1_position_display.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PositionDisplay} (const {\b Point} boardCoordinates)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the basic template for the troop display with a new logic position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PositionDisplay} (std::shared_ptr< {\b Position} > {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the basic template for the troop display with a new logic position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~PositionDisplay} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Position} Display view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkClick} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the position was clicked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkMouseOver} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse is over the position display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Point} {\b getCoordinates} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the coodinates the position is place. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTroop} (const std::shared_ptr< {\b Troop} > troop)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the troop that is in the position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::shared_ptr< {\b Troop} > {\b getTroop} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the troop in the position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTroopImage} (const std::string path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the troop image that will be displayed on this position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTroopImage} (const std::shared_ptr< {\b Troop} > troop)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the troop image that will be displayed on this position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b containsTroop} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the position contains a troop. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Views::View}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~View} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b View} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Component} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Component}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the render contract of components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getXPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the X position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getYPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Vector2} {\b getPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::IClickable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkClick} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the troop display was clicked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkMouseOver} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse is over the troop display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setEnabled} (const {\b bool} {\b enabled})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the enabled attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b isEnabled} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the button is enable. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getDefaultImageSize} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get image within the position size value. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::unique_ptr< {\b Components::Image} > {\b troopImage} = nullptr\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Rectangle} {\b background}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Color} {\b backgroundColor} = {\b DEFAULT_BALCK}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Color} {\b hoveredBackgroundColor} = {\b DEFAULT_BALCK}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::shared_ptr< {\b Position} > {\b position} = nullptr\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b width} = {\b DEFAUT_INITIAL_WIDTH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b height} = {\b DEFAUT_INITIAL_HEIGHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b position} = {\b DEFAULT_INITIAL_POSITION}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::IClickable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b enabled} = {\b true}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_WIDTH} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_HEIGHT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Vector2} {\b DEFAULT_INITIAL_POSITION} = \{ 0, 0 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v PositionDisplay\:Views::PositionDisplay}
{\xe \v Views::PositionDisplay\:PositionDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::PositionDisplay::PositionDisplay (const {\b Point}  {\i boardCoordinates})}}
\par
{\bkmkstart AAAAAAAFKZ}
{\bkmkend AAAAAAAFKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the basic template for the troop display with a new logic position. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i boardCoordinates} \cell }{is the coordinates that the position is placed. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 11                                                                   :\par
12     troopImage({\cf17 new} Components::Image()),\par
13     position({\cf17 new} Position(boardCoordinates.getX(), boardCoordinates.getY())) \{\par
14     buildComponent();\par
15 \}\par
}
}
{\xe \v PositionDisplay\:Views::PositionDisplay}
{\xe \v Views::PositionDisplay\:PositionDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::PositionDisplay::PositionDisplay (std::shared_ptr< {\b Position} >  {\i position})}}
\par
{\bkmkstart AAAAAAAFLA}
{\bkmkend AAAAAAAFLA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the basic template for the troop display with a new logic position. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i position} \cell }{is the logic position that will base the display. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17                                                                       :\par
18     troopImage({\cf17 new} Components::Image()),\par
19     position(position) \{\par
20     buildComponent();\par
21 \}\par
}
}
{\xe \v ~PositionDisplay\:Views::PositionDisplay}
{\xe \v Views::PositionDisplay\:~PositionDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::PositionDisplay::~PositionDisplay (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFLB}
{\bkmkend AAAAAAAFLB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Position} Display view. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 36 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v checkClick\:Views::PositionDisplay}
{\xe \v Views::PositionDisplay\:checkClick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Views::PositionDisplay::checkClick (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEIV}
{\bkmkend AAAAAAAEIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the position was clicked. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Boolean that indicates if the position was clicked. \par
}}}{
Implementa {\b Components::IClickable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEDX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplementado por {\b Views::GamePositionDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 38                                       \{\par
39     {\cf19 return} (checkMouseOver() && IsMouseButtonReleased(MOUSE_BUTTON_LEFT));\par
40 \}\par
}
}
{\xe \v checkMouseOver\:Views::PositionDisplay}
{\xe \v Views::PositionDisplay\:checkMouseOver}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Views::PositionDisplay::checkMouseOver (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEIX}
{\bkmkend AAAAAAAEIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse is over the position display. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Boolean that indicates if the mouse is over the position display. \par
}}}{
Implementa {\b Components::IClickable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEDZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 42                                           \{\par
43     {\cf19 return} (isEnabled() && CheckCollisionPointRec(GetMousePosition(), background));\par
44 \}\par
}
}
{\xe \v containsTroop\:Views::PositionDisplay}
{\xe \v Views::PositionDisplay\:containsTroop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Views::PositionDisplay::containsTroop () const}}
\par
{\bkmkstart AAAAAAAFLC}
{\bkmkend AAAAAAAFLC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the position contains a troop. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Boolean that indicates if the position contains a troop. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 133                                                \{\par
134     {\cf19 return} (position->getTroop() != {\cf17 nullptr});\par
135 \}\par
}
}
{\xe \v findHeight\:Views::PositionDisplay}
{\xe \v Views::PositionDisplay\:findHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::PositionDisplay::findHeight (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFLD}
{\bkmkend AAAAAAAFLD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 60                                       \{\par
61     this->height = background.height;\par
62     {\cf19 return};\par
63 \}\par
}
}
{\xe \v findWidth\:Views::PositionDisplay}
{\xe \v Views::PositionDisplay\:findWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::PositionDisplay::findWidth (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFLE}
{\bkmkend AAAAAAAFLE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 55                                      \{\par
56     this->width = background.width;\par
57     {\cf19 return};\par
58 \}\par
}
}
{\xe \v getCoordinates\:Views::PositionDisplay}
{\xe \v Views::PositionDisplay\:getCoordinates}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Point} Views::PositionDisplay::getCoordinates () const}}
\par
{\bkmkstart AAAAAAAFLF}
{\bkmkend AAAAAAAFLF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the coodinates the position is place. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Coordinates attribute copy. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 108                                                  \{\par
109     {\cf19 return} Point(position->getX(), position->getY());\par
110 \}\par
}
}
{\xe \v getDefaultImageSize\:Views::PositionDisplay}
{\xe \v Views::PositionDisplay\:getDefaultImageSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Views::PositionDisplay::getDefaultImageSize () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAFLG}
{\bkmkend AAAAAAAFLG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get image within the position size value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Image} within the position size value. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 100                                                       \{\par
101     {\cf19 return} percentOf(3.6, Screens::Screen::getDisplayHeight());\par
102 \}\par
}
}
{\xe \v getTroop\:Views::PositionDisplay}
{\xe \v Views::PositionDisplay\:getTroop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::shared_ptr< {\b Troop} > Views::PositionDisplay::getTroop () const}}
\par
{\bkmkstart AAAAAAAFLH}
{\bkmkend AAAAAAAFLH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the troop in the position. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Troop} pointer that is in the position. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 117                                                           \{\par
118     {\cf19 return} position->getTroop();\par
119 \}\par
}
}
{\xe \v render\:Views::PositionDisplay}
{\xe \v Views::PositionDisplay\:render}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Views::PositionDisplay::render (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAEIH}
{\bkmkend AAAAAAAEIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }}\par
{
Implementa {\b Components::Component} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEED \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Implementado por {\b Views::GamePositionDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHY \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Views::PositioningPositionDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setTroop\:Views::PositionDisplay}
{\xe \v Views::PositionDisplay\:setTroop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::PositionDisplay::setTroop (const std::shared_ptr< {\b Troop} >  {\i troop})}}
\par
{\bkmkstart AAAAAAAFLI}
{\bkmkend AAAAAAAFLI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the troop that is in the position. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i troop} \cell }{is the troop that will be placed at the position. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 112                                                                     \{\par
113     position->setTroop(troop);\par
114     {\cf19 return};\par
115 \}\par
}
}
{\xe \v setTroopImage\:Views::PositionDisplay}
{\xe \v Views::PositionDisplay\:setTroopImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::PositionDisplay::setTroopImage (const std::shared_ptr< {\b Troop} >  {\i troop})}}
\par
{\bkmkstart AAAAAAAFLJ}
{\bkmkend AAAAAAAFLJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the troop image that will be displayed on this position. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i troop} \cell }{is the troop in this position. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 121                                                                          \{\par
122     std::string path = troop->getImageInPoint(getCoordinates());\par
123     setTroopImage(path);\par
124 \par
125     {\cf19 return};\par
126 \}\par
}
}
{\xe \v setTroopImage\:Views::PositionDisplay}
{\xe \v Views::PositionDisplay\:setTroopImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::PositionDisplay::setTroopImage (const std::string  {\i path})}}
\par
{\bkmkstart AAAAAAAFLK}
{\bkmkend AAAAAAAFLK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the troop image that will be displayed on this position. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{is the path to the troop part image. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 128                                                              \{\par
129     troopImage->setPath(path);\par
130     {\cf19 return};\par
131 \}\par
}
}
{\xe \v updateInnerComponentsPositions\:Views::PositionDisplay}
{\xe \v Views::PositionDisplay\:updateInnerComponentsPositions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::PositionDisplay::updateInnerComponentsPositions (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFJY}
{\bkmkend AAAAAAAFJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplementado por {\b Views::GamePositionDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFJX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 48                                                           \{\par
49     positionBackground();\par
50     positionTroopImage();\par
51 \par
52     {\cf19 return};\par
53 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v background\:Views::PositionDisplay}
{\xe \v Views::PositionDisplay\:background}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Rectangle} Views::PositionDisplay::background{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAFLL}
{\bkmkend AAAAAAAFLL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v backgroundColor\:Views::PositionDisplay}
{\xe \v Views::PositionDisplay\:backgroundColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Color} Views::PositionDisplay::backgroundColor = {\b DEFAULT_BALCK}{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAFLM}
{\bkmkend AAAAAAAFLM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v hoveredBackgroundColor\:Views::PositionDisplay}
{\xe \v Views::PositionDisplay\:hoveredBackgroundColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Color} Views::PositionDisplay::hoveredBackgroundColor = {\b DEFAULT_BALCK}{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAFLN}
{\bkmkend AAAAAAAFLN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v position\:Views::PositionDisplay}
{\xe \v Views::PositionDisplay\:position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::shared_ptr<{\b Position}> Views::PositionDisplay::position = nullptr{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAFLO}
{\bkmkend AAAAAAAFLO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v troopImage\:Views::PositionDisplay}
{\xe \v Views::PositionDisplay\:troopImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::unique_ptr<{\b Components::Image}> Views::PositionDisplay::troopImage = nullptr{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAFLP}
{\bkmkend AAAAAAAFLP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/shared/{\b PositionDisplay.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/shared/{\b PositionDisplay.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Views::PositioningBoardDisplay\par \pard\plain 
{\tc\tcl2 \v Views::PositioningBoardDisplay}
{\xe \v Views::PositioningBoardDisplay}
{\bkmkstart AAAAAAAFLQ}
{\bkmkend AAAAAAAFLQ}
\par
{
{\f2 #include <PositioningBoardDisplay.hpp>}}\par
Diagrama de hierarquia da classe Views::PositioningBoardDisplay:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_views_1_1_positioning_board_display.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PositioningBoardDisplay} (const unsigned int {\b amountHorizontalCells}, const unsigned int {\b amountVerticalCells})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the Positioning {\b Board} of a player with a new logic board. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PositioningBoardDisplay} (std::shared_ptr< {\b Board} > {\b logicBoard})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the Positioning {\b Board} of a player based on a existing logic board. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~PositioningBoardDisplay} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Positioning {\b Board} view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b positionTroop} (const std::shared_ptr< {\b Troop} > troop)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Position} a troop in some board positions based on it's shape. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removeTroop} (const std::shared_ptr< {\b Troop} > troop)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove the troop from this position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b markPositions} (const std::vector< {\b Point} > &points)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set a group of position as marked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b unmarkPositions} (const std::vector< {\b Point} > &points)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unmark a group of positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b unmarkPosition} (const {\b Point} point)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unmark a specific position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::vector< std::shared_ptr< {\b PositioningPositionDisplay} > > > {\b getCellsAsPositioningCells} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the board cells as positioning cells objects. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Views::BoardDisplay}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BoardDisplay} (const unsigned int {\b amountHorizontalCells}, const unsigned int {\b amountVerticalCells})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the basic template for the troop display with a new logic position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BoardDisplay} (std::shared_ptr< {\b Board} > {\b logicBoard})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the basic template for the troop display with a new logic position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~BoardDisplay} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Board} Display view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b getAmountHorizontalCells} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the amount of horizontal cells the board has. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b getAmountVerticalCells} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the amount of vertical cells the board has. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::vector< std::shared_ptr< {\b PositionDisplay} > > > {\b getCells} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the board cells objects. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Views::View}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~View} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b View} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Component} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Component}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the render contract of components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getXPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the X position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getYPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Vector2} {\b getPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position attribute. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b initializeCells} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiate the board cells components. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros protegidos herdados de {\b Views::BoardDisplay}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b initializeCells} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiate the board cells components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b buildBackground} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Build background style. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_WIDTH} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_HEIGHT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Vector2} {\b DEFAULT_INITIAL_POSITION} = \{ 0, 0 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Views::BoardDisplay}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::unique_ptr< {\b Components::Image} > {\b background} = nullptr\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::vector< std::shared_ptr< {\b PositionDisplay} > > > {\b cells}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b amountHorizontalCells} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b amountVerticalCells} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::shared_ptr< {\b Board} > {\b logicBoard} = nullptr\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b width} = {\b DEFAUT_INITIAL_WIDTH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b height} = {\b DEFAUT_INITIAL_HEIGHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b position} = {\b DEFAULT_INITIAL_POSITION}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v PositioningBoardDisplay\:Views::PositioningBoardDisplay}
{\xe \v Views::PositioningBoardDisplay\:PositioningBoardDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::PositioningBoardDisplay::PositioningBoardDisplay (const unsigned int  {\i amountHorizontalCells}, const unsigned int  {\i amountVerticalCells})}}
\par
{\bkmkstart AAAAAAAFLR}
{\bkmkend AAAAAAAFLR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the Positioning {\b Board} of a player with a new logic board. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i amountHorizontalCells} \cell }{is the amount of horizontal cells that the board has. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i amountVerticalCells} \cell }{is the amount of vertical cells that the board has. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 15                                                                                                                                       :\par
16     BoardDisplay(amountHorizontalCells, amountVerticalCells) \{\par
17     buildComponent();\par
18 \}\par
}
}
{\xe \v PositioningBoardDisplay\:Views::PositioningBoardDisplay}
{\xe \v Views::PositioningBoardDisplay\:PositioningBoardDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::PositioningBoardDisplay::PositioningBoardDisplay (std::shared_ptr< {\b Board} >  {\i logicBoard})}}
\par
{\bkmkstart AAAAAAAFLS}
{\bkmkend AAAAAAAFLS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the Positioning {\b Board} of a player based on a existing logic board. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i logicBoard} \cell }{is logic part of the board. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 20                                                                                      :\par
21     BoardDisplay(logicBoard) \{\par
22     buildComponent();\par
23 \}\par
}
}
{\xe \v ~PositioningBoardDisplay\:Views::PositioningBoardDisplay}
{\xe \v Views::PositioningBoardDisplay\:~PositioningBoardDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::PositioningBoardDisplay::~PositioningBoardDisplay (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFLT}
{\bkmkend AAAAAAAFLT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Positioning {\b Board} view. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 39 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getCellsAsPositioningCells\:Views::PositioningBoardDisplay}
{\xe \v Views::PositioningBoardDisplay\:getCellsAsPositioningCells}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< std::vector< std::shared_ptr< {\b Views::PositioningPositionDisplay} > > > Views::PositioningBoardDisplay::getCellsAsPositioningCells () const}}
\par
{\bkmkstart AAAAAAAFLU}
{\bkmkend AAAAAAAFLU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the board cells as positioning cells objects. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Matrix} of the board cells as positioning cells. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 104                                                                                                                                     \{\par
105     std::vector<std::vector<std::shared_ptr<PositioningPositionDisplay>>> positioningCells;\par
106 \par
107     {\cf19 for}({\cf18 unsigned} {\cf18 int} i = 0; i < cells.size(); i++) \{\par
108         positioningCells.push_back(std::vector<std::shared_ptr<PositioningPositionDisplay>>());\par
109         {\cf19 for}({\cf18 unsigned} {\cf18 int} j = 0; j < cells[i].size(); j++) \{\par
110             positioningCells[i].push_back(std::dynamic_pointer_cast<PositioningPositionDisplay>(cells[i][j]));\par
111         \}\par
112     \}\par
113 \par
114     {\cf19 return} positioningCells;\par
115 \}\par
}
}
{\xe \v initializeCells\:Views::PositioningBoardDisplay}
{\xe \v Views::PositioningBoardDisplay\:initializeCells}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::PositioningBoardDisplay::initializeCells (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFIP}
{\bkmkend AAAAAAAFIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiate the board cells components. }}\par
{
Implementa {\b Views::BoardDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFIN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 41                                                    \{\par
42     {\cf19 for}({\cf18 unsigned} {\cf18 int} i = 0; i < getAmountVerticalCells(); i++) \{\par
43         cells.push_back(std::vector<std::shared_ptr<PositionDisplay>>());\par
44 \par
45         {\cf19 for}({\cf18 unsigned} {\cf18 int} j = 0; j < getAmountHorizontalCells(); j++) \{\par
46             cells[i].push_back(std::shared_ptr<PositionDisplay>({\cf17 new} PositioningPositionDisplay(logicBoard->getPosition(i, j))));\par
47         \}\par
48     \}\par
49 \par
50     {\cf19 return};\par
51 \}\par
}
}
{\xe \v markPositions\:Views::PositioningBoardDisplay}
{\xe \v Views::PositioningBoardDisplay\:markPositions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::PositioningBoardDisplay::markPositions (const std::vector< {\b Point} > &  {\i points})}}
\par
{\bkmkstart AAAAAAAFLV}
{\bkmkend AAAAAAAFLV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set a group of position as marked. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i points} \cell }{is the coordinates of the positions that will be marked. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 71                                                                                \{\par
72     Color markColor = logicBoard->isPositionValid(points) ? BRIGHT_GREEN : BRIGHT_RED;\par
73 \par
74     {\cf19 for}(Point point : points) \{\par
75         {\cf19 if}(logicBoard->isPointWithinBoundaries(point)) \{\par
76             std::shared_ptr<PositioningPositionDisplay> cell = std::dynamic_pointer_cast<PositioningPositionDisplay>(cells[point.getX()][point.getY()]);\par
77             cell->setMarked({\cf17 true});\par
78             cell->setMarkedColor(markColor);\par
79         \}\par
80     \}\par
81 \par
82     {\cf19 return};\par
83 \}\par
}
}
{\xe \v positionTroop\:Views::PositioningBoardDisplay}
{\xe \v Views::PositioningBoardDisplay\:positionTroop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::PositioningBoardDisplay::positionTroop (const std::shared_ptr< {\b Troop} >  {\i troop})}}
\par
{\bkmkstart AAAAAAAFLW}
{\bkmkend AAAAAAAFLW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Position} a troop in some board positions based on it's shape. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i troop} \cell }{is a pointer to the troop that will be positioned. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 53                                                                                  \{\par
54     {\cf19 if}(!logicBoard->isPositionValid(troop->getOccupiedPositions())) \{\par
55         {\cf19 throw} InvalidPositionException(INVALID_TROOP_POSITION_ERROR_MESSAGE);\par
56     \}\par
57 \par
58     logicBoard->positionTroop(troop);\par
59     {\cf19 for}(Point coodinate : troop->getOccupiedPositions()) \{\par
60         cells[coodinate.getX()][coodinate.getY()]->setTroopImage(troop);\par
61     \}\par
62 \par
63     {\cf19 return};\par
64 \}\par
}
}
{\xe \v removeTroop\:Views::PositioningBoardDisplay}
{\xe \v Views::PositioningBoardDisplay\:removeTroop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::PositioningBoardDisplay::removeTroop (const std::shared_ptr< {\b Troop} >  {\i troop})}}
\par
{\bkmkstart AAAAAAAFLX}
{\bkmkend AAAAAAAFLX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove the troop from this position. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i troop} \cell }{is a pointer to the troop that will be removed from the board. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 66                                                                                \{\par
67     logicBoard->removeTroop(troop);\par
68     {\cf19 return};\par
69 \}\par
}
}
{\xe \v unmarkPosition\:Views::PositioningBoardDisplay}
{\xe \v Views::PositioningBoardDisplay\:unmarkPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::PositioningBoardDisplay::unmarkPosition (const {\b Point}  {\i point})}}
\par
{\bkmkstart AAAAAAAFLY}
{\bkmkend AAAAAAAFLY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unmark a specific position. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i point} \cell }{is the coordinate of the position that will be unmarked. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 95                                                                    \{\par
96     std::shared_ptr<PositioningPositionDisplay> cell = std::dynamic_pointer_cast<PositioningPositionDisplay>(cells[point.getX()][point.getY()]);\par
97     cell->setMarked({\cf17 false});\par
98 \par
99     {\cf19 return};\par
100 \}\par
}
}
{\xe \v unmarkPositions\:Views::PositioningBoardDisplay}
{\xe \v Views::PositioningBoardDisplay\:unmarkPositions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::PositioningBoardDisplay::unmarkPositions (const std::vector< {\b Point} > &  {\i points})}}
\par
{\bkmkstart AAAAAAAFLZ}
{\bkmkend AAAAAAAFLZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unmark a group of positions. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i points} \cell }{is the coordinates of the positions that will be unmarked. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 85                                                                                  \{\par
86     {\cf19 for}(Point point : points) \{\par
87         {\cf19 if}(logicBoard->isPointWithinBoundaries(point)) \{\par
88             unmarkPosition(point);\par
89         \}\par
90     \}\par
91 \par
92     {\cf19 return};\par
93 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/{\b PositioningBoardDisplay.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/{\b PositioningBoardDisplay.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Views::PositioningPositionDisplay\par \pard\plain 
{\tc\tcl2 \v Views::PositioningPositionDisplay}
{\xe \v Views::PositioningPositionDisplay}
{\bkmkstart AAAAAAAFMA}
{\bkmkend AAAAAAAFMA}
\par
{
{\f2 #include <PositioningPositionDisplay.hpp>}}\par
Diagrama de hierarquia da classe Views::PositioningPositionDisplay:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_views_1_1_positioning_position_display.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PositioningPositionDisplay} (const {\b Point} boardCoordinates)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the {\b Position} in the Positioning {\b Board} stage with a new logic position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PositioningPositionDisplay} (std::shared_ptr< {\b Position} > {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the {\b Position} in the Positioning {\b Board} stage based on a logic position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~PositioningPositionDisplay} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Positioning {\b Position} view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b checkMouseEnter} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse has entered in the positioning position view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b checkMouseExit} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse has leave the positioning position view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b checkMouseRightClick} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the right mouse button was clicked over the positioning position view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMarked} (const {\b bool} marked)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set if the position is marked in a different color. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b isMarked} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if a position is marked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMarkedColor} (const {\b Color} color)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the color that the position will be marked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Color} {\b getMarkedColor} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the marked color attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Views::PositionDisplay}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PositionDisplay} (const {\b Point} boardCoordinates)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the basic template for the troop display with a new logic position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PositionDisplay} (std::shared_ptr< {\b Position} > {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the basic template for the troop display with a new logic position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~PositionDisplay} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Position} Display view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkClick} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the position was clicked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkMouseOver} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse is over the position display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Point} {\b getCoordinates} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the coodinates the position is place. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTroop} (const std::shared_ptr< {\b Troop} > troop)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the troop that is in the position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::shared_ptr< {\b Troop} > {\b getTroop} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the troop in the position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTroopImage} (const std::string path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the troop image that will be displayed on this position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTroopImage} (const std::shared_ptr< {\b Troop} > troop)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the troop image that will be displayed on this position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b containsTroop} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the position contains a troop. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Views::View}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~View} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b View} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Component} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Component}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the render contract of components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getXPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the X position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getYPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Vector2} {\b getPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::IClickable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkClick} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the troop display was clicked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkMouseOver} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse is over the troop display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setEnabled} (const {\b bool} {\b enabled})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the enabled attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b isEnabled} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the button is enable. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_WIDTH} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_HEIGHT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Vector2} {\b DEFAULT_INITIAL_POSITION} = \{ 0, 0 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros protegidos herdados de {\b Views::PositionDisplay}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getDefaultImageSize} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get image within the position size value. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Views::PositionDisplay}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::unique_ptr< {\b Components::Image} > {\b troopImage} = nullptr\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Rectangle} {\b background}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Color} {\b backgroundColor} = {\b DEFAULT_BALCK}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Color} {\b hoveredBackgroundColor} = {\b DEFAULT_BALCK}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::shared_ptr< {\b Position} > {\b position} = nullptr\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b width} = {\b DEFAUT_INITIAL_WIDTH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b height} = {\b DEFAUT_INITIAL_HEIGHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b position} = {\b DEFAULT_INITIAL_POSITION}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::IClickable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b enabled} = {\b true}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v PositioningPositionDisplay\:Views::PositioningPositionDisplay}
{\xe \v Views::PositioningPositionDisplay\:PositioningPositionDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::PositioningPositionDisplay::PositioningPositionDisplay (const {\b Point}  {\i boardCoordinates})}}
\par
{\bkmkstart AAAAAAAFMB}
{\bkmkend AAAAAAAFMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the {\b Position} in the Positioning {\b Board} stage with a new logic position. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i boardCoordinates} \cell }{is the coordinates that the position is placed. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 6                                                                                         : \par
7     PositionDisplay(boardCoordinates) \{\par
8     setXPosition(0.0);\par
9     setYPosition(0.0);\par
10 \}\par
}
}
{\xe \v PositioningPositionDisplay\:Views::PositioningPositionDisplay}
{\xe \v Views::PositioningPositionDisplay\:PositioningPositionDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::PositioningPositionDisplay::PositioningPositionDisplay (std::shared_ptr< {\b Position} >  {\i position})}}
\par
{\bkmkstart AAAAAAAFMC}
{\bkmkend AAAAAAAFMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the {\b Position} in the Positioning {\b Board} stage based on a logic position. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i position} \cell }{is the logic position that will base the display. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12                                                                                             : \par
13     PositionDisplay(position) \{\par
14     setXPosition(0.0);\par
15     setYPosition(0.0);\par
16 \}\par
}
}
{\xe \v ~PositioningPositionDisplay\:Views::PositioningPositionDisplay}
{\xe \v Views::PositioningPositionDisplay\:~PositioningPositionDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::PositioningPositionDisplay::~PositioningPositionDisplay (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFMD}
{\bkmkend AAAAAAAFMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Positioning {\b Position} view. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 18 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v checkMouseEnter\:Views::PositioningPositionDisplay}
{\xe \v Views::PositioningPositionDisplay\:checkMouseEnter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Views::PositioningPositionDisplay::checkMouseEnter ()}}
\par
{\bkmkstart AAAAAAAFME}
{\bkmkend AAAAAAAFME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse has entered in the positioning position view. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Boolean that indicates if mouse has entered in the positioning position view. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 44                                                       \{\par
45     {\cf19 if}(checkMouseOver() && !mouseHasEntered) \{\par
46         mouseHasEntered = {\cf17 true};\par
47         {\cf19 return} {\cf17 true};\par
48     \}\par
49 \par
50     {\cf19 return} {\cf17 false};\par
51 \}\par
}
}
{\xe \v checkMouseExit\:Views::PositioningPositionDisplay}
{\xe \v Views::PositioningPositionDisplay\:checkMouseExit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Views::PositioningPositionDisplay::checkMouseExit ()}}
\par
{\bkmkstart AAAAAAAFMF}
{\bkmkend AAAAAAAFMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse has leave the positioning position view. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Boolean that indicates if mouse has leave the positioning position view. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 53                                                      \{\par
54     {\cf19 if}(!checkMouseOver() && mouseHasEntered) \{\par
55         mouseHasEntered = {\cf17 false};\par
56         {\cf19 return} {\cf17 true};\par
57     \}\par
58 \par
59     {\cf19 return} {\cf17 false};\par
60 \}\par
}
}
{\xe \v checkMouseRightClick\:Views::PositioningPositionDisplay}
{\xe \v Views::PositioningPositionDisplay\:checkMouseRightClick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Views::PositioningPositionDisplay::checkMouseRightClick ()}}
\par
{\bkmkstart AAAAAAAFMG}
{\bkmkend AAAAAAAFMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the right mouse button was clicked over the positioning position view. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Boolean that indicates if right mouse button was clicked over the positioning position view. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 62                                                            \{\par
63     {\cf19 return} (checkMouseOver() && IsMouseButtonReleased(MOUSE_BUTTON_RIGHT));\par
64 \}\par
}
}
{\xe \v getMarkedColor\:Views::PositioningPositionDisplay}
{\xe \v Views::PositioningPositionDisplay\:getMarkedColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Color} Views::PositioningPositionDisplay::getMarkedColor () const}}
\par
{\bkmkstart AAAAAAAFMH}
{\bkmkend AAAAAAAFMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the marked color attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Marked color attribute value. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 82                                                             \{\par
83     {\cf19 return} markedColor;\par
84 \}\par
}
}
{\xe \v isMarked\:Views::PositioningPositionDisplay}
{\xe \v Views::PositioningPositionDisplay\:isMarked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Views::PositioningPositionDisplay::isMarked () const}}
\par
{\bkmkstart AAAAAAAFMI}
{\bkmkend AAAAAAAFMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if a position is marked. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Marked attribute value. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 73                                                      \{\par
74     {\cf19 return} marked;\par
75 \}\par
}
}
{\xe \v render\:Views::PositioningPositionDisplay}
{\xe \v Views::PositioningPositionDisplay\:render}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::PositioningPositionDisplay::render (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEIA}
{\bkmkend AAAAAAAEIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }}\par
{
Implementa {\b Views::PositionDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 20                                              \{\par
21     Color renderedBackgroundColor;\par
22     {\cf19 if}(isMarked()) \{\par
23         renderedBackgroundColor = getMarkedColor();\par
24     \}\par
25     {\cf19 else} {\cf19 if} (containsTroop()) \{\par
26         renderedBackgroundColor = BRIGHT_GREEN;\par
27     \}\par
28     {\cf19 else} {\cf19 if} (checkMouseOver()) \{\par
29         renderedBackgroundColor = hoveredBackgroundColor;\par
30     \}\par
31     {\cf19 else} \{\par
32         renderedBackgroundColor = backgroundColor;\par
33     \}\par
34 \par
35     DrawRectangleRec(background, renderedBackgroundColor);\par
36     \par
37     {\cf19 if}(containsTroop()) \{\par
38         troopImage->render();\par
39     \}\par
40     \par
41     {\cf19 return};\par
42 \}\par
}
}
{\xe \v setMarked\:Views::PositioningPositionDisplay}
{\xe \v Views::PositioningPositionDisplay\:setMarked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::PositioningPositionDisplay::setMarked (const {\b bool}  {\i marked})}}
\par
{\bkmkstart AAAAAAAFMJ}
{\bkmkend AAAAAAAFMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set if the position is marked in a different color. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i marked} \cell }{is the new value to the identification flag. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 68                                                                  \{\par
69     this->marked = marked;\par
70     {\cf19 return};\par
71 \}\par
}
}
{\xe \v setMarkedColor\:Views::PositioningPositionDisplay}
{\xe \v Views::PositioningPositionDisplay\:setMarkedColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::PositioningPositionDisplay::setMarkedColor (const {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAAFMK}
{\bkmkend AAAAAAAFMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the color that the position will be marked. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i color} \cell }{is the color that the position will be rendered when marked. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 77                                                                       \{\par
78     markedColor = color;\par
79     {\cf19 return};\par
80 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/{\b PositioningPositionDisplay.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/{\b PositioningPositionDisplay.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Screens::PositioningScreen\par \pard\plain 
{\tc\tcl2 \v Screens::PositioningScreen}
{\xe \v Screens::PositioningScreen}
{\bkmkstart AAAAAAAFGI}
{\bkmkend AAAAAAAFGI}
\par
{
{\f2 #include <PositioningScreen.hpp>}}\par
Diagrama de hierarquia da classe Screens::PositioningScreen:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_screens_1_1_positioning_screen.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PositioningScreen} (std::shared_ptr< {\b Player} > playerPositioningTurn)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the Positioning {\b Screen} window. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~PositioningScreen} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Positioning {\b Screen}. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Screens::Screen}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Screen} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Screen} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the basic setup to render a screen with raylib. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b isActive} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the window is active. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b renderScreen} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the window in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b handleEvents} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handle any event that can be trigged in the interface. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b renderScreen} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the window in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b handleEvents} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handle any event that can be trigged in the interface. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros p\'FAblicos est\'E1ticos herdados de {\b Screens::Screen}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static float {\b getDisplayHeight} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the display window height. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static float {\b getDisplayWidth} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the display width. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Screens::Screen}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b isWindowActive} = {\b true}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v PositioningScreen\:Screens::PositioningScreen}
{\xe \v Screens::PositioningScreen\:PositioningScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Screens::PositioningScreen::PositioningScreen (std::shared_ptr< {\b Player} >  {\i playerPositioningTurn})}}
\par
{\bkmkstart AAAAAAAFGJ}
{\bkmkend AAAAAAAFGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the Positioning {\b Screen} window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i playerPositioningTurn} \cell }{is the player that will start thier positioning turn. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 30                                                                                        :\par
31     playerName({\cf17 new} Components::Text(playerPositioningTurn->getName())),\par
32     board({\cf17 new} Views::PositioningBoardDisplay(playerPositioningTurn->getBoard())),\par
33     availableTroops({\cf17 new} Views::TroopPositioningOption()),\par
34     popup({\cf17 new} Views::WarningPopUp(POPUP_MESSAGE)) \{\par
35     buildBackground();\par
36     buildPlayerName();\par
37     buildBoard();\par
38     buildAvailableTroops();\par
39 \}\par
}
}
{\xe \v ~PositioningScreen\:Screens::PositioningScreen}
{\xe \v Screens::PositioningScreen\:~PositioningScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Screens::PositioningScreen::~PositioningScreen (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFGK}
{\bkmkend AAAAAAAFGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Positioning {\b Screen}. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 41 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v handleEvents\:Screens::PositioningScreen}
{\xe \v Screens::PositioningScreen\:handleEvents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Screens::PositioningScreen::handleEvents (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFGL}
{\bkmkend AAAAAAAFGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handle any event that can be trigged in the interface. }}\par
{
Implementa {\b Screens::Screen} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFFZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 58                                             \{\par
59     verifyPopupShouldClose();\par
60 \par
61     {\cf19 if}(!shouldDisplayPopUp) \{\par
62         verifyButtonRotateClick();\par
63         verifyTroopSelection();\par
64         verifyTroopPositioning();\par
65         verifyTroopRemoved();\par
66         verifyEndPositioningTurnCilck();\par
67     \}\par
68 \par
69     clearBoard();\par
70     {\cf19 return};\par
71 \}\par
}
}
{\xe \v renderScreen\:Screens::PositioningScreen}
{\xe \v Screens::PositioningScreen\:renderScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Screens::PositioningScreen::renderScreen (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFGM}
{\bkmkend AAAAAAAFGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the window in the interface. }}\par
{
Implementa {\b Screens::Screen} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFGB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 43                                             \{\par
44     renderBackground();\par
45 \par
46     playerName->render();\par
47     board->render();\par
48 \par
49     availableTroops->render();\par
50 \par
51     {\cf19 if}(shouldDisplayPopUp) \{\par
52         popup->render();\par
53     \}\par
54 \par
55     {\cf19 return};\par
56 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/{\b PositioningScreen.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/{\b PositioningScreen.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura doctest::QueryData\par \pard\plain 
{\tc\tcl2 \v doctest::QueryData}
{\xe \v doctest::QueryData}
{\bkmkstart AAAAAAAERT}
{\bkmkend AAAAAAAERT}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b TestRunStats} * {\b run_stats} = nullptr\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b TestCaseData} ** {\b data} = nullptr\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b num_data} = 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v data\:doctest::QueryData}
{\xe \v doctest::QueryData\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b TestCaseData}** doctest::QueryData::data = nullptr}}
\par
{\bkmkstart AAAAAAAERU}
{\bkmkend AAAAAAAERU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v num_data\:doctest::QueryData}
{\xe \v doctest::QueryData\:num_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned doctest::QueryData::num_data = 0}}
\par
{\bkmkstart AAAAAAAERV}
{\bkmkend AAAAAAAERV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v run_stats\:doctest::QueryData}
{\xe \v doctest::QueryData\:run_stats}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b TestRunStats}* doctest::QueryData::run_stats = nullptr}}
\par
{\bkmkstart AAAAAAAERW}
{\bkmkend AAAAAAAERW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura Ray\par \pard\plain 
{\tc\tcl2 \v Ray}
{\xe \v Ray}
{\bkmkstart AAAAAAADYS}
{\bkmkend AAAAAAADYS}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} {\b position}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} {\b direction}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v direction\:Ray}
{\xe \v Ray\:direction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} Ray::direction}}
\par
{\bkmkstart AAAAAAADYT}
{\bkmkend AAAAAAADYT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v position\:Ray}
{\xe \v Ray\:position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} Ray::position}}
\par
{\bkmkstart AAAAAAADYU}
{\bkmkend AAAAAAADYU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura RayCollision\par \pard\plain 
{\tc\tcl2 \v RayCollision}
{\xe \v RayCollision}
{\bkmkstart AAAAAAADYV}
{\bkmkend AAAAAAADYV}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b hit}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b distance}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} {\b point}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} {\b normal}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v distance\:RayCollision}
{\xe \v RayCollision\:distance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float RayCollision::distance}}
\par
{\bkmkstart AAAAAAADYW}
{\bkmkend AAAAAAADYW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v hit\:RayCollision}
{\xe \v RayCollision\:hit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} RayCollision::hit}}
\par
{\bkmkstart AAAAAAADYX}
{\bkmkend AAAAAAADYX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v normal\:RayCollision}
{\xe \v RayCollision\:normal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} RayCollision::normal}}
\par
{\bkmkstart AAAAAAADYY}
{\bkmkend AAAAAAADYY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v point\:RayCollision}
{\xe \v RayCollision\:point}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} RayCollision::point}}
\par
{\bkmkstart AAAAAAADYZ}
{\bkmkend AAAAAAADYZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura Rectangle\par \pard\plain 
{\tc\tcl2 \v Rectangle}
{\xe \v Rectangle}
{\bkmkstart AAAAAAADZA}
{\bkmkend AAAAAAADZA}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b x}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b y}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b width}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b height}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v height\:Rectangle}
{\xe \v Rectangle\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Rectangle::height}}
\par
{\bkmkstart AAAAAAADZB}
{\bkmkend AAAAAAADZB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v width\:Rectangle}
{\xe \v Rectangle\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Rectangle::width}}
\par
{\bkmkstart AAAAAAADZC}
{\bkmkend AAAAAAADZC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x\:Rectangle}
{\xe \v Rectangle\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Rectangle::x}}
\par
{\bkmkstart AAAAAAADZD}
{\bkmkend AAAAAAADZD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y\:Rectangle}
{\xe \v Rectangle\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Rectangle::y}}
\par
{\bkmkstart AAAAAAADZE}
{\bkmkend AAAAAAADZE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura doctest::detail::RelationalComparator< int, L, R >\par \pard\plain 
{\tc\tcl2 \v doctest::detail::RelationalComparator< int, L, R >}
{\xe \v doctest::detail::RelationalComparator< int, L, R >}
{\bkmkstart AAAAAAAFBE}
{\bkmkend AAAAAAAFBE}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b operator()} (const {\b DOCTEST_REF_WRAP}(L), const {\b DOCTEST_REF_WRAP}(R)) const\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator()\:doctest::detail::RelationalComparator< int, L, R >}
{\xe \v doctest::detail::RelationalComparator< int, L, R >\:operator()}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<int , class L , class R > {\b bool} {\b doctest::detail::RelationalComparator}< int, L, R >::operator() (const   {\i DOCTEST_REF_WRAP}L, const   {\i DOCTEST_REF_WRAP}R) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFBF}
{\bkmkend AAAAAAAFBF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1479 \{ {\cf18 bool} operator()({\cf17 const} DOCTEST_REF_WRAP(L),     {\cf17 const} DOCTEST_REF_WRAP(R)    ){\cf17  const }\{ {\cf19 return} {\cf17 false};        \} \};\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura doctest::detail::remove_const< T >\par \pard\plain 
{\tc\tcl2 \v doctest::detail::remove_const< T >}
{\xe \v doctest::detail::remove_const< T >}
{\bkmkstart AAAAAAAFBG}
{\bkmkend AAAAAAAFBG}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef T {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:doctest::detail::remove_const< T >}
{\xe \v doctest::detail::remove_const< T >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > typedef T {\b doctest::detail::remove_const}< T >::type}}
\par
{\bkmkstart AAAAAAAFBH}
{\bkmkend AAAAAAAFBH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura doctest::detail::remove_const< const T >\par \pard\plain 
{\tc\tcl2 \v doctest::detail::remove_const< const T >}
{\xe \v doctest::detail::remove_const< const T >}
{\bkmkstart AAAAAAAFBI}
{\bkmkend AAAAAAAFBI}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef T {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:doctest::detail::remove_const< const T >}
{\xe \v doctest::detail::remove_const< const T >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > typedef T {\b doctest::detail::remove_const}< const T >::type}}
\par
{\bkmkstart AAAAAAAFBJ}
{\bkmkend AAAAAAAFBJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura doctest::detail::remove_reference< T >\par \pard\plain 
{\tc\tcl2 \v doctest::detail::remove_reference< T >}
{\xe \v doctest::detail::remove_reference< T >}
{\bkmkstart AAAAAAAFBK}
{\bkmkend AAAAAAAFBK}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef T {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:doctest::detail::remove_reference< T >}
{\xe \v doctest::detail::remove_reference< T >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > typedef T {\b doctest::detail::remove_reference}< T >::type}}
\par
{\bkmkstart AAAAAAAFBL}
{\bkmkend AAAAAAAFBL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura doctest::detail::remove_reference< T & >\par \pard\plain 
{\tc\tcl2 \v doctest::detail::remove_reference< T & >}
{\xe \v doctest::detail::remove_reference< T & >}
{\bkmkstart AAAAAAAFBM}
{\bkmkend AAAAAAAFBM}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef T {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:doctest::detail::remove_reference< T & >}
{\xe \v doctest::detail::remove_reference< T & >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > typedef T {\b doctest::detail::remove_reference}< T & >::type}}
\par
{\bkmkstart AAAAAAAFBN}
{\bkmkend AAAAAAAFBN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura doctest::detail::remove_reference< T && >\par \pard\plain 
{\tc\tcl2 \v doctest::detail::remove_reference< T && >}
{\xe \v doctest::detail::remove_reference< T && >}
{\bkmkstart AAAAAAAFBO}
{\bkmkend AAAAAAAFBO}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef T {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:doctest::detail::remove_reference< T && >}
{\xe \v doctest::detail::remove_reference< T && >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > typedef T {\b doctest::detail::remove_reference}< T && >::type}}
\par
{\bkmkstart AAAAAAAFBP}
{\bkmkend AAAAAAAFBP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura RenderTexture\par \pard\plain 
{\tc\tcl2 \v RenderTexture}
{\xe \v RenderTexture}
{\bkmkstart AAAAAAADZF}
{\bkmkend AAAAAAADZF}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Texture} {\b texture}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Texture} {\b depth}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v depth\:RenderTexture}
{\xe \v RenderTexture\:depth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Texture} RenderTexture::depth}}
\par
{\bkmkstart AAAAAAADZG}
{\bkmkend AAAAAAADZG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v id\:RenderTexture}
{\xe \v RenderTexture\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int RenderTexture::id}}
\par
{\bkmkstart AAAAAAADZH}
{\bkmkend AAAAAAADZH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v texture\:RenderTexture}
{\xe \v RenderTexture\:texture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Texture} RenderTexture::texture}}
\par
{\bkmkstart AAAAAAADZI}
{\bkmkend AAAAAAADZI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Components::ResizableComponent\par \pard\plain 
{\tc\tcl2 \v Components::ResizableComponent}
{\xe \v Components::ResizableComponent}
{\bkmkstart AAAAAAAEKN}
{\bkmkend AAAAAAAEKN}
\par
{
{\f2 #include <ResizableComponent.hpp>}}\par
Diagrama de hierarquia da classe Components::ResizableComponent:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_components_1_1_resizable_component.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~ResizableComponent} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b ResizableComponent} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setHeight} (const float {\b height}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setWidth} (const float {\b width}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Component} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Component}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the render contract of components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getXPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the X position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getYPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Vector2} {\b getPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position attribute. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setHeight} (const float height)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setWidth} (const float width)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_WIDTH} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_HEIGHT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Vector2} {\b DEFAULT_INITIAL_POSITION} = \{ 0, 0 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b width} = {\b DEFAUT_INITIAL_WIDTH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b height} = {\b DEFAUT_INITIAL_HEIGHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b position} = {\b DEFAULT_INITIAL_POSITION}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ~ResizableComponent\:Components::ResizableComponent}
{\xe \v Components::ResizableComponent\:~ResizableComponent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Components::ResizableComponent::~ResizableComponent (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEKO}
{\bkmkend AAAAAAAEKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b ResizableComponent} component. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 3 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v setHeight\:Components::ResizableComponent}
{\xe \v Components::ResizableComponent\:setHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ResizableComponent::setHeight (const float  {\i height}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEEJ}
{\bkmkend AAAAAAAEEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the height attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i height} \cell }{is the new value to height. \cell }
{\row }
}
}{
Implementa {\b Components::IResizable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplementado por {\b Components::ButtonIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::ButtonText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::ButtonTextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::Image} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKF \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Components::Button} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 7                                                                \{\par
8     this->height = height;\par
9     {\cf19 return};   \par
10 \}\par
}
}
{\xe \v setWidth\:Components::ResizableComponent}
{\xe \v Components::ResizableComponent\:setWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::ResizableComponent::setWidth (const float  {\i width}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEEP}
{\bkmkend AAAAAAAEEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i width} \cell }{is the new value to width. \cell }
{\row }
}
}{
Implementa {\b Components::IResizable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplementado por {\b Components::ButtonIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::ButtonText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEER \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::ButtonTextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEES \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Components::Image} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKH \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Components::Button} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12                                                              \{\par
13     this->width = width;\par
14     {\cf19 return};\par
15 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/{\b ResizableComponent.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/component/{\b ResizableComponent.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura doctest::detail::Result\par \pard\plain 
{\tc\tcl2 \v doctest::detail::Result}
{\xe \v doctest::detail::Result}
{\bkmkstart AAAAAAAFBQ}
{\bkmkend AAAAAAAFBQ}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} ()=default\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} ({\b bool} passed, const {\b String} &decomposition={\b String}())\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b m_passed}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b String} {\b m_decomp}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Result\:doctest::detail::Result}
{\xe \v doctest::detail::Result\:Result}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::detail::Result::Result (){\f2 [default]}}}
\par
{\bkmkstart AAAAAAAFBR}
{\bkmkend AAAAAAAFBR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Result\:doctest::detail::Result}
{\xe \v doctest::detail::Result\:Result}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::detail::Result::Result ({\b bool}  {\i passed}, const {\b String} &  {\i decomposition} = {\f2 {\b String}()})}}
\par
{\bkmkstart AAAAAAAFBS}
{\bkmkend AAAAAAAFBS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v m_decomp\:doctest::detail::Result}
{\xe \v doctest::detail::Result\:m_decomp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b String} doctest::detail::Result::m_decomp}}
\par
{\bkmkstart AAAAAAAFBT}
{\bkmkend AAAAAAAFBT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_passed\:doctest::detail::Result}
{\xe \v doctest::detail::Result\:m_passed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::detail::Result::m_passed}}
\par
{\bkmkstart AAAAAAAFBU}
{\bkmkend AAAAAAAFBU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura doctest::detail::ResultBuilder\par \pard\plain 
{\tc\tcl2 \v doctest::detail::ResultBuilder}
{\xe \v doctest::detail::ResultBuilder}
{\bkmkstart AAAAAAAFBV}
{\bkmkend AAAAAAAFBV}
\par
{
{\f2 #include <doctest.hpp>}}\par
Diagrama de hierarquia da classe doctest::detail::ResultBuilder:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structdoctest_1_1detail_1_1_result_builder.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ResultBuilder} ({\b assertType::Enum} at, const char *file, int line, const char *expr, const char *exception_type="", const char *exception_string="")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setResult} (const {\b Result} &res)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<int comparison, typename L , typename R > {\b DOCTEST_NOINLINE} {\b bool} {\b binary_assert} (const {\b DOCTEST_REF_WRAP}(L) lhs, const {\b DOCTEST_REF_WRAP}(R) rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename L > {\b DOCTEST_NOINLINE} {\b bool} {\b unary_assert} (const {\b DOCTEST_REF_WRAP}(L) val)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b translateException} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b log} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b react} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos herdados de {\b doctest::AssertData}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b TestCaseData} * {\b m_test_case}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b assertType::Enum} {\b m_at}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b m_file}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b m_line}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b m_expr}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b m_failed}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b m_threw}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b String} {\b m_exception}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b String} {\b m_decomp}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b m_threw_as}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b m_exception_type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b m_exception_string}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ResultBuilder\:doctest::detail::ResultBuilder}
{\xe \v doctest::detail::ResultBuilder\:ResultBuilder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::detail::ResultBuilder::ResultBuilder ({\b assertType::Enum}  {\i at}, const char *  {\i file}, int  {\i line}, const char *  {\i expr}, const char *  {\i exception_type} = {\f2 ""}, const char *  {\i exception_string} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAFBW}
{\bkmkend AAAAAAAFBW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v binary_assert\:doctest::detail::ResultBuilder}
{\xe \v doctest::detail::ResultBuilder\:binary_assert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<int comparison, typename L , typename R > {\b DOCTEST_NOINLINE} {\b bool} doctest::detail::ResultBuilder::binary_assert (const {\b DOCTEST_REF_WRAP}(L)  {\i lhs}, const {\b DOCTEST_REF_WRAP}(R)  {\i rhs}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFBX}
{\bkmkend AAAAAAAFBX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1501                                                                            \{\par
1502             m_failed = !RelationalComparator<comparison, L, R>()(lhs, rhs);\par
1503             {\cf19 if}(m_failed || getContextOptions()->success)\par
1504                 m_decomp = stringifyBinaryExpr(lhs, {\cf22 ", "}, rhs);\par
1505             {\cf19 return} !m_failed;\par
1506         \}\par
}
}
{\xe \v log\:doctest::detail::ResultBuilder}
{\xe \v doctest::detail::ResultBuilder\:log}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::detail::ResultBuilder::log ()}}
\par
{\bkmkstart AAAAAAAFBY}
{\bkmkend AAAAAAAFBY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v react\:doctest::detail::ResultBuilder}
{\xe \v doctest::detail::ResultBuilder\:react}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void doctest::detail::ResultBuilder::react () const}}
\par
{\bkmkstart AAAAAAAFBZ}
{\bkmkend AAAAAAAFBZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setResult\:doctest::detail::ResultBuilder}
{\xe \v doctest::detail::ResultBuilder\:setResult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void doctest::detail::ResultBuilder::setResult (const {\b Result} &  {\i res})}}
\par
{\bkmkstart AAAAAAAFCA}
{\bkmkend AAAAAAAFCA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v translateException\:doctest::detail::ResultBuilder}
{\xe \v doctest::detail::ResultBuilder\:translateException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void doctest::detail::ResultBuilder::translateException ()}}
\par
{\bkmkstart AAAAAAAFCB}
{\bkmkend AAAAAAAFCB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v unary_assert\:doctest::detail::ResultBuilder}
{\xe \v doctest::detail::ResultBuilder\:unary_assert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename L > {\b DOCTEST_NOINLINE} {\b bool} doctest::detail::ResultBuilder::unary_assert (const {\b DOCTEST_REF_WRAP}(L)  {\i val}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCC}
{\bkmkend AAAAAAAFCC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCLINT bitwise operator in conditional\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1509                                                                           \{\par
1510             m_failed = !val;\par
1511 \par
1512             {\cf19 if}(m_at & assertType::is_false) \par
1513                 m_failed = !m_failed;\par
1514 \par
1515             {\cf19 if}(m_failed || getContextOptions()->success)\par
1516                 m_decomp = toString(val);\par
1517 \par
1518             {\cf19 return} !m_failed;\par
1519         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Score\par \pard\plain 
{\tc\tcl2 \v Score}
{\xe \v Score}
{\bkmkstart AAAAAAADZJ}
{\bkmkend AAAAAAADZJ}
\par
{
{\f2 #include <Score.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Score} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Score} (int dTroops, int rTroops, int lTroops, int tAShoots, int hShoots)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new {\b Score} object with custom values. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Score} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Score} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b isWinner} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determine if the player associated to the score won. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDestroyedTroops} (const int value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the destroyedTroops attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b incrementDestroyedTroops} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increases the number of destroyedTroops by one. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getDestroyedTroops} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number of destroyedTroops. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRemainingTroops} (const int value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the remainingTroops attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b decrementRemainingTroops} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decreases the number of remainingTroops by one. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getRemainingTroops} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number of remainingTroops. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLostTroops} (const int value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the lostTroops attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b incrementLostTroops} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Incrases the number of lostTroops by one. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getLostTroops} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number of lostTroops. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTotalAmountShoots} (const int value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the totalAmountShoots attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b incrementTotalAmountShoots} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Incrases the number of totalAmountShoots by one. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getTotalAmountShoots} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number of totalAmountShoots. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setHitShoots} (const int value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the hitShoots attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b incrementHitShoots} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Incrases the number of hitShoots by one. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getHitShoots} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the amount of shots that hit an troop done by the player. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getInitialAmountShips} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the initial amount of ships value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getPrecision} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the precision of the shoots. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Score\:Score}
{\xe \v Score\:Score}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Score::Score ()}}
\par
{\bkmkstart AAAAAAADZK}
{\bkmkend AAAAAAADZK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new score object with all values as 0.  \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5 \{\}\par
}
}
{\xe \v Score\:Score}
{\xe \v Score\:Score}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Score::Score (int  {\i dTroops}, int  {\i rTroops}, int  {\i lTroops}, int  {\i tAShoots}, int  {\i hShoots})}}
\par
{\bkmkstart AAAAAAADZL}
{\bkmkend AAAAAAADZL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new {\b Score} object with custom values. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dTroops} \cell }{Number of destroyed troops. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i rTroops} \cell }{Number of remaining troops. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lTroops} \cell }{Number of lost troops. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tAShoots} \cell }{Number of the total amount of shoots. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hShoots} \cell }{Number of the total shoots hit. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 7                                                                              \{\par
8     setDestroyedTroops(dTroops);\par
9     setRemainingTroops(rTroops);\par
10     setLostTroops(lTroops);\par
11     setTotalAmountShoots(tAShoots);\par
12     setHitShoots(hShoots);\par
13 \}\par
}
}
{\xe \v ~Score\:Score}
{\xe \v Score\:~Score}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Score::~Score (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADZM}
{\bkmkend AAAAAAADZM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Score} object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 15 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v decrementRemainingTroops\:Score}
{\xe \v Score\:decrementRemainingTroops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Score::decrementRemainingTroops ()}}
\par
{\bkmkstart AAAAAAADZN}
{\bkmkend AAAAAAADZN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decreases the number of remainingTroops by one. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 44                                     \{\par
45     setRemainingTroops(getRemainingTroops() - 1);\par
46     {\cf19 return};\par
47 \}\par
}
}
{\xe \v getDestroyedTroops\:Score}
{\xe \v Score\:getDestroyedTroops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Score::getDestroyedTroops () const}}
\par
{\bkmkstart AAAAAAADZO}
{\bkmkend AAAAAAADZO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number of destroyedTroops. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The value of destroyedTroops. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 34                                     \{\par
35     {\cf19 return} destroyedTroops;\par
36 \}\par
}
}
{\xe \v getHitShoots\:Score}
{\xe \v Score\:getHitShoots}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Score::getHitShoots () const}}
\par
{\bkmkstart AAAAAAADZP}
{\bkmkend AAAAAAADZP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the amount of shots that hit an troop done by the player. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
int that is the amount of hit shots; \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 96                               \{\par
97     {\cf19 return} hitShoots;\par
98 \}\par
}
}
{\xe \v getInitialAmountShips\:Score}
{\xe \v Score\:getInitialAmountShips}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Score::getInitialAmountShips () const}}
\par
{\bkmkstart AAAAAAADZQ}
{\bkmkend AAAAAAADZQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the initial amount of ships value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The initial amount of ships value, sum of lost troops and remaining troops. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 100                                        \{\par
101     {\cf19 return} (getLostTroops() + getRemainingTroops());\par
102 \}\par
}
}
{\xe \v getLostTroops\:Score}
{\xe \v Score\:getLostTroops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Score::getLostTroops () const}}
\par
{\bkmkstart AAAAAAADZR}
{\bkmkend AAAAAAADZR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number of lostTroops. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The value of lostTroops. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 64                                \{\par
65     {\cf19 return} lostTroops;\par
66 \}\par
}
}
{\xe \v getPrecision\:Score}
{\xe \v Score\:getPrecision}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Score::getPrecision () const}}
\par
{\bkmkstart AAAAAAADZS}
{\bkmkend AAAAAAADZS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the precision of the shoots. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The general precision of the shots, division of hit shots by total amount of shoots \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 104                                 \{\par
105     {\cf19 if}(getTotalAmountShoots() == 0) {\cf19 throw} std::invalid_argument({\cf22 "Total amount of shoots is zero, cannot divide by zero."});\par
106     {\cf19 return} (getHitShoots() / ({\cf18 float}) getTotalAmountShoots());\par
107 \}\par
}
}
{\xe \v getRemainingTroops\:Score}
{\xe \v Score\:getRemainingTroops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Score::getRemainingTroops () const}}
\par
{\bkmkstart AAAAAAADZT}
{\bkmkend AAAAAAADZT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number of remainingTroops. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The value of remainingTroops. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 49                                     \{\par
50     {\cf19 return} remainingTroops;\par
51 \}\par
}
}
{\xe \v getTotalAmountShoots\:Score}
{\xe \v Score\:getTotalAmountShoots}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Score::getTotalAmountShoots () const}}
\par
{\bkmkstart AAAAAAADZU}
{\bkmkend AAAAAAADZU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number of totalAmountShoots. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The value of totalAmountShoots. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 80                                       \{\par
81     {\cf19 return} totalAmountShoots;\par
82 \}\par
}
}
{\xe \v incrementDestroyedTroops\:Score}
{\xe \v Score\:incrementDestroyedTroops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Score::incrementDestroyedTroops ()}}
\par
{\bkmkstart AAAAAAADZV}
{\bkmkend AAAAAAADZV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increases the number of destroyedTroops by one. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 29                                      \{\par
30     setDestroyedTroops(getDestroyedTroops() + 1);\par
31     {\cf19 return};\par
32 \}\par
}
}
{\xe \v incrementHitShoots\:Score}
{\xe \v Score\:incrementHitShoots}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Score::incrementHitShoots ()}}
\par
{\bkmkstart AAAAAAADZW}
{\bkmkend AAAAAAADZW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Incrases the number of hitShoots by one. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 91                               \{\par
92     setHitShoots(getHitShoots() + 1);\par
93     {\cf19 return};\par
94 \}\par
}
}
{\xe \v incrementLostTroops\:Score}
{\xe \v Score\:incrementLostTroops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Score::incrementLostTroops ()}}
\par
{\bkmkstart AAAAAAADZX}
{\bkmkend AAAAAAADZX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Incrases the number of lostTroops by one. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 59                                \{\par
60     setLostTroops(getLostTroops() + 1);\par
61     {\cf19 return};\par
62 \}\par
}
}
{\xe \v incrementTotalAmountShoots\:Score}
{\xe \v Score\:incrementTotalAmountShoots}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Score::incrementTotalAmountShoots ()}}
\par
{\bkmkstart AAAAAAADZY}
{\bkmkend AAAAAAADZY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Incrases the number of totalAmountShoots by one. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 75                                       \{\par
76     setTotalAmountShoots(getTotalAmountShoots() + 1);\par
77     {\cf19 return};\par
78 \}\par
}
}
{\xe \v isWinner\:Score}
{\xe \v Score\:isWinner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Score::isWinner () const}}
\par
{\bkmkstart AAAAAAADZZ}
{\bkmkend AAAAAAADZZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determine if the player associated to the score won. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Whether the game ended in a win for the player associated. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17                            \{\par
18     {\cf19 return} (getRemainingTroops() > 0);\par
19 \}\par
}
}
{\xe \v setDestroyedTroops\:Score}
{\xe \v Score\:setDestroyedTroops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Score::setDestroyedTroops (const int  {\i value})}}
\par
{\bkmkstart AAAAAAAEAA}
{\bkmkend AAAAAAAEAA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the destroyedTroops attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{The new value of the destroyedTroops. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 23                                               \{\par
24     {\cf19 if}(value < 0) {\cf19 throw} std::invalid_argument({\cf22 "Values cannot be negative"});\par
25     destroyedTroops = value;\par
26     {\cf19 return};\par
27 \}\par
}
}
{\xe \v setHitShoots\:Score}
{\xe \v Score\:setHitShoots}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Score::setHitShoots (const int  {\i value})}}
\par
{\bkmkstart AAAAAAAEAB}
{\bkmkend AAAAAAAEAB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the hitShoots attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{The new value of the hitShoots. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 84                                         \{\par
85     {\cf19 if}(value < 0) {\cf19 throw} std::invalid_argument({\cf22 "Values cannot be negative"});\par
86     {\cf19 if}(value > totalAmountShoots) {\cf19 throw} std::invalid_argument({\cf22 "Total hit shoots cannot be bigger than total amount of shoots"});\par
87     hitShoots = value;\par
88     {\cf19 return};\par
89 \}\par
}
}
{\xe \v setLostTroops\:Score}
{\xe \v Score\:setLostTroops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Score::setLostTroops (const int  {\i value})}}
\par
{\bkmkstart AAAAAAAEAC}
{\bkmkend AAAAAAAEAC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the lostTroops attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{The new value of the lostTroops. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 53                                          \{\par
54     {\cf19 if}(value < 0) {\cf19 throw} std::invalid_argument({\cf22 "Values cannot be negative"});\par
55     lostTroops = value;\par
56     {\cf19 return};\par
57 \}\par
}
}
{\xe \v setRemainingTroops\:Score}
{\xe \v Score\:setRemainingTroops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Score::setRemainingTroops (const int  {\i value})}}
\par
{\bkmkstart AAAAAAAEAD}
{\bkmkend AAAAAAAEAD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the remainingTroops attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{The new value of the remainingTroops. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 38                                               \{\par
39     {\cf19 if}(value < 0) {\cf19 throw} std::invalid_argument({\cf22 "Values cannot be negative"});\par
40     remainingTroops = value;\par
41     {\cf19 return};\par
42 \}\par
}
}
{\xe \v setTotalAmountShoots\:Score}
{\xe \v Score\:setTotalAmountShoots}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Score::setTotalAmountShoots (const int  {\i value})}}
\par
{\bkmkstart AAAAAAAEAE}
{\bkmkend AAAAAAAEAE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the totalAmountShoots attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{The new value of the hitsShoots. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 68                                                 \{\par
69     {\cf19 if}(value < 0) {\cf19 throw} std::invalid_argument({\cf22 "Values cannot be negative"});\par
70     {\cf19 if}(value < hitShoots) {\cf19 throw} std::invalid_argument({\cf22 "Total amount of shoots cannot be smaller then number of shoots hit"});\par
71     totalAmountShoots = value;\par
72     {\cf19 return};\par
73 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/{\b Score.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/match/{\b Score.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Screens::ScoreScreen\par \pard\plain 
{\tc\tcl2 \v Screens::ScoreScreen}
{\xe \v Screens::ScoreScreen}
{\bkmkstart AAAAAAAFGN}
{\bkmkend AAAAAAAFGN}
\par
{
{\f2 #include <ScoreScreen.hpp>}}\par
Diagrama de hierarquia da classe Screens::ScoreScreen:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_screens_1_1_score_screen.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ScoreScreen} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the {\b Score} {\b Screen} window. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~ScoreScreen} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Score} {\b Screen}. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Screens::Screen}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Screen} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Screen} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the basic setup to render a screen with raylib. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b isActive} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the window is active. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b renderScreen} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the window in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b handleEvents} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handle any event that can be trigged in the interface. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b renderScreen} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the window in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b handleEvents} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handle any event that can be trigged in the interface. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros p\'FAblicos est\'E1ticos herdados de {\b Screens::Screen}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static float {\b getDisplayHeight} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the display window height. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static float {\b getDisplayWidth} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the display width. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Screens::Screen}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b isWindowActive} = {\b true}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ScoreScreen\:Screens::ScoreScreen}
{\xe \v Screens::ScoreScreen\:ScoreScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Screens::ScoreScreen::ScoreScreen ()}}
\par
{\bkmkstart AAAAAAAFGO}
{\bkmkend AAAAAAAFGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the {\b Score} {\b Screen} window. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 26                                 :\par
27     backgroundImage({\cf17 new} Components::Image(Backgrounds::MAIN)),\par
28     title({\cf17 new} Components::Text()),\par
29     matchsResultDisplay({\cf17 new} Views::MatchResultDisplay()),\par
30     buttonNext({\cf17 new} Components::ButtonIcon(Icons::RIGHT_ARROW_BLACK)),\par
31     buttonPrevius({\cf17 new} Components::ButtonIcon(Icons::LEFT_ARROW_BLACK)),\par
32     buttonVoltar({\cf17 new} Components::ButtonText()),\par
33     emptyScoreRegisterText({\cf17 new} Components::Text()) \{\par
34     loadMatchResults();\par
35     {\cf19 if}(matchsResults.size() != 0) \{\par
36         matchsResultDisplay->update(matchsResults[0]);\par
37     \}\par
38 \par
39     buildBackground();\par
40     buildTitle();\par
41 \par
42     buildEmptyScoreRegistrText();\par
43 \par
44     buildMatchsResultsDisplays();\par
45     buildButtonsNextPrevius();\par
46 \par
47     buildButtonVoltar();\par
48 \}\par
}
}
{\xe \v ~ScoreScreen\:Screens::ScoreScreen}
{\xe \v Screens::ScoreScreen\:~ScoreScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Screens::ScoreScreen::~ScoreScreen (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFGP}
{\bkmkend AAAAAAAFGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Score} {\b Screen}. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 50 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v handleEvents\:Screens::ScoreScreen}
{\xe \v Screens::ScoreScreen\:handleEvents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Screens::ScoreScreen::handleEvents (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFGQ}
{\bkmkend AAAAAAAFGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handle any event that can be trigged in the interface. }}\par
{
Implementa {\b Screens::Screen} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFFZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 71                                       \{\par
72     {\cf19 if}(buttonVoltar->checkClick()) \{\par
73         std::shared_ptr<Screen> titleScreen({\cf17 new} TitleScreen());\par
74         ScreenManager::getScreenManager()->loadScreen(titleScreen);\par
75     \}\par
76 \par
77     {\cf19 if}(matchsResults.size() == 0) \{\par
78         {\cf19 return};\par
79     \}\par
80     \par
81     {\cf19 if}(buttonNext->checkClick()) \{\par
82         handleButtonNextClick();\par
83     \}\par
84 \par
85     {\cf19 if}(buttonPrevius->checkClick()) \{\par
86         handleButtonPreviusClick();\par
87     \}\par
88 \par
89     {\cf19 return};\par
90 \}\par
}
}
{\xe \v renderScreen\:Screens::ScoreScreen}
{\xe \v Screens::ScoreScreen\:renderScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Screens::ScoreScreen::renderScreen (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFGR}
{\bkmkend AAAAAAAFGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the window in the interface. }}\par
{
Implementa {\b Screens::Screen} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFGB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 52                                       \{\par
53     renderBackground();\par
54 \par
55     title->render();\par
56 \par
57     {\cf19 if}(matchsResults.size() == 0) \{\par
58         emptyScoreRegisterText->render();\par
59     \}\par
60     {\cf19 else} \{\par
61         matchsResultDisplay->render();\par
62         buttonNext->render();\par
63         buttonPrevius->render();\par
64     \}\par
65 \par
66     buttonVoltar->render();\par
67 \par
68     {\cf19 return};\par
69 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/score/{\b ScoreScreen.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/score/{\b ScoreScreen.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Screens::Screen\par \pard\plain 
{\tc\tcl2 \v Screens::Screen}
{\xe \v Screens::Screen}
{\bkmkstart AAAAAAAFGS}
{\bkmkend AAAAAAAFGS}
\par
{
{\f2 #include <Screen.hpp>}}\par
Diagrama de hierarquia da classe Screens::Screen:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_screens_1_1_screen.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Screen} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Screen} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the basic setup to render a screen with raylib. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b isActive} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the window is active. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static float {\b getDisplayHeight} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the display window height. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static float {\b getDisplayWidth} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the display width. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b renderScreen} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the window in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b handleEvents} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handle any event that can be trigged in the interface. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b isWindowActive} = {\b true}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ~Screen\:Screens::Screen}
{\xe \v Screens::Screen\:~Screen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Screens::Screen::~Screen (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFGT}
{\bkmkend AAAAAAAFGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Screen} object. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getDisplayHeight\:Screens::Screen}
{\xe \v Screens::Screen\:getDisplayHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Screens::Screen::getDisplayHeight (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFGU}
{\bkmkend AAAAAAAFGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the display window height. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The window display height value. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 25                                       \{\par
26     {\cf19 return} GetScreenHeight();\par
27 \}\par
}
}
{\xe \v getDisplayWidth\:Screens::Screen}
{\xe \v Screens::Screen\:getDisplayWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Screens::Screen::getDisplayWidth (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFGV}
{\bkmkend AAAAAAAFGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the display width. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The window display width value. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 29                                      \{\par
30     {\cf19 return} GetScreenWidth();\par
31 \}\par
}
}
{\xe \v handleEvents\:Screens::Screen}
{\xe \v Screens::Screen\:handleEvents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Screens::Screen::handleEvents (){\f2 [protected]}, {\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAFFZ}
{\bkmkend AAAAAAAFFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handle any event that can be trigged in the interface. }}\par
{
Implementado por {\b Screens::EndGameScreen} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFFY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Screens::GameScreen} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFGG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Screens::PositioningScreen} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFGL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Screens::ScoreScreen} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFGQ \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Screens::TitleScreen} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFGW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v isActive\:Screens::Screen}
{\xe \v Screens::Screen\:isActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Screens::Screen::isActive () const}}
\par
{\bkmkstart AAAAAAAFGX}
{\bkmkend AAAAAAAFGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the window is active. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Boolean indicates if the window should be rendered. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21                                    \{\par
22     {\cf19 return} isWindowActive;\par
23 \}\par
}
}
{\xe \v render\:Screens::Screen}
{\xe \v Screens::Screen\:render}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Screens::Screen::render (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFGY}
{\bkmkend AAAAAAAFGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the basic setup to render a screen with raylib. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 7                            \{\par
8     BeginDrawing();\par
9         ClearBackground(GetColor(0x052c46ff)); \par
10 \par
11         {\cf19 if}(isWindowActive) \{\par
12             renderScreen();\par
13             handleEvents();\par
14         \}\par
15     EndDrawing();\par
16     {\cf19 return};\par
17 \}\par
}
}
{\xe \v renderScreen\:Screens::Screen}
{\xe \v Screens::Screen\:renderScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Screens::Screen::renderScreen (){\f2 [protected]}, {\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAFGB}
{\bkmkend AAAAAAAFGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the window in the interface. }}\par
{
Implementado por {\b Screens::EndGameScreen} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFGA \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Screens::GameScreen} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFGH \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Screens::PositioningScreen} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFGM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Screens::ScoreScreen} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFGR \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Screens::TitleScreen} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFGZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v isWindowActive\:Screens::Screen}
{\xe \v Screens::Screen\:isWindowActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Screens::Screen::isWindowActive = {\b true}{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAFHA}
{\bkmkend AAAAAAAFHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/screen/{\b Screen.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/screen/{\b Screen.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Screens::ScreenManager\par \pard\plain 
{\tc\tcl2 \v Screens::ScreenManager}
{\xe \v Screens::ScreenManager}
{\bkmkstart AAAAAAAFHB}
{\bkmkend AAAAAAAFHB}
\par
{
{\f2 #include <ScreenManager.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~ScreenManager} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Screen} Manager singleton. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b loadScreen} (const std::shared_ptr< {\b Screen} > screen)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load a screen that can be rendered. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b renderScreen} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the actual screen that was loaded. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b initializeWindow} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setup the window default values. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b closeWindow} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Close the game window. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::shared_ptr< {\b ScreenManager} > {\b getScreenManager} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the instance of the {\b Screen} Manager. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const std::string {\b WINDOW_NAME} = {\b PROJECT_NAME}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAULT_FPS} = 60\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ~ScreenManager\:Screens::ScreenManager}
{\xe \v Screens::ScreenManager\:~ScreenManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Screens::ScreenManager::~ScreenManager (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFHC}
{\bkmkend AAAAAAAFHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Screen} Manager singleton. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v closeWindow\:Screens::ScreenManager}
{\xe \v Screens::ScreenManager\:closeWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Screens::ScreenManager::closeWindow (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFHD}
{\bkmkend AAAAAAAFHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Close the game window. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 42                                        \{\par
43     CloseWindow(); {\cf20 // TODO: Verificar erro que ocorre ao encerrar a execu\'E7\'E3o desta forma}\par
44     {\cf19 return};\par
45 \}\par
}
}
{\xe \v getScreenManager\:Screens::ScreenManager}
{\xe \v Screens::ScreenManager\:getScreenManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::shared_ptr< {\b Screens::ScreenManager} > Screens::ScreenManager::getScreenManager (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFHE}
{\bkmkend AAAAAAAFHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the instance of the {\b Screen} Manager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The instance of the {\b Screen} Manager. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 67                                                                            \{\par
68     {\cf19 if}(instance == {\cf17 nullptr}) \{\par
69         instance = std::unique_ptr<Screens::ScreenManager>({\cf17 new} Screens::ScreenManager());\par
70     \}\par
71 \par
72     {\cf19 return} instance;\par
73 \}\par
}
}
{\xe \v initializeWindow\:Screens::ScreenManager}
{\xe \v Screens::ScreenManager\:initializeWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Screens::ScreenManager::initializeWindow (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFHF}
{\bkmkend AAAAAAAFHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setup the window default values. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 16                                             \{\par
17     InitWindow(0, 0, WINDOW_NAME.c_str());\par
18 \par
19     setDisplayToFullScreen();\par
20     SetTargetFPS(DEFAULT_FPS);\par
21 \par
22     Image gameLogo = LoadImage(Icons::LOGO.c_str());\par
23     SetWindowIcon(gameLogo);\par
24 \par
25     {\cf19 return};\par
26 \}\par
}
}
{\xe \v loadScreen\:Screens::ScreenManager}
{\xe \v Screens::ScreenManager\:loadScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Screens::ScreenManager::loadScreen (const std::shared_ptr< {\b Screen} >  {\i screen})}}
\par
{\bkmkstart AAAAAAAFHG}
{\bkmkend AAAAAAAFHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load a screen that can be rendered. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i screen} \cell }{is the screen that will be loaded and can be rendered. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 47                                                                         \{\par
48     lastScreen = actualScreen;\par
49     actualScreen = screen;\par
50     {\cf19 return};\par
51 \}\par
}
}
{\xe \v renderScreen\:Screens::ScreenManager}
{\xe \v Screens::ScreenManager\:renderScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Screens::ScreenManager::renderScreen ()}}
\par
{\bkmkstart AAAAAAAFHH}
{\bkmkend AAAAAAAFHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the actual screen that was loaded. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 53                                         \{\par
54     {\cf19 if}(lastScreen.use_count() == 1) \{\par
55         lastScreen.reset();\par
56     \}\par
57 \par
58     {\cf19 if}(actualScreen != {\cf17 nullptr}) \{\par
59         actualScreen->render();\par
60     \}\par
61 \par
62     {\cf19 return};\par
63 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v DEFAULT_FPS\:Screens::ScreenManager}
{\xe \v Screens::ScreenManager\:DEFAULT_FPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const float Screens::ScreenManager::DEFAULT_FPS = 60{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFHI}
{\bkmkend AAAAAAAFHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WINDOW_NAME\:Screens::ScreenManager}
{\xe \v Screens::ScreenManager\:WINDOW_NAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string Screens::ScreenManager::WINDOW_NAME = {\b PROJECT_NAME}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFHJ}
{\bkmkend AAAAAAAFHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/screen/{\b ScreenManager.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/screen/{\b ScreenManager.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura Shader\par \pard\plain 
{\tc\tcl2 \v Shader}
{\xe \v Shader}
{\bkmkstart AAAAAAAEAF}
{\bkmkend AAAAAAAEAF}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b locs}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v id\:Shader}
{\xe \v Shader\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Shader::id}}
\par
{\bkmkstart AAAAAAAEAG}
{\bkmkend AAAAAAAEAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v locs\:Shader}
{\xe \v Shader\:locs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* Shader::locs}}
\par
{\bkmkstart AAAAAAAEAH}
{\bkmkend AAAAAAAEAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura Sound\par \pard\plain 
{\tc\tcl2 \v Sound}
{\xe \v Sound}
{\bkmkstart AAAAAAAEAI}
{\bkmkend AAAAAAAEAI}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AudioStream} {\b stream}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b frameCount}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v frameCount\:Sound}
{\xe \v Sound\:frameCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Sound::frameCount}}
\par
{\bkmkstart AAAAAAAEAJ}
{\bkmkend AAAAAAAEAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stream\:Sound}
{\xe \v Sound\:stream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AudioStream} Sound::stream}}
\par
{\bkmkstart AAAAAAAEAK}
{\bkmkend AAAAAAAEAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe doctest::String\par \pard\plain 
{\tc\tcl2 \v doctest::String}
{\xe \v doctest::String}
{\bkmkstart AAAAAAAERX}
{\bkmkend AAAAAAAERX}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b String} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~String} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b String} (const char *in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b String} (const char *in, unsigned in_size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b String} ({\b std::istream} &in, unsigned in_size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b String} (const {\b String} &other)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b String} & {\b operator=} (const {\b String} &other)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b String} & {\b operator+=} (const {\b String} &other)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b String} ({\b String} &&other)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b String} & {\b operator=} ({\b String} &&other)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b operator[]} (unsigned i) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char & {\b operator[]} (unsigned i)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b c_str} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b c_str} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b size} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b capacity} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b compare} (const char *other, {\b bool} no_case={\b false}) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b compare} (const {\b String} &other, {\b bool} no_case={\b false}) const\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v String\:doctest::String}
{\xe \v doctest::String\:String}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::String::String ()}}
\par
{\bkmkstart AAAAAAAERY}
{\bkmkend AAAAAAAERY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~String\:doctest::String}
{\xe \v doctest::String\:~String}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::String::~String ()}}
\par
{\bkmkstart AAAAAAAERZ}
{\bkmkend AAAAAAAERZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v String\:doctest::String}
{\xe \v doctest::String\:String}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::String::String (const char *  {\i in})}}
\par
{\bkmkstart AAAAAAAESA}
{\bkmkend AAAAAAAESA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v String\:doctest::String}
{\xe \v doctest::String\:String}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::String::String (const char *  {\i in}, unsigned  {\i in_size})}}
\par
{\bkmkstart AAAAAAAESB}
{\bkmkend AAAAAAAESB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v String\:doctest::String}
{\xe \v doctest::String\:String}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::String::String ({\b std::istream} &  {\i in}, unsigned  {\i in_size})}}
\par
{\bkmkstart AAAAAAAESC}
{\bkmkend AAAAAAAESC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v String\:doctest::String}
{\xe \v doctest::String\:String}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::String::String (const {\b String} &  {\i other})}}
\par
{\bkmkstart AAAAAAAESD}
{\bkmkend AAAAAAAESD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v String\:doctest::String}
{\xe \v doctest::String\:String}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::String::String ({\b String} &&  {\i other})}}
\par
{\bkmkstart AAAAAAAESE}
{\bkmkend AAAAAAAESE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v c_str\:doctest::String}
{\xe \v doctest::String\:c_str}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * doctest::String::c_str (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAESF}
{\bkmkend AAAAAAAESF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 560                         \{\par
561         {\cf19 if}(isOnStack())\par
562             {\cf19 return} {\cf17 reinterpret_cast<}{\cf18 char}*{\cf17 >}(buf);\par
563         {\cf19 return} data.ptr;\par
564     \}\par
}
}
{\xe \v c_str\:doctest::String}
{\xe \v doctest::String\:c_str}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * doctest::String::c_str () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAESG}
{\bkmkend AAAAAAAESG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 559 \{ {\cf19 return} {\cf17 const_cast<}String*{\cf17 >}({\cf17 this})->c_str(); \} {\cf20 // NOLINT}\par
}
}
{\xe \v capacity\:doctest::String}
{\xe \v doctest::String\:capacity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned doctest::String::capacity () const}}
\par
{\bkmkstart AAAAAAAESH}
{\bkmkend AAAAAAAESH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v compare\:doctest::String}
{\xe \v doctest::String\:compare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int doctest::String::compare (const char *  {\i other}, {\b bool}  {\i no_case} = {\f2 {\b false}}) const}}
\par
{\bkmkstart AAAAAAAESI}
{\bkmkend AAAAAAAESI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v compare\:doctest::String}
{\xe \v doctest::String\:compare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int doctest::String::compare (const {\b String} &  {\i other}, {\b bool}  {\i no_case} = {\f2 {\b false}}) const}}
\par
{\bkmkstart AAAAAAAESJ}
{\bkmkend AAAAAAAESJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator+=\:doctest::String}
{\xe \v doctest::String\:operator+=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b String} & doctest::String::operator+= (const {\b String} &  {\i other})}}
\par
{\bkmkstart AAAAAAAESK}
{\bkmkend AAAAAAAESK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator=\:doctest::String}
{\xe \v doctest::String\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b String} & doctest::String::operator= (const {\b String} &  {\i other})}}
\par
{\bkmkstart AAAAAAAESL}
{\bkmkend AAAAAAAESL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator=\:doctest::String}
{\xe \v doctest::String\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b String} & doctest::String::operator= ({\b String} &&  {\i other})}}
\par
{\bkmkstart AAAAAAAESM}
{\bkmkend AAAAAAAESM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator[]\:doctest::String}
{\xe \v doctest::String\:operator[]}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char & doctest::String::operator[] (unsigned  {\i i})}}
\par
{\bkmkstart AAAAAAAESN}
{\bkmkend AAAAAAAESN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator[]\:doctest::String}
{\xe \v doctest::String\:operator[]}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char doctest::String::operator[] (unsigned  {\i i}) const}}
\par
{\bkmkstart AAAAAAAESO}
{\bkmkend AAAAAAAESO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v size\:doctest::String}
{\xe \v doctest::String\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned doctest::String::size () const}}
\par
{\bkmkstart AAAAAAAESP}
{\bkmkend AAAAAAAESP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v buf\:doctest::String}
{\xe \v doctest::String\:buf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char doctest::String::buf[len]}}
\par
{\bkmkstart AAAAAAAESQ}
{\bkmkend AAAAAAAESQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v data\:doctest::String}
{\xe \v doctest::String\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
view doctest::String::data}}
\par
{\bkmkstart AAAAAAAESR}
{\bkmkend AAAAAAAESR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura doctest::StringMaker< T >\par \pard\plain 
{\tc\tcl2 \v doctest::StringMaker< T >}
{\xe \v doctest::StringMaker< T >}
{\bkmkstart AAAAAAAESS}
{\bkmkend AAAAAAAESS}
\par
{
{\f2 #include <doctest.hpp>}}\par
Diagrama de hierarquia da classe doctest::StringMaker< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structdoctest_1_1_string_maker.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros p\'FAblicos est\'E1ticos herdados de {\b doctest::detail::StringMakerBase< detail::has_insertion_operator< T >::value >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b String} {\b convert} (const {\b DOCTEST_REF_WRAP}(T))\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura doctest::StringMaker< R C::* >\par \pard\plain 
{\tc\tcl2 \v doctest::StringMaker< R C::* >}
{\xe \v doctest::StringMaker< R C::* >}
{\bkmkstart AAAAAAAEST}
{\bkmkend AAAAAAAEST}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b String} {\b convert} (R C::*p)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v convert\:doctest::StringMaker< R C::* >}
{\xe \v doctest::StringMaker< R C::* >\:convert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename R , typename C > static {\b String} {\b doctest::StringMaker}< R C::* >::convert (R C::*  {\i p}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAESU}
{\bkmkend AAAAAAAESU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 995                                  \{\par
996         {\cf19 if}(p)\par
997             {\cf19 return} detail::rawMemoryToString(p);\par
998         {\cf19 return} {\cf22 "NULL"};\par
999     \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura doctest::StringMaker< T * >\par \pard\plain 
{\tc\tcl2 \v doctest::StringMaker< T * >}
{\xe \v doctest::StringMaker< T * >}
{\bkmkstart AAAAAAAESV}
{\bkmkend AAAAAAAESV}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename U > static {\b String} {\b convert} (U *p)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v convert\:doctest::StringMaker< T * >}
{\xe \v doctest::StringMaker< T * >\:convert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > template<typename U > static {\b String} {\b doctest::StringMaker}< T * >::convert (U *  {\i p}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAESW}
{\bkmkend AAAAAAAESW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 985                                 \{\par
986         {\cf19 if}(p)\par
987             {\cf19 return} detail::rawMemoryToString(p);\par
988         {\cf19 return} {\cf22 "NULL"};\par
989     \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura doctest::detail::StringMakerBase< C >\par \pard\plain 
{\tc\tcl2 \v doctest::detail::StringMakerBase< C >}
{\xe \v doctest::detail::StringMakerBase< C >}
{\bkmkstart AAAAAAAFCD}
{\bkmkend AAAAAAAFCD}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > static {\b String} {\b convert} (const {\b DOCTEST_REF_WRAP}(T))\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v convert\:doctest::detail::StringMakerBase< C >}
{\xe \v doctest::detail::StringMakerBase< C >\:convert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b bool} C> template<typename T > static {\b String} {\b doctest::detail::StringMakerBase}< C >::convert (const   {\i DOCTEST_REF_WRAP}T){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFCE}
{\bkmkend AAAAAAAFCE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 901                                                          \{\par
902             {\cf19 return} {\cf22 "\{?\}"};\par
903         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura doctest::detail::StringMakerBase< true >\par \pard\plain 
{\tc\tcl2 \v doctest::detail::StringMakerBase< true >}
{\xe \v doctest::detail::StringMakerBase< true >}
{\bkmkstart AAAAAAAFCF}
{\bkmkend AAAAAAAFCF}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > static {\b String} {\b convert} (const {\b DOCTEST_REF_WRAP}(T) in)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v convert\:doctest::detail::StringMakerBase< true >}
{\xe \v doctest::detail::StringMakerBase< true >\:convert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > static {\b String} {\b doctest::detail::StringMakerBase}< {\b true} >::convert (const {\b DOCTEST_REF_WRAP}(T)  {\i in}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFCG}
{\bkmkend AAAAAAAFCG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 950                                                             \{\par
951             {\cf20 /* When parameter "in" is a null terminated const char* it works.}\par
952 {\cf20              * When parameter "in" is a T arr[N] without '\\0' we can fill the}\par
953 {\cf20              * stringstream with N objects (T=char).If in is char pointer *}\par
954 {\cf20              * without '\\0' , it would cause segfault}\par
955 {\cf20              * stepping over unaccessible memory.}\par
956 {\cf20              */}\par
957 \par
958             std::ostream* stream = tlssPush();\par
959             filloss(stream, in);\par
960             {\cf19 return} tlssPop();\par
961         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura doctest::detail::StringStream< T >\par \pard\plain 
{\tc\tcl2 \v doctest::detail::StringStream< T >}
{\xe \v doctest::detail::StringStream< T >}
{\bkmkstart AAAAAAAFCH}
{\bkmkend AAAAAAAFCH}
\par
{
{\f2 #include <doctest.hpp>}}\par
Diagrama de hierarquia da classe doctest::detail::StringStream< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structdoctest_1_1detail_1_1_string_stream.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros p\'FAblicos est\'E1ticos herdados de {\b doctest::detail::StringStreamBase< has_insertion_operator< T >::value >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b convert} ({\b std::ostream} *s, const T &in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b convert} ({\b std::ostream} *s, const char *in)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura doctest::detail::StringStreamBase< C >\par \pard\plain 
{\tc\tcl2 \v doctest::detail::StringStreamBase< C >}
{\xe \v doctest::detail::StringStreamBase< C >}
{\bkmkstart AAAAAAAFCI}
{\bkmkend AAAAAAAFCI}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > static void {\b convert} ({\b std::ostream} *s, const T &in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b convert} ({\b std::ostream} *s, const char *in)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v convert\:doctest::detail::StringStreamBase< C >}
{\xe \v doctest::detail::StringStreamBase< C >\:convert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b bool} C> static void {\b doctest::detail::StringStreamBase}< C >::convert ({\b std::ostream} *  {\i s}, const char *  {\i in}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFCJ}
{\bkmkend AAAAAAAFCJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1644 \{ *s << String(in); \}\par
}
}
{\xe \v convert\:doctest::detail::StringStreamBase< C >}
{\xe \v doctest::detail::StringStreamBase< C >\:convert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b bool} C> template<typename T > static void {\b doctest::detail::StringStreamBase}< C >::convert ({\b std::ostream} *  {\i s}, const T &  {\i in}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFCK}
{\bkmkend AAAAAAAFCK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1638                                                         \{\par
1639             *s << toString(in);\par
1640         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura doctest::detail::StringStreamBase< true >\par \pard\plain 
{\tc\tcl2 \v doctest::detail::StringStreamBase< true >}
{\xe \v doctest::detail::StringStreamBase< true >}
{\bkmkstart AAAAAAAFCL}
{\bkmkend AAAAAAAFCL}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > static void {\b convert} ({\b std::ostream} *s, const T &in)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v convert\:doctest::detail::StringStreamBase< true >}
{\xe \v doctest::detail::StringStreamBase< true >\:convert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > static void {\b doctest::detail::StringStreamBase}< {\b true} >::convert ({\b std::ostream} *  {\i s}, const T &  {\i in}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFCM}
{\bkmkend AAAAAAAFCM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1651                                                         \{\par
1652             *s << in;\par
1653         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura doctest::detail::Subcase\par \pard\plain 
{\tc\tcl2 \v doctest::detail::Subcase}
{\xe \v doctest::detail::Subcase}
{\bkmkstart AAAAAAAFCN}
{\bkmkend AAAAAAAFCN}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Subcase} (const {\b String} &name, const char *file, int line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Subcase} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b operator bool} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SubcaseSignature} {\b m_signature}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b m_entered} = {\b false}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Subcase\:doctest::detail::Subcase}
{\xe \v doctest::detail::Subcase\:Subcase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::detail::Subcase::Subcase (const {\b String} &  {\i name}, const char *  {\i file}, int  {\i line})}}
\par
{\bkmkstart AAAAAAAFCO}
{\bkmkend AAAAAAAFCO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~Subcase\:doctest::detail::Subcase}
{\xe \v doctest::detail::Subcase\:~Subcase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::detail::Subcase::~Subcase ()}}
\par
{\bkmkstart AAAAAAAFCP}
{\bkmkend AAAAAAAFCP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator bool\:doctest::detail::Subcase}
{\xe \v doctest::detail::Subcase\:operator bool}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::detail::Subcase::operator {\b bool} () const}}
\par
{\bkmkstart AAAAAAAFCQ}
{\bkmkend AAAAAAAFCQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v m_entered\:doctest::detail::Subcase}
{\xe \v doctest::detail::Subcase\:m_entered}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::detail::Subcase::m_entered = {\b false}}}
\par
{\bkmkstart AAAAAAAFCR}
{\bkmkend AAAAAAAFCR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_signature\:doctest::detail::Subcase}
{\xe \v doctest::detail::Subcase\:m_signature}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SubcaseSignature} doctest::detail::Subcase::m_signature}}
\par
{\bkmkstart AAAAAAAFCS}
{\bkmkend AAAAAAAFCS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura doctest::SubcaseSignature\par \pard\plain 
{\tc\tcl2 \v doctest::SubcaseSignature}
{\xe \v doctest::SubcaseSignature}
{\bkmkstart AAAAAAAESX}
{\bkmkend AAAAAAAESX}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b operator<} (const {\b SubcaseSignature} &other) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b String} {\b m_name}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b m_file}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b m_line}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator<\:doctest::SubcaseSignature}
{\xe \v doctest::SubcaseSignature\:operator<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::SubcaseSignature::operator< (const {\b SubcaseSignature} &  {\i other}) const}}
\par
{\bkmkstart AAAAAAAESY}
{\bkmkend AAAAAAAESY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v m_file\:doctest::SubcaseSignature}
{\xe \v doctest::SubcaseSignature\:m_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* doctest::SubcaseSignature::m_file}}
\par
{\bkmkstart AAAAAAAESZ}
{\bkmkend AAAAAAAESZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_line\:doctest::SubcaseSignature}
{\xe \v doctest::SubcaseSignature\:m_line}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int doctest::SubcaseSignature::m_line}}
\par
{\bkmkstart AAAAAAAETA}
{\bkmkend AAAAAAAETA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_name\:doctest::SubcaseSignature}
{\xe \v doctest::SubcaseSignature\:m_name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b String} doctest::SubcaseSignature::m_name}}
\par
{\bkmkstart AAAAAAAETB}
{\bkmkend AAAAAAAETB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Submarine\par \pard\plain 
{\tc\tcl2 \v Submarine}
{\xe \v Submarine}
{\bkmkstart AAAAAAAEAL}
{\bkmkend AAAAAAAEAL}
\par
{
{\f2 #include <Submarine.hpp>}}\par
Diagrama de hierarquia da classe Submarine:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_submarine.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Submarine} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Submarine} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Submarine} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual unsigned int {\b getInitialHealth} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the initial health attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Troop}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Troop} (const unsigned int {\b health})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new {\b Troop} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Troop} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Troop} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b takeDamage} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Make the troop take damage, decreasing its health. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b isDead} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines if the troop is dead. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPosition} (const {\b Point} initialPosition, const {\b Orientation} orientation)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the positioning of the troop. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\b Point} > {\b getOccupiedPositions} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the ocuppied positions points, in order. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b getHealth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the health attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual unsigned int {\b getInitialHealth} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the initial health attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::map< {\b Point}, std::string > {\b getImages} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the images attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getImageInPoint} (const {\b Point} point) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the image associated in a certain point. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b containsPoint} (const {\b Point} point) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verify if the point is within the troop shape. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::string {\b getTroopName} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the standard submarine name. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros p\'FAblicos est\'E1ticos herdados de {\b Troop}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::string {\b getTroopName} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the standard troop name. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const unsigned int {\b INITIAL_HEALTH} = 1\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b positionHorizontally} (const {\b Point} initialPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Positions the submarine horizontally. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b positionVertically} (const {\b Point} initialPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Positions the submarine vertically. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b buildImagesMap} (const std::string troopName) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Associate points where the troop was positioned to it's images paths. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b positionHorizontally} (const {\b Point} initialPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract function with the desire to position the troop horizontally. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b positionVertically} (const {\b Point} initialPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract function with the desire to position the troop vertically. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b buildImagesMap} (const std::string folderPathWithSpriteName)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Associate points where the troop was positioned to it's images paths. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Troop}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b health} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\b Point} > {\b shape}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::map< {\b Point}, std::string > {\b images}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Submarine\:Submarine}
{\xe \v Submarine\:Submarine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Submarine::Submarine ()}}
\par
{\bkmkstart AAAAAAAEAM}
{\bkmkend AAAAAAAEAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new submarine with default health values.  \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17 : Troop(INITIAL_HEALTH) \{\}\par
}
}
{\xe \v ~Submarine\:Submarine}
{\xe \v Submarine\:~Submarine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Submarine::~Submarine (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEAN}
{\bkmkend AAAAAAAEAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Submarine} object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 19 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v buildImagesMap\:Submarine}
{\xe \v Submarine\:buildImagesMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Submarine::buildImagesMap (const std::string  {\i troopName}){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEAO}
{\bkmkend AAAAAAAEAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Associate points where the troop was positioned to it's images paths. }}\par
{
Reimplementa {\b Troop} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 35                                                         \{\par
36     images.clear();\par
37 \par
38     images.insert(std::pair<Point, std::string>(shape[0], troopName));\par
39     \par
40     {\cf19 return};\par
41 \}\par
}
}
{\xe \v getInitialHealth\:Submarine}
{\xe \v Submarine\:getInitialHealth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Submarine::getInitialHealth () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEAQ}
{\bkmkend AAAAAAAEAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the initial health attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Initial health attribute value. \par
}}}{
Implementa {\b Troop} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 43                                                \{\par
44     {\cf19 return} INITIAL_HEALTH;\par
45 \}\par
}
}
{\xe \v getTroopName\:Submarine}
{\xe \v Submarine\:getTroopName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Submarine::getTroopName (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEAR}
{\bkmkend AAAAAAAEAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the standard submarine name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A string with the standard submarine name. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 13                                   \{\par
14     {\cf19 return} {\cf22 "Submarino"};\par
15 \}\par
}
}
{\xe \v positionHorizontally\:Submarine}
{\xe \v Submarine\:positionHorizontally}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Submarine::positionHorizontally (const {\b Point}  {\i initialPosition}){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEAS}
{\bkmkend AAAAAAAEAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Positions the submarine horizontally. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i initialPosition} \cell }{The point which corresponds to the initial position of the positioning. \cell }
{\row }
}
}{
Reimplementa {\b Troop} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21                                                                 \{\par
22     Troop::positionHorizontally(initialPosition);\par
23     buildImagesMap(SUBMARINE_HORIZONTAL_FULL_SPRITE);\par
24 \par
25     {\cf19 return};\par
26 \}\par
}
}
{\xe \v positionVertically\:Submarine}
{\xe \v Submarine\:positionVertically}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Submarine::positionVertically (const {\b Point}  {\i initialPosition}){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEAT}
{\bkmkend AAAAAAAEAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Positions the submarine vertically. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i initialPosition} \cell }{The point which corresponds to the initial position of the positioning. \cell }
{\row }
}
}{
Reimplementa {\b Troop} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 28                                                               \{\par
29     Troop::positionVertically(initialPosition);\par
30     buildImagesMap(SUBMARINE_VERTICAL_FULL_SPRITE);\par
31 \par
32     {\cf19 return};\par
33 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v INITIAL_HEALTH\:Submarine}
{\xe \v Submarine\:INITIAL_HEALTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned int Submarine::INITIAL_HEALTH = 1{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEAU}
{\bkmkend AAAAAAAEAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Submarine} standard troop health. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/{\b Submarine.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/{\b Submarine.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Views::SubmarineDisplay\par \pard\plain 
{\tc\tcl2 \v Views::SubmarineDisplay}
{\xe \v Views::SubmarineDisplay}
{\bkmkstart AAAAAAAFML}
{\bkmkend AAAAAAAFML}
\par
{
{\f2 #include <SubmarineDisplay.hpp>}}\par
Diagrama de hierarquia da classe Views::SubmarineDisplay:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_views_1_1_submarine_display.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SubmarineDisplay} (const unsigned int amount)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the selection to place {\b Submarine} troop. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~SubmarineDisplay} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Submarine} Display view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::shared_ptr< {\b Troop} > {\b getTroopInstance} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a {\b Submarine} instantiated object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::string {\b getTroopClassName} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the troop class name. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Views::TroopDisplay}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TroopDisplay} (const unsigned int amount, const std::string troopName, const std::string troopImagePath)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the template of a troop that can be positioned. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~TroopDisplay} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Troop} Display view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkClick} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the troop display was clicked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkMouseOver} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse is over the troop display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAmount} (const unsigned int amount)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the amount of troops that can be placed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b getAmount} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the amount of this troop type that can be placed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b decrementAmount} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrement the amount of available troops that can be placed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b incrementAmount} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increment the amount of available troops that can be placed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTroopName} (const std::string troopName)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the name of the troop that will be displayed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getTroopName} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the troop name. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::string {\b getTroopClassName} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the troop class name. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::shared_ptr< {\b Troop} > {\b getTroopInstance} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a instantiated object of a troop. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTroopImageWidth} (const float {\b width})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width of the full sprite of the troop diplayed. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Views::View}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~View} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b View} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Component} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Component}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the render contract of components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getXPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the X position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getYPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Vector2} {\b getPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::IClickable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkClick} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the troop display was clicked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkMouseOver} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse is over the troop display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setEnabled} (const {\b bool} {\b enabled})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the enabled attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b isEnabled} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the button is enable. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_WIDTH} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_HEIGHT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Vector2} {\b DEFAULT_INITIAL_POSITION} = \{ 0, 0 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros protegidos herdados de {\b Views::TroopDisplay}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b width} = {\b DEFAUT_INITIAL_WIDTH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b height} = {\b DEFAUT_INITIAL_HEIGHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b position} = {\b DEFAULT_INITIAL_POSITION}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::IClickable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b enabled} = {\b true}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v SubmarineDisplay\:Views::SubmarineDisplay}
{\xe \v Views::SubmarineDisplay\:SubmarineDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::SubmarineDisplay::SubmarineDisplay (const unsigned int  {\i amount})}}
\par
{\bkmkstart AAAAAAAFMM}
{\bkmkend AAAAAAAFMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the selection to place {\b Submarine} troop. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i amount} \cell }{is the amount of that troop can be placed. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 11                                                                  :\par
12     TroopDisplay(amount, Submarine::getTroopName(), SUBMARINE_HORIZONTAL_FULL_SPRITE) \{\par
13     setXPosition(0.0);\par
14     setYPosition(0.0);\par
15 \}\par
}
}
{\xe \v ~SubmarineDisplay\:Views::SubmarineDisplay}
{\xe \v Views::SubmarineDisplay\:~SubmarineDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::SubmarineDisplay::~SubmarineDisplay (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFMN}
{\bkmkend AAAAAAAFMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Submarine} Display view. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getTroopClassName\:Views::SubmarineDisplay}
{\xe \v Views::SubmarineDisplay\:getTroopClassName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Views::SubmarineDisplay::getTroopClassName () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFMO}
{\bkmkend AAAAAAAFMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the troop class name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The troop class name value. \par
}}}{
Implementa {\b Views::TroopDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFIA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 25                                                          \{\par
26     {\cf19 return} {\cf17 typeid}(Submarine).name();\par
27 \}\par
}
}
{\xe \v getTroopInstance\:Views::SubmarineDisplay}
{\xe \v Views::SubmarineDisplay\:getTroopInstance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::shared_ptr< {\b Troop} > Views::SubmarineDisplay::getTroopInstance () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFMP}
{\bkmkend AAAAAAAFMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a {\b Submarine} instantiated object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Submarine} instance. \par
}}}{
Implementa {\b Views::TroopDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFIC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21                                                                    \{\par
22     {\cf19 return} std::shared_ptr<Troop>({\cf17 new} Submarine());\par
23 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/{\b SubmarineDisplay.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/{\b SubmarineDisplay.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura doctest::detail::TestCase\par \pard\plain 
{\tc\tcl2 \v doctest::detail::TestCase}
{\xe \v doctest::detail::TestCase}
{\bkmkstart AAAAAAAFCT}
{\bkmkend AAAAAAAFCT}
\par
{
{\f2 #include <doctest.hpp>}}\par
Diagrama de hierarquia da classe doctest::detail::TestCase:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structdoctest_1_1detail_1_1_test_case.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TestCase} ({\b funcType} test, const char *file, unsigned line, const {\b TestSuite} &test_suite, const char *type="", int template_id=-1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TestCase} (const {\b TestCase} &other)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TestCase} & {\b operator=} (const {\b TestCase} &other)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_MSVC_SUPPRESS_WARNING_POP} {\b TestCase} & {\b operator*} (const char *in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > {\b TestCase} & {\b operator*} (const T &in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b operator<} (const {\b TestCase} &other) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b funcType} {\b m_test}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b m_type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b m_template_id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b String} {\b m_full_name}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos herdados de {\b doctest::TestCaseData}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b String} {\b m_file}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b m_line}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b m_name}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b m_test_suite}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b m_description}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b m_skip}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b m_no_breaks}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b m_no_output}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b m_may_fail}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b m_should_fail}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b m_expected_failures}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b m_timeout}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v TestCase\:doctest::detail::TestCase}
{\xe \v doctest::detail::TestCase\:TestCase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::detail::TestCase::TestCase ({\b funcType}  {\i test}, const char *  {\i file}, unsigned  {\i line}, const {\b TestSuite} &  {\i test_suite}, const char *  {\i type} = {\f2 ""}, int  {\i template_id} = {\f2 -1})}}
\par
{\bkmkstart AAAAAAAFCU}
{\bkmkend AAAAAAAFCU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TestCase\:doctest::detail::TestCase}
{\xe \v doctest::detail::TestCase\:TestCase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
doctest::detail::TestCase::TestCase (const {\b TestCase} &  {\i other})}}
\par
{\bkmkstart AAAAAAAFCV}
{\bkmkend AAAAAAAFCV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator*\:doctest::detail::TestCase}
{\xe \v doctest::detail::TestCase\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DOCTEST_MSVC_SUPPRESS_WARNING_POP} {\b TestCase} & doctest::detail::TestCase::operator* (const char *  {\i in})}}
\par
{\bkmkstart AAAAAAAFCW}
{\bkmkend AAAAAAAFCW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator*\:doctest::detail::TestCase}
{\xe \v doctest::detail::TestCase\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b TestCase} & doctest::detail::TestCase::operator* (const T &  {\i in}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCX}
{\bkmkend AAAAAAAFCX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1450                                          \{\par
1451             in.fill(*{\cf17 this});\par
1452             {\cf19 return} *{\cf17 this};\par
1453         \}\par
}
}
{\xe \v operator<\:doctest::detail::TestCase}
{\xe \v doctest::detail::TestCase\:operator<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::detail::TestCase::operator< (const {\b TestCase} &  {\i other}) const}}
\par
{\bkmkstart AAAAAAAFCY}
{\bkmkend AAAAAAAFCY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator=\:doctest::detail::TestCase}
{\xe \v doctest::detail::TestCase\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TestCase} & doctest::detail::TestCase::operator= (const {\b TestCase} &  {\i other})}}
\par
{\bkmkstart AAAAAAAFCZ}
{\bkmkend AAAAAAAFCZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v m_full_name\:doctest::detail::TestCase}
{\xe \v doctest::detail::TestCase\:m_full_name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b String} doctest::detail::TestCase::m_full_name}}
\par
{\bkmkstart AAAAAAAFDA}
{\bkmkend AAAAAAAFDA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_template_id\:doctest::detail::TestCase}
{\xe \v doctest::detail::TestCase\:m_template_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int doctest::detail::TestCase::m_template_id}}
\par
{\bkmkstart AAAAAAAFDB}
{\bkmkend AAAAAAAFDB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_test\:doctest::detail::TestCase}
{\xe \v doctest::detail::TestCase\:m_test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b funcType} doctest::detail::TestCase::m_test}}
\par
{\bkmkstart AAAAAAAFDC}
{\bkmkend AAAAAAAFDC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_type\:doctest::detail::TestCase}
{\xe \v doctest::detail::TestCase\:m_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* doctest::detail::TestCase::m_type}}
\par
{\bkmkstart AAAAAAAFDD}
{\bkmkend AAAAAAAFDD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura doctest::TestCaseData\par \pard\plain 
{\tc\tcl2 \v doctest::TestCaseData}
{\xe \v doctest::TestCaseData}
{\bkmkstart AAAAAAAETC}
{\bkmkend AAAAAAAETC}
\par
{
{\f2 #include <doctest.hpp>}}\par
Diagrama de hierarquia da classe doctest::TestCaseData:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structdoctest_1_1_test_case_data.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b String} {\b m_file}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b m_line}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b m_name}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b m_test_suite}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b m_description}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b m_skip}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b m_no_breaks}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b m_no_output}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b m_may_fail}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b m_should_fail}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b m_expected_failures}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b m_timeout}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v m_description\:doctest::TestCaseData}
{\xe \v doctest::TestCaseData\:m_description}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* doctest::TestCaseData::m_description}}
\par
{\bkmkstart AAAAAAAETD}
{\bkmkend AAAAAAAETD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_expected_failures\:doctest::TestCaseData}
{\xe \v doctest::TestCaseData\:m_expected_failures}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int doctest::TestCaseData::m_expected_failures}}
\par
{\bkmkstart AAAAAAAETE}
{\bkmkend AAAAAAAETE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_file\:doctest::TestCaseData}
{\xe \v doctest::TestCaseData\:m_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b String} doctest::TestCaseData::m_file}}
\par
{\bkmkstart AAAAAAAETF}
{\bkmkend AAAAAAAETF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_line\:doctest::TestCaseData}
{\xe \v doctest::TestCaseData\:m_line}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned doctest::TestCaseData::m_line}}
\par
{\bkmkstart AAAAAAAETG}
{\bkmkend AAAAAAAETG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_may_fail\:doctest::TestCaseData}
{\xe \v doctest::TestCaseData\:m_may_fail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::TestCaseData::m_may_fail}}
\par
{\bkmkstart AAAAAAAETH}
{\bkmkend AAAAAAAETH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_name\:doctest::TestCaseData}
{\xe \v doctest::TestCaseData\:m_name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* doctest::TestCaseData::m_name}}
\par
{\bkmkstart AAAAAAAETI}
{\bkmkend AAAAAAAETI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_no_breaks\:doctest::TestCaseData}
{\xe \v doctest::TestCaseData\:m_no_breaks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::TestCaseData::m_no_breaks}}
\par
{\bkmkstart AAAAAAAETJ}
{\bkmkend AAAAAAAETJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_no_output\:doctest::TestCaseData}
{\xe \v doctest::TestCaseData\:m_no_output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::TestCaseData::m_no_output}}
\par
{\bkmkstart AAAAAAAETK}
{\bkmkend AAAAAAAETK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_should_fail\:doctest::TestCaseData}
{\xe \v doctest::TestCaseData\:m_should_fail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::TestCaseData::m_should_fail}}
\par
{\bkmkstart AAAAAAAETL}
{\bkmkend AAAAAAAETL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_skip\:doctest::TestCaseData}
{\xe \v doctest::TestCaseData\:m_skip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::TestCaseData::m_skip}}
\par
{\bkmkstart AAAAAAAETM}
{\bkmkend AAAAAAAETM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_test_suite\:doctest::TestCaseData}
{\xe \v doctest::TestCaseData\:m_test_suite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* doctest::TestCaseData::m_test_suite}}
\par
{\bkmkstart AAAAAAAETN}
{\bkmkend AAAAAAAETN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_timeout\:doctest::TestCaseData}
{\xe \v doctest::TestCaseData\:m_timeout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double doctest::TestCaseData::m_timeout}}
\par
{\bkmkstart AAAAAAAETO}
{\bkmkend AAAAAAAETO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura doctest::TestCaseException\par \pard\plain 
{\tc\tcl2 \v doctest::TestCaseException}
{\xe \v doctest::TestCaseException}
{\bkmkstart AAAAAAAETP}
{\bkmkend AAAAAAAETP}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b String} {\b error_string}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b is_crash}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v error_string\:doctest::TestCaseException}
{\xe \v doctest::TestCaseException\:error_string}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b String} doctest::TestCaseException::error_string}}
\par
{\bkmkstart AAAAAAAETQ}
{\bkmkend AAAAAAAETQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v is_crash\:doctest::TestCaseException}
{\xe \v doctest::TestCaseException\:is_crash}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::TestCaseException::is_crash}}
\par
{\bkmkstart AAAAAAAETR}
{\bkmkend AAAAAAAETR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura doctest::detail::TestFailureException\par \pard\plain 
{\tc\tcl2 \v doctest::detail::TestFailureException}
{\xe \v doctest::detail::TestFailureException}
{\bkmkstart AAAAAAAFDE}
{\bkmkend AAAAAAAFDE}
\par
{
{\f2 #include <doctest.hpp>}}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura doctest::TestRunStats\par \pard\plain 
{\tc\tcl2 \v doctest::TestRunStats}
{\xe \v doctest::TestRunStats}
{\bkmkstart AAAAAAAETS}
{\bkmkend AAAAAAAETS}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b numTestCases}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b numTestCasesPassingFilters}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b numTestSuitesPassingFilters}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b numTestCasesFailed}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b numAsserts}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b numAssertsFailed}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v numAsserts\:doctest::TestRunStats}
{\xe \v doctest::TestRunStats\:numAsserts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int doctest::TestRunStats::numAsserts}}
\par
{\bkmkstart AAAAAAAETT}
{\bkmkend AAAAAAAETT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v numAssertsFailed\:doctest::TestRunStats}
{\xe \v doctest::TestRunStats\:numAssertsFailed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int doctest::TestRunStats::numAssertsFailed}}
\par
{\bkmkstart AAAAAAAETU}
{\bkmkend AAAAAAAETU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v numTestCases\:doctest::TestRunStats}
{\xe \v doctest::TestRunStats\:numTestCases}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned doctest::TestRunStats::numTestCases}}
\par
{\bkmkstart AAAAAAAETV}
{\bkmkend AAAAAAAETV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v numTestCasesFailed\:doctest::TestRunStats}
{\xe \v doctest::TestRunStats\:numTestCasesFailed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned doctest::TestRunStats::numTestCasesFailed}}
\par
{\bkmkstart AAAAAAAETW}
{\bkmkend AAAAAAAETW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v numTestCasesPassingFilters\:doctest::TestRunStats}
{\xe \v doctest::TestRunStats\:numTestCasesPassingFilters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned doctest::TestRunStats::numTestCasesPassingFilters}}
\par
{\bkmkstart AAAAAAAETX}
{\bkmkend AAAAAAAETX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v numTestSuitesPassingFilters\:doctest::TestRunStats}
{\xe \v doctest::TestRunStats\:numTestSuitesPassingFilters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned doctest::TestRunStats::numTestSuitesPassingFilters}}
\par
{\bkmkstart AAAAAAAETY}
{\bkmkend AAAAAAAETY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura doctest::detail::TestSuite\par \pard\plain 
{\tc\tcl2 \v doctest::detail::TestSuite}
{\xe \v doctest::detail::TestSuite}
{\bkmkstart AAAAAAAFDF}
{\bkmkend AAAAAAAFDF}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TestSuite} & {\b operator*} (const char *in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > {\b TestSuite} & {\b operator*} (const T &in)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b m_test_suite} = nullptr\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b m_description} = nullptr\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b m_skip} = {\b false}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b m_no_breaks} = {\b false}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b m_no_output} = {\b false}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b m_may_fail} = {\b false}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b m_should_fail} = {\b false}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b m_expected_failures} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b m_timeout} = 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator*\:doctest::detail::TestSuite}
{\xe \v doctest::detail::TestSuite\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TestSuite} & doctest::detail::TestSuite::operator* (const char *  {\i in})}}
\par
{\bkmkstart AAAAAAAFDG}
{\bkmkend AAAAAAAFDG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator*\:doctest::detail::TestSuite}
{\xe \v doctest::detail::TestSuite\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b TestSuite} & doctest::detail::TestSuite::operator* (const T &  {\i in}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFDH}
{\bkmkend AAAAAAAFDH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1422                                           \{\par
1423             in.fill(*{\cf17 this});\par
1424             {\cf19 return} *{\cf17 this};\par
1425         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v m_description\:doctest::detail::TestSuite}
{\xe \v doctest::detail::TestSuite\:m_description}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* doctest::detail::TestSuite::m_description = nullptr}}
\par
{\bkmkstart AAAAAAAFDI}
{\bkmkend AAAAAAAFDI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_expected_failures\:doctest::detail::TestSuite}
{\xe \v doctest::detail::TestSuite\:m_expected_failures}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int doctest::detail::TestSuite::m_expected_failures = 0}}
\par
{\bkmkstart AAAAAAAFDJ}
{\bkmkend AAAAAAAFDJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_may_fail\:doctest::detail::TestSuite}
{\xe \v doctest::detail::TestSuite\:m_may_fail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::detail::TestSuite::m_may_fail = {\b false}}}
\par
{\bkmkstart AAAAAAAFDK}
{\bkmkend AAAAAAAFDK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_no_breaks\:doctest::detail::TestSuite}
{\xe \v doctest::detail::TestSuite\:m_no_breaks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::detail::TestSuite::m_no_breaks = {\b false}}}
\par
{\bkmkstart AAAAAAAFDL}
{\bkmkend AAAAAAAFDL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_no_output\:doctest::detail::TestSuite}
{\xe \v doctest::detail::TestSuite\:m_no_output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::detail::TestSuite::m_no_output = {\b false}}}
\par
{\bkmkstart AAAAAAAFDM}
{\bkmkend AAAAAAAFDM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_should_fail\:doctest::detail::TestSuite}
{\xe \v doctest::detail::TestSuite\:m_should_fail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::detail::TestSuite::m_should_fail = {\b false}}}
\par
{\bkmkstart AAAAAAAFDN}
{\bkmkend AAAAAAAFDN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_skip\:doctest::detail::TestSuite}
{\xe \v doctest::detail::TestSuite\:m_skip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} doctest::detail::TestSuite::m_skip = {\b false}}}
\par
{\bkmkstart AAAAAAAFDO}
{\bkmkend AAAAAAAFDO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_test_suite\:doctest::detail::TestSuite}
{\xe \v doctest::detail::TestSuite\:m_test_suite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* doctest::detail::TestSuite::m_test_suite = nullptr}}
\par
{\bkmkstart AAAAAAAFDP}
{\bkmkend AAAAAAAFDP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_timeout\:doctest::detail::TestSuite}
{\xe \v doctest::detail::TestSuite\:m_timeout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double doctest::detail::TestSuite::m_timeout = 0}}
\par
{\bkmkstart AAAAAAAFDQ}
{\bkmkend AAAAAAAFDQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Components::Text\par \pard\plain 
{\tc\tcl2 \v Components::Text}
{\xe \v Components::Text}
{\bkmkstart AAAAAAAEKP}
{\bkmkend AAAAAAAEKP}
\par
{
{\f2 #include <Text.hpp>}}\par
Diagrama de hierarquia da classe Components::Text:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_components_1_1_text.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Text} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Text} (const std::string content)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b Text} component defining the text that will be displayed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Text} (const std::string content, const float fontSize)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b Text} component defining the text that will be displayed and it's size. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Text} (const std::string content, const {\b Color} textColor)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b Text} component defining the text that will be displayed and it's color. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Text} (const std::string content, const {\b Font} fontFamily)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b Text} component defining the text that will be displayed and it's font family. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Text} (const std::string content, const float fontSize, const {\b Color} textColor)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b Text} component defining the text that will be displayed, it's size and color. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Text} (const std::string content, const float fontSize, const {\b Font} fontFamily)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b Text} component defining the text that will be displayed, it's size and font family. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Text} (const std::string content, const {\b Color} textColor, const {\b Font} fontFamily)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b Text} component defining the text that will be displayed, it's color and font family. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Text} (const std::string content, const float fontSize, const {\b Color} textColor, const {\b Font} fontFamily)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b Text} component defining the text that will be displayed, it's size, color and font family. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Text} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Text} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the component in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setText} (const std::string content) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the text content. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getText} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text that the button display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFontSize} (const float fontSize) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font size attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getFontSize} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font size attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFontFamily} (const {\b Font} font) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font family attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Font} {\b getFontFamily} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font family attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTextColor} (const {\b Color} color) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the color attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Color} {\b getTextColor} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text color attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b getDimensions} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text dimensions attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Component} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Component}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the render contract of components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getXPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the X position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getYPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Vector2} {\b getPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position attribute. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setText} (const std::string content)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the text content. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::string {\b getText} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text that the button display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setFontSize} (const float fontSize)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font size attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getFontSize} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font size attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setFontFamily} (const {\b Font} font)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font family attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Font} {\b getFontFamily} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font family attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setTextColor} (const {\b Color} color)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the color attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Color} {\b getTextColor} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text color attribute. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Font} {\b getDefaultFontFamily} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static float {\b getDefaultFontSize} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static float {\b getDefaultTitleSize} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAULT_FONT_SPACING} = 1.0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Color} {\b DEFAULT_COLOR} = {\b DEFAULT_WHITE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_WIDTH} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_HEIGHT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Vector2} {\b DEFAULT_INITIAL_POSITION} = \{ 0, 0 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b width} = {\b DEFAUT_INITIAL_WIDTH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b height} = {\b DEFAUT_INITIAL_HEIGHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b position} = {\b DEFAULT_INITIAL_POSITION}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Text\:Components::Text}
{\xe \v Components::Text\:Text}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Components::Text::Text ()}}
\par
{\bkmkstart AAAAAAAEKQ}
{\bkmkend AAAAAAAEKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b Text} component. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 16                      \{\par
17     setFontFamily(getDefaultFontFamily());\par
18     setFontSize(getDefaultFontSize());\par
19     setTextColor(DEFAULT_COLOR);\par
20     setText({\cf22 ""});\par
21 \par
22     setXPosition(0.0);\par
23     setYPosition(0.0);\par
24 \}\par
}
}
{\xe \v Text\:Components::Text}
{\xe \v Components::Text\:Text}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Components::Text::Text (const std::string  {\i content})}}
\par
{\bkmkstart AAAAAAAEKR}
{\bkmkend AAAAAAAEKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b Text} component defining the text that will be displayed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i content} \cell }{is the text that will be displayed. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 26                                             \{\par
27     setFontFamily(getDefaultFontFamily());\par
28     setFontSize(getDefaultFontSize());\par
29     setTextColor(DEFAULT_COLOR);\par
30     setText(content);\par
31 \par
32     setXPosition(0.0);\par
33     setYPosition(0.0);\par
34 \}\par
}
}
{\xe \v Text\:Components::Text}
{\xe \v Components::Text\:Text}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Components::Text::Text (const std::string  {\i content}, const float  {\i fontSize})}}
\par
{\bkmkstart AAAAAAAEKS}
{\bkmkend AAAAAAAEKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b Text} component defining the text that will be displayed and it's size. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i content} \cell }{is the text that will be displayed. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fontSize} \cell }{is the size of fontn in the text. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 36                                                                   \{\par
37     setFontFamily(getDefaultFontFamily());\par
38     setTextColor(DEFAULT_COLOR);\par
39     setFontSize(fontSize);\par
40     setText(content);\par
41 \par
42     setXPosition(0.0);\par
43     setYPosition(0.0);\par
44 \}\par
}
}
{\xe \v Text\:Components::Text}
{\xe \v Components::Text\:Text}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Components::Text::Text (const std::string  {\i content}, const {\b Color}  {\i textColor})}}
\par
{\bkmkstart AAAAAAAEKT}
{\bkmkend AAAAAAAEKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b Text} component defining the text that will be displayed and it's color. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i content} \cell }{is the text that will be displayed. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i textColor} \cell }{is the color that the text will be displayed. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 46                                                                    \{\par
47     setFontFamily(getDefaultFontFamily());\par
48     setFontSize(getDefaultFontSize());\par
49     setTextColor(textColor);\par
50     setText(content);\par
51 \par
52     setXPosition(0.0);\par
53     setYPosition(0.0);\par
54 \}\par
}
}
{\xe \v Text\:Components::Text}
{\xe \v Components::Text\:Text}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Components::Text::Text (const std::string  {\i content}, const {\b Font}  {\i fontFamily})}}
\par
{\bkmkstart AAAAAAAEKU}
{\bkmkend AAAAAAAEKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b Text} component defining the text that will be displayed and it's font family. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i content} \cell }{is the text that will be displayed. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fontFamily} \cell }{is the text font style/family. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 56                                                                    \{\par
57     setFontFamily(fontFamily);\par
58     setFontSize(getDefaultFontSize());\par
59     setTextColor(DEFAULT_COLOR);\par
60     setText(content);\par
61 \par
62     setXPosition(0.0);\par
63     setYPosition(0.0);\par
64 \}\par
}
}
{\xe \v Text\:Components::Text}
{\xe \v Components::Text\:Text}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Components::Text::Text (const std::string  {\i content}, const float  {\i fontSize}, const {\b Color}  {\i textColor})}}
\par
{\bkmkstart AAAAAAAEKV}
{\bkmkend AAAAAAAEKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b Text} component defining the text that will be displayed, it's size and color. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i content} \cell }{is the text that will be displayed. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fontSize} \cell }{is the size of fontn in the text. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i textColor} \cell }{is the color that the text will be displayed. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 66                                                                                          \{\par
67     setFontFamily(getDefaultFontFamily());\par
68     setFontSize(fontSize);\par
69     setTextColor(textColor);\par
70     setText(content);\par
71 \par
72     setXPosition(0.0);\par
73     setYPosition(0.0);\par
74 \}\par
}
}
{\xe \v Text\:Components::Text}
{\xe \v Components::Text\:Text}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Components::Text::Text (const std::string  {\i content}, const float  {\i fontSize}, const {\b Font}  {\i fontFamily})}}
\par
{\bkmkstart AAAAAAAEKW}
{\bkmkend AAAAAAAEKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b Text} component defining the text that will be displayed, it's size and font family. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i content} \cell }{is the text that will be displayed. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fontSize} \cell }{is the size of fontn in the text. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fontFamily} \cell }{is the text font style/family. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 76                                                                                          \{\par
77     setFontFamily(fontFamily);\par
78     setFontSize(fontSize);\par
79     setTextColor(DEFAULT_COLOR);\par
80     setText(content);\par
81 \par
82     setXPosition(0.0);\par
83     setYPosition(0.0);\par
84 \}\par
}
}
{\xe \v Text\:Components::Text}
{\xe \v Components::Text\:Text}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Components::Text::Text (const std::string  {\i content}, const {\b Color}  {\i textColor}, const {\b Font}  {\i fontFamily})}}
\par
{\bkmkstart AAAAAAAEKX}
{\bkmkend AAAAAAAEKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b Text} component defining the text that will be displayed, it's color and font family. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i content} \cell }{is the text that will be displayed. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i textColor} \cell }{is the color that the text will be displayed. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fontFamily} \cell }{is the text font style/family. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 86                                                                                           \{\par
87     setFontFamily(fontFamily);\par
88     setFontSize(getDefaultFontSize());\par
89     setTextColor(textColor);\par
90     setText(content);\par
91 \par
92     setXPosition(0.0);\par
93     setYPosition(0.0);\par
94 \}\par
}
}
{\xe \v Text\:Components::Text}
{\xe \v Components::Text\:Text}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Components::Text::Text (const std::string  {\i content}, const float  {\i fontSize}, const {\b Color}  {\i textColor}, const {\b Font}  {\i fontFamily})}}
\par
{\bkmkstart AAAAAAAEKY}
{\bkmkend AAAAAAAEKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b Text} component defining the text that will be displayed, it's size, color and font family. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i content} \cell }{is the text that will be displayed. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fontSize} \cell }{is the size of fontn in the text. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i textColor} \cell }{is the color that the text will be displayed. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fontFamily} \cell }{is the text font style/family. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 96                                                                                                                 \{\par
97     setFontFamily(fontFamily);\par
98     setTextColor(textColor);\par
99     setFontSize(fontSize);\par
100     setText(content);\par
101 \par
102     setXPosition(0.0);\par
103     setYPosition(0.0);\par
104 \}\par
}
}
{\xe \v ~Text\:Components::Text}
{\xe \v Components::Text\:~Text}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Components::Text::~Text (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEKZ}
{\bkmkend AAAAAAAEKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Text} component. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 106 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getDefaultFontFamily\:Components::Text}
{\xe \v Components::Text\:getDefaultFontFamily}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Font} Components::Text::getDefaultFontFamily (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAELA}
{\bkmkend AAAAAAAELA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 137                                           \{\par
138     {\cf19 return} AssetsLoader::getAssetLoader()->loadFont(Fonts::PRESS_START_2P);\par
139 \}\par
}
}
{\xe \v getDefaultFontSize\:Components::Text}
{\xe \v Components::Text\:getDefaultFontSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Components::Text::getDefaultFontSize (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAELB}
{\bkmkend AAAAAAAELB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 141                                          \{\par
142     {\cf19 return} percentOf(2.7, Screens::Screen::getDisplayHeight());\par
143 \}\par
}
}
{\xe \v getDefaultTitleSize\:Components::Text}
{\xe \v Components::Text\:getDefaultTitleSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Components::Text::getDefaultTitleSize (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAELC}
{\bkmkend AAAAAAAELC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 145                                           \{\par
146     {\cf19 return} percentOf(6, Screens::Screen::getDisplayHeight());\par
147 \}\par
}
}
{\xe \v getDimensions\:Components::Text}
{\xe \v Components::Text\:getDimensions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector2} Components::Text::getDimensions () const}}
\par
{\bkmkstart AAAAAAAELD}
{\bkmkend AAAAAAAELD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text dimensions attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Text} dimensions attribute value. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 128                                             \{\par
129     {\cf19 return} MeasureTextEx(\par
130         getFontFamily(),\par
131         getText().c_str(),\par
132         getFontSize(),\par
133         DEFAULT_FONT_SPACING\par
134     );\par
135 \}\par
}
}
{\xe \v getFontFamily\:Components::Text}
{\xe \v Components::Text\:getFontFamily}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Font} Components::Text::getFontFamily () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEJJ}
{\bkmkend AAAAAAAEJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font family attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Font} family attribute value. \par
}}}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 178                                          \{\par
179     {\cf19 return} fontFamily;\par
180 \}\par
}
}
{\xe \v getFontSize\:Components::Text}
{\xe \v Components::Text\:getFontSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Components::Text::getFontSize () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEJL}
{\bkmkend AAAAAAAEJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font size attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Font} size attribute value. \par
}}}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 159                                         \{\par
160     {\cf19 return} fontSize;\par
161 \}\par
}
}
{\xe \v getText\:Components::Text}
{\xe \v Components::Text\:getText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Components::Text::getText () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEJN}
{\bkmkend AAAAAAAEJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text that the button display. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Text} attribute value. \par
}}}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 188                                         \{\par
189     {\cf19 return} content;\par
190 \}\par
}
}
{\xe \v getTextColor\:Components::Text}
{\xe \v Components::Text\:getTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Color} Components::Text::getTextColor () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEJP}
{\bkmkend AAAAAAAEJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text color attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Text} color attribute value. \par
}}}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 168                                          \{\par
169     {\cf19 return} textColor;\par
170 \}\par
}
}
{\xe \v render\:Components::Text}
{\xe \v Components::Text\:render}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::Text::render (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEHV}
{\bkmkend AAAAAAAEHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the component in the interface. }}\par
{
Implementa {\b Components::Component} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEED \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 108                             \{\par
109     DrawTextEx(\par
110         getFontFamily(),\par
111         getText().c_str(),\par
112         getPosition(),\par
113         getFontSize(),\par
114         DEFAULT_FONT_SPACING,\par
115         getTextColor()\par
116     );\par
117     {\cf19 return};\par
118 \}\par
}
}
{\xe \v setFontFamily\:Components::Text}
{\xe \v Components::Text\:setFontFamily}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::Text::setFontFamily (const {\b Font}  {\i font}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEJR}
{\bkmkend AAAAAAAEJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font family attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i font} \cell }{is the new font family. \cell }
{\row }
}
}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 172                                                   \{\par
173     this->fontFamily = font;\par
174     updateTextSize();\par
175     {\cf19 return};\par
176 \}\par
}
}
{\xe \v setFontSize\:Components::Text}
{\xe \v Components::Text\:setFontSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::Text::setFontSize (const float  {\i fontSize}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEJT}
{\bkmkend AAAAAAAEJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font size attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fontSize} \cell }{is the new value to the font size. \cell }
{\row }
}
}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 153                                                      \{\par
154     this->fontSize = fontSize;\par
155     updateTextSize();\par
156     {\cf19 return};\par
157 \}\par
}
}
{\xe \v setText\:Components::Text}
{\xe \v Components::Text\:setText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::Text::setText (const std::string  {\i content}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEJV}
{\bkmkend AAAAAAAEJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the text content. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i text} \cell }{is the text that will be displayed. \cell }
{\row }
}
}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 182                                                     \{\par
183     this->content = content;\par
184     updateTextSize();\par
185     {\cf19 return};\par
186 \}\par
}
}
{\xe \v setTextColor\:Components::Text}
{\xe \v Components::Text\:setTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::Text::setTextColor (const {\b Color}  {\i color}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEJX}
{\bkmkend AAAAAAAEJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the color attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i color} \cell }{is the new text color. \cell }
{\row }
}
}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 163                                                    \{\par
164     this->textColor = color;\par
165     {\cf19 return};\par
166 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v DEFAULT_COLOR\:Components::Text}
{\xe \v Components::Text\:DEFAULT_COLOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Color} Components::Text::DEFAULT_COLOR = {\b DEFAULT_WHITE}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAELE}
{\bkmkend AAAAAAAELE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DEFAULT_FONT_SPACING\:Components::Text}
{\xe \v Components::Text\:DEFAULT_FONT_SPACING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const float Components::Text::DEFAULT_FONT_SPACING = 1.0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAELF}
{\bkmkend AAAAAAAELF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/text/{\b Text.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/text/{\b Text.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Components::TextIcon\par \pard\plain 
{\tc\tcl2 \v Components::TextIcon}
{\xe \v Components::TextIcon}
{\bkmkstart AAAAAAAELG}
{\bkmkend AAAAAAAELG}
\par
{
{\f2 #include <TextIcon.hpp>}}\par
Diagrama de hierarquia da classe Components::TextIcon:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_components_1_1_text_icon.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TextIcon} (const std::string iconPaht, const std::string text)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b TextIcon} component defining the icon and text that will be displayed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~TextIcon} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b TextIcon} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the component in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setText} (const std::string text) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the text content. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::string {\b getText} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text that the button display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setFontSize} (const float fontSize) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font size attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getFontSize} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font size attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setFontFamily} (const {\b Font} font) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font family attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Font} {\b getFontFamily} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font family attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setTextColor} (const {\b Color} color) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the color attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Color} {\b getTextColor} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text color attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setIconHeight} (const float {\b height}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Icon Height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getIconHeight} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the icon height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setIconWidth} (const float {\b width}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Icon Width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getIconWidth} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the icon width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setIconPath} (const std::string path) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the path attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::string {\b getIconPath} () const override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the default image path attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Views::View}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~View} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b View} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Component} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Component}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the render contract of components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getXPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the X position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getYPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Vector2} {\b getPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position attribute. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setText} (const std::string content)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the text content. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::string {\b getText} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text that the button display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setFontSize} (const float fontSize)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font size attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getFontSize} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font size attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setFontFamily} (const {\b Font} font)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font family attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Font} {\b getFontFamily} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font family attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setTextColor} (const {\b Color} color)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the color attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Color} {\b getTextColor} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text color attribute. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setIconPath} (const std::string path)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the path attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::string {\b getIconPath} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the default image path attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setIconHeight} (const float height)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Icon Height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getIconHeight} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the icon height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setIconWidth} (const float width)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Icon Width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getIconWidth} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the icon width attribute. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_WIDTH} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_HEIGHT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Vector2} {\b DEFAULT_INITIAL_POSITION} = \{ 0, 0 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b width} = {\b DEFAUT_INITIAL_WIDTH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b height} = {\b DEFAUT_INITIAL_HEIGHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b position} = {\b DEFAULT_INITIAL_POSITION}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v TextIcon\:Components::TextIcon}
{\xe \v Components::TextIcon\:TextIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Components::TextIcon::TextIcon (const std::string  {\i iconPaht}, const std::string  {\i text})}}
\par
{\bkmkstart AAAAAAAELH}
{\bkmkend AAAAAAAELH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the {\b TextIcon} component defining the icon and text that will be displayed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{is the path to the image that will be displayed. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i text} \cell }{is the text that will be displayed. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 10                                                                            :\par
11     text({\cf17 new} Components::Text(text)),\par
12     icon({\cf17 new} Components::Image(iconPath)) \{\par
13     setXPosition(0.0);\par
14     setYPosition(0.0);\par
15 \par
16     updateSizes();\par
17 \}\par
}
}
{\xe \v ~TextIcon\:Components::TextIcon}
{\xe \v Components::TextIcon\:~TextIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Components::TextIcon::~TextIcon (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAELI}
{\bkmkend AAAAAAAELI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b TextIcon} component. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 19 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v findHeight\:Components::TextIcon}
{\xe \v Components::TextIcon\:findHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::TextIcon::findHeight (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAELJ}
{\bkmkend AAAAAAAELJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 35                                     \{\par
36     height = (icon->getHeight() > text->getHeight()) ? icon->getHeight() : text->getHeight();\par
37     {\cf19 return};\par
38 \}\par
}
}
{\xe \v findWidth\:Components::TextIcon}
{\xe \v Components::TextIcon\:findWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::TextIcon::findWidth (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAELL}
{\bkmkend AAAAAAAELL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 30                                    \{\par
31     width = icon->getWidth() + text->getWidth() + getIconMarginRight();\par
32     {\cf19 return};\par
33 \}\par
}
}
{\xe \v getFontFamily\:Components::TextIcon}
{\xe \v Components::TextIcon\:getFontFamily}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Font} Components::TextIcon::getFontFamily () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEJK}
{\bkmkend AAAAAAAEJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font family attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Font} family attribute value. \par
}}}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 94                                              \{\par
95     {\cf19 return} text->getFontFamily();\par
96 \}\par
}
}
{\xe \v getFontSize\:Components::TextIcon}
{\xe \v Components::TextIcon\:getFontSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Components::TextIcon::getFontSize () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEJM}
{\bkmkend AAAAAAAEJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the font size attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Font} size attribute value. \par
}}}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 83                                             \{\par
84     {\cf19 return} text->getFontSize();\par
85 \}\par
}
}
{\xe \v getIconHeight\:Components::TextIcon}
{\xe \v Components::TextIcon\:getIconHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Components::TextIcon::getIconHeight () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEJC}
{\bkmkend AAAAAAAEJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the icon height attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Icon height attribute value. \par
}}}{
Implementa {\b Components::IDisplayIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 124                                               \{\par
125     {\cf19 return} icon->getHeight();\par
126 \}\par
}
}
{\xe \v getIconPath\:Components::TextIcon}
{\xe \v Components::TextIcon\:getIconPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Components::TextIcon::getIconPath () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEJD}
{\bkmkend AAAAAAAEJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the default image path attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Default path attribute value. \par
}}}{
Implementa {\b Components::IDisplayIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 114                                                 \{\par
115     {\cf19 return} icon->getPath();\par
116 \}\par
}
}
{\xe \v getIconWidth\:Components::TextIcon}
{\xe \v Components::TextIcon\:getIconWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Components::TextIcon::getIconWidth () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEJE}
{\bkmkend AAAAAAAEJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the icon width attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Icon width attribute value. \par
}}}{
Implementa {\b Components::IDisplayIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 134                                              \{\par
135     {\cf19 return} icon->getWidth();\par
136 \}\par
}
}
{\xe \v getText\:Components::TextIcon}
{\xe \v Components::TextIcon\:getText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Components::TextIcon::getText () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEJO}
{\bkmkend AAAAAAAEJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text that the button display. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Text} attribute value. \par
}}}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 72                                             \{\par
73     {\cf19 return} text->getText();\par
74 \}\par
}
}
{\xe \v getTextColor\:Components::TextIcon}
{\xe \v Components::TextIcon\:getTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Color} Components::TextIcon::getTextColor () const{\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEJQ}
{\bkmkend AAAAAAAEJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the text color attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Text} color attribute value. \par
}}}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 103                                              \{\par
104     {\cf19 return} text->getTextColor();\par
105 \}\par
}
}
{\xe \v render\:Components::TextIcon}
{\xe \v Components::TextIcon\:render}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::TextIcon::render (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEHW}
{\bkmkend AAAAAAAEHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the component in the interface. }}\par
{
Implementa {\b Components::Component} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEED \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21                                 \{\par
22     icon->render();\par
23     text->render();\par
24 \par
25     {\cf19 return};\par
26 \}\par
}
}
{\xe \v setFontFamily\:Components::TextIcon}
{\xe \v Components::TextIcon\:setFontFamily}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::TextIcon::setFontFamily (const {\b Font}  {\i font}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEJS}
{\bkmkend AAAAAAAEJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font family attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i font} \cell }{is the new font family. \cell }
{\row }
}
}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 87                                                       \{\par
88     text->setFontFamily(font);\par
89     updateSizes();\par
90     updateInnerComponentsPositions();\par
91     {\cf19 return};\par
92 \}\par
}
}
{\xe \v setFontSize\:Components::TextIcon}
{\xe \v Components::TextIcon\:setFontSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::TextIcon::setFontSize (const float  {\i fontSize}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEJU}
{\bkmkend AAAAAAAEJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the font size attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fontSize} \cell }{is the new value to the font size. \cell }
{\row }
}
}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 76                                                          \{\par
77     text->setFontSize(fontSize);\par
78     updateSizes();\par
79     updateInnerComponentsPositions();\par
80     {\cf19 return};\par
81 \}\par
}
}
{\xe \v setIconHeight\:Components::TextIcon}
{\xe \v Components::TextIcon\:setIconHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::TextIcon::setIconHeight (const float  {\i height}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEJF}
{\bkmkend AAAAAAAEJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Icon Height attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i height} \cell }{is the new value height. \cell }
{\row }
}
}{
Implementa {\b Components::IDisplayIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 118                                                          \{\par
119     icon->setHeight(height);\par
120     updateSizes();\par
121     {\cf19 return};\par
122 \}\par
}
}
{\xe \v setIconPath\:Components::TextIcon}
{\xe \v Components::TextIcon\:setIconPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::TextIcon::setIconPath (const std::string  {\i path}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEJG}
{\bkmkend AAAAAAAEJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the path attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{is the new value to path. \cell }
{\row }
}
}{
Implementa {\b Components::IDisplayIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 107                                                          \{\par
108     icon->setPath(path);\par
109     updateSizes();\par
110     updateInnerComponentsPositions();\par
111     {\cf19 return};\par
112 \}\par
}
}
{\xe \v setIconWidth\:Components::TextIcon}
{\xe \v Components::TextIcon\:setIconWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::TextIcon::setIconWidth (const float  {\i width}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEJH}
{\bkmkend AAAAAAAEJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Icon Width attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i width} \cell }{is the new value width. \cell }
{\row }
}
}{
Implementa {\b Components::IDisplayIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 128                                                        \{\par
129     icon->setWidth(width);\par
130     updateSizes();\par
131     {\cf19 return};\par
132 \}\par
}
}
{\xe \v setText\:Components::TextIcon}
{\xe \v Components::TextIcon\:setText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::TextIcon::setText (const std::string  {\i text}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEJW}
{\bkmkend AAAAAAAEJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the text content. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i text} \cell }{is the text that will be displayed. \cell }
{\row }
}
}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 65                                                      \{\par
66     this->text->setText(text);\par
67     updateSizes();\par
68     updateInnerComponentsPositions();\par
69     {\cf19 return};\par
70 \}\par
}
}
{\xe \v setTextColor\:Components::TextIcon}
{\xe \v Components::TextIcon\:setTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::TextIcon::setTextColor (const {\b Color}  {\i color}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEJY}
{\bkmkend AAAAAAAEJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the color attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i color} \cell }{is the new text color. \cell }
{\row }
}
}{
Implementa {\b Components::IDisplayText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 98                                                        \{\par
99     text->setTextColor(color);\par
100     {\cf19 return};\par
101 \}\par
}
}
{\xe \v updateInnerComponentsPositions\:Components::TextIcon}
{\xe \v Components::TextIcon\:updateInnerComponentsPositions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Components::TextIcon::updateInnerComponentsPositions (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAELN}
{\bkmkend AAAAAAAELN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 47                                                         \{\par
48     icon->setXPosition(getXPosition());\par
49     icon->setYPosition(getYPosition());\par
50 \par
51     text->setXPosition(icon->getXPosition() + icon->getWidth() + getIconMarginRight());\par
52     text->setYPosition(icon->getYPosition() + (icon->getHeight() - text->getHeight()) / 2);\par
53 \par
54     {\cf19 return};\par
55 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/text/{\b TextIcon.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/text/{\b TextIcon.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura Texture\par \pard\plain 
{\tc\tcl2 \v Texture}
{\xe \v Texture}
{\bkmkstart AAAAAAAEAV}
{\bkmkend AAAAAAAEAV}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b width}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b height}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mipmaps}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b format}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v format\:Texture}
{\xe \v Texture\:format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Texture::format}}
\par
{\bkmkstart AAAAAAAEAW}
{\bkmkend AAAAAAAEAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v height\:Texture}
{\xe \v Texture\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Texture::height}}
\par
{\bkmkstart AAAAAAAEAX}
{\bkmkend AAAAAAAEAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v id\:Texture}
{\xe \v Texture\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Texture::id}}
\par
{\bkmkstart AAAAAAAEAY}
{\bkmkend AAAAAAAEAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mipmaps\:Texture}
{\xe \v Texture\:mipmaps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Texture::mipmaps}}
\par
{\bkmkstart AAAAAAAEAZ}
{\bkmkend AAAAAAAEAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v width\:Texture}
{\xe \v Texture\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Texture::width}}
\par
{\bkmkstart AAAAAAAEBA}
{\bkmkend AAAAAAAEBA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Screens::TitleScreen\par \pard\plain 
{\tc\tcl2 \v Screens::TitleScreen}
{\xe \v Screens::TitleScreen}
{\bkmkstart AAAAAAAFHK}
{\bkmkend AAAAAAAFHK}
\par
{
{\f2 #include <TitleScreen.hpp>}}\par
Diagrama de hierarquia da classe Screens::TitleScreen:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_screens_1_1_title_screen.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TitleScreen} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the Title {\b Screen} of the game. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~TitleScreen} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Title {\b Screen}. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Screens::Screen}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Screen} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Screen} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the basic setup to render a screen with raylib. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b isActive} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the window is active. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b renderScreen} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the window in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b handleEvents} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handle any event that can be trigged in the interface. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b renderScreen} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the window in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b handleEvents} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handle any event that can be trigged in the interface. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros p\'FAblicos est\'E1ticos herdados de {\b Screens::Screen}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static float {\b getDisplayHeight} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the display window height. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static float {\b getDisplayWidth} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the display width. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Screens::Screen}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b isWindowActive} = {\b true}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v TitleScreen\:Screens::TitleScreen}
{\xe \v Screens::TitleScreen\:TitleScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Screens::TitleScreen::TitleScreen ()}}
\par
{\bkmkstart AAAAAAAFHL}
{\bkmkend AAAAAAAFHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the Title {\b Screen} of the game. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 25                                 :\par
26     titleFirstPart({\cf17 new} Components::Text()),\par
27     titleSecondPart({\cf17 new} Components::Text()),\par
28     buttonJogar({\cf17 new} Components::ButtonText()),\par
29     buttonPlacar({\cf17 new} Components::ButtonText()),\par
30     buttonSair({\cf17 new} Components::ButtonText()),\par
31     backgroundImage({\cf17 new} Components::Image(Backgrounds::MAIN)) \{\par
32     buildBackgroundImage();\par
33 \par
34     buildTitle();\par
35 \par
36     buildJogarButton();\par
37     buildPlacarButton();\par
38     buildSairButton();    \par
39 \}\par
}
}
{\xe \v ~TitleScreen\:Screens::TitleScreen}
{\xe \v Screens::TitleScreen\:~TitleScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Screens::TitleScreen::~TitleScreen (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFHM}
{\bkmkend AAAAAAAFHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Title {\b Screen}. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 41 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v handleEvents\:Screens::TitleScreen}
{\xe \v Screens::TitleScreen\:handleEvents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Screens::TitleScreen::handleEvents (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFGW}
{\bkmkend AAAAAAAFGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handle any event that can be trigged in the interface. }}\par
{
Implementa {\b Screens::Screen} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFFZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 54                                       \{\par
55     {\cf19 if}(buttonJogar->checkClick()) \{\par
56         GameManager::getInstance()->startGame();\par
57     \}\par
58 \par
59     {\cf19 if}(buttonPlacar->checkClick()) \{\par
60         std::shared_ptr<Screen> scoreScreen({\cf17 new} ScoreScreen());\par
61         ScreenManager::getScreenManager()->loadScreen(scoreScreen);\par
62     \}\par
63 \par
64     {\cf19 if}(buttonSair->checkClick()) \{\par
65         ScreenManager::getScreenManager()->closeWindow();\par
66     \}\par
67 \par
68     {\cf19 return};\par
69 \}\par
}
}
{\xe \v renderScreen\:Screens::TitleScreen}
{\xe \v Screens::TitleScreen\:renderScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Screens::TitleScreen::renderScreen (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFGZ}
{\bkmkend AAAAAAAFGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the window in the interface. }}\par
{
Implementa {\b Screens::Screen} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFGB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 43                                       \{\par
44     backgroundImage->render();\par
45 \par
46     renderTitle();\par
47 \par
48     buttonJogar->render();\par
49     buttonPlacar->render();\par
50     buttonSair->render();\par
51     {\cf19 return};\par
52 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/title/{\b TitleScreen.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/title/{\b TitleScreen.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura Transform\par \pard\plain 
{\tc\tcl2 \v Transform}
{\xe \v Transform}
{\bkmkstart AAAAAAAEBB}
{\bkmkend AAAAAAAEBB}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} {\b translation}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Quaternion} {\b rotation}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} {\b scale}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v rotation\:Transform}
{\xe \v Transform\:rotation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Quaternion} Transform::rotation}}
\par
{\bkmkstart AAAAAAAEBC}
{\bkmkend AAAAAAAEBC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scale\:Transform}
{\xe \v Transform\:scale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} Transform::scale}}
\par
{\bkmkstart AAAAAAAEBD}
{\bkmkend AAAAAAAEBD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v translation\:Transform}
{\xe \v Transform\:translation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} Transform::translation}}
\par
{\bkmkstart AAAAAAAEBE}
{\bkmkend AAAAAAAEBE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Troop\par \pard\plain 
{\tc\tcl2 \v Troop}
{\xe \v Troop}
{\bkmkstart AAAAAAAEBF}
{\bkmkend AAAAAAAEBF}
\par
{
{\f2 #include <Troop.hpp>}}\par
Diagrama de hierarquia da classe Troop:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_troop.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Troop} (const unsigned int {\b health})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new {\b Troop} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Troop} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Troop} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b takeDamage} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Make the troop take damage, decreasing its health. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b isDead} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines if the troop is dead. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPosition} (const {\b Point} initialPosition, const {\b Orientation} orientation)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the positioning of the troop. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\b Point} > {\b getOccupiedPositions} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the ocuppied positions points, in order. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b getHealth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the health attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual unsigned int {\b getInitialHealth} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the initial health attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::map< {\b Point}, std::string > {\b getImages} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the images attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getImageInPoint} (const {\b Point} point) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the image associated in a certain point. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b containsPoint} (const {\b Point} point) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verify if the point is within the troop shape. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::string {\b getTroopName} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the standard troop name. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b positionHorizontally} (const {\b Point} initialPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract function with the desire to position the troop horizontally. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b positionVertically} (const {\b Point} initialPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract function with the desire to position the troop vertically. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b buildImagesMap} (const std::string folderPathWithSpriteName)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Associate points where the troop was positioned to it's images paths. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b health} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\b Point} > {\b shape}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::map< {\b Point}, std::string > {\b images}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Troop\:Troop}
{\xe \v Troop\:Troop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Troop::Troop (const unsigned int  {\i health})}}
\par
{\bkmkstart AAAAAAAEBG}
{\bkmkend AAAAAAAEBG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new {\b Troop} object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create a new troop given its total health. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i health} \cell }{The total health of the ship. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 13 : health(health) \{\}\par
}
}
{\xe \v ~Troop\:Troop}
{\xe \v Troop\:~Troop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Troop::~Troop (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEBH}
{\bkmkend AAAAAAAEBH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Troop} object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 15 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v buildImagesMap\:Troop}
{\xe \v Troop\:buildImagesMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Troop::buildImagesMap (const std::string  {\i folderPathWithSpriteName}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEAP}
{\bkmkend AAAAAAAEAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Associate points where the troop was positioned to it's images paths. }}\par
{
Reimplementado por {\b Submarine} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 58                                                                    \{\par
59     images.clear();\par
60 \par
61     std::stringstream pattern;\par
62     pattern.clear();\par
63     pattern << folderPathWithSpriteName << {\cf22 "Part"};\par
64 \par
65     std::stringstream fileName;\par
66     {\cf19 for}({\cf18 unsigned} {\cf18 int} i = 0; i < shape.size(); i++) \{\par
67         fileName.str(std::string());\par
68         fileName << pattern.str() << std::to_string(i + 1) << SPRITES_EXTENSION;\par
69 \par
70         images.insert(std::pair<Point, std::string>(shape[i], fileName.str()));\par
71     \}\par
72 \par
73     {\cf19 return};\par
74 \}\par
}
}
{\xe \v containsPoint\:Troop}
{\xe \v Troop\:containsPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Troop::containsPoint (const {\b Point}  {\i point}) const}}
\par
{\bkmkstart AAAAAAAEBI}
{\bkmkend AAAAAAAEBI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verify if the point is within the troop shape. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i point} \cell }{an point object to be check if is in the troop shape\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
a bool that says if the troop has the passed point. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 26                                                  \{\par
27     {\cf19 for}(Point coordenate : shape) \{\par
28         {\cf19 if}(coordenate == point) \{\par
29             {\cf19 return} {\cf17 true};\par
30         \}\par
31     \}\par
32 \par
33     {\cf19 return} {\cf17 false};\par
34 \}\par
}
}
{\xe \v getHealth\:Troop}
{\xe \v Troop\:getHealth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Troop::getHealth () const}}
\par
{\bkmkstart AAAAAAAEBJ}
{\bkmkend AAAAAAAEBJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the health attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Health attribute value. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 82                                     \{\par
83     {\cf19 return} health;\par
84 \}\par
}
}
{\xe \v getImageInPoint\:Troop}
{\xe \v Troop\:getImageInPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Troop::getImageInPoint (const {\b Point}  {\i point}) const}}
\par
{\bkmkstart AAAAAAAEBK}
{\bkmkend AAAAAAAEBK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the image associated in a certain point. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i point} \cell }{is the point to get the image associated to it.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The path of the image in the passed point if it has one associated to it or a empty string otherwise. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 90                                                         \{\par
91     {\cf19 if}(images.empty() || images.find(point) == images.end()) \{\par
92         {\cf19 return} {\cf22 ""};\par
93     \}\par
94 \par
95     {\cf19 return} images.at(point);\par
96 \}\par
}
}
{\xe \v getImages\:Troop}
{\xe \v Troop\:getImages}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::map< {\b Point}, std::string > Troop::getImages () const}}
\par
{\bkmkstart AAAAAAAEBL}
{\bkmkend AAAAAAAEBL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the images attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The images attribute, associates a point with an image path. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 86                                                \{\par
87     {\cf19 return} images;\par
88 \}\par
}
}
{\xe \v getInitialHealth\:Troop}
{\xe \v Troop\:getInitialHealth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual unsigned int Troop::getInitialHealth () const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAADPQ}
{\bkmkend AAAAAAADPQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the initial health attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Initial health attribute value. \par
}}}{
Implementado por {\b Battleship} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Crusier} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADRJ \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Submarine} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getOccupiedPositions\:Troop}
{\xe \v Troop\:getOccupiedPositions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< {\b Point} > Troop::getOccupiedPositions () const}}
\par
{\bkmkstart AAAAAAAEBM}
{\bkmkend AAAAAAAEBM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the ocuppied positions points, in order. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A vector with the desired occupied positions. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 109                                                    \{\par
110     {\cf19 return} shape;\par
111 \}\par
}
}
{\xe \v getTroopName\:Troop}
{\xe \v Troop\:getTroopName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Troop::getTroopName (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEBN}
{\bkmkend AAAAAAAEBN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the standard troop name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A string with the standard troop name. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 9                               \{\par
10     {\cf19 return} {\cf22 "Tropa Generica"};\par
11 \}\par
}
}
{\xe \v isDead\:Troop}
{\xe \v Troop\:isDead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Troop::isDead () const}}
\par
{\bkmkstart AAAAAAAEBO}
{\bkmkend AAAAAAAEBO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines if the troop is dead. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Whether the troop is dead or not. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 76                          \{\par
77     {\cf19 return} (health == 0);\par
78 \}\par
}
}
{\xe \v positionHorizontally\:Troop}
{\xe \v Troop\:positionHorizontally}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Troop::positionHorizontally (const {\b Point}  {\i initialPosition}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADPT}
{\bkmkend AAAAAAADPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract function with the desire to position the troop horizontally. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i initialPosition} \cell }{The initial point to be start the positioning. \cell }
{\row }
}
}{
Reimplementado por {\b Battleship} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Crusier} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADRL \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Submarine} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 36                                                             \{\par
37     shape.clear();\par
38 \par
39     shape.push_back(initialPosition);\par
40     {\cf19 for}({\cf18 unsigned} {\cf18 int} i = 1; i < getInitialHealth(); i++) \{\par
41         shape.push_back(Point(shape[i-1].getX(), shape[i-1].getY() + 1));\par
42     \}\par
43 \par
44     {\cf19 return};\par
45 \}\par
}
}
{\xe \v positionVertically\:Troop}
{\xe \v Troop\:positionVertically}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Troop::positionVertically (const {\b Point}  {\i initialPosition}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADPV}
{\bkmkend AAAAAAADPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract function with the desire to position the troop vertically. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i initialPosition} \cell }{The initial point to be start the positioning. \cell }
{\row }
}
}{
Reimplementado por {\b Battleship} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Crusier} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADRM \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Submarine} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 47                                                           \{\par
48     shape.clear();\par
49 \par
50     shape.push_back(initialPosition);\par
51     {\cf19 for}({\cf18 unsigned} {\cf18 int} i = 1; i < getInitialHealth(); i++) \{\par
52         shape.push_back(Point(shape[i-1].getX() + 1, shape[i-1].getY()));\par
53     \}\par
54 \par
55     {\cf19 return};\par
56 \}\par
}
}
{\xe \v setPosition\:Troop}
{\xe \v Troop\:setPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Troop::setPosition (const {\b Point}  {\i initialPosition}, const {\b Orientation}  {\i orientation})}}
\par
{\bkmkstart AAAAAAAEBP}
{\bkmkend AAAAAAAEBP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the positioning of the troop. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i initialPosition} \cell }{The initial point position of the desired positioning. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i orientation} \cell }{The orientation of the desired positioning. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 98                                                                                   \{\par
99     {\cf19 if}(orientation == HORIZONTAL) \{\par
100         positionHorizontally(initialPosition);\par
101     \}\par
102     {\cf19 else} \{\par
103         positionVertically(initialPosition);\par
104     \}\par
105 \par
106     {\cf19 return};\par
107 \}\par
}
}
{\xe \v takeDamage\:Troop}
{\xe \v Troop\:takeDamage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Troop::takeDamage ()}}
\par
{\bkmkstart AAAAAAAEBQ}
{\bkmkend AAAAAAAEBQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Make the troop take damage, decreasing its health. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17                        \{\par
18     {\cf19 if}(isDead()) \{\par
19         {\cf19 throw} std::logic_error({\cf22 "Ship is already out of health"});\par
20     \}\par
21 \par
22     health--;\par
23     {\cf19 return};\par
24 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v health\:Troop}
{\xe \v Troop\:health}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Troop::health = 0{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBR}
{\bkmkend AAAAAAAEBR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Total ship health, ship shape and corresponding ship images. \par
}}
{\xe \v images\:Troop}
{\xe \v Troop\:images}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::map<{\b Point}, std::string> Troop::images{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBS}
{\bkmkend AAAAAAAEBS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v shape\:Troop}
{\xe \v Troop\:shape}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<{\b Point}> Troop::shape{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBT}
{\bkmkend AAAAAAAEBT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/{\b Troop.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/{\b Troop.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Views::TroopDisplay\par \pard\plain 
{\tc\tcl2 \v Views::TroopDisplay}
{\xe \v Views::TroopDisplay}
{\bkmkstart AAAAAAAFMQ}
{\bkmkend AAAAAAAFMQ}
\par
{
{\f2 #include <TroopDisplay.hpp>}}\par
Diagrama de hierarquia da classe Views::TroopDisplay:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_views_1_1_troop_display.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TroopDisplay} (const unsigned int amount, const std::string troopName, const std::string troopImagePath)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the template of a troop that can be positioned. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~TroopDisplay} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Troop} Display view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkClick} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the troop display was clicked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkMouseOver} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse is over the troop display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAmount} (const unsigned int amount)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the amount of troops that can be placed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b getAmount} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the amount of this troop type that can be placed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b decrementAmount} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrement the amount of available troops that can be placed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b incrementAmount} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increment the amount of available troops that can be placed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTroopName} (const std::string troopName)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the name of the troop that will be displayed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getTroopName} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the troop name. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::string {\b getTroopClassName} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the troop class name. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::shared_ptr< {\b Troop} > {\b getTroopInstance} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a instantiated object of a troop. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTroopImageWidth} (const float {\b width})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width of the full sprite of the troop diplayed. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Views::View}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~View} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b View} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Component} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Component}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the render contract of components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getXPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the X position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getYPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Vector2} {\b getPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::IClickable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkClick} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the troop display was clicked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b checkMouseOver} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse is over the troop display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setEnabled} (const {\b bool} {\b enabled})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the enabled attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b bool} {\b isEnabled} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the button is enable. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_WIDTH} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_HEIGHT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Vector2} {\b DEFAULT_INITIAL_POSITION} = \{ 0, 0 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b width} = {\b DEFAUT_INITIAL_WIDTH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b height} = {\b DEFAUT_INITIAL_HEIGHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b position} = {\b DEFAULT_INITIAL_POSITION}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::IClickable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b enabled} = {\b true}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v TroopDisplay\:Views::TroopDisplay}
{\xe \v Views::TroopDisplay\:TroopDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::TroopDisplay::TroopDisplay (const unsigned int  {\i amount}, const std::string  {\i troopName}, const std::string  {\i troopImagePath})}}
\par
{\bkmkstart AAAAAAAFMR}
{\bkmkend AAAAAAAFMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the template of a troop that can be positioned. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i amount} \cell }{is the amount of that troop can be placed. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i troopName} \cell }{is the name of the type of the troop that can be placed. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i troopImagePath} \cell }{is the full sprite of the troop that can be placed. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 15                                                                                                                     :\par
16     amountTroopType({\cf17 new} Components::Text(buildAmountTroopTypeTextLabel(amount, troopName))),\par
17     troopImage({\cf17 new} Components::Image(troopImagePath)) \{\par
18     setAmount(amount);\par
19     setTroopName(troopName);\par
20 \par
21     buildAmountTroopTypeText();\par
22     buildTroopImage();\par
23 \par
24     setXPosition(0.0);\par
25     setYPosition(0.0);\par
26 \par
27     findHeight();\par
28     findWidth();\par
29 \par
30     buildBackground();\par
31 \}\par
}
}
{\xe \v ~TroopDisplay\:Views::TroopDisplay}
{\xe \v Views::TroopDisplay\:~TroopDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::TroopDisplay::~TroopDisplay (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFMS}
{\bkmkend AAAAAAAFMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Troop} Display view. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 33 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v checkClick\:Views::TroopDisplay}
{\xe \v Views::TroopDisplay\:checkClick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Views::TroopDisplay::checkClick (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEIU}
{\bkmkend AAAAAAAEIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the troop display was clicked. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Boolean that indicates if the troop display was clicked. \par
}}}{
Implementa {\b Components::IClickable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEDX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 43                                    \{\par
44     {\cf19 return} (checkMouseOver() && IsMouseButtonReleased(MOUSE_BUTTON_LEFT) && getAmount() > 0);\par
45 \}\par
}
}
{\xe \v checkMouseOver\:Views::TroopDisplay}
{\xe \v Views::TroopDisplay\:checkMouseOver}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Views::TroopDisplay::checkMouseOver (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEIW}
{\bkmkend AAAAAAAEIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the mouse is over the troop display. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Boolean that indicates if the mouse is over the troop display. \par
}}}{
Implementa {\b Components::IClickable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEDZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 47                                        \{\par
48     {\cf19 return} (isEnabled() && CheckCollisionPointRec(GetMousePosition(), background));\par
49 \}\par
}
}
{\xe \v decrementAmount\:Views::TroopDisplay}
{\xe \v Views::TroopDisplay\:decrementAmount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::TroopDisplay::decrementAmount ()}}
\par
{\bkmkstart AAAAAAAFMT}
{\bkmkend AAAAAAAFMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrement the amount of available troops that can be placed. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 150                                         \{\par
151     this->amount = amount - 1;\par
152     updateLabelValue();\par
153     {\cf19 return};\par
154 \}\par
}
}
{\xe \v findHeight\:Views::TroopDisplay}
{\xe \v Views::TroopDisplay\:findHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::TroopDisplay::findHeight (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFMU}
{\bkmkend AAAAAAAFMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 66                                    \{\par
67     this->height = abs(amountTroopType->getYPosition() - troopImage->getYPosition()) + troopImage->getHeight();\par
68     {\cf19 return};\par
69 \}\par
}
}
{\xe \v findWidth\:Views::TroopDisplay}
{\xe \v Views::TroopDisplay\:findWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::TroopDisplay::findWidth (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFMV}
{\bkmkend AAAAAAAFMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 61                                   \{\par
62     this->width = (amountTroopType->getWidth() > troopImage->getWidth()) ? amountTroopType->getWidth() : troopImage->getWidth();\par
63     {\cf19 return};\par
64 \}\par
}
}
{\xe \v getAmount\:Views::TroopDisplay}
{\xe \v Views::TroopDisplay\:getAmount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Views::TroopDisplay::getAmount () const}}
\par
{\bkmkstart AAAAAAAFMW}
{\bkmkend AAAAAAAFMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the amount of this troop type that can be placed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Amount of this troop that can be placed. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 146                                                 \{\par
147     {\cf19 return} amount;\par
148 \}\par
}
}
{\xe \v getTroopClassName\:Views::TroopDisplay}
{\xe \v Views::TroopDisplay\:getTroopClassName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual std::string Views::TroopDisplay::getTroopClassName () const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAFIA}
{\bkmkend AAAAAAAFIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the troop class name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The troop class name value. \par
}}}{
Implementado por {\b Views::BattleshipDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFHZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::CrusierDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFIZ \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Views::SubmarineDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getTroopInstance\:Views::TroopDisplay}
{\xe \v Views::TroopDisplay\:getTroopInstance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual std::shared_ptr< {\b Troop} > Views::TroopDisplay::getTroopInstance () const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAFIC}
{\bkmkend AAAAAAAFIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a instantiated object of a troop. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Specific troop instance. \par
}}}{
Implementado por {\b Views::BattleshipDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFIB \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::CrusierDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFJA \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Views::SubmarineDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getTroopName\:Views::TroopDisplay}
{\xe \v Views::TroopDisplay\:getTroopName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Views::TroopDisplay::getTroopName () const}}
\par
{\bkmkstart AAAAAAAFMX}
{\bkmkend AAAAAAAFMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the troop name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The troop name value. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 168                                                 \{\par
169     {\cf19 return} troopName;\par
170 \}\par
}
}
{\xe \v incrementAmount\:Views::TroopDisplay}
{\xe \v Views::TroopDisplay\:incrementAmount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::TroopDisplay::incrementAmount ()}}
\par
{\bkmkstart AAAAAAAFMY}
{\bkmkend AAAAAAAFMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increment the amount of available troops that can be placed. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 156                                         \{\par
157     this->amount = amount + 1;\par
158     updateLabelValue();\par
159     {\cf19 return};\par
160 \}\par
}
}
{\xe \v render\:Views::TroopDisplay}
{\xe \v Views::TroopDisplay\:render}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::TroopDisplay::render (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEIB}
{\bkmkend AAAAAAAEIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }}\par
{
Implementa {\b Components::Component} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEED \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 35                                \{\par
36     renderBackground();\par
37     amountTroopType->render();\par
38     troopImage->render();\par
39     \par
40     {\cf19 return};\par
41 \}\par
}
}
{\xe \v setAmount\:Views::TroopDisplay}
{\xe \v Views::TroopDisplay\:setAmount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::TroopDisplay::setAmount (const unsigned int  {\i amount})}}
\par
{\bkmkstart AAAAAAAFMZ}
{\bkmkend AAAAAAAFMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the amount of troops that can be placed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i amount} \cell }{is the quantity of troops that can be placed. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 140                                                            \{\par
141     this->amount = amount;\par
142     updateLabelValue();\par
143     {\cf19 return};\par
144 \}\par
}
}
{\xe \v setTroopImageWidth\:Views::TroopDisplay}
{\xe \v Views::TroopDisplay\:setTroopImageWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::TroopDisplay::setTroopImageWidth (const float  {\i width})}}
\par
{\bkmkstart AAAAAAAFNA}
{\bkmkend AAAAAAAFNA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the width of the full sprite of the troop diplayed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i width} \cell }{is new width. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 172                                                             \{\par
173     troopImage->setWidth(width);\par
174     findWidth();\par
175     {\cf19 return};\par
176 \}\par
}
}
{\xe \v setTroopName\:Views::TroopDisplay}
{\xe \v Views::TroopDisplay\:setTroopName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::TroopDisplay::setTroopName (const std::string  {\i troopName})}}
\par
{\bkmkstart AAAAAAAFNB}
{\bkmkend AAAAAAAFNB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the name of the troop that will be displayed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i troopName} \cell }{is the name of the troop that will be displayed. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 162                                                               \{\par
163     this->troopName = troopName;\par
164     updateLabelValue();\par
165     {\cf19 return};\par
166 \}\par
}
}
{\xe \v updateInnerComponentsPositions\:Views::TroopDisplay}
{\xe \v Views::TroopDisplay\:updateInnerComponentsPositions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::TroopDisplay::updateInnerComponentsPositions (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFNC}
{\bkmkend AAAAAAAFNC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 53                                                        \{\par
54     poisitionAmountTroopTypeText();\par
55     positionTroopImage();\par
56     positionBackground();\par
57 \par
58     {\cf19 return};\par
59 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/{\b TroopDisplay.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/{\b TroopDisplay.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Views::TroopPositioningOption\par \pard\plain 
{\tc\tcl2 \v Views::TroopPositioningOption}
{\xe \v Views::TroopPositioningOption}
{\bkmkstart AAAAAAAFND}
{\bkmkend AAAAAAAFND}
\par
{
{\f2 #include <TroopPositioningOption.hpp>}}\par
Diagrama de hierarquia da classe Views::TroopPositioningOption:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_views_1_1_troop_positioning_option.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TroopPositioningOption} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the section that displays all troops that can be positioned. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~TroopPositioningOption} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Troop} Positioning Options view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b checkButtonRotateClick} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the button rotate was clicked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b checkButtonEndPositioningTurn} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the button that end the positioning turn was clicked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b decrementTroopAmount} (const std::string troopType)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrement the amount of available troops that can be placed based on it's type name. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b incrementTroopAmount} (const std::string troopType)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increment the amount of available troops that can be placed based on it's type name. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b hasPositionedAllTroops} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if all the troops was positioned. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::shared_ptr< {\b TroopDisplay} > > {\b getSelectableTroops} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the all troops that can be selected. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Views::View}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~View} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b View} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Component} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Component}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the render contract of components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getXPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the X position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getYPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Vector2} {\b getPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position attribute. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_WIDTH} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_HEIGHT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Vector2} {\b DEFAULT_INITIAL_POSITION} = \{ 0, 0 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b width} = {\b DEFAUT_INITIAL_WIDTH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b height} = {\b DEFAUT_INITIAL_HEIGHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b position} = {\b DEFAULT_INITIAL_POSITION}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v TroopPositioningOption\:Views::TroopPositioningOption}
{\xe \v Views::TroopPositioningOption\:TroopPositioningOption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::TroopPositioningOption::TroopPositioningOption ()}}
\par
{\bkmkstart AAAAAAAFNE}
{\bkmkend AAAAAAAFNE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the section that displays all troops that can be positioned. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 23                                                     : \par
24     buttonRotate({\cf17 new} Components::ButtonIcon(Icons::ROTATE_ARROW)),\par
25     buttonEndPositioningTurn({\cf17 new} Components::ButtonText()) \{\par
26     availableTroops.push_back(std::shared_ptr<SubmarineDisplay>({\cf17 new} SubmarineDisplay(GameManager::getInstance()->getGameParameters().getAmountSubmarineTroops())));\par
27     availableTroops.push_back(std::shared_ptr<CrusierDisplay>({\cf17 new} CrusierDisplay(GameManager::getInstance()->getGameParameters().getAmountCrusierTroops())));\par
28     availableTroops.push_back(std::shared_ptr<BattleshipDisplay>({\cf17 new} BattleshipDisplay(GameManager::getInstance()->getGameParameters().getAmountBattleshipTroops())));\par
29 \par
30     buildBackground();\par
31     buildTroopDisplays();\par
32     buildButtonRotate();\par
33     buildButtonEndPositioningTurn();\par
34 \par
35     setXPosition(0.0);\par
36     setYPosition(0.0);\par
37 \par
38     findHeight();\par
39     findWidth();\par
40 \}\par
}
}
{\xe \v ~TroopPositioningOption\:Views::TroopPositioningOption}
{\xe \v Views::TroopPositioningOption\:~TroopPositioningOption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::TroopPositioningOption::~TroopPositioningOption (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFNF}
{\bkmkend AAAAAAAFNF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Troop} Positioning Options view. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 42 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v checkButtonEndPositioningTurn\:Views::TroopPositioningOption}
{\xe \v Views::TroopPositioningOption\:checkButtonEndPositioningTurn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Views::TroopPositioningOption::checkButtonEndPositioningTurn ()}}
\par
{\bkmkstart AAAAAAAFNG}
{\bkmkend AAAAAAAFNG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the button that end the positioning turn was clicked. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Boolean that indicates if the button that end the positioning turn was clicked. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 65                                                                 \{\par
66     {\cf19 return} buttonEndPositioningTurn->checkClick();\par
67 \}\par
}
}
{\xe \v checkButtonRotateClick\:Views::TroopPositioningOption}
{\xe \v Views::TroopPositioningOption\:checkButtonRotateClick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Views::TroopPositioningOption::checkButtonRotateClick ()}}
\par
{\bkmkstart AAAAAAAFNH}
{\bkmkend AAAAAAAFNH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the button rotate was clicked. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Boolean that indicates if the rotate button was clicked. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 61                                                          \{\par
62     {\cf19 return} buttonRotate->checkClick();\par
63 \}\par
}
}
{\xe \v decrementTroopAmount\:Views::TroopPositioningOption}
{\xe \v Views::TroopPositioningOption\:decrementTroopAmount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::TroopPositioningOption::decrementTroopAmount (const std::string  {\i troopType})}}
\par
{\bkmkstart AAAAAAAFNI}
{\bkmkend AAAAAAAFNI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrement the amount of available troops that can be placed based on it's type name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i troopType} \cell }{is the type of the troop that will have it's amount decremented. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 69                                                                                 \{\par
70     {\cf19 for}({\cf17 auto}&& selectableTroopDisplay : availableTroops) \{\par
71         {\cf19 if}(selectableTroopDisplay->getTroopClassName() == troopType) \{\par
72             selectableTroopDisplay->decrementAmount();\par
73         \}\par
74     \}\par
75 \par
76     {\cf19 return};\par
77 \}\par
}
}
{\xe \v findHeight\:Views::TroopPositioningOption}
{\xe \v Views::TroopPositioningOption\:findHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::TroopPositioningOption::findHeight (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFNJ}
{\bkmkend AAAAAAAFNJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 115                                              \{\par
116     this->height = background.height;\par
117     {\cf19 return};\par
118 \}\par
}
}
{\xe \v findWidth\:Views::TroopPositioningOption}
{\xe \v Views::TroopPositioningOption\:findWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::TroopPositioningOption::findWidth (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFNK}
{\bkmkend AAAAAAAFNK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 110                                             \{\par
111     this->width = background.width;\par
112     {\cf19 return};\par
113 \}\par
}
}
{\xe \v getSelectableTroops\:Views::TroopPositioningOption}
{\xe \v Views::TroopPositioningOption\:getSelectableTroops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< std::shared_ptr< {\b Views::TroopDisplay} > > Views::TroopPositioningOption::getSelectableTroops () const}}
\par
{\bkmkstart AAAAAAAFNL}
{\bkmkend AAAAAAAFNL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the all troops that can be selected. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Vector of all troops that can be selected. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 217                                                                                                    \{\par
218     {\cf19 return} availableTroops;\par
219 \}\par
}
}
{\xe \v hasPositionedAllTroops\:Views::TroopPositioningOption}
{\xe \v Views::TroopPositioningOption\:hasPositionedAllTroops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Views::TroopPositioningOption::hasPositionedAllTroops () const}}
\par
{\bkmkstart AAAAAAAFNM}
{\bkmkend AAAAAAAFNM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if all the troops was positioned. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Boolean that the verifies if the player has positioned all the troops. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 89                                                                \{\par
90     {\cf19 for}({\cf17 auto}&& selectableTroopDisplay : availableTroops) \{\par
91         {\cf19 if}(selectableTroopDisplay->getAmount() > 0) \{\par
92             {\cf19 return} {\cf17 false};\par
93         \}\par
94     \}\par
95 \par
96     {\cf19 return} {\cf17 true};\par
97 \}\par
}
}
{\xe \v incrementTroopAmount\:Views::TroopPositioningOption}
{\xe \v Views::TroopPositioningOption\:incrementTroopAmount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::TroopPositioningOption::incrementTroopAmount (const std::string  {\i troopType})}}
\par
{\bkmkstart AAAAAAAFNN}
{\bkmkend AAAAAAAFNN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increment the amount of available troops that can be placed based on it's type name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i troopType} \cell }{is the type of the troop that will have it's amount incremented. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 79                                                                                 \{\par
80     {\cf19 for}({\cf17 auto}&& selectableTroopDisplay : availableTroops) \{\par
81         {\cf19 if}(selectableTroopDisplay->getTroopClassName() == troopType) \{\par
82             selectableTroopDisplay->incrementAmount();\par
83         \}\par
84     \}\par
85 \par
86     {\cf19 return};\par
87 \}\par
}
}
{\xe \v render\:Views::TroopPositioningOption}
{\xe \v Views::TroopPositioningOption\:render}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::TroopPositioningOption::render (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEIC}
{\bkmkend AAAAAAAEIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }}\par
{
Implementa {\b Components::Component} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEED \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 44                                          \{\par
45     renderBackground();\par
46 \par
47     {\cf19 if}(hasPositionedAllTroops()) \{\par
48         buttonEndPositioningTurn->render();\par
49         {\cf19 return};\par
50     \}\par
51 \par
52     {\cf19 for}({\cf17 auto}&& troopDisplay : availableTroops) \{\par
53         troopDisplay->render();\par
54     \}\par
55 \par
56     buttonRotate->render();\par
57 \par
58     {\cf19 return};\par
59 \}\par
}
}
{\xe \v updateInnerComponentsPositions\:Views::TroopPositioningOption}
{\xe \v Views::TroopPositioningOption\:updateInnerComponentsPositions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::TroopPositioningOption::updateInnerComponentsPositions (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFNO}
{\bkmkend AAAAAAAFNO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 101                                                                  \{\par
102     positionBackground();\par
103     positionTroopsDisplays();\par
104     positionButtonRotate();\par
105     positionButtonEndPositioningTurn();\par
106 \par
107     {\cf19 return};\par
108 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/{\b TroopPositioningOption.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/{\b TroopPositioningOption.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Classe std::tuple< Types >\par \pard\plain 
{\tc\tcl2 \v std::tuple< Types >}
{\xe \v std::tuple< Types >}
{\bkmkstart AAAAAAAFHU}
{\bkmkend AAAAAAAFHU}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe TxtReader\par \pard\plain 
{\tc\tcl2 \v TxtReader}
{\xe \v TxtReader}
{\bkmkstart AAAAAAAEBU}
{\bkmkend AAAAAAAEBU}
\par
{
{\f2 #include <TxtReader.hpp>}}\par
Diagrama de hierarquia da classe TxtReader:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_txt_reader.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TxtReader} (const std::string nome)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new Txt Reader object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~TxtReader} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Txt Reader object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MatchResults} {\b findMatch} (const std::string id)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Finds a matchResults according to an id string. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\b MatchResults} > {\b getMatches} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get all the matchResults stored in the file. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b FileHandler}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FileHandler} (const std::string name, const char mode)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new {\b FileHandler} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~FileHandler} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the File Handler object. Closes the file. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b FileHandler}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::fstream {\b file}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos Est\'E1ticos herdados de {\b FileHandler}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char {\b PLACEHOLDERCHAR} = '$'\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v TxtReader\:TxtReader}
{\xe \v TxtReader\:TxtReader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TxtReader::TxtReader (const std::string  {\i nome})}}
\par
{\bkmkstart AAAAAAAEBV}
{\bkmkend AAAAAAAEBV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new Txt Reader object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs a new object given a file name. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nome} \cell }{The name of the file to be read. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 10 : FileHandler(nome, {\cf23 'r'}) \{\}\par
}
}
{\xe \v ~TxtReader\:TxtReader}
{\xe \v TxtReader\:~TxtReader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TxtReader::~TxtReader ()}}
\par
{\bkmkstart AAAAAAAEBW}
{\bkmkend AAAAAAAEBW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Txt Reader object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v findMatch\:TxtReader}
{\xe \v TxtReader\:findMatch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MatchResults} TxtReader::findMatch (const std::string  {\i id})}}
\par
{\bkmkstart AAAAAAAEBX}
{\bkmkend AAAAAAAEBX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Finds a matchResults according to an id string. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{A string corresponding to the date and time of the match in the format "yyyy/mm/dd-hh:mm:ss". \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
matchResults instance with the values corresponding of the matchResults with the same id. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 50                                                     \{\par
51     resetFile();\par
52     \par
53     std::string line = {\cf22 ""};\par
54     {\cf19 while}(std::getline(file, line))\{\par
55         std::stringstream stream(line);\par
56         std::string _id;\par
57         stream >> _id;\par
58 \par
59         {\cf19 if}({\cf18 id} == _id)\{\par
60             {\cf19 return} strToMatchResult(line);\par
61         \}\par
62     \}\par
63 \par
64     {\cf19 throw} std::invalid_argument({\cf22 "No matching date and time found"});\par
65 \}\par
}
}
{\xe \v getMatches\:TxtReader}
{\xe \v TxtReader\:getMatches}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< {\b MatchResults} > TxtReader::getMatches ()}}
\par
{\bkmkstart AAAAAAAEBY}
{\bkmkend AAAAAAAEBY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get all the matchResults stored in the file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A vector of matchResults with corresponding matchResults values stored in the text file. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 69                                               \{\par
70     std::vector<MatchResults> matchVector;\par
71     resetFile();\par
72 \par
73     std::string line = {\cf22 ""};\par
74     {\cf19 while}(std::getline(file, line))\{\par
75         matchVector.push_back(strToMatchResult(line));\par
76     \}\par
77 \par
78     {\cf19 return} matchVector;\par
79 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/fileHandler/{\b TxtReader.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/fileHandler/{\b TxtReader.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe TxtWriter\par \pard\plain 
{\tc\tcl2 \v TxtWriter}
{\xe \v TxtWriter}
{\bkmkstart AAAAAAAEBZ}
{\bkmkend AAAAAAAEBZ}
\par
{
{\f2 #include <TxtWriter.hpp>}}\par
Diagrama de hierarquia da classe TxtWriter:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_txt_writer.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TxtWriter} (const std::string name)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new Txt Writer object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~TxtWriter} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Txt Writer object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writeResults} (const {\b MatchResults} &match)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write a matchResults instance to the opened file. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b FileHandler}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FileHandler} (const std::string name, const char mode)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new {\b FileHandler} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~FileHandler} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the File Handler object. Closes the file. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b FileHandler}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::fstream {\b file}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos Est\'E1ticos herdados de {\b FileHandler}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char {\b PLACEHOLDERCHAR} = '$'\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v TxtWriter\:TxtWriter}
{\xe \v TxtWriter\:TxtWriter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TxtWriter::TxtWriter (const std::string  {\i name})}}
\par
{\bkmkstart AAAAAAAECA}
{\bkmkend AAAAAAAECA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new Txt Writer object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a {\b TxtWriter} instance with a file name. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{Name of the file which will be written to. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 7 : FileHandler(name, {\cf23 'a'}) \{\}\par
}
}
{\xe \v ~TxtWriter\:TxtWriter}
{\xe \v TxtWriter\:~TxtWriter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TxtWriter::~TxtWriter ()}}
\par
{\bkmkstart AAAAAAAECB}
{\bkmkend AAAAAAAECB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Txt Writer object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 9 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v writeResults\:TxtWriter}
{\xe \v TxtWriter\:writeResults}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TxtWriter::writeResults (const {\b MatchResults} &  {\i match})}}
\par
{\bkmkstart AAAAAAAECC}
{\bkmkend AAAAAAAECC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write a matchResults instance to the opened file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i match} \cell }{The matchResults which values will be written to the file. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 25                                                       \{\par
26     file << match.getId() << {\cf22 " "};\par
27 \par
28     std::string player1ParsedName = parsePlayerName(match.getPlayer1Name());\par
29     std::string player2ParsedName = parsePlayerName(match.getPlayer2Name());\par
30 \par
31     file << getScoreString(player1ParsedName, match.getPlayer1Score()) << {\cf22 " "} << getScoreString(player2ParsedName, match.getPlayer2Score()) << std::endl;\par
32     {\cf19 return};\par
33 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/fileHandler/{\b TxtWriter.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/fileHandler/{\b TxtWriter.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Estrutura doctest::detail::underlying_type< T >\par \pard\plain 
{\tc\tcl2 \v doctest::detail::underlying_type< T >}
{\xe \v doctest::detail::underlying_type< T >}
{\bkmkstart AAAAAAAFDR}
{\bkmkend AAAAAAAFDR}
\par
{
{\f2 #include <doctest.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b __underlying_type} (T) type\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v __underlying_type\:doctest::detail::underlying_type< T >}
{\xe \v doctest::detail::underlying_type< T >\:__underlying_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > typedef {\b doctest::detail::underlying_type}< T >::__underlying_type (T )}}
\par
{\bkmkstart AAAAAAAFDS}
{\bkmkend AAAAAAAFDS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b doctest.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura Vector2\par \pard\plain 
{\tc\tcl2 \v Vector2}
{\xe \v Vector2}
{\bkmkstart AAAAAAAECD}
{\bkmkend AAAAAAAECD}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b x}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b y}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v x\:Vector2}
{\xe \v Vector2\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Vector2::x}}
\par
{\bkmkstart AAAAAAAECE}
{\bkmkend AAAAAAAECE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y\:Vector2}
{\xe \v Vector2\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Vector2::y}}
\par
{\bkmkstart AAAAAAAECF}
{\bkmkend AAAAAAAECF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura Vector3\par \pard\plain 
{\tc\tcl2 \v Vector3}
{\xe \v Vector3}
{\bkmkstart AAAAAAAECG}
{\bkmkend AAAAAAAECG}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b x}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b y}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b z}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v x\:Vector3}
{\xe \v Vector3\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Vector3::x}}
\par
{\bkmkstart AAAAAAAECH}
{\bkmkend AAAAAAAECH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y\:Vector3}
{\xe \v Vector3\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Vector3::y}}
\par
{\bkmkstart AAAAAAAECI}
{\bkmkend AAAAAAAECI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v z\:Vector3}
{\xe \v Vector3\:z}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Vector3::z}}
\par
{\bkmkstart AAAAAAAECJ}
{\bkmkend AAAAAAAECJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura Vector4\par \pard\plain 
{\tc\tcl2 \v Vector4}
{\xe \v Vector4}
{\bkmkstart AAAAAAAECK}
{\bkmkend AAAAAAAECK}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b x}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b y}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b z}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b w}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v w\:Vector4}
{\xe \v Vector4\:w}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Vector4::w}}
\par
{\bkmkstart AAAAAAAECL}
{\bkmkend AAAAAAAECL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x\:Vector4}
{\xe \v Vector4\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Vector4::x}}
\par
{\bkmkstart AAAAAAAECM}
{\bkmkend AAAAAAAECM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y\:Vector4}
{\xe \v Vector4\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Vector4::y}}
\par
{\bkmkstart AAAAAAAECN}
{\bkmkend AAAAAAAECN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v z\:Vector4}
{\xe \v Vector4\:z}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Vector4::z}}
\par
{\bkmkstart AAAAAAAECO}
{\bkmkend AAAAAAAECO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Views::View\par \pard\plain 
{\tc\tcl2 \v Views::View}
{\xe \v Views::View}
{\bkmkstart AAAAAAAFNP}
{\bkmkend AAAAAAAFNP}
\par
{
{\f2 #include <View.hpp>}}\par
Diagrama de hierarquia da classe Views::View:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_views_1_1_view.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~View} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b View} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Component} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Component}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the render contract of components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getXPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the X position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getYPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Vector2} {\b getPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position attribute. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_WIDTH} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_HEIGHT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Vector2} {\b DEFAULT_INITIAL_POSITION} = \{ 0, 0 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b width} = {\b DEFAUT_INITIAL_WIDTH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b height} = {\b DEFAUT_INITIAL_HEIGHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b position} = {\b DEFAULT_INITIAL_POSITION}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ~View\:Views::View}
{\xe \v Views::View\:~View}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::View::~View (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFNQ}
{\bkmkend AAAAAAAFNQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b View} component. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v findHeight\:Views::View}
{\xe \v Views::View\:findHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Views::View::findHeight (){\f2 [protected]}, {\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAELK}
{\bkmkend AAAAAAAELK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }}\par
{
Implementado por {\b Components::TextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::EndGameScoreDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFJE \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::GameScoreDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFKC \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::TroopDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::TroopPositioningOption} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::WarningPopUp} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNR \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::MatchResultDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFKK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::PlayerRegistredScore} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFKS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::BoardDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFII \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Views::PositionDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFLD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v findWidth\:Views::View}
{\xe \v Views::View\:findWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Views::View::findWidth (){\f2 [protected]}, {\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAELM}
{\bkmkend AAAAAAAELM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }}\par
{
Implementado por {\b Components::TextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::EndGameScoreDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFJF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::GameScoreDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFKD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::TroopDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::TroopPositioningOption} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::WarningPopUp} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::MatchResultDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFKL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::PlayerRegistredScore} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFKT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::BoardDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFIJ \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Views::PositionDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFLE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setPosition\:Views::View}
{\xe \v Views::View\:setPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::View::setPosition (const float  {\i xPosition}, const float  {\i yPosition}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEII}
{\bkmkend AAAAAAAEII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i xPosition} \cell }{is the new value to x axis in the position. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i yPosition} \cell }{is the new value to y axis in the position. \cell }
{\row }
}
}{
Reimplementa {\b Components::Component} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21                                                                         \{\par
22     Components::Component::setPosition(xPosition, yPosition);\par
23     updateInnerComponentsPositions();\par
24     {\cf19 return};\par
25 \}\par
}
}
{\xe \v setPosition\:Views::View}
{\xe \v Views::View\:setPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::View::setPosition (const {\b Vector2}  {\i position}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEIJ}
{\bkmkend AAAAAAAEIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i position} \cell }{is the new value to the position. \cell }
{\row }
}
}{
Reimplementa {\b Components::Component} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 27                                                   \{\par
28     Components::Component::setPosition(position);\par
29     updateInnerComponentsPositions();\par
30     {\cf19 return};\par
31 \}\par
}
}
{\xe \v setXPosition\:Views::View}
{\xe \v Views::View\:setXPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::View::setXPosition (const float  {\i xPosition}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEIK}
{\bkmkend AAAAAAAEIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i xPosition} \cell }{is the new value to x axis in the position. \cell }
{\row }
}
}{
Reimplementa {\b Components::Component} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 9                                                   \{\par
10     Components::Component::setXPosition(xPosition);\par
11     updateInnerComponentsPositions();\par
12     {\cf19 return};\par
13 \}\par
}
}
{\xe \v setYPosition\:Views::View}
{\xe \v Views::View\:setYPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::View::setYPosition (const float  {\i yPosition}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEIL}
{\bkmkend AAAAAAAEIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i yPosition} \cell }{is the new value to y axis in the position. \cell }
{\row }
}
}{
Reimplementa {\b Components::Component} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 15                                                   \{\par
16     Components::Component::setYPosition(yPosition);\par
17     updateInnerComponentsPositions();\par
18     {\cf19 return};\par
19 \}\par
}
}
{\xe \v updateInnerComponentsPositions\:Views::View}
{\xe \v Views::View\:updateInnerComponentsPositions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Views::View::updateInnerComponentsPositions (){\f2 [protected]}, {\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAELO}
{\bkmkend AAAAAAAELO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }}\par
{
Implementado por {\b Components::TextIcon} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELN \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::EndGameScoreDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFJH \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::GamePositionDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFJX \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::GameScoreDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFKF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::TroopDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNC \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::TroopPositioningOption} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNO \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::WarningPopUp} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::MatchResultDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFKO \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::PlayerRegistredScore} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFKX \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Views::BoardDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFIQ \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b Views::PositionDisplay} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAFJY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/view/{\b View.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/view/{\b View.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura VrDeviceInfo\par \pard\plain 
{\tc\tcl2 \v VrDeviceInfo}
{\xe \v VrDeviceInfo}
{\bkmkstart AAAAAAAECP}
{\bkmkend AAAAAAAECP}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b hResolution}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b vResolution}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b hScreenSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b vScreenSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b vScreenCenter}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b eyeToScreenDistance}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b lensSeparationDistance}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b interpupillaryDistance}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b lensDistortionValues} [4]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b chromaAbCorrection} [4]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v chromaAbCorrection\:VrDeviceInfo}
{\xe \v VrDeviceInfo\:chromaAbCorrection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float VrDeviceInfo::chromaAbCorrection[4]}}
\par
{\bkmkstart AAAAAAAECQ}
{\bkmkend AAAAAAAECQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v eyeToScreenDistance\:VrDeviceInfo}
{\xe \v VrDeviceInfo\:eyeToScreenDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float VrDeviceInfo::eyeToScreenDistance}}
\par
{\bkmkstart AAAAAAAECR}
{\bkmkend AAAAAAAECR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v hResolution\:VrDeviceInfo}
{\xe \v VrDeviceInfo\:hResolution}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int VrDeviceInfo::hResolution}}
\par
{\bkmkstart AAAAAAAECS}
{\bkmkend AAAAAAAECS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v hScreenSize\:VrDeviceInfo}
{\xe \v VrDeviceInfo\:hScreenSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float VrDeviceInfo::hScreenSize}}
\par
{\bkmkstart AAAAAAAECT}
{\bkmkend AAAAAAAECT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v interpupillaryDistance\:VrDeviceInfo}
{\xe \v VrDeviceInfo\:interpupillaryDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float VrDeviceInfo::interpupillaryDistance}}
\par
{\bkmkstart AAAAAAAECU}
{\bkmkend AAAAAAAECU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lensDistortionValues\:VrDeviceInfo}
{\xe \v VrDeviceInfo\:lensDistortionValues}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float VrDeviceInfo::lensDistortionValues[4]}}
\par
{\bkmkstart AAAAAAAECV}
{\bkmkend AAAAAAAECV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lensSeparationDistance\:VrDeviceInfo}
{\xe \v VrDeviceInfo\:lensSeparationDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float VrDeviceInfo::lensSeparationDistance}}
\par
{\bkmkstart AAAAAAAECW}
{\bkmkend AAAAAAAECW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v vResolution\:VrDeviceInfo}
{\xe \v VrDeviceInfo\:vResolution}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int VrDeviceInfo::vResolution}}
\par
{\bkmkstart AAAAAAAECX}
{\bkmkend AAAAAAAECX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v vScreenCenter\:VrDeviceInfo}
{\xe \v VrDeviceInfo\:vScreenCenter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float VrDeviceInfo::vScreenCenter}}
\par
{\bkmkstart AAAAAAAECY}
{\bkmkend AAAAAAAECY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v vScreenSize\:VrDeviceInfo}
{\xe \v VrDeviceInfo\:vScreenSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float VrDeviceInfo::vScreenSize}}
\par
{\bkmkstart AAAAAAAECZ}
{\bkmkend AAAAAAAECZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura VrStereoConfig\par \pard\plain 
{\tc\tcl2 \v VrStereoConfig}
{\xe \v VrStereoConfig}
{\bkmkstart AAAAAAAEDA}
{\bkmkend AAAAAAAEDA}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Matrix} {\b projection} [2]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Matrix} {\b viewOffset} [2]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b leftLensCenter} [2]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b rightLensCenter} [2]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b leftScreenCenter} [2]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b rightScreenCenter} [2]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b scale} [2]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b scaleIn} [2]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v leftLensCenter\:VrStereoConfig}
{\xe \v VrStereoConfig\:leftLensCenter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float VrStereoConfig::leftLensCenter[2]}}
\par
{\bkmkstart AAAAAAAEDB}
{\bkmkend AAAAAAAEDB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v leftScreenCenter\:VrStereoConfig}
{\xe \v VrStereoConfig\:leftScreenCenter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float VrStereoConfig::leftScreenCenter[2]}}
\par
{\bkmkstart AAAAAAAEDC}
{\bkmkend AAAAAAAEDC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v projection\:VrStereoConfig}
{\xe \v VrStereoConfig\:projection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Matrix} VrStereoConfig::projection[2]}}
\par
{\bkmkstart AAAAAAAEDD}
{\bkmkend AAAAAAAEDD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rightLensCenter\:VrStereoConfig}
{\xe \v VrStereoConfig\:rightLensCenter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float VrStereoConfig::rightLensCenter[2]}}
\par
{\bkmkstart AAAAAAAEDE}
{\bkmkend AAAAAAAEDE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rightScreenCenter\:VrStereoConfig}
{\xe \v VrStereoConfig\:rightScreenCenter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float VrStereoConfig::rightScreenCenter[2]}}
\par
{\bkmkstart AAAAAAAEDF}
{\bkmkend AAAAAAAEDF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scale\:VrStereoConfig}
{\xe \v VrStereoConfig\:scale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float VrStereoConfig::scale[2]}}
\par
{\bkmkstart AAAAAAAEDG}
{\bkmkend AAAAAAAEDG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scaleIn\:VrStereoConfig}
{\xe \v VrStereoConfig\:scaleIn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float VrStereoConfig::scaleIn[2]}}
\par
{\bkmkstart AAAAAAAEDH}
{\bkmkend AAAAAAAEDH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v viewOffset\:VrStereoConfig}
{\xe \v VrStereoConfig\:viewOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Matrix} VrStereoConfig::viewOffset[2]}}
\par
{\bkmkstart AAAAAAAEDI}
{\bkmkend AAAAAAAEDI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Views::WarningPopUp\par \pard\plain 
{\tc\tcl2 \v Views::WarningPopUp}
{\xe \v Views::WarningPopUp}
{\bkmkstart AAAAAAAFNU}
{\bkmkend AAAAAAAFNU}
\par
{
{\f2 #include <WarningPopUp.hpp>}}\par
Diagrama de hierarquia da classe Views::WarningPopUp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_views_1_1_warning_pop_up.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WarningPopUp} (const std::string message)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create an Pop-up window displaying an warning message to the user. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~WarningPopUp} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Warning Pop Up view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b checkExit} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the exit button was clicked. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Views::View}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~View} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a {\b View} component. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position}) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Component} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Component}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b render} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the render contract of components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getWidth} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the width attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getHeight} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the height attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setXPosition} (const float xPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getXPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the X position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setYPosition} (const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b getYPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Y position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const float xPosition, const float yPosition)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the x position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setPosition} (const {\b Vector2} {\b position})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position attribute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Vector2} {\b getPosition} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the position attribute. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateInnerComponentsPositions} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findWidth} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b findHeight} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_WIDTH} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const float {\b DEFAUT_INITIAL_HEIGHT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Vector2} {\b DEFAULT_INITIAL_POSITION} = \{ 0, 0 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos herdados de {\b Components::Component}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b width} = {\b DEFAUT_INITIAL_WIDTH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b height} = {\b DEFAUT_INITIAL_HEIGHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector2} {\b position} = {\b DEFAULT_INITIAL_POSITION}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v WarningPopUp\:Views::WarningPopUp}
{\xe \v Views::WarningPopUp\:WarningPopUp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::WarningPopUp::WarningPopUp (const std::string  {\i message})}}
\par
{\bkmkstart AAAAAAAFNV}
{\bkmkend AAAAAAAFNV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create an Pop-up window displaying an warning message to the user. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i message} \cell }{is the message that will be displayed in the Pop-up. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14                                                        :\par
15     headerTitle({\cf17 new} Components::Text()),\par
16     messageDisplay({\cf17 new} Components::Text()),\par
17     buttonExit({\cf17 new} Components::ButtonText()) \{\par
18     this->message = message;\par
19 \par
20     buildMask();\par
21     buildBackground();\par
22     buildHeader();\par
23     buildMassageDisplay();\par
24     buildExitButton();\par
25 \par
26     findHeight();\par
27     findWidth();\par
28 \par
29     setXPosition((Screens::Screen::getDisplayWidth() - getWidth()) / 2);\par
30     setYPosition((Screens::Screen::getDisplayHeight() - getHeight()) / 2);\par
31 \}\par
}
}
{\xe \v ~WarningPopUp\:Views::WarningPopUp}
{\xe \v Views::WarningPopUp\:~WarningPopUp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Views::WarningPopUp::~WarningPopUp (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFNW}
{\bkmkend AAAAAAAFNW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the Warning Pop Up view. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 33 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v checkExit\:Views::WarningPopUp}
{\xe \v Views::WarningPopUp\:checkExit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} Views::WarningPopUp::checkExit ()}}
\par
{\bkmkstart AAAAAAAFNX}
{\bkmkend AAAAAAAFNX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the exit button was clicked. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Boolean that indicates if the exit button was clicked. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 46                                   \{\par
47     {\cf19 return} buttonExit->checkClick();\par
48 \}\par
}
}
{\xe \v findHeight\:Views::WarningPopUp}
{\xe \v Views::WarningPopUp\:findHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::WarningPopUp::findHeight (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFNR}
{\bkmkend AAAAAAAFNR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the height of the view. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 67                                    \{\par
68     this->height = background.height;\par
69     {\cf19 return};\par
70 \}\par
}
}
{\xe \v findWidth\:Views::WarningPopUp}
{\xe \v Views::WarningPopUp\:findWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::WarningPopUp::findWidth (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFNS}
{\bkmkend AAAAAAAFNS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the width of the view. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 62                                   \{\par
63     this->width = background.width;\par
64     {\cf19 return};\par
65 \}\par
}
}
{\xe \v render\:Views::WarningPopUp}
{\xe \v Views::WarningPopUp\:render}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::WarningPopUp::render (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEID}
{\bkmkend AAAAAAAEID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Render the view in the interface. }}\par
{
Implementa {\b Components::Component} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEED \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 35                                \{\par
36     renderMask();\par
37     renderBackground();\par
38 \par
39     renderHeader();\par
40     messageDisplay->render();\par
41     buttonExit->render();\par
42 \par
43     {\cf19 return};\par
44 \}\par
}
}
{\xe \v updateInnerComponentsPositions\:Views::WarningPopUp}
{\xe \v Views::WarningPopUp\:updateInnerComponentsPositions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Views::WarningPopUp::updateInnerComponentsPositions (){\f2 [override]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFNT}
{\bkmkend AAAAAAAFNT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update all inner components positions. }}\par
{
Implementa {\b Views::View} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 52                                                        \{\par
53     positionMask();\par
54     positionBackground();\par
55     positionHeader();\par
56     positionMessageDisplay();\par
57     positionExitButton();\par
58     \par
59     {\cf19 return};\par
60 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/{\b WarningPopUp.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/{\b WarningPopUp.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura Wave\par \pard\plain 
{\tc\tcl2 \v Wave}
{\xe \v Wave}
{\bkmkstart AAAAAAAEDJ}
{\bkmkend AAAAAAAEDJ}
\par
{
{\f2 #include <raylib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b frameCount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b sampleRate}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b sampleSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b channels}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b data}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v channels\:Wave}
{\xe \v Wave\:channels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Wave::channels}}
\par
{\bkmkstart AAAAAAAEDK}
{\bkmkend AAAAAAAEDK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v data\:Wave}
{\xe \v Wave\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* Wave::data}}
\par
{\bkmkstart AAAAAAAEDL}
{\bkmkend AAAAAAAEDL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v frameCount\:Wave}
{\xe \v Wave\:frameCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Wave::frameCount}}
\par
{\bkmkstart AAAAAAAEDM}
{\bkmkend AAAAAAAEDM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sampleRate\:Wave}
{\xe \v Wave\:sampleRate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Wave::sampleRate}}
\par
{\bkmkstart AAAAAAAEDN}
{\bkmkend AAAAAAAEDN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sampleSize\:Wave}
{\xe \v Wave\:sampleSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Wave::sampleSize}}
\par
{\bkmkstart AAAAAAAEDO}
{\bkmkend AAAAAAAEDO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/{\b raylib.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Arquivos{\tc \v Arquivos}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/doctest.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/doctest.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/doctest.hpp}
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <signal.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b doctest::String}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::TestCaseData}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::AssertData}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::MessageData}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::SubcaseSignature}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::IContextScope}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::ContextOptions}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCLINT too many fields. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::enable_if< CONDITION, TYPE >}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::enable_if< true, TYPE >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::remove_reference< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::remove_reference< T & >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::remove_reference< T && >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::is_lvalue_reference< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::is_lvalue_reference< T & >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::is_rvalue_reference< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::is_rvalue_reference< T && >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::remove_const< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::remove_const< const T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::is_enum< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::underlying_type< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::deferred_false< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::has_insertion_operator_impl::check< class, class >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::has_insertion_operator_impl::check< T, decltype(os()<< val< T >(), void())>}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::StringMakerBase< C >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::filldata< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::filldata< T[N]>}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::filldata< const char[N]>}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::StringMakerBase< true >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::StringMaker< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::StringMaker< T * >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::StringMaker< R C::* >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b doctest::Approx}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::TestFailureException}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::Subcase}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::Result}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::Expression_lhs< L >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::ExpressionDecomposer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::TestSuite}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::TestCase}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::RelationalComparator< int, L, R >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::ResultBuilder}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::IExceptionTranslator}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b doctest::detail::ExceptionTranslator< T >}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCLINT destructor of virtual class. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::StringStreamBase< C >}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::StringStreamBase< true >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::StringStream< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b doctest::detail::ContextScopeBase}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b doctest::detail::ContextScope< L >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::detail::MessageBuilder}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b doctest::Context}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::CurrentTestCaseStats}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::TestCaseException}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::TestRunStats}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::QueryData}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b doctest::IReporter}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b doctest}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b doctest::detail}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b std}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b doctest::Color}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b doctest::assertType}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b doctest::detail::has_insertion_operator_impl}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b doctest::detail::binaryAssertComparison}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b doctest::detail::assertAction}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b doctest_detail_test_suite_ns}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b doctest::TestCaseFailureReason}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_VERSION_MAJOR}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_VERSION_MINOR}\~ 4\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_VERSION_PATCH}\~ 8\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_TOSTR_IMPL}(x)\~ #x\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_TOSTR}(x)\~ {\b DOCTEST_TOSTR_IMPL}(x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_VERSION_STR}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_VERSION}\~     ({\b DOCTEST_VERSION_MAJOR} * 10000 + {\b DOCTEST_VERSION_MINOR} * 100 + {\b DOCTEST_VERSION_PATCH})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_COMPILER}(MAJOR,  MINOR,  PATCH)\~ ((MAJOR)*10000000 + (MINOR)*100000 + (PATCH))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_MSVC}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CLANG}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_GCC}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CLANG_SUPPRESS_WARNING_PUSH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CLANG_SUPPRESS_WARNING}(w)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CLANG_SUPPRESS_WARNING_POP}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH}(w)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_GCC_SUPPRESS_WARNING_PUSH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_GCC_SUPPRESS_WARNING}(w)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_GCC_SUPPRESS_WARNING_POP}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_GCC_SUPPRESS_WARNING_WITH_PUSH}(w)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_MSVC_SUPPRESS_WARNING_PUSH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_MSVC_SUPPRESS_WARNING}(w)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_MSVC_SUPPRESS_WARNING_POP}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH}(w)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_SUPPRESS_COMMON_WARNINGS_PUSH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_SUPPRESS_COMMON_WARNINGS_POP}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_MAKE_STD_HEADERS_CLEAN_FROM_WARNINGS_ON_WALL_BEGIN}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_MAKE_STD_HEADERS_CLEAN_FROM_WARNINGS_ON_WALL_END}\~ {\b DOCTEST_MSVC_SUPPRESS_WARNING_POP}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CONFIG_POSIX_SIGNALS}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CONFIG_NO_EXCEPTIONS}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CONFIG_NO_TRY_CATCH_IN_ASSERTS}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_SYMBOL_EXPORT}\~ __attribute__((visibility("default")))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_SYMBOL_IMPORT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_INTERFACE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_EMPTY}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_NOINLINE}\~ __attribute__((noinline))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_UNUSED}\~ __attribute__((unused))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_ALIGNMENT}(x)\~ __attribute__((aligned(x)))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_NORETURN}\~ [[noreturn]]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_NOEXCEPT}\~ noexcept\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CONSTEXPR}\~ constexpr\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CAT_IMPL}(s1,  s2)\~ s1##s2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CAT}(s1,  s2)\~ {\b DOCTEST_CAT_IMPL}(s1, s2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_ANONYMOUS}(x)\~ {\b DOCTEST_CAT}(x, __LINE__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REF_WRAP}(x)\~ x&\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_PLATFORM_LINUX}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_GLOBAL_NO_WARNINGS}(var, ...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_BREAK_INTO_DEBUGGER}()\~ raise(SIGTRAP)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SFINAE_OP}(ret,  op)\~ decltype((void)({\b doctest::detail::declval}<L>() op {\b doctest::detail::declval}<R>()),ret\{\})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_DO_BINARY_EXPRESSION_COMPARISON}(op,  op_str,  op_macro)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_FORBIT_EXPRESSION}(rt,  op)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_COMPARISON_RETURN_TYPE}\~ {\b bool}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_RELATIONAL_OP}(name,  op)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CMP_EQ}(l,  r)\~ l == r\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CMP_NE}(l,  r)\~ l != r\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CMP_GT}(l,  r)\~ l > r\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CMP_LT}(l,  r)\~ l < r\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CMP_GE}(l,  r)\~ l >= r\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CMP_LE}(l,  r)\~ l <= r\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_BINARY_RELATIONAL_OP}(n,  op)\~     template <class L, class R> struct RelationalComparator<n, L, R> \{ {\b bool} operator()(const {\b DOCTEST_REF_WRAP}(L) lhs, const {\b DOCTEST_REF_WRAP}(R) rhs) const \{ return op(lhs, rhs); \} \};\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_ASSERT_OUT_OF_TESTS}(decomp)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_ASSERT_IN_TESTS}(decomp)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_DEFINE_DECORATOR}(name,  type,  def)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_ASSERT_LOG_REACT_RETURN}(b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_WRAP_IN_TRY}(x)\~ x;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CAST_TO_VOID}(...)\~ __VA_ARGS__;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REGISTER_FUNCTION}(global_prefix,  f,  decorators)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_IMPLEMENT_FIXTURE}(der,  base,  func,  decorators)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CREATE_AND_REGISTER_FUNCTION}(f,  decorators)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CREATE_AND_REGISTER_FUNCTION_IN_CLASS}(f,  proxy,  decorators)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_TEST_CASE}(decorators)\~     {\b DOCTEST_CREATE_AND_REGISTER_FUNCTION}({\b DOCTEST_ANONYMOUS}(DOCTEST_ANON_FUNC_), decorators)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_TEST_CASE_CLASS}(...)\~     TEST_CASES_CAN_BE_REGISTERED_IN_CLASSES_ONLY_IN_CPP17_MODE_OR_WITH_VS_2017_OR_NEWER\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_TEST_CASE_FIXTURE}(c,  decorators)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_TYPE_TO_STRING_IMPL}(...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_TYPE_TO_STRING}(...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_TEST_CASE_TEMPLATE_DEFINE_IMPL}(dec,  T,  iter,  func)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_TEST_CASE_TEMPLATE_DEFINE}(dec,  T,  id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE_IMPL}(id,  anon, ...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_TEST_CASE_TEMPLATE_INVOKE}(id, ...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_TEST_CASE_TEMPLATE_APPLY}(id, ...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_TEST_CASE_TEMPLATE_IMPL}(dec,  T,  anon, ...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_TEST_CASE_TEMPLATE}(dec,  T, ...)\~     {\b DOCTEST_TEST_CASE_TEMPLATE_IMPL}(dec, T, {\b DOCTEST_ANONYMOUS}(DOCTEST_ANON_TMP_), __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_SUBCASE}(name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_TEST_SUITE_IMPL}(decorators,  ns_name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_TEST_SUITE}(decorators)\~     {\b DOCTEST_TEST_SUITE_IMPL}(decorators, {\b DOCTEST_ANONYMOUS}(DOCTEST_ANON_SUITE_))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_TEST_SUITE_BEGIN}(decorators)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_TEST_SUITE_END}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REGISTER_EXCEPTION_TRANSLATOR_IMPL}(translatorName,  signature)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REGISTER_EXCEPTION_TRANSLATOR}(signature)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REGISTER_REPORTER}(name,  priority,  reporter)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REGISTER_LISTENER}(name,  priority,  reporter)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_INFO}(...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_INFO_IMPL}(mb_name,  s_name, ...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CAPTURE}(x)\~ {\b DOCTEST_INFO}(#x " := ", x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_ADD_AT_IMPL}(type,  file,  line,  mb, ...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_ADD_MESSAGE_AT}(file,  line, ...)\~ {\b DOCTEST_ADD_AT_IMPL}(is_warn, file, line, {\b DOCTEST_ANONYMOUS}(DOCTEST_MESSAGE_), __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_ADD_FAIL_CHECK_AT}(file,  line, ...)\~ {\b DOCTEST_ADD_AT_IMPL}(is_check, file, line, {\b DOCTEST_ANONYMOUS}(DOCTEST_MESSAGE_), __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_ADD_FAIL_AT}(file,  line, ...)\~ {\b DOCTEST_ADD_AT_IMPL}(is_require, file, line, {\b DOCTEST_ANONYMOUS}(DOCTEST_MESSAGE_), __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_MESSAGE}(...)\~ {\b DOCTEST_ADD_MESSAGE_AT}(__FILE__, __LINE__, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_FAIL_CHECK}(...)\~ {\b DOCTEST_ADD_FAIL_CHECK_AT}(__FILE__, __LINE__, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_FAIL}(...)\~ {\b DOCTEST_ADD_FAIL_AT}(__FILE__, __LINE__, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_TO_LVALUE}(...)\~ __VA_ARGS__\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_ASSERT_IMPLEMENT_2}(assert_type, ...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_ASSERT_IMPLEMENT_1}(assert_type, ...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_WARN}(...)\~ {\b DOCTEST_ASSERT_IMPLEMENT_1}(DT_WARN, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CHECK}(...)\~ {\b DOCTEST_ASSERT_IMPLEMENT_1}(DT_CHECK, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REQUIRE}(...)\~ {\b DOCTEST_ASSERT_IMPLEMENT_1}(DT_REQUIRE, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_WARN_FALSE}(...)\~ {\b DOCTEST_ASSERT_IMPLEMENT_1}(DT_WARN_FALSE, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CHECK_FALSE}(...)\~ {\b DOCTEST_ASSERT_IMPLEMENT_1}(DT_CHECK_FALSE, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REQUIRE_FALSE}(...)\~ {\b DOCTEST_ASSERT_IMPLEMENT_1}(DT_REQUIRE_FALSE, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_WARN_MESSAGE}(cond, ...)\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_ASSERT_IMPLEMENT_2}(DT_WARN, cond); \}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CHECK_MESSAGE}(cond, ...)\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_ASSERT_IMPLEMENT_2}(DT_CHECK, cond); \}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REQUIRE_MESSAGE}(cond, ...)\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_ASSERT_IMPLEMENT_2}(DT_REQUIRE, cond); \}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_WARN_FALSE_MESSAGE}(cond, ...)\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_ASSERT_IMPLEMENT_2}(DT_WARN_FALSE, cond); \}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CHECK_FALSE_MESSAGE}(cond, ...)\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_ASSERT_IMPLEMENT_2}(DT_CHECK_FALSE, cond); \}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REQUIRE_FALSE_MESSAGE}(cond, ...)\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_ASSERT_IMPLEMENT_2}(DT_REQUIRE_FALSE, cond); \}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_ASSERT_THROWS_AS}(expr,  assert_type,  message, ...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_ASSERT_THROWS_WITH}(expr,  expr_str,  assert_type, ...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_ASSERT_NOTHROW}(assert_type, ...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_WARN_THROWS}(...)\~ {\b DOCTEST_ASSERT_THROWS_WITH}((__VA_ARGS__), #__VA_ARGS__, DT_WARN_THROWS, "")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CHECK_THROWS}(...)\~ {\b DOCTEST_ASSERT_THROWS_WITH}((__VA_ARGS__), #__VA_ARGS__, DT_CHECK_THROWS, "")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REQUIRE_THROWS}(...)\~ {\b DOCTEST_ASSERT_THROWS_WITH}((__VA_ARGS__), #__VA_ARGS__, DT_REQUIRE_THROWS, "")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_WARN_THROWS_AS}(expr, ...)\~ {\b DOCTEST_ASSERT_THROWS_AS}(expr, DT_WARN_THROWS_AS, "", __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CHECK_THROWS_AS}(expr, ...)\~ {\b DOCTEST_ASSERT_THROWS_AS}(expr, DT_CHECK_THROWS_AS, "", __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REQUIRE_THROWS_AS}(expr, ...)\~ {\b DOCTEST_ASSERT_THROWS_AS}(expr, DT_REQUIRE_THROWS_AS, "", __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_WARN_THROWS_WITH}(expr, ...)\~ {\b DOCTEST_ASSERT_THROWS_WITH}(expr, #expr, DT_WARN_THROWS_WITH, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CHECK_THROWS_WITH}(expr, ...)\~ {\b DOCTEST_ASSERT_THROWS_WITH}(expr, #expr, DT_CHECK_THROWS_WITH, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REQUIRE_THROWS_WITH}(expr, ...)\~ {\b DOCTEST_ASSERT_THROWS_WITH}(expr, #expr, DT_REQUIRE_THROWS_WITH, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_WARN_THROWS_WITH_AS}(expr,  message, ...)\~ {\b DOCTEST_ASSERT_THROWS_AS}(expr, DT_WARN_THROWS_WITH_AS, message, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CHECK_THROWS_WITH_AS}(expr,  message, ...)\~ {\b DOCTEST_ASSERT_THROWS_AS}(expr, DT_CHECK_THROWS_WITH_AS, message, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REQUIRE_THROWS_WITH_AS}(expr,  message, ...)\~ {\b DOCTEST_ASSERT_THROWS_AS}(expr, DT_REQUIRE_THROWS_WITH_AS, message, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_WARN_NOTHROW}(...)\~ {\b DOCTEST_ASSERT_NOTHROW}(DT_WARN_NOTHROW, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CHECK_NOTHROW}(...)\~ {\b DOCTEST_ASSERT_NOTHROW}(DT_CHECK_NOTHROW, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REQUIRE_NOTHROW}(...)\~ {\b DOCTEST_ASSERT_NOTHROW}(DT_REQUIRE_NOTHROW, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_WARN_THROWS_MESSAGE}(expr, ...)\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_WARN_THROWS}(expr); \}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CHECK_THROWS_MESSAGE}(expr, ...)\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_CHECK_THROWS}(expr); \}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REQUIRE_THROWS_MESSAGE}(expr, ...)\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_REQUIRE_THROWS}(expr); \}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_WARN_THROWS_AS_MESSAGE}(expr,  ex, ...)\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_WARN_THROWS_AS}(expr, ex); \}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CHECK_THROWS_AS_MESSAGE}(expr,  ex, ...)\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_CHECK_THROWS_AS}(expr, ex); \}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REQUIRE_THROWS_AS_MESSAGE}(expr,  ex, ...)\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_REQUIRE_THROWS_AS}(expr, ex); \}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_WARN_THROWS_WITH_MESSAGE}(expr,  with, ...)\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_WARN_THROWS_WITH}(expr, with); \}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CHECK_THROWS_WITH_MESSAGE}(expr,  with, ...)\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_CHECK_THROWS_WITH}(expr, with); \}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REQUIRE_THROWS_WITH_MESSAGE}(expr,  with, ...)\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_REQUIRE_THROWS_WITH}(expr, with); \}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_WARN_THROWS_WITH_AS_MESSAGE}(expr,  with,  ex, ...)\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_WARN_THROWS_WITH_AS}(expr, with, ex); \}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CHECK_THROWS_WITH_AS_MESSAGE}(expr,  with,  ex, ...)\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_CHECK_THROWS_WITH_AS}(expr, with, ex); \}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REQUIRE_THROWS_WITH_AS_MESSAGE}(expr,  with,  ex, ...)\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_REQUIRE_THROWS_WITH_AS}(expr, with, ex); \}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_WARN_NOTHROW_MESSAGE}(expr, ...)\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_WARN_NOTHROW}(expr); \}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CHECK_NOTHROW_MESSAGE}(expr, ...)\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_CHECK_NOTHROW}(expr); \}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REQUIRE_NOTHROW_MESSAGE}(expr, ...)\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_REQUIRE_NOTHROW}(expr); \}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_BINARY_ASSERT}(assert_type,  comp, ...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_UNARY_ASSERT}(assert_type, ...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_WARN_EQ}(...)\~ {\b DOCTEST_BINARY_ASSERT}(DT_WARN_EQ, eq, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CHECK_EQ}(...)\~ {\b DOCTEST_BINARY_ASSERT}(DT_CHECK_EQ, eq, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REQUIRE_EQ}(...)\~ {\b DOCTEST_BINARY_ASSERT}(DT_REQUIRE_EQ, eq, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_WARN_NE}(...)\~ {\b DOCTEST_BINARY_ASSERT}(DT_WARN_NE, ne, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CHECK_NE}(...)\~ {\b DOCTEST_BINARY_ASSERT}(DT_CHECK_NE, ne, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REQUIRE_NE}(...)\~ {\b DOCTEST_BINARY_ASSERT}(DT_REQUIRE_NE, ne, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_WARN_GT}(...)\~ {\b DOCTEST_BINARY_ASSERT}(DT_WARN_GT, gt, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CHECK_GT}(...)\~ {\b DOCTEST_BINARY_ASSERT}(DT_CHECK_GT, gt, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REQUIRE_GT}(...)\~ {\b DOCTEST_BINARY_ASSERT}(DT_REQUIRE_GT, gt, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_WARN_LT}(...)\~ {\b DOCTEST_BINARY_ASSERT}(DT_WARN_LT, lt, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CHECK_LT}(...)\~ {\b DOCTEST_BINARY_ASSERT}(DT_CHECK_LT, lt, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REQUIRE_LT}(...)\~ {\b DOCTEST_BINARY_ASSERT}(DT_REQUIRE_LT, lt, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_WARN_GE}(...)\~ {\b DOCTEST_BINARY_ASSERT}(DT_WARN_GE, ge, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CHECK_GE}(...)\~ {\b DOCTEST_BINARY_ASSERT}(DT_CHECK_GE, ge, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REQUIRE_GE}(...)\~ {\b DOCTEST_BINARY_ASSERT}(DT_REQUIRE_GE, ge, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_WARN_LE}(...)\~ {\b DOCTEST_BINARY_ASSERT}(DT_WARN_LE, le, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CHECK_LE}(...)\~ {\b DOCTEST_BINARY_ASSERT}(DT_CHECK_LE, le, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REQUIRE_LE}(...)\~ {\b DOCTEST_BINARY_ASSERT}(DT_REQUIRE_LE, le, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_WARN_UNARY}(...)\~ {\b DOCTEST_UNARY_ASSERT}(DT_WARN_UNARY, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CHECK_UNARY}(...)\~ {\b DOCTEST_UNARY_ASSERT}(DT_CHECK_UNARY, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REQUIRE_UNARY}(...)\~ {\b DOCTEST_UNARY_ASSERT}(DT_REQUIRE_UNARY, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_WARN_UNARY_FALSE}(...)\~ {\b DOCTEST_UNARY_ASSERT}(DT_WARN_UNARY_FALSE, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CHECK_UNARY_FALSE}(...)\~ {\b DOCTEST_UNARY_ASSERT}(DT_CHECK_UNARY_FALSE, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_REQUIRE_UNARY_FALSE}(...)\~ {\b DOCTEST_UNARY_ASSERT}(DT_REQUIRE_UNARY_FALSE, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_FAST_WARN_EQ}\~ {\b DOCTEST_WARN_EQ}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_FAST_CHECK_EQ}\~ {\b DOCTEST_CHECK_EQ}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_FAST_REQUIRE_EQ}\~ {\b DOCTEST_REQUIRE_EQ}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_FAST_WARN_NE}\~ {\b DOCTEST_WARN_NE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_FAST_CHECK_NE}\~ {\b DOCTEST_CHECK_NE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_FAST_REQUIRE_NE}\~ {\b DOCTEST_REQUIRE_NE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_FAST_WARN_GT}\~ {\b DOCTEST_WARN_GT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_FAST_CHECK_GT}\~ {\b DOCTEST_CHECK_GT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_FAST_REQUIRE_GT}\~ {\b DOCTEST_REQUIRE_GT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_FAST_WARN_LT}\~ {\b DOCTEST_WARN_LT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_FAST_CHECK_LT}\~ {\b DOCTEST_CHECK_LT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_FAST_REQUIRE_LT}\~ {\b DOCTEST_REQUIRE_LT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_FAST_WARN_GE}\~ {\b DOCTEST_WARN_GE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_FAST_CHECK_GE}\~ {\b DOCTEST_CHECK_GE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_FAST_REQUIRE_GE}\~ {\b DOCTEST_REQUIRE_GE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_FAST_WARN_LE}\~ {\b DOCTEST_WARN_LE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_FAST_CHECK_LE}\~ {\b DOCTEST_CHECK_LE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_FAST_REQUIRE_LE}\~ {\b DOCTEST_REQUIRE_LE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_FAST_WARN_UNARY}\~ {\b DOCTEST_WARN_UNARY}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_FAST_CHECK_UNARY}\~ {\b DOCTEST_CHECK_UNARY}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_FAST_REQUIRE_UNARY}\~ {\b DOCTEST_REQUIRE_UNARY}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_FAST_WARN_UNARY_FALSE}\~ {\b DOCTEST_WARN_UNARY_FALSE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_FAST_CHECK_UNARY_FALSE}\~ {\b DOCTEST_CHECK_UNARY_FALSE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_FAST_REQUIRE_UNARY_FALSE}\~ {\b DOCTEST_REQUIRE_UNARY_FALSE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE}(id, ...)\~ {\b DOCTEST_TEST_CASE_TEMPLATE_INVOKE}(id,__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_SCENARIO}(name)\~ {\b DOCTEST_TEST_CASE}("  Scenario: " name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_SCENARIO_CLASS}(name)\~ {\b DOCTEST_TEST_CASE_CLASS}("  Scenario: " name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_SCENARIO_TEMPLATE}(name,  T, ...)\~ {\b DOCTEST_TEST_CASE_TEMPLATE}("  Scenario: " name, T, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_SCENARIO_TEMPLATE_DEFINE}(name,  T,  id)\~ {\b DOCTEST_TEST_CASE_TEMPLATE_DEFINE}("  Scenario: " name, T, id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_GIVEN}(name)\~ {\b DOCTEST_SUBCASE}("   Given: " name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_WHEN}(name)\~ {\b DOCTEST_SUBCASE}("    When: " name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_AND_WHEN}(name)\~ {\b DOCTEST_SUBCASE}("And when: " name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_THEN}(name)\~ {\b DOCTEST_SUBCASE}("    Then: " name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_AND_THEN}(name)\~ {\b DOCTEST_SUBCASE}("     And: " name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TEST_CASE}(name)\~ {\b DOCTEST_TEST_CASE}(name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TEST_CASE_CLASS}(name)\~ {\b DOCTEST_TEST_CASE_CLASS}(name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TEST_CASE_FIXTURE}(x,  name)\~ {\b DOCTEST_TEST_CASE_FIXTURE}(x, name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TYPE_TO_STRING}(...)\~ {\b DOCTEST_TYPE_TO_STRING}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TEST_CASE_TEMPLATE}(name,  T, ...)\~ {\b DOCTEST_TEST_CASE_TEMPLATE}(name, T, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TEST_CASE_TEMPLATE_DEFINE}(name,  T,  id)\~ {\b DOCTEST_TEST_CASE_TEMPLATE_DEFINE}(name, T, id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TEST_CASE_TEMPLATE_INVOKE}(id, ...)\~ {\b DOCTEST_TEST_CASE_TEMPLATE_INVOKE}(id, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TEST_CASE_TEMPLATE_APPLY}(id, ...)\~ {\b DOCTEST_TEST_CASE_TEMPLATE_APPLY}(id, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SUBCASE}(name)\~ {\b DOCTEST_SUBCASE}(name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TEST_SUITE}(decorators)\~ {\b DOCTEST_TEST_SUITE}(decorators)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TEST_SUITE_BEGIN}(name)\~ {\b DOCTEST_TEST_SUITE_BEGIN}(name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TEST_SUITE_END}\~ {\b DOCTEST_TEST_SUITE_END}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REGISTER_EXCEPTION_TRANSLATOR}(signature)\~ {\b DOCTEST_REGISTER_EXCEPTION_TRANSLATOR}(signature)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REGISTER_REPORTER}(name,  priority,  reporter)\~ {\b DOCTEST_REGISTER_REPORTER}(name, priority, reporter)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REGISTER_LISTENER}(name,  priority,  reporter)\~ {\b DOCTEST_REGISTER_LISTENER}(name, priority, reporter)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INFO}(...)\~ {\b DOCTEST_INFO}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CAPTURE}(x)\~ {\b DOCTEST_CAPTURE}(x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADD_MESSAGE_AT}(file,  line, ...)\~ {\b DOCTEST_ADD_MESSAGE_AT}(file, line, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADD_FAIL_CHECK_AT}(file,  line, ...)\~ {\b DOCTEST_ADD_FAIL_CHECK_AT}(file, line, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADD_FAIL_AT}(file,  line, ...)\~ {\b DOCTEST_ADD_FAIL_AT}(file, line, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MESSAGE}(...)\~ {\b DOCTEST_MESSAGE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAIL_CHECK}(...)\~ {\b DOCTEST_FAIL_CHECK}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAIL}(...)\~ {\b DOCTEST_FAIL}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TO_LVALUE}(...)\~ {\b DOCTEST_TO_LVALUE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WARN}(...)\~ {\b DOCTEST_WARN}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WARN_FALSE}(...)\~ {\b DOCTEST_WARN_FALSE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WARN_THROWS}(...)\~ {\b DOCTEST_WARN_THROWS}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WARN_THROWS_AS}(expr, ...)\~ {\b DOCTEST_WARN_THROWS_AS}(expr, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WARN_THROWS_WITH}(expr, ...)\~ {\b DOCTEST_WARN_THROWS_WITH}(expr, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WARN_THROWS_WITH_AS}(expr,  with, ...)\~ {\b DOCTEST_WARN_THROWS_WITH_AS}(expr, with, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WARN_NOTHROW}(...)\~ {\b DOCTEST_WARN_NOTHROW}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHECK}(...)\~ {\b DOCTEST_CHECK}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHECK_FALSE}(...)\~ {\b DOCTEST_CHECK_FALSE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHECK_THROWS}(...)\~ {\b DOCTEST_CHECK_THROWS}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHECK_THROWS_AS}(expr, ...)\~ {\b DOCTEST_CHECK_THROWS_AS}(expr, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHECK_THROWS_WITH}(expr, ...)\~ {\b DOCTEST_CHECK_THROWS_WITH}(expr, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHECK_THROWS_WITH_AS}(expr,  with, ...)\~ {\b DOCTEST_CHECK_THROWS_WITH_AS}(expr, with, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHECK_NOTHROW}(...)\~ {\b DOCTEST_CHECK_NOTHROW}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REQUIRE}(...)\~ {\b DOCTEST_REQUIRE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REQUIRE_FALSE}(...)\~ {\b DOCTEST_REQUIRE_FALSE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REQUIRE_THROWS}(...)\~ {\b DOCTEST_REQUIRE_THROWS}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REQUIRE_THROWS_AS}(expr, ...)\~ {\b DOCTEST_REQUIRE_THROWS_AS}(expr, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REQUIRE_THROWS_WITH}(expr, ...)\~ {\b DOCTEST_REQUIRE_THROWS_WITH}(expr, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REQUIRE_THROWS_WITH_AS}(expr,  with, ...)\~ {\b DOCTEST_REQUIRE_THROWS_WITH_AS}(expr, with, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REQUIRE_NOTHROW}(...)\~ {\b DOCTEST_REQUIRE_NOTHROW}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WARN_MESSAGE}(cond, ...)\~ {\b DOCTEST_WARN_MESSAGE}(cond, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WARN_FALSE_MESSAGE}(cond, ...)\~ {\b DOCTEST_WARN_FALSE_MESSAGE}(cond, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WARN_THROWS_MESSAGE}(expr, ...)\~ {\b DOCTEST_WARN_THROWS_MESSAGE}(expr, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WARN_THROWS_AS_MESSAGE}(expr,  ex, ...)\~ {\b DOCTEST_WARN_THROWS_AS_MESSAGE}(expr, ex, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WARN_THROWS_WITH_MESSAGE}(expr,  with, ...)\~ {\b DOCTEST_WARN_THROWS_WITH_MESSAGE}(expr, with, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WARN_THROWS_WITH_AS_MESSAGE}(expr,  with,  ex, ...)\~ {\b DOCTEST_WARN_THROWS_WITH_AS_MESSAGE}(expr, with, ex, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WARN_NOTHROW_MESSAGE}(expr, ...)\~ {\b DOCTEST_WARN_NOTHROW_MESSAGE}(expr, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHECK_MESSAGE}(cond, ...)\~ {\b DOCTEST_CHECK_MESSAGE}(cond, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHECK_FALSE_MESSAGE}(cond, ...)\~ {\b DOCTEST_CHECK_FALSE_MESSAGE}(cond, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHECK_THROWS_MESSAGE}(expr, ...)\~ {\b DOCTEST_CHECK_THROWS_MESSAGE}(expr, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHECK_THROWS_AS_MESSAGE}(expr,  ex, ...)\~ {\b DOCTEST_CHECK_THROWS_AS_MESSAGE}(expr, ex, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHECK_THROWS_WITH_MESSAGE}(expr,  with, ...)\~ {\b DOCTEST_CHECK_THROWS_WITH_MESSAGE}(expr, with, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHECK_THROWS_WITH_AS_MESSAGE}(expr,  with,  ex, ...)\~ {\b DOCTEST_CHECK_THROWS_WITH_AS_MESSAGE}(expr, with, ex, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHECK_NOTHROW_MESSAGE}(expr, ...)\~ {\b DOCTEST_CHECK_NOTHROW_MESSAGE}(expr, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REQUIRE_MESSAGE}(cond, ...)\~ {\b DOCTEST_REQUIRE_MESSAGE}(cond, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REQUIRE_FALSE_MESSAGE}(cond, ...)\~ {\b DOCTEST_REQUIRE_FALSE_MESSAGE}(cond, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REQUIRE_THROWS_MESSAGE}(expr, ...)\~ {\b DOCTEST_REQUIRE_THROWS_MESSAGE}(expr, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REQUIRE_THROWS_AS_MESSAGE}(expr,  ex, ...)\~ {\b DOCTEST_REQUIRE_THROWS_AS_MESSAGE}(expr, ex, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REQUIRE_THROWS_WITH_MESSAGE}(expr,  with, ...)\~ {\b DOCTEST_REQUIRE_THROWS_WITH_MESSAGE}(expr, with, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REQUIRE_THROWS_WITH_AS_MESSAGE}(expr,  with,  ex, ...)\~ {\b DOCTEST_REQUIRE_THROWS_WITH_AS_MESSAGE}(expr, with, ex, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REQUIRE_NOTHROW_MESSAGE}(expr, ...)\~ {\b DOCTEST_REQUIRE_NOTHROW_MESSAGE}(expr, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SCENARIO}(name)\~ {\b DOCTEST_SCENARIO}(name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SCENARIO_CLASS}(name)\~ {\b DOCTEST_SCENARIO_CLASS}(name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SCENARIO_TEMPLATE}(name,  T, ...)\~ {\b DOCTEST_SCENARIO_TEMPLATE}(name, T, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SCENARIO_TEMPLATE_DEFINE}(name,  T,  id)\~ {\b DOCTEST_SCENARIO_TEMPLATE_DEFINE}(name, T, id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GIVEN}(name)\~ {\b DOCTEST_GIVEN}(name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WHEN}(name)\~ {\b DOCTEST_WHEN}(name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b AND_WHEN}(name)\~ {\b DOCTEST_AND_WHEN}(name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b THEN}(name)\~ {\b DOCTEST_THEN}(name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b AND_THEN}(name)\~ {\b DOCTEST_AND_THEN}(name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WARN_EQ}(...)\~ {\b DOCTEST_WARN_EQ}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHECK_EQ}(...)\~ {\b DOCTEST_CHECK_EQ}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REQUIRE_EQ}(...)\~ {\b DOCTEST_REQUIRE_EQ}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WARN_NE}(...)\~ {\b DOCTEST_WARN_NE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHECK_NE}(...)\~ {\b DOCTEST_CHECK_NE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REQUIRE_NE}(...)\~ {\b DOCTEST_REQUIRE_NE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WARN_GT}(...)\~ {\b DOCTEST_WARN_GT}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHECK_GT}(...)\~ {\b DOCTEST_CHECK_GT}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REQUIRE_GT}(...)\~ {\b DOCTEST_REQUIRE_GT}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WARN_LT}(...)\~ {\b DOCTEST_WARN_LT}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHECK_LT}(...)\~ {\b DOCTEST_CHECK_LT}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REQUIRE_LT}(...)\~ {\b DOCTEST_REQUIRE_LT}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WARN_GE}(...)\~ {\b DOCTEST_WARN_GE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHECK_GE}(...)\~ {\b DOCTEST_CHECK_GE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REQUIRE_GE}(...)\~ {\b DOCTEST_REQUIRE_GE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WARN_LE}(...)\~ {\b DOCTEST_WARN_LE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHECK_LE}(...)\~ {\b DOCTEST_CHECK_LE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REQUIRE_LE}(...)\~ {\b DOCTEST_REQUIRE_LE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WARN_UNARY}(...)\~ {\b DOCTEST_WARN_UNARY}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHECK_UNARY}(...)\~ {\b DOCTEST_CHECK_UNARY}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REQUIRE_UNARY}(...)\~ {\b DOCTEST_REQUIRE_UNARY}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WARN_UNARY_FALSE}(...)\~ {\b DOCTEST_WARN_UNARY_FALSE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHECK_UNARY_FALSE}(...)\~ {\b DOCTEST_CHECK_UNARY_FALSE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REQUIRE_UNARY_FALSE}(...)\~ {\b DOCTEST_REQUIRE_UNARY_FALSE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAST_WARN_EQ}(...)\~ {\b DOCTEST_FAST_WARN_EQ}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAST_CHECK_EQ}(...)\~ {\b DOCTEST_FAST_CHECK_EQ}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAST_REQUIRE_EQ}(...)\~ {\b DOCTEST_FAST_REQUIRE_EQ}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAST_WARN_NE}(...)\~ {\b DOCTEST_FAST_WARN_NE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAST_CHECK_NE}(...)\~ {\b DOCTEST_FAST_CHECK_NE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAST_REQUIRE_NE}(...)\~ {\b DOCTEST_FAST_REQUIRE_NE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAST_WARN_GT}(...)\~ {\b DOCTEST_FAST_WARN_GT}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAST_CHECK_GT}(...)\~ {\b DOCTEST_FAST_CHECK_GT}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAST_REQUIRE_GT}(...)\~ {\b DOCTEST_FAST_REQUIRE_GT}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAST_WARN_LT}(...)\~ {\b DOCTEST_FAST_WARN_LT}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAST_CHECK_LT}(...)\~ {\b DOCTEST_FAST_CHECK_LT}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAST_REQUIRE_LT}(...)\~ {\b DOCTEST_FAST_REQUIRE_LT}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAST_WARN_GE}(...)\~ {\b DOCTEST_FAST_WARN_GE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAST_CHECK_GE}(...)\~ {\b DOCTEST_FAST_CHECK_GE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAST_REQUIRE_GE}(...)\~ {\b DOCTEST_FAST_REQUIRE_GE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAST_WARN_LE}(...)\~ {\b DOCTEST_FAST_WARN_LE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAST_CHECK_LE}(...)\~ {\b DOCTEST_FAST_CHECK_LE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAST_REQUIRE_LE}(...)\~ {\b DOCTEST_FAST_REQUIRE_LE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAST_WARN_UNARY}(...)\~ {\b DOCTEST_FAST_WARN_UNARY}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAST_CHECK_UNARY}(...)\~ {\b DOCTEST_FAST_CHECK_UNARY}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAST_REQUIRE_UNARY}(...)\~ {\b DOCTEST_FAST_REQUIRE_UNARY}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAST_WARN_UNARY_FALSE}(...)\~ {\b DOCTEST_FAST_WARN_UNARY_FALSE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAST_CHECK_UNARY_FALSE}(...)\~ {\b DOCTEST_FAST_CHECK_UNARY_FALSE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAST_REQUIRE_UNARY_FALSE}(...)\~ {\b DOCTEST_FAST_REQUIRE_UNARY_FALSE}(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TEST_CASE_TEMPLATE_INSTANTIATE}(id, ...)\~ {\b DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE}(id, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_SINGLE_HEADER}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es de Tipos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef decltype(nullptr) {\b std::nullptr_t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b basic_ostream}< char, {\b char_traits}< char > > {\b std::ostream}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b basic_istream}< char, {\b char_traits}< char > > {\b std::istream}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T > using {\b doctest::detail::has_insertion_operator} = {\b has_insertion_operator_impl::check}< const T >\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void(* {\b doctest::detail::funcType}) ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void(* {\b doctest::detail::assert_handler}) (const {\b AssertData} &)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b IReporter} *(* {\b doctest::detail::reporterCreatorFunc}) (const {\b ContextOptions} &)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b doctest::Color::Enum} \{ {\b doctest::Color::None} = 0
, {\b doctest::Color::White}
, {\b doctest::Color::Red}
, {\b doctest::Color::Green}
, {\b doctest::Color::Blue}
, {\b doctest::Color::Cyan}
, {\b doctest::Color::Yellow}
, {\b doctest::Color::Grey}
, {\b doctest::Color::Bright} = 0x10
, {\b doctest::Color::BrightRed} = Bright | Red
, {\b doctest::Color::BrightGreen} = Bright | Green
, {\b doctest::Color::LightGrey} = Bright | Grey
, {\b doctest::Color::BrightWhite} = Bright | White
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b doctest::assertType::Enum} \{ {\b doctest::assertType::is_warn} = 1
, {\b doctest::assertType::is_check} = 2 * is_warn
, {\b doctest::assertType::is_require} = 2 * is_check
, {\b doctest::assertType::is_normal} = 2 * is_require
, {\b doctest::assertType::is_throws} = 2 * is_normal
, {\b doctest::assertType::is_throws_as} = 2 * is_throws
, {\b doctest::assertType::is_throws_with} = 2 * is_throws_as
, {\b doctest::assertType::is_nothrow} = 2 * is_throws_with
, {\b doctest::assertType::is_false} = 2 * is_nothrow
, {\b doctest::assertType::is_unary} = 2 * is_false
, {\b doctest::assertType::is_eq} = 2 * is_unary
, {\b doctest::assertType::is_ne} = 2 * is_eq
, {\b doctest::assertType::is_lt} = 2 * is_ne
, {\b doctest::assertType::is_gt} = 2 * is_lt
, {\b doctest::assertType::is_ge} = 2 * is_gt
, {\b doctest::assertType::is_le} = 2 * is_ge
, {\b doctest::assertType::DT_WARN} = is_normal | is_warn
, {\b doctest::assertType::DT_CHECK} = is_normal | is_check
, {\b doctest::assertType::DT_REQUIRE} = is_normal | is_require
, {\b doctest::assertType::DT_WARN_FALSE} = is_normal | is_false | is_warn
, {\b doctest::assertType::DT_CHECK_FALSE} = is_normal | is_false | is_check
, {\b doctest::assertType::DT_REQUIRE_FALSE} = is_normal | is_false | is_require
, {\b doctest::assertType::DT_WARN_THROWS} = is_throws | is_warn
, {\b doctest::assertType::DT_CHECK_THROWS} = is_throws | is_check
, {\b doctest::assertType::DT_REQUIRE_THROWS} = is_throws | is_require
, {\b doctest::assertType::DT_WARN_THROWS_AS} = is_throws_as | is_warn
, {\b doctest::assertType::DT_CHECK_THROWS_AS} = is_throws_as | is_check
, {\b doctest::assertType::DT_REQUIRE_THROWS_AS} = is_throws_as | is_require
, {\b doctest::assertType::DT_WARN_THROWS_WITH} = is_throws_with | is_warn
, {\b doctest::assertType::DT_CHECK_THROWS_WITH} = is_throws_with | is_check
, {\b doctest::assertType::DT_REQUIRE_THROWS_WITH} = is_throws_with | is_require
, {\b doctest::assertType::DT_WARN_THROWS_WITH_AS} = is_throws_with | is_throws_as | is_warn
, {\b doctest::assertType::DT_CHECK_THROWS_WITH_AS} = is_throws_with | is_throws_as | is_check
, {\b doctest::assertType::DT_REQUIRE_THROWS_WITH_AS} = is_throws_with | is_throws_as | is_require
, {\b doctest::assertType::DT_WARN_NOTHROW} = is_nothrow | is_warn
, {\b doctest::assertType::DT_CHECK_NOTHROW} = is_nothrow | is_check
, {\b doctest::assertType::DT_REQUIRE_NOTHROW} = is_nothrow | is_require
, {\b doctest::assertType::DT_WARN_EQ} = is_normal | is_eq | is_warn
, {\b doctest::assertType::DT_CHECK_EQ} = is_normal | is_eq | is_check
, {\b doctest::assertType::DT_REQUIRE_EQ} = is_normal | is_eq | is_require
, {\b doctest::assertType::DT_WARN_NE} = is_normal | is_ne | is_warn
, {\b doctest::assertType::DT_CHECK_NE} = is_normal | is_ne | is_check
, {\b doctest::assertType::DT_REQUIRE_NE} = is_normal | is_ne | is_require
, {\b doctest::assertType::DT_WARN_GT} = is_normal | is_gt | is_warn
, {\b doctest::assertType::DT_CHECK_GT} = is_normal | is_gt | is_check
, {\b doctest::assertType::DT_REQUIRE_GT} = is_normal | is_gt | is_require
, {\b doctest::assertType::DT_WARN_LT} = is_normal | is_lt | is_warn
, {\b doctest::assertType::DT_CHECK_LT} = is_normal | is_lt | is_check
, {\b doctest::assertType::DT_REQUIRE_LT} = is_normal | is_lt | is_require
, {\b doctest::assertType::DT_WARN_GE} = is_normal | is_ge | is_warn
, {\b doctest::assertType::DT_CHECK_GE} = is_normal | is_ge | is_check
, {\b doctest::assertType::DT_REQUIRE_GE} = is_normal | is_ge | is_require
, {\b doctest::assertType::DT_WARN_LE} = is_normal | is_le | is_warn
, {\b doctest::assertType::DT_CHECK_LE} = is_normal | is_le | is_check
, {\b doctest::assertType::DT_REQUIRE_LE} = is_normal | is_le | is_require
, {\b doctest::assertType::DT_WARN_UNARY} = is_normal | is_unary | is_warn
, {\b doctest::assertType::DT_CHECK_UNARY} = is_normal | is_unary | is_check
, {\b doctest::assertType::DT_REQUIRE_UNARY} = is_normal | is_unary | is_require
, {\b doctest::assertType::DT_WARN_UNARY_FALSE} = is_normal | is_false | is_unary | is_warn
, {\b doctest::assertType::DT_CHECK_UNARY_FALSE} = is_normal | is_false | is_unary | is_check
, {\b doctest::assertType::DT_REQUIRE_UNARY_FALSE} = is_normal | is_false | is_unary | is_require
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b doctest::detail::binaryAssertComparison::Enum} \{ {\b doctest::detail::binaryAssertComparison::eq} = 0
, {\b doctest::detail::binaryAssertComparison::ne}
, {\b doctest::detail::binaryAssertComparison::gt}
, {\b doctest::detail::binaryAssertComparison::lt}
, {\b doctest::detail::binaryAssertComparison::ge}
, {\b doctest::detail::binaryAssertComparison::le}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b doctest::detail::assertAction::Enum} \{ {\b doctest::detail::assertAction::nothing} = 0
, {\b doctest::detail::assertAction::dbgbreak} = 1
, {\b doctest::detail::assertAction::shouldthrow} = 2
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b doctest::TestCaseFailureReason::Enum} \{ {\b doctest::TestCaseFailureReason::None} = 0
, {\b doctest::TestCaseFailureReason::AssertFailure} = 1
, {\b doctest::TestCaseFailureReason::Exception} = 2
, {\b doctest::TestCaseFailureReason::Crash} = 4
, {\b doctest::TestCaseFailureReason::TooManyFailedAsserts} = 8
, {\b doctest::TestCaseFailureReason::Timeout} = 16
, {\b doctest::TestCaseFailureReason::ShouldHaveFailedButDidnt} = 32
, {\b doctest::TestCaseFailureReason::ShouldHaveFailedAndDid} = 64
, {\b doctest::TestCaseFailureReason::DidntFailExactlyNumTimes} = 128
, {\b doctest::TestCaseFailureReason::FailedExactlyNumTimes} = 256
, {\b doctest::TestCaseFailureReason::CouldHaveFailedAndDid} = 512
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b doctest::operator+} (const {\b String} &lhs, const {\b String} &rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b bool} {\b doctest::operator==} (const {\b String} &lhs, const {\b String} &rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b bool} {\b doctest::operator!=} (const {\b String} &lhs, const {\b String} &rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b bool} {\b doctest::operator<} (const {\b String} &lhs, const {\b String} &rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b bool} {\b doctest::operator>} (const {\b String} &lhs, const {\b String} &rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b bool} {\b doctest::operator<=} (const {\b String} &lhs, const {\b String} &rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b bool} {\b doctest::operator>=} (const {\b String} &lhs, const {\b String} &rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b std::ostream} & {\b doctest::operator<<} ({\b std::ostream} &s, const {\b String} &in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b std::ostream} & {\b doctest::Color::operator<<} ({\b std::ostream} &s, Color::Enum code)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} const char * {\b doctest::assertString} ({\b assertType::Enum} at)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} const char * {\b doctest::failureString} ({\b assertType::Enum} at)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} const char * {\b doctest::skipPathFromFilename} (const char *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T , typename U  = T&&> U {\b doctest::detail::declval} (int)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > T {\b doctest::detail::declval} (long)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > auto {\b doctest::detail::declval} () {\b DOCTEST_NOEXCEPT} -> decltype(declval< T >(0))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T > T && {\b doctest::detail::forward} (typename {\b remove_reference}< T >::type &t) {\b DOCTEST_NOEXCEPT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T > T && {\b doctest::detail::forward} (typename {\b remove_reference}< T >::type &&t) {\b DOCTEST_NOEXCEPT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b std::ostream} & {\b doctest::detail::has_insertion_operator_impl::os} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T > {\b doctest::detail::has_insertion_operator_impl::DOCTEST_REF_WRAP} (T) val()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b std::ostream} * {\b doctest::detail::tlssPush} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b doctest::detail::tlssPop} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b doctest::detail::filloss} ({\b std::ostream} *stream, const T &in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T , unsigned long N> void {\b doctest::detail::filloss} ({\b std::ostream} *stream, const T(&in)[N])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b doctest::detail::rawMemoryToString} (const void *object, unsigned size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > {\b String} {\b doctest::detail::rawMemoryToString} (const {\b DOCTEST_REF_WRAP}(T) object)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > const char * {\b doctest::detail::type_to_string} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T , typename {\b detail::enable_if}<!{\b detail::is_enum}< T >::value, {\b bool} >::type  = true> {\b String} {\b doctest::toString} (const {\b DOCTEST_REF_WRAP}(T) value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b doctest::toString} ({\b bool} in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b doctest::toString} (float in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b doctest::toString} (double in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b doctest::toString} (double long in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b doctest::toString} (char in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b doctest::toString} (char signed in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b doctest::toString} (char unsigned in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b doctest::toString} (int short in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b doctest::toString} (int short unsigned in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b doctest::toString} (int in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b doctest::toString} (int unsigned in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b doctest::toString} (int long in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b doctest::toString} (int long unsigned in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b doctest::toString} (int long long in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b doctest::toString} (int long long unsigned in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b doctest::toString} ({\b std::nullptr_t} in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b String} {\b doctest::toString} (const {\b Approx} &in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} const {\b ContextOptions} * {\b doctest::getContextOptions} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b bool} {\b doctest::detail::checkIfShouldThrow} ({\b assertType::Enum} at)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b doctest::detail::throwException} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename L , typename R > {\b String} {\b doctest::detail::stringifyBinaryExpr} (const {\b DOCTEST_REF_WRAP}(L) lhs, const char *op, const {\b DOCTEST_REF_WRAP}(R) rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} int {\b doctest::detail::regTest} (const {\b TestCase} &tc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} int {\b doctest::detail::setTestSuite} (const {\b TestSuite} &ts)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b bool} {\b doctest::detail::isDebuggerActive} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > int {\b doctest::detail::instantiationHelper} (const T &)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b doctest::detail::failed_out_of_a_testing_context} (const {\b AssertData} &ad)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b bool} {\b doctest::detail::decomp_assert} ({\b assertType::Enum} at, const char *file, int line, const char *expr, {\b Result} result)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<int comparison, typename L , typename R > {\b DOCTEST_NOINLINE} {\b bool} {\b doctest::detail::binary_assert} ({\b assertType::Enum} at, const char *file, int line, const char *expr, const {\b DOCTEST_REF_WRAP}(L) lhs, const {\b DOCTEST_REF_WRAP}(R) rhs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename L > {\b DOCTEST_NOINLINE} {\b bool} {\b doctest::detail::unary_assert} ({\b assertType::Enum} at, const char *file, int line, const char *expr, const {\b DOCTEST_REF_WRAP}(L) val)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b doctest::detail::registerExceptionTranslatorImpl} (const {\b IExceptionTranslator} *et)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b doctest::detail::toStream} ({\b std::ostream} *s, const T &value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b doctest::detail::toStream} ({\b std::ostream} *s, {\b bool} in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b doctest::detail::toStream} ({\b std::ostream} *s, float in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b doctest::detail::toStream} ({\b std::ostream} *s, double in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b doctest::detail::toStream} ({\b std::ostream} *s, double long in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b doctest::detail::toStream} ({\b std::ostream} *s, char in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b doctest::detail::toStream} ({\b std::ostream} *s, char signed in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b doctest::detail::toStream} ({\b std::ostream} *s, char unsigned in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b doctest::detail::toStream} ({\b std::ostream} *s, int short in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b doctest::detail::toStream} ({\b std::ostream} *s, int short unsigned in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b doctest::detail::toStream} ({\b std::ostream} *s, int in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b doctest::detail::toStream} ({\b std::ostream} *s, int unsigned in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b doctest::detail::toStream} ({\b std::ostream} *s, int long in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b doctest::detail::toStream} ({\b std::ostream} *s, int long unsigned in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b doctest::detail::toStream} ({\b std::ostream} *s, int long long in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b doctest::detail::toStream} ({\b std::ostream} *s, int long long unsigned in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename L > {\b ContextScope}< L > {\b doctest::detail::MakeContextScope} (const L &lambda)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b doctest::DOCTEST_DEFINE_DECORATOR} (test_suite, const char *, "")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b doctest::DOCTEST_DEFINE_DECORATOR} (description, const char *, "")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b doctest::DOCTEST_DEFINE_DECORATOR} (skip, {\b bool}, {\b true})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b doctest::DOCTEST_DEFINE_DECORATOR} (no_breaks, {\b bool}, {\b true})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b doctest::DOCTEST_DEFINE_DECORATOR} (no_output, {\b bool}, {\b true})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b doctest::DOCTEST_DEFINE_DECORATOR} (timeout, double, 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b doctest::DOCTEST_DEFINE_DECORATOR} (may_fail, {\b bool}, {\b true})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b doctest::DOCTEST_DEFINE_DECORATOR} (should_fail, {\b bool}, {\b true})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b doctest::DOCTEST_DEFINE_DECORATOR} (expected_failures, int, 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > int {\b doctest::registerExceptionTranslator} ({\b String}(*translateFunction)(T))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b doctest::detail::TestSuite} & {\b doctest_detail_test_suite_ns::getCurrentTestSuite} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} void {\b doctest::detail::registerReporterImpl} (const char *name, int prio, {\b reporterCreatorFunc} c, {\b bool} isReporter)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename Reporter > {\b IReporter} * {\b doctest::detail::reporterCreator} (const {\b ContextOptions} &o)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename Reporter > int {\b doctest::registerReporter} (const char *name, int priority, {\b bool} isReporter)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DOCTEST_INTERFACE} {\b bool} {\b doctest::is_running_in_test}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b DOCTEST_INTERFACE} {\b doctest::detail::TestCase}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v ADD_FAIL_AT\:doctest.hpp}
{\xe \v doctest.hpp\:ADD_FAIL_AT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADD_FAIL_AT( file,  line,   {\i ...})\~ {\b DOCTEST_ADD_FAIL_AT}(file, line, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ADD_FAIL_CHECK_AT\:doctest.hpp}
{\xe \v doctest.hpp\:ADD_FAIL_CHECK_AT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADD_FAIL_CHECK_AT( file,  line,   {\i ...})\~ {\b DOCTEST_ADD_FAIL_CHECK_AT}(file, line, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ADD_MESSAGE_AT\:doctest.hpp}
{\xe \v doctest.hpp\:ADD_MESSAGE_AT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADD_MESSAGE_AT( file,  line,   {\i ...})\~ {\b DOCTEST_ADD_MESSAGE_AT}(file, line, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AND_THEN\:doctest.hpp}
{\xe \v doctest.hpp\:AND_THEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AND_THEN( name)\~ {\b DOCTEST_AND_THEN}(name)}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AND_WHEN\:doctest.hpp}
{\xe \v doctest.hpp\:AND_WHEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AND_WHEN( name)\~ {\b DOCTEST_AND_WHEN}(name)}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CAPTURE\:doctest.hpp}
{\xe \v doctest.hpp\:CAPTURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CAPTURE( x)\~ {\b DOCTEST_CAPTURE}(x)}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CHECK\:doctest.hpp}
{\xe \v doctest.hpp\:CHECK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHECK(  {\i ...})\~ {\b DOCTEST_CHECK}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CHECK_EQ\:doctest.hpp}
{\xe \v doctest.hpp\:CHECK_EQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHECK_EQ(  {\i ...})\~ {\b DOCTEST_CHECK_EQ}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CHECK_FALSE\:doctest.hpp}
{\xe \v doctest.hpp\:CHECK_FALSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHECK_FALSE(  {\i ...})\~ {\b DOCTEST_CHECK_FALSE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CHECK_FALSE_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:CHECK_FALSE_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHECK_FALSE_MESSAGE( cond,   {\i ...})\~ {\b DOCTEST_CHECK_FALSE_MESSAGE}(cond, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CHECK_GE\:doctest.hpp}
{\xe \v doctest.hpp\:CHECK_GE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHECK_GE(  {\i ...})\~ {\b DOCTEST_CHECK_GE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CHECK_GT\:doctest.hpp}
{\xe \v doctest.hpp\:CHECK_GT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHECK_GT(  {\i ...})\~ {\b DOCTEST_CHECK_GT}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CHECK_LE\:doctest.hpp}
{\xe \v doctest.hpp\:CHECK_LE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHECK_LE(  {\i ...})\~ {\b DOCTEST_CHECK_LE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CHECK_LT\:doctest.hpp}
{\xe \v doctest.hpp\:CHECK_LT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHECK_LT(  {\i ...})\~ {\b DOCTEST_CHECK_LT}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CHECK_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:CHECK_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHECK_MESSAGE( cond,   {\i ...})\~ {\b DOCTEST_CHECK_MESSAGE}(cond, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CHECK_NE\:doctest.hpp}
{\xe \v doctest.hpp\:CHECK_NE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHECK_NE(  {\i ...})\~ {\b DOCTEST_CHECK_NE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CHECK_NOTHROW\:doctest.hpp}
{\xe \v doctest.hpp\:CHECK_NOTHROW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHECK_NOTHROW(  {\i ...})\~ {\b DOCTEST_CHECK_NOTHROW}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CHECK_NOTHROW_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:CHECK_NOTHROW_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHECK_NOTHROW_MESSAGE( expr,   {\i ...})\~ {\b DOCTEST_CHECK_NOTHROW_MESSAGE}(expr, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CHECK_THROWS\:doctest.hpp}
{\xe \v doctest.hpp\:CHECK_THROWS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHECK_THROWS(  {\i ...})\~ {\b DOCTEST_CHECK_THROWS}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CHECK_THROWS_AS\:doctest.hpp}
{\xe \v doctest.hpp\:CHECK_THROWS_AS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHECK_THROWS_AS( expr,   {\i ...})\~ {\b DOCTEST_CHECK_THROWS_AS}(expr, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CHECK_THROWS_AS_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:CHECK_THROWS_AS_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHECK_THROWS_AS_MESSAGE( expr,  ex,   {\i ...})\~ {\b DOCTEST_CHECK_THROWS_AS_MESSAGE}(expr, ex, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CHECK_THROWS_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:CHECK_THROWS_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHECK_THROWS_MESSAGE( expr,   {\i ...})\~ {\b DOCTEST_CHECK_THROWS_MESSAGE}(expr, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CHECK_THROWS_WITH\:doctest.hpp}
{\xe \v doctest.hpp\:CHECK_THROWS_WITH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHECK_THROWS_WITH( expr,   {\i ...})\~ {\b DOCTEST_CHECK_THROWS_WITH}(expr, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CHECK_THROWS_WITH_AS\:doctest.hpp}
{\xe \v doctest.hpp\:CHECK_THROWS_WITH_AS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHECK_THROWS_WITH_AS( expr,  with,   {\i ...})\~ {\b DOCTEST_CHECK_THROWS_WITH_AS}(expr, with, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CHECK_THROWS_WITH_AS_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:CHECK_THROWS_WITH_AS_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHECK_THROWS_WITH_AS_MESSAGE( expr,  with,  ex,   {\i ...})\~ {\b DOCTEST_CHECK_THROWS_WITH_AS_MESSAGE}(expr, with, ex, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CHECK_THROWS_WITH_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:CHECK_THROWS_WITH_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHECK_THROWS_WITH_MESSAGE( expr,  with,   {\i ...})\~ {\b DOCTEST_CHECK_THROWS_WITH_MESSAGE}(expr, with, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CHECK_UNARY\:doctest.hpp}
{\xe \v doctest.hpp\:CHECK_UNARY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHECK_UNARY(  {\i ...})\~ {\b DOCTEST_CHECK_UNARY}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CHECK_UNARY_FALSE\:doctest.hpp}
{\xe \v doctest.hpp\:CHECK_UNARY_FALSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHECK_UNARY_FALSE(  {\i ...})\~ {\b DOCTEST_CHECK_UNARY_FALSE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_ADD_AT_IMPL\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_ADD_AT_IMPL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_ADD_AT_IMPL( type,  file,  line,  mb,   {\i ...})}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     [&] \{                                                                                          \\\par
        doctest::detail::MessageBuilder mb(file, line, doctest::assertType::type);                 \\\par
        mb * __VA_ARGS__;                                                                          \\\par
        if(mb.log())                                                                               \\\par
            DOCTEST_BREAK_INTO_DEBUGGER();                                                         \\\par
        mb.react();                                                                                \\\par
    \}()\par
}
}
{\xe \v DOCTEST_ADD_FAIL_AT\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_ADD_FAIL_AT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_ADD_FAIL_AT( file,  line,   {\i ...})\~ {\b DOCTEST_ADD_AT_IMPL}(is_require, file, line, {\b DOCTEST_ANONYMOUS}(DOCTEST_MESSAGE_), __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_ADD_FAIL_CHECK_AT\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_ADD_FAIL_CHECK_AT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_ADD_FAIL_CHECK_AT( file,  line,   {\i ...})\~ {\b DOCTEST_ADD_AT_IMPL}(is_check, file, line, {\b DOCTEST_ANONYMOUS}(DOCTEST_MESSAGE_), __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_ADD_MESSAGE_AT\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_ADD_MESSAGE_AT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_ADD_MESSAGE_AT( file,  line,   {\i ...})\~ {\b DOCTEST_ADD_AT_IMPL}(is_warn, file, line, {\b DOCTEST_ANONYMOUS}(DOCTEST_MESSAGE_), __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_ALIGNMENT\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_ALIGNMENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_ALIGNMENT( x)\~ __attribute__((aligned(x)))}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_AND_THEN\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_AND_THEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_AND_THEN( name)\~ {\b DOCTEST_SUBCASE}("     And: " name)}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_AND_WHEN\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_AND_WHEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_AND_WHEN( name)\~ {\b DOCTEST_SUBCASE}("And when: " name)}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_ANONYMOUS\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_ANONYMOUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_ANONYMOUS( x)\~ {\b DOCTEST_CAT}(x, __LINE__)}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_ASSERT_IMPLEMENT_1\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_ASSERT_IMPLEMENT_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_ASSERT_IMPLEMENT_1( assert_type,   {\i ...})}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     [&] \{                                                                                          \\\par
        DOCTEST_ASSERT_IMPLEMENT_2(assert_type, __VA_ARGS__);                                      \\\par
    \}()\par
}
}
{\xe \v DOCTEST_ASSERT_IMPLEMENT_2\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_ASSERT_IMPLEMENT_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_ASSERT_IMPLEMENT_2( assert_type,   {\i ...})}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH({\cf22 "-Woverloaded-shift-op-parentheses"})                  \\\par
    doctest::detail::ResultBuilder DOCTEST_RB(doctest::assertType::assert_type, __FILE__,          \\\par
                                               __LINE__, #__VA_ARGS__);                            \\\par
    DOCTEST_WRAP_IN_TRY(DOCTEST_RB.setResult(                                                      \\\par
            doctest::detail::ExpressionDecomposer(doctest::assertType::assert_type)                \\\par
            << __VA_ARGS__))                                                                       \\\par
    DOCTEST_ASSERT_LOG_REACT_RETURN(DOCTEST_RB)                                                    \\\par
    DOCTEST_CLANG_SUPPRESS_WARNING_POP\par
}
}
{\xe \v DOCTEST_ASSERT_IN_TESTS\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_ASSERT_IN_TESTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_ASSERT_IN_TESTS( decomp)}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     ResultBuilder rb(at, file, line, expr);                                                        \\\par
    rb.m_failed = failed;                                                                          \\\par
    if(rb.m_failed || getContextOptions()->success)                                                \\\par
        rb.m_decomp = decomp;                                                                      \\\par
    if(rb.log())                                                                                   \\\par
        DOCTEST_BREAK_INTO_DEBUGGER();                                                             \\\par
    if(rb.m_failed && checkIfShouldThrow(at))                                                      \\\par
    throwException()\par
}
}
{\xe \v DOCTEST_ASSERT_LOG_REACT_RETURN\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_ASSERT_LOG_REACT_RETURN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_ASSERT_LOG_REACT_RETURN( b)}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf19 if}(b.log())                                                                                    \\\par
        DOCTEST_BREAK_INTO_DEBUGGER();                                                             \\\par
    b.react(); \\\par
    {\cf19 return} !b.m_failed\par
}
}
{\xe \v DOCTEST_ASSERT_NOTHROW\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_ASSERT_NOTHROW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_ASSERT_NOTHROW( assert_type,   {\i ...})}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     [&] \{                                                                                          \\\par
        doctest::detail::ResultBuilder DOCTEST_RB(doctest::assertType::assert_type, __FILE__,      \\\par
                                                   __LINE__, #__VA_ARGS__);                        \\\par
        {\cf19 try} \{                                                                                      \\\par
            DOCTEST_CAST_TO_VOID(__VA_ARGS__)                                                      \\\par
        \} {\cf19 catch}(...) \{ DOCTEST_RB.translateException(); \}                                          \\\par
        DOCTEST_ASSERT_LOG_REACT_RETURN(DOCTEST_RB);                                               \\\par
    \}()\par
}
}
{\xe \v DOCTEST_ASSERT_OUT_OF_TESTS\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_ASSERT_OUT_OF_TESTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_ASSERT_OUT_OF_TESTS( decomp)}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf19 do} \{                                                                                           \\\par
        if(!is_running_in_test) \{                                                                  \\\par
            if(failed) \{                                                                           \\\par
                ResultBuilder rb(at, file, line, expr);                                            \\\par
                rb.m_failed = failed;                                                              \\\par
                rb.m_decomp = decomp;                                                              \\\par
                failed_out_of_a_testing_context(rb);                                               \\\par
                if(isDebuggerActive() && !getContextOptions()->no_breaks)                          \\\par
                    DOCTEST_BREAK_INTO_DEBUGGER();                                                 \\\par
                if(checkIfShouldThrow(at))                                                         \\\par
                    throwException();                                                              \\\par
            \}                                                                                      \\\par
            {\cf19 return} !failed;                                                                        \\\par
        \}                                                                                          \\\par
    \} {\cf19 while}({\cf17 false})\par
}
}
{\xe \v DOCTEST_ASSERT_THROWS_AS\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_ASSERT_THROWS_AS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_ASSERT_THROWS_AS( expr,  assert_type,  message,   {\i ...})}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     [&] \{                                                                                          \\\par
        if(!doctest::getContextOptions()->no_throw) \{                                              \\\par
            doctest::detail::ResultBuilder DOCTEST_RB(doctest::assertType::assert_type, __FILE__,  \\\par
                                                       __LINE__, #expr, #__VA_ARGS__, message);    \\\par
            {\cf19 try} \{                                                                                  \\\par
                DOCTEST_CAST_TO_VOID(expr)                                                         \\\par
            \} {\cf19 catch}({\cf17 const} {\cf17 typename} doctest::detail::remove_const<                                  \\\par
                    {\cf17 typename} doctest::detail::remove_reference<__VA_ARGS__>::type>::type&) \{       \\\par
                DOCTEST_RB.translateException();                                                   \\\par
                DOCTEST_RB.m_threw_as = {\cf17 true};                                                      \\\par
            \} {\cf19 catch}(...) \{ DOCTEST_RB.translateException(); \}                                      \\\par
            DOCTEST_ASSERT_LOG_REACT_RETURN(DOCTEST_RB);                                           \\\par
        \} {\cf19 else} \{                                                                                   \\\par
            {\cf19 return} {\cf17 false};                                                                          \\\par
        \}                                                                                          \\\par
    \}()\par
}
}
{\xe \v DOCTEST_ASSERT_THROWS_WITH\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_ASSERT_THROWS_WITH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_ASSERT_THROWS_WITH( expr,  expr_str,  assert_type,   {\i ...})}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     [&] \{                                                                                          \\\par
        if(!doctest::getContextOptions()->no_throw) \{                                              \\\par
            doctest::detail::ResultBuilder DOCTEST_RB(doctest::assertType::assert_type, __FILE__,  \\\par
                                                       __LINE__, expr_str, {\cf22 ""}, __VA_ARGS__);       \\\par
            {\cf19 try} \{                                                                                  \\\par
                DOCTEST_CAST_TO_VOID(expr)                                                         \\\par
            \} {\cf19 catch}(...) \{ DOCTEST_RB.translateException(); \}                                      \\\par
            DOCTEST_ASSERT_LOG_REACT_RETURN(DOCTEST_RB);                                           \\\par
        \} {\cf19 else} \{                                                                                   \\\par
           {\cf19 return} {\cf17 false};                                                                           \\\par
        \}                                                                                          \\\par
    \}()\par
}
}
{\xe \v DOCTEST_BINARY_ASSERT\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_BINARY_ASSERT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_BINARY_ASSERT( assert_type,  comp,   {\i ...})}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     [&] \{                                                                                          \\\par
        doctest::detail::ResultBuilder DOCTEST_RB(doctest::assertType::assert_type, __FILE__,      \\\par
                                                   __LINE__, #__VA_ARGS__);                        \\\par
        DOCTEST_WRAP_IN_TRY(                                                                       \\\par
                DOCTEST_RB.binary_assert<doctest::detail::binaryAssertComparison::comp>(           \\\par
                        __VA_ARGS__))                                                              \\\par
        DOCTEST_ASSERT_LOG_REACT_RETURN(DOCTEST_RB);                                               \\\par
    \}()\par
}
}
{\xe \v DOCTEST_BINARY_RELATIONAL_OP\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_BINARY_RELATIONAL_OP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_BINARY_RELATIONAL_OP( n,  op)\~     template <class L, class R> struct RelationalComparator<n, L, R> \{ {\b bool} operator()(const {\b DOCTEST_REF_WRAP}(L) lhs, const {\b DOCTEST_REF_WRAP}(R) rhs) const \{ return op(lhs, rhs); \} \};}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_BREAK_INTO_DEBUGGER\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_BREAK_INTO_DEBUGGER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_BREAK_INTO_DEBUGGER()\~ raise(SIGTRAP)}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CAPTURE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CAPTURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CAPTURE( x)\~ {\b DOCTEST_INFO}(#x " := ", x)}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CAST_TO_VOID\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CAST_TO_VOID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CAST_TO_VOID(  {\i ...})\~ __VA_ARGS__;}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CAT\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CAT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CAT( s1,  s2)\~ {\b DOCTEST_CAT_IMPL}(s1, s2)}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CAT_IMPL\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CAT_IMPL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CAT_IMPL( s1,  s2)\~ s1##s2}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CHECK\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CHECK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CHECK(  {\i ...})\~ {\b DOCTEST_ASSERT_IMPLEMENT_1}(DT_CHECK, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CHECK_EQ\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CHECK_EQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CHECK_EQ(  {\i ...})\~ {\b DOCTEST_BINARY_ASSERT}(DT_CHECK_EQ, eq, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CHECK_FALSE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CHECK_FALSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CHECK_FALSE(  {\i ...})\~ {\b DOCTEST_ASSERT_IMPLEMENT_1}(DT_CHECK_FALSE, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CHECK_FALSE_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CHECK_FALSE_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CHECK_FALSE_MESSAGE( cond,   {\i ...})\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_ASSERT_IMPLEMENT_2}(DT_CHECK_FALSE, cond); \}()}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CHECK_GE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CHECK_GE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CHECK_GE(  {\i ...})\~ {\b DOCTEST_BINARY_ASSERT}(DT_CHECK_GE, ge, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CHECK_GT\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CHECK_GT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CHECK_GT(  {\i ...})\~ {\b DOCTEST_BINARY_ASSERT}(DT_CHECK_GT, gt, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CHECK_LE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CHECK_LE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CHECK_LE(  {\i ...})\~ {\b DOCTEST_BINARY_ASSERT}(DT_CHECK_LE, le, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CHECK_LT\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CHECK_LT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CHECK_LT(  {\i ...})\~ {\b DOCTEST_BINARY_ASSERT}(DT_CHECK_LT, lt, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CHECK_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CHECK_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CHECK_MESSAGE( cond,   {\i ...})\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_ASSERT_IMPLEMENT_2}(DT_CHECK, cond); \}()}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CHECK_NE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CHECK_NE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CHECK_NE(  {\i ...})\~ {\b DOCTEST_BINARY_ASSERT}(DT_CHECK_NE, ne, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CHECK_NOTHROW\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CHECK_NOTHROW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CHECK_NOTHROW(  {\i ...})\~ {\b DOCTEST_ASSERT_NOTHROW}(DT_CHECK_NOTHROW, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CHECK_NOTHROW_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CHECK_NOTHROW_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CHECK_NOTHROW_MESSAGE( expr,   {\i ...})\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_CHECK_NOTHROW}(expr); \}()}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CHECK_THROWS\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CHECK_THROWS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CHECK_THROWS(  {\i ...})\~ {\b DOCTEST_ASSERT_THROWS_WITH}((__VA_ARGS__), #__VA_ARGS__, DT_CHECK_THROWS, "")}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CHECK_THROWS_AS\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CHECK_THROWS_AS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CHECK_THROWS_AS( expr,   {\i ...})\~ {\b DOCTEST_ASSERT_THROWS_AS}(expr, DT_CHECK_THROWS_AS, "", __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CHECK_THROWS_AS_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CHECK_THROWS_AS_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CHECK_THROWS_AS_MESSAGE( expr,  ex,   {\i ...})\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_CHECK_THROWS_AS}(expr, ex); \}()}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CHECK_THROWS_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CHECK_THROWS_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CHECK_THROWS_MESSAGE( expr,   {\i ...})\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_CHECK_THROWS}(expr); \}()}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CHECK_THROWS_WITH\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CHECK_THROWS_WITH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CHECK_THROWS_WITH( expr,   {\i ...})\~ {\b DOCTEST_ASSERT_THROWS_WITH}(expr, #expr, DT_CHECK_THROWS_WITH, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CHECK_THROWS_WITH_AS\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CHECK_THROWS_WITH_AS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CHECK_THROWS_WITH_AS( expr,  message,   {\i ...})\~ {\b DOCTEST_ASSERT_THROWS_AS}(expr, DT_CHECK_THROWS_WITH_AS, message, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CHECK_THROWS_WITH_AS_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CHECK_THROWS_WITH_AS_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CHECK_THROWS_WITH_AS_MESSAGE( expr,  with,  ex,   {\i ...})\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_CHECK_THROWS_WITH_AS}(expr, with, ex); \}()}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CHECK_THROWS_WITH_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CHECK_THROWS_WITH_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CHECK_THROWS_WITH_MESSAGE( expr,  with,   {\i ...})\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_CHECK_THROWS_WITH}(expr, with); \}()}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CHECK_UNARY\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CHECK_UNARY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CHECK_UNARY(  {\i ...})\~ {\b DOCTEST_UNARY_ASSERT}(DT_CHECK_UNARY, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CHECK_UNARY_FALSE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CHECK_UNARY_FALSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CHECK_UNARY_FALSE(  {\i ...})\~ {\b DOCTEST_UNARY_ASSERT}(DT_CHECK_UNARY_FALSE, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CLANG\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CLANG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CLANG\~ 0}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CLANG_SUPPRESS_WARNING\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CLANG_SUPPRESS_WARNING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CLANG_SUPPRESS_WARNING( w)}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CLANG_SUPPRESS_WARNING_POP\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CLANG_SUPPRESS_WARNING_POP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CLANG_SUPPRESS_WARNING_POP}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CLANG_SUPPRESS_WARNING_PUSH\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CLANG_SUPPRESS_WARNING_PUSH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CLANG_SUPPRESS_WARNING_PUSH}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH( w)}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CMP_EQ\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CMP_EQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CMP_EQ( l,  r)\~ l == r}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CMP_GE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CMP_GE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CMP_GE( l,  r)\~ l >= r}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CMP_GT\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CMP_GT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CMP_GT( l,  r)\~ l > r}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CMP_LE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CMP_LE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CMP_LE( l,  r)\~ l <= r}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CMP_LT\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CMP_LT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CMP_LT( l,  r)\~ l < r}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CMP_NE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CMP_NE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CMP_NE( l,  r)\~ l != r}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_COMPARISON_RETURN_TYPE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_COMPARISON_RETURN_TYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_COMPARISON_RETURN_TYPE\~ {\b bool}}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_COMPILER\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_COMPILER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_COMPILER( MAJOR,  MINOR,  PATCH)\~ ((MAJOR)*10000000 + (MINOR)*100000 + (PATCH))}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CONFIG_NO_EXCEPTIONS\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CONFIG_NO_EXCEPTIONS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CONFIG_NO_EXCEPTIONS}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CONFIG_NO_TRY_CATCH_IN_ASSERTS\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CONFIG_NO_TRY_CATCH_IN_ASSERTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CONFIG_NO_TRY_CATCH_IN_ASSERTS}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CONFIG_POSIX_SIGNALS\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CONFIG_POSIX_SIGNALS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CONFIG_POSIX_SIGNALS}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CONSTEXPR\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CONSTEXPR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CONSTEXPR\~ constexpr}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_CREATE_AND_REGISTER_FUNCTION\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CREATE_AND_REGISTER_FUNCTION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CREATE_AND_REGISTER_FUNCTION( f,  decorators)}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf17 static} {\cf18 void} f();                                                                               \\\par
    DOCTEST_REGISTER_FUNCTION(DOCTEST_EMPTY, f, decorators)                                        \\\par
    {\cf17 static} {\cf18 void} f()\par
}
}
{\xe \v DOCTEST_CREATE_AND_REGISTER_FUNCTION_IN_CLASS\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_CREATE_AND_REGISTER_FUNCTION_IN_CLASS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CREATE_AND_REGISTER_FUNCTION_IN_CLASS( f,  proxy,  decorators)}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf17 static} doctest::detail::funcType proxy() \{ {\cf19 return} f; \}                                         \\\par
    DOCTEST_REGISTER_FUNCTION({\cf17 inline}, proxy(), decorators)                                   \\\par
    {\cf17 static} {\cf18 void} f()\par
}
}
{\xe \v DOCTEST_DEFINE_DECORATOR\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_DEFINE_DECORATOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_DEFINE_DECORATOR( name,  type,  def)}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf17 struct }name                                                                                    \\\par
    \{                                                                                              \\\par
        type data;                                                                                 \\\par
        name(type in = def)                                                                        \\\par
                : data(in) \{\}                                                                      \\\par
        {\cf18 void} fill(detail::TestCase& state){\cf17  const }\{ state.DOCTEST_CAT(m_, name) = data; \}           \\\par
        {\cf18 void} fill(detail::TestSuite& state){\cf17  const }\{ state.DOCTEST_CAT(m_, name) = data; \}          \\\par
    \}\par
}
}
{\xe \v DOCTEST_DO_BINARY_EXPRESSION_COMPARISON\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_DO_BINARY_EXPRESSION_COMPARISON}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_DO_BINARY_EXPRESSION_COMPARISON( op,  op_str,  op_macro)}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf17 template} <{\cf17 typename} R>                                                                          \\\par
    DOCTEST_NOINLINE SFINAE_OP(Result,op) {\cf17 operator} op({\cf17 const} R&& rhs) \{                             \\\par
    {\cf18 bool} res = op_macro(doctest::detail::forward<const L>(lhs), doctest::detail::forward<const R>(rhs));                                                             \\\par
        if(m_at & assertType::is_false)                                                            \\\par
            res = !res;                                                                            \\\par
        if(!res || doctest::getContextOptions()->success)                                          \\\par
            {\cf19 return} Result(res, stringifyBinaryExpr(lhs, op_str, rhs));                             \\\par
        {\cf19 return} Result(res);                                                                        \\\par
    \}                                                                                              \\\par
    template <typename R ,typename enable_if<!doctest::detail::is_rvalue_reference<R>::value, {\cf18 void} >::type* = {\cf17 nullptr}> \\\par
    DOCTEST_NOINLINE SFINAE_OP(Result,op) {\cf17 operator} op({\cf17 const} R& rhs) \{                              \\\par
    {\cf18 bool} res = op_macro(doctest::detail::forward<const L>(lhs), rhs);                              \\\par
        if(m_at & assertType::is_false)                                                            \\\par
            res = !res;                                                                            \\\par
        if(!res || doctest::getContextOptions()->success)                                          \\\par
            {\cf19 return} Result(res, stringifyBinaryExpr(lhs, op_str, rhs));                             \\\par
        {\cf19 return} Result(res);                                                                        \\\par
    \}\par
}
}
{\xe \v DOCTEST_EMPTY\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_EMPTY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_EMPTY}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_FAIL\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_FAIL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_FAIL(  {\i ...})\~ {\b DOCTEST_ADD_FAIL_AT}(__FILE__, __LINE__, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_FAIL_CHECK\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_FAIL_CHECK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_FAIL_CHECK(  {\i ...})\~ {\b DOCTEST_ADD_FAIL_CHECK_AT}(__FILE__, __LINE__, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_FAST_CHECK_EQ\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_FAST_CHECK_EQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_FAST_CHECK_EQ\~ {\b DOCTEST_CHECK_EQ}}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_FAST_CHECK_GE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_FAST_CHECK_GE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_FAST_CHECK_GE\~ {\b DOCTEST_CHECK_GE}}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_FAST_CHECK_GT\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_FAST_CHECK_GT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_FAST_CHECK_GT\~ {\b DOCTEST_CHECK_GT}}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_FAST_CHECK_LE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_FAST_CHECK_LE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_FAST_CHECK_LE\~ {\b DOCTEST_CHECK_LE}}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_FAST_CHECK_LT\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_FAST_CHECK_LT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_FAST_CHECK_LT\~ {\b DOCTEST_CHECK_LT}}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_FAST_CHECK_NE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_FAST_CHECK_NE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_FAST_CHECK_NE\~ {\b DOCTEST_CHECK_NE}}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_FAST_CHECK_UNARY\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_FAST_CHECK_UNARY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_FAST_CHECK_UNARY\~ {\b DOCTEST_CHECK_UNARY}}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_FAST_CHECK_UNARY_FALSE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_FAST_CHECK_UNARY_FALSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_FAST_CHECK_UNARY_FALSE\~ {\b DOCTEST_CHECK_UNARY_FALSE}}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_FAST_REQUIRE_EQ\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_FAST_REQUIRE_EQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_FAST_REQUIRE_EQ\~ {\b DOCTEST_REQUIRE_EQ}}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_FAST_REQUIRE_GE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_FAST_REQUIRE_GE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_FAST_REQUIRE_GE\~ {\b DOCTEST_REQUIRE_GE}}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_FAST_REQUIRE_GT\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_FAST_REQUIRE_GT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_FAST_REQUIRE_GT\~ {\b DOCTEST_REQUIRE_GT}}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_FAST_REQUIRE_LE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_FAST_REQUIRE_LE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_FAST_REQUIRE_LE\~ {\b DOCTEST_REQUIRE_LE}}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_FAST_REQUIRE_LT\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_FAST_REQUIRE_LT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_FAST_REQUIRE_LT\~ {\b DOCTEST_REQUIRE_LT}}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_FAST_REQUIRE_NE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_FAST_REQUIRE_NE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_FAST_REQUIRE_NE\~ {\b DOCTEST_REQUIRE_NE}}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_FAST_REQUIRE_UNARY\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_FAST_REQUIRE_UNARY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_FAST_REQUIRE_UNARY\~ {\b DOCTEST_REQUIRE_UNARY}}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_FAST_REQUIRE_UNARY_FALSE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_FAST_REQUIRE_UNARY_FALSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_FAST_REQUIRE_UNARY_FALSE\~ {\b DOCTEST_REQUIRE_UNARY_FALSE}}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_FAST_WARN_EQ\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_FAST_WARN_EQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_FAST_WARN_EQ\~ {\b DOCTEST_WARN_EQ}}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_FAST_WARN_GE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_FAST_WARN_GE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_FAST_WARN_GE\~ {\b DOCTEST_WARN_GE}}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_FAST_WARN_GT\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_FAST_WARN_GT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_FAST_WARN_GT\~ {\b DOCTEST_WARN_GT}}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_FAST_WARN_LE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_FAST_WARN_LE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_FAST_WARN_LE\~ {\b DOCTEST_WARN_LE}}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_FAST_WARN_LT\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_FAST_WARN_LT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_FAST_WARN_LT\~ {\b DOCTEST_WARN_LT}}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_FAST_WARN_NE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_FAST_WARN_NE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_FAST_WARN_NE\~ {\b DOCTEST_WARN_NE}}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_FAST_WARN_UNARY\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_FAST_WARN_UNARY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_FAST_WARN_UNARY\~ {\b DOCTEST_WARN_UNARY}}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_FAST_WARN_UNARY_FALSE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_FAST_WARN_UNARY_FALSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_FAST_WARN_UNARY_FALSE\~ {\b DOCTEST_WARN_UNARY_FALSE}}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_FORBIT_EXPRESSION\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_FORBIT_EXPRESSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_FORBIT_EXPRESSION( rt,  op)}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf17 template} <{\cf17 typename} R>                                                                          \\\par
    rt& {\cf17 operator} op({\cf17 const} R&) \{                                                                    \\\par
        static_assert(deferred_false<R>::value,                                                    \\\par
                      {\cf22 "Expression Too Complex Please Rewrite As Binary Comparison!"});              \\\par
        {\cf19 return} *{\cf17 this};                                                                              \\\par
    \}\par
}
}
{\xe \v DOCTEST_GCC\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_GCC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_GCC\~ 0}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_GCC_SUPPRESS_WARNING\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_GCC_SUPPRESS_WARNING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_GCC_SUPPRESS_WARNING( w)}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_GCC_SUPPRESS_WARNING_POP\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_GCC_SUPPRESS_WARNING_POP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_GCC_SUPPRESS_WARNING_POP}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_GCC_SUPPRESS_WARNING_PUSH\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_GCC_SUPPRESS_WARNING_PUSH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_GCC_SUPPRESS_WARNING_PUSH}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_GCC_SUPPRESS_WARNING_WITH_PUSH\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_GCC_SUPPRESS_WARNING_WITH_PUSH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_GCC_SUPPRESS_WARNING_WITH_PUSH( w)}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_GIVEN\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_GIVEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_GIVEN( name)\~ {\b DOCTEST_SUBCASE}("   Given: " name)}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_GLOBAL_NO_WARNINGS\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_GLOBAL_NO_WARNINGS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_GLOBAL_NO_WARNINGS( var,   {\i ...})}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH({\cf22 "-Wglobal-constructors"})                              \\\par
    {\cf17 static} {\cf17 const} {\cf18 int} var = doctest::detail::consume(&var, __VA_ARGS__);                            \\\par
    DOCTEST_CLANG_SUPPRESS_WARNING_POP\par
}
}
{\xe \v DOCTEST_IMPLEMENT_FIXTURE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_IMPLEMENT_FIXTURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_IMPLEMENT_FIXTURE( der,  base,  func,  decorators)}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf17 namespace }\{                                                                                    \\\par
        {\cf17 struct }der : {\cf17 public} base                                                                   \\\par
        \{                                                                                          \\\par
            {\cf18 void} f();                                                                              \\\par
        \};                                                                                         \\\par
        {\cf17 static} {\cf18 void} func() \{                                                                       \\\par
            der v;                                                                                 \\\par
            v.f();                                                                                 \\\par
        \}                                                                                          \\\par
        DOCTEST_REGISTER_FUNCTION(DOCTEST_EMPTY, func, decorators)                                 \\\par
    \}                                                                                              \\\par
    {\cf17 inline} DOCTEST_NOINLINE {\cf18 void} der::f()\par
}
}
{\xe \v DOCTEST_INFO\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_INFO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_INFO(  {\i ...})}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     DOCTEST_INFO_IMPL(DOCTEST_ANONYMOUS(DOCTEST_CAPTURE_),                                         \\\par
                      DOCTEST_ANONYMOUS(DOCTEST_CAPTURE_OTHER_),                                   \\\par
                      __VA_ARGS__)\par
}
}
{\xe \v DOCTEST_INFO_IMPL\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_INFO_IMPL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_INFO_IMPL( mb_name,  s_name,   {\i ...})}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf17 auto} DOCTEST_ANONYMOUS(DOCTEST_CAPTURE_) = doctest::detail::MakeContextScope(                  \\\par
        [&](std::ostream* s_name) \{                                                                \\\par
        doctest::detail::MessageBuilder mb_name(__FILE__, __LINE__, doctest::assertType::is_warn); \\\par
        mb_name.m_stream = s_name;                                                                 \\\par
        mb_name * __VA_ARGS__;                                                                     \\\par
    \})\par
}
}
{\xe \v DOCTEST_INTERFACE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_INTERFACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_INTERFACE}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_MAKE_STD_HEADERS_CLEAN_FROM_WARNINGS_ON_WALL_BEGIN\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_MAKE_STD_HEADERS_CLEAN_FROM_WARNINGS_ON_WALL_BEGIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_MAKE_STD_HEADERS_CLEAN_FROM_WARNINGS_ON_WALL_BEGIN}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     DOCTEST_MSVC_SUPPRESS_WARNING_PUSH                                                             \\\par
    DOCTEST_MSVC_SUPPRESS_WARNING(4548) {\cf20 /* before comma no effect; expected side - effect */}       \\\par
    DOCTEST_MSVC_SUPPRESS_WARNING(4265) {\cf20 /* virtual functions, but destructor is not virtual */}     \\\par
    DOCTEST_MSVC_SUPPRESS_WARNING(4986) {\cf20 /* exception specification does not match previous */}      \\\par
    DOCTEST_MSVC_SUPPRESS_WARNING(4350) {\cf20 /* 'member1' called instead of 'member2' */}                \\\par
    DOCTEST_MSVC_SUPPRESS_WARNING(4668) {\cf20 /* not defined as a preprocessor macro */}                  \\\par
    DOCTEST_MSVC_SUPPRESS_WARNING(4365) {\cf20 /* signed/unsigned mismatch */}                             \\\par
    DOCTEST_MSVC_SUPPRESS_WARNING(4774) {\cf20 /* format string not a string literal */}                   \\\par
    DOCTEST_MSVC_SUPPRESS_WARNING(4820) {\cf20 /* padding */}                                              \\\par
    DOCTEST_MSVC_SUPPRESS_WARNING(4625) {\cf20 /* copy constructor was implicitly deleted */}              \\\par
    DOCTEST_MSVC_SUPPRESS_WARNING(4626) {\cf20 /* assignment operator was implicitly deleted */}           \\\par
    DOCTEST_MSVC_SUPPRESS_WARNING(5027) {\cf20 /* move assignment operator implicitly deleted */}          \\\par
    DOCTEST_MSVC_SUPPRESS_WARNING(5026) {\cf20 /* move constructor was implicitly deleted */}              \\\par
    DOCTEST_MSVC_SUPPRESS_WARNING(4623) {\cf20 /* default constructor was implicitly deleted */}           \\\par
    DOCTEST_MSVC_SUPPRESS_WARNING(5039) {\cf20 /* pointer to pot. throwing function passed to extern C */} \\\par
    DOCTEST_MSVC_SUPPRESS_WARNING(5045) {\cf20 /* Spectre mitigation for memory load */}                   \\\par
    DOCTEST_MSVC_SUPPRESS_WARNING(5105) {\cf20 /* macro producing 'defined' has undefined behavior */}\par
}
}
{\xe \v DOCTEST_MAKE_STD_HEADERS_CLEAN_FROM_WARNINGS_ON_WALL_END\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_MAKE_STD_HEADERS_CLEAN_FROM_WARNINGS_ON_WALL_END}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_MAKE_STD_HEADERS_CLEAN_FROM_WARNINGS_ON_WALL_END\~ {\b DOCTEST_MSVC_SUPPRESS_WARNING_POP}}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_MESSAGE(  {\i ...})\~ {\b DOCTEST_ADD_MESSAGE_AT}(__FILE__, __LINE__, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_MSVC\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_MSVC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_MSVC\~ 0}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_MSVC_SUPPRESS_WARNING\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_MSVC_SUPPRESS_WARNING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_MSVC_SUPPRESS_WARNING( w)}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_MSVC_SUPPRESS_WARNING_POP\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_MSVC_SUPPRESS_WARNING_POP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_MSVC_SUPPRESS_WARNING_POP}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_MSVC_SUPPRESS_WARNING_PUSH\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_MSVC_SUPPRESS_WARNING_PUSH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_MSVC_SUPPRESS_WARNING_PUSH}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH( w)}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_NOEXCEPT\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_NOEXCEPT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_NOEXCEPT\~ noexcept}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_NOINLINE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_NOINLINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_NOINLINE\~ __attribute__((noinline))}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_NORETURN\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_NORETURN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_NORETURN\~ [[noreturn]]}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_PLATFORM_LINUX\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_PLATFORM_LINUX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_PLATFORM_LINUX}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_REF_WRAP\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REF_WRAP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REF_WRAP( x)\~ x&}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_REGISTER_EXCEPTION_TRANSLATOR\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REGISTER_EXCEPTION_TRANSLATOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REGISTER_EXCEPTION_TRANSLATOR( signature)}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     DOCTEST_REGISTER_EXCEPTION_TRANSLATOR_IMPL(DOCTEST_ANONYMOUS(DOCTEST_ANON_TRANSLATOR_),        \\\par
                                               signature)\par
}
}
{\xe \v DOCTEST_REGISTER_EXCEPTION_TRANSLATOR_IMPL\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REGISTER_EXCEPTION_TRANSLATOR_IMPL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REGISTER_EXCEPTION_TRANSLATOR_IMPL( translatorName,  signature)}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf17 inline} doctest::String translatorName(signature);                                              \\\par
    DOCTEST_GLOBAL_NO_WARNINGS(DOCTEST_ANONYMOUS(DOCTEST_ANON_TRANSLATOR_),                        \\\par
            doctest::registerExceptionTranslator(translatorName))                                  \\\par
    doctest::String translatorName(signature)\par
}
}
{\xe \v DOCTEST_REGISTER_FUNCTION\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REGISTER_FUNCTION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REGISTER_FUNCTION( global_prefix,  f,  decorators)}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     global_prefix DOCTEST_GLOBAL_NO_WARNINGS(DOCTEST_ANONYMOUS(DOCTEST_ANON_VAR_),                 \\\par
            doctest::detail::regTest(                                                              \\\par
                    doctest::detail::TestCase(                                                     \\\par
                            f, __FILE__, __LINE__,                                                 \\\par
                            doctest_detail_test_suite_ns::getCurrentTestSuite()) *                 \\\par
                    decorators))\par
}
}
{\xe \v DOCTEST_REGISTER_LISTENER\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REGISTER_LISTENER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REGISTER_LISTENER( name,  priority,  reporter)}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     DOCTEST_GLOBAL_NO_WARNINGS(DOCTEST_ANONYMOUS(DOCTEST_ANON_REPORTER_),                          \\\par
            doctest::registerReporter<reporter>(name, priority, {\cf17 false}))                            \\\par
    static_assert({\cf17 true}, {\cf22 ""})\par
}
}
{\xe \v DOCTEST_REGISTER_REPORTER\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REGISTER_REPORTER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REGISTER_REPORTER( name,  priority,  reporter)}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     DOCTEST_GLOBAL_NO_WARNINGS(DOCTEST_ANONYMOUS(DOCTEST_ANON_REPORTER_),                          \\\par
            doctest::registerReporter<reporter>(name, priority, {\cf17 true}))                             \\\par
    static_assert({\cf17 true}, {\cf22 ""})\par
}
}
{\xe \v DOCTEST_RELATIONAL_OP\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_RELATIONAL_OP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_RELATIONAL_OP( name,  op)}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf17 template} <{\cf17 typename} L, {\cf17 typename} R>                                                              \\\par
    DOCTEST_COMPARISON_RETURN_TYPE name({\cf17 const} DOCTEST_REF_WRAP(L) lhs,                             \\\par
                                        {\cf17 const} DOCTEST_REF_WRAP(R) rhs) \{                           \\\par
        {\cf19 return} lhs op rhs;                                                                         \\\par
    \}\par
}
}
{\xe \v DOCTEST_REQUIRE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REQUIRE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REQUIRE(  {\i ...})\~ {\b DOCTEST_ASSERT_IMPLEMENT_1}(DT_REQUIRE, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_REQUIRE_EQ\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REQUIRE_EQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REQUIRE_EQ(  {\i ...})\~ {\b DOCTEST_BINARY_ASSERT}(DT_REQUIRE_EQ, eq, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_REQUIRE_FALSE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REQUIRE_FALSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REQUIRE_FALSE(  {\i ...})\~ {\b DOCTEST_ASSERT_IMPLEMENT_1}(DT_REQUIRE_FALSE, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_REQUIRE_FALSE_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REQUIRE_FALSE_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REQUIRE_FALSE_MESSAGE( cond,   {\i ...})\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_ASSERT_IMPLEMENT_2}(DT_REQUIRE_FALSE, cond); \}()}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_REQUIRE_GE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REQUIRE_GE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REQUIRE_GE(  {\i ...})\~ {\b DOCTEST_BINARY_ASSERT}(DT_REQUIRE_GE, ge, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_REQUIRE_GT\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REQUIRE_GT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REQUIRE_GT(  {\i ...})\~ {\b DOCTEST_BINARY_ASSERT}(DT_REQUIRE_GT, gt, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_REQUIRE_LE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REQUIRE_LE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REQUIRE_LE(  {\i ...})\~ {\b DOCTEST_BINARY_ASSERT}(DT_REQUIRE_LE, le, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_REQUIRE_LT\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REQUIRE_LT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REQUIRE_LT(  {\i ...})\~ {\b DOCTEST_BINARY_ASSERT}(DT_REQUIRE_LT, lt, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_REQUIRE_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REQUIRE_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REQUIRE_MESSAGE( cond,   {\i ...})\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_ASSERT_IMPLEMENT_2}(DT_REQUIRE, cond); \}()}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_REQUIRE_NE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REQUIRE_NE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REQUIRE_NE(  {\i ...})\~ {\b DOCTEST_BINARY_ASSERT}(DT_REQUIRE_NE, ne, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_REQUIRE_NOTHROW\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REQUIRE_NOTHROW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REQUIRE_NOTHROW(  {\i ...})\~ {\b DOCTEST_ASSERT_NOTHROW}(DT_REQUIRE_NOTHROW, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_REQUIRE_NOTHROW_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REQUIRE_NOTHROW_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REQUIRE_NOTHROW_MESSAGE( expr,   {\i ...})\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_REQUIRE_NOTHROW}(expr); \}()}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_REQUIRE_THROWS\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REQUIRE_THROWS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REQUIRE_THROWS(  {\i ...})\~ {\b DOCTEST_ASSERT_THROWS_WITH}((__VA_ARGS__), #__VA_ARGS__, DT_REQUIRE_THROWS, "")}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_REQUIRE_THROWS_AS\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REQUIRE_THROWS_AS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REQUIRE_THROWS_AS( expr,   {\i ...})\~ {\b DOCTEST_ASSERT_THROWS_AS}(expr, DT_REQUIRE_THROWS_AS, "", __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_REQUIRE_THROWS_AS_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REQUIRE_THROWS_AS_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REQUIRE_THROWS_AS_MESSAGE( expr,  ex,   {\i ...})\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_REQUIRE_THROWS_AS}(expr, ex); \}()}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_REQUIRE_THROWS_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REQUIRE_THROWS_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REQUIRE_THROWS_MESSAGE( expr,   {\i ...})\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_REQUIRE_THROWS}(expr); \}()}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_REQUIRE_THROWS_WITH\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REQUIRE_THROWS_WITH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REQUIRE_THROWS_WITH( expr,   {\i ...})\~ {\b DOCTEST_ASSERT_THROWS_WITH}(expr, #expr, DT_REQUIRE_THROWS_WITH, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_REQUIRE_THROWS_WITH_AS\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REQUIRE_THROWS_WITH_AS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REQUIRE_THROWS_WITH_AS( expr,  message,   {\i ...})\~ {\b DOCTEST_ASSERT_THROWS_AS}(expr, DT_REQUIRE_THROWS_WITH_AS, message, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_REQUIRE_THROWS_WITH_AS_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REQUIRE_THROWS_WITH_AS_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REQUIRE_THROWS_WITH_AS_MESSAGE( expr,  with,  ex,   {\i ...})\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_REQUIRE_THROWS_WITH_AS}(expr, with, ex); \}()}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_REQUIRE_THROWS_WITH_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REQUIRE_THROWS_WITH_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REQUIRE_THROWS_WITH_MESSAGE( expr,  with,   {\i ...})\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_REQUIRE_THROWS_WITH}(expr, with); \}()}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_REQUIRE_UNARY\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REQUIRE_UNARY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REQUIRE_UNARY(  {\i ...})\~ {\b DOCTEST_UNARY_ASSERT}(DT_REQUIRE_UNARY, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_REQUIRE_UNARY_FALSE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_REQUIRE_UNARY_FALSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_REQUIRE_UNARY_FALSE(  {\i ...})\~ {\b DOCTEST_UNARY_ASSERT}(DT_REQUIRE_UNARY_FALSE, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_SCENARIO\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_SCENARIO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_SCENARIO( name)\~ {\b DOCTEST_TEST_CASE}("  Scenario: " name)}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_SCENARIO_CLASS\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_SCENARIO_CLASS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_SCENARIO_CLASS( name)\~ {\b DOCTEST_TEST_CASE_CLASS}("  Scenario: " name)}}
\par
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_SCENARIO_TEMPLATE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_SCENARIO_TEMPLATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_SCENARIO_TEMPLATE( name,  T,   {\i ...})\~ {\b DOCTEST_TEST_CASE_TEMPLATE}("  Scenario: " name, T, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_SCENARIO_TEMPLATE_DEFINE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_SCENARIO_TEMPLATE_DEFINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_SCENARIO_TEMPLATE_DEFINE( name,  T,  id)\~ {\b DOCTEST_TEST_CASE_TEMPLATE_DEFINE}("  Scenario: " name, T, id)}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_SINGLE_HEADER\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_SINGLE_HEADER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_SINGLE_HEADER}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_SUBCASE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_SUBCASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_SUBCASE( name)}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf19 if}({\cf17 const} doctest::detail::Subcase & DOCTEST_ANONYMOUS(DOCTEST_ANON_SUBCASE_) DOCTEST_UNUSED =  \\\par
               doctest::detail::Subcase(name, __FILE__, __LINE__))\par
}
}
{\xe \v DOCTEST_SUPPRESS_COMMON_WARNINGS_POP\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_SUPPRESS_COMMON_WARNINGS_POP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_SUPPRESS_COMMON_WARNINGS_POP}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     DOCTEST_CLANG_SUPPRESS_WARNING_POP                                                             \\\par
    DOCTEST_GCC_SUPPRESS_WARNING_POP                                                               \\\par
    DOCTEST_MSVC_SUPPRESS_WARNING_POP\par
}
}
{\xe \v DOCTEST_SUPPRESS_COMMON_WARNINGS_PUSH\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_SUPPRESS_COMMON_WARNINGS_PUSH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_SUPPRESS_COMMON_WARNINGS_PUSH}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_SYMBOL_EXPORT\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_SYMBOL_EXPORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_SYMBOL_EXPORT\~ __attribute__((visibility("default")))}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_SYMBOL_IMPORT\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_SYMBOL_IMPORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_SYMBOL_IMPORT}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_TEST_CASE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_TEST_CASE( decorators)\~     {\b DOCTEST_CREATE_AND_REGISTER_FUNCTION}({\b DOCTEST_ANONYMOUS}(DOCTEST_ANON_FUNC_), decorators)}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_TEST_CASE_CLASS\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_TEST_CASE_CLASS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_TEST_CASE_CLASS(  {\i ...})\~     TEST_CASES_CAN_BE_REGISTERED_IN_CLASSES_ONLY_IN_CPP17_MODE_OR_WITH_VS_2017_OR_NEWER}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_TEST_CASE_FIXTURE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_TEST_CASE_FIXTURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_TEST_CASE_FIXTURE( c,  decorators)}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     DOCTEST_IMPLEMENT_FIXTURE(DOCTEST_ANONYMOUS(DOCTEST_ANON_CLASS_), c,                           \\\par
                              DOCTEST_ANONYMOUS(DOCTEST_ANON_FUNC_), decorators)\par
}
}
{\xe \v DOCTEST_TEST_CASE_TEMPLATE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_TEST_CASE_TEMPLATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_TEST_CASE_TEMPLATE( dec,  T,   {\i ...})\~     {\b DOCTEST_TEST_CASE_TEMPLATE_IMPL}(dec, T, {\b DOCTEST_ANONYMOUS}(DOCTEST_ANON_TMP_), __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_TEST_CASE_TEMPLATE_APPLY\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_TEST_CASE_TEMPLATE_APPLY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_TEST_CASE_TEMPLATE_APPLY( id,   {\i ...})}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE_IMPL({\cf18 id}, DOCTEST_ANONYMOUS(DOCTEST_ANON_TMP_), __VA_ARGS__) \\\par
    static_assert({\cf17 true}, {\cf22 ""})\par
}
}
{\xe \v DOCTEST_TEST_CASE_TEMPLATE_DEFINE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_TEST_CASE_TEMPLATE_DEFINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_TEST_CASE_TEMPLATE_DEFINE( dec,  T,  id)}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     DOCTEST_TEST_CASE_TEMPLATE_DEFINE_IMPL(dec, T, DOCTEST_CAT({\cf18 id}, ITERATOR),                      \\\par
                                           DOCTEST_ANONYMOUS(DOCTEST_ANON_TMP_))\par
}
}
{\xe \v DOCTEST_TEST_CASE_TEMPLATE_DEFINE_IMPL\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_TEST_CASE_TEMPLATE_DEFINE_IMPL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_TEST_CASE_TEMPLATE_DEFINE_IMPL( dec,  T,  iter,  func)}}
\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf17 template} <{\cf17 typename} T>                                                                          \\\par
    {\cf17 static} {\cf18 void} func();                                                                            \\\par
    {\cf17 namespace }\{                                                                                    \\\par
        {\cf17 template} <{\cf17 typename} Tuple>                                                                  \\\par
        {\cf17 struct }iter;                                                                               \\\par
        {\cf17 template} <{\cf17 typename} Type, {\cf17 typename}... Rest>                                                 \\\par
        {\cf17 struct }iter<std::tuple<Type, Rest...>>                                                     \\\par
        \{                                                                                          \\\par
            iter({\cf17 const} {\cf18 char}* file, {\cf18 unsigned} line, {\cf18 int} index) \{                                     \\\par
                doctest::detail::regTest(doctest::detail::TestCase(func<Type>, file, line,         \\\par
                                            doctest_detail_test_suite_ns::getCurrentTestSuite(),   \\\par
                                            doctest::detail::type_to_string<Type>(),               \\\par
                                            {\cf18 int}(line) * 1000 + index)                              \\\par
                                         * dec);                                                   \\\par
                iter<std::tuple<Rest...>>(file, line, index + 1);                                  \\\par
            \}                                                                                      \\\par
        \};                                                                                         \\\par
        {\cf17 template} <>                                                                                \\\par
        {\cf17 struct }iter<std::tuple<>>                                                                  \\\par
        \{                                                                                          \\\par
            iter({\cf17 const} {\cf18 char}*, {\cf18 unsigned}, {\cf18 int}) \{\}                                                    \\\par
        \};                                                                                         \\\par
    \}                                                                                              \\\par
    {\cf17 template} <{\cf17 typename} T>                                                                          \\\par
    {\cf17 static} {\cf18 void} func()\par
}
}
{\xe \v DOCTEST_TEST_CASE_TEMPLATE_IMPL\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_TEST_CASE_TEMPLATE_IMPL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_TEST_CASE_TEMPLATE_IMPL( dec,  T,  anon,   {\i ...})}}
\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     DOCTEST_TEST_CASE_TEMPLATE_DEFINE_IMPL(dec, T, DOCTEST_CAT(anon, ITERATOR), anon);             \\\par
    DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE_IMPL(anon, anon, std::tuple<__VA_ARGS__>)               \\\par
    {\cf17 template} <{\cf17 typename} T>                                                                          \\\par
    {\cf17 static} {\cf18 void} anon()\par
}
}
{\xe \v DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE( id,   {\i ...})\~ {\b DOCTEST_TEST_CASE_TEMPLATE_INVOKE}(id,__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE_IMPL\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE_IMPL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE_IMPL( id,  anon,   {\i ...})}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     DOCTEST_GLOBAL_NO_WARNINGS(DOCTEST_CAT(anon, DUMMY),                                           \\\par
        doctest::detail::instantiationHelper(                                                      \\\par
            DOCTEST_CAT({\cf18 id}, ITERATOR)<__VA_ARGS__>(__FILE__, __LINE__, 0)))\par
}
}
{\xe \v DOCTEST_TEST_CASE_TEMPLATE_INVOKE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_TEST_CASE_TEMPLATE_INVOKE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_TEST_CASE_TEMPLATE_INVOKE( id,   {\i ...})}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE_IMPL({\cf18 id}, DOCTEST_ANONYMOUS(DOCTEST_ANON_TMP_), std::tuple<__VA_ARGS__>) \\\par
    static_assert({\cf17 true}, {\cf22 ""})\par
}
}
{\xe \v DOCTEST_TEST_SUITE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_TEST_SUITE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_TEST_SUITE( decorators)\~     {\b DOCTEST_TEST_SUITE_IMPL}(decorators, {\b DOCTEST_ANONYMOUS}(DOCTEST_ANON_SUITE_))}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_TEST_SUITE_BEGIN\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_TEST_SUITE_BEGIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_TEST_SUITE_BEGIN( decorators)}}
\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     DOCTEST_GLOBAL_NO_WARNINGS(DOCTEST_ANONYMOUS(DOCTEST_ANON_VAR_),                               \\\par
            doctest::detail::setTestSuite(doctest::detail::TestSuite() * decorators))              \\\par
    static_assert({\cf17 true}, {\cf22 ""})\par
}
}
{\xe \v DOCTEST_TEST_SUITE_END\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_TEST_SUITE_END}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DOCTEST_TEST_SUITE_END}}
\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     DOCTEST_GLOBAL_NO_WARNINGS(DOCTEST_ANONYMOUS(DOCTEST_ANON_VAR_),                               \\\par
            doctest::detail::setTestSuite(doctest::detail::TestSuite() * {\cf22 ""}))                      \\\par
    {\cf17 typedef} {\cf18 int} DOCTEST_ANONYMOUS(DOCTEST_ANON_FOR_SEMICOLON_)\par
}
}
{\xe \v DOCTEST_TEST_SUITE_IMPL\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_TEST_SUITE_IMPL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_TEST_SUITE_IMPL( decorators,  ns_name)}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf17 namespace }ns_name \{ {\cf17 namespace }doctest_detail_test_suite_ns \{                                   \\\par
            {\cf17 static} DOCTEST_NOINLINE doctest::detail::TestSuite& getCurrentTestSuite() \{            \\\par
                DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH(4640)                                      \\\par
                DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH({\cf22 "-Wexit-time-destructors"})                \\\par
                DOCTEST_GCC_SUPPRESS_WARNING_WITH_PUSH({\cf22 "-Wmissing-field-initializers"})             \\\par
                {\cf17 static} doctest::detail::TestSuite data\{\};                                          \\\par
                {\cf17 static} {\cf18 bool}                       inited = {\cf17 false};                                  \\\par
                DOCTEST_MSVC_SUPPRESS_WARNING_POP                                                  \\\par
                DOCTEST_CLANG_SUPPRESS_WARNING_POP                                                 \\\par
                DOCTEST_GCC_SUPPRESS_WARNING_POP                                                   \\\par
                if(!inited) \{                                                                      \\\par
                    data* decorators;                                                              \\\par
                    inited = {\cf17 true};                                                                 \\\par
                \}                                                                                  \\\par
                {\cf19 return} data;                                                                       \\\par
            \}                                                                                      \\\par
        \}                                                                                          \\\par
    \}                                                                                              \\\par
    {\cf17 namespace }ns_name\par
}
}
{\xe \v DOCTEST_THEN\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_THEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_THEN( name)\~ {\b DOCTEST_SUBCASE}("    Then: " name)}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_TO_LVALUE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_TO_LVALUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_TO_LVALUE(  {\i ...})\~ __VA_ARGS__}}
\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_TOSTR\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_TOSTR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_TOSTR( x)\~ {\b DOCTEST_TOSTR_IMPL}(x)}}
\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_TOSTR_IMPL\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_TOSTR_IMPL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_TOSTR_IMPL( x)\~ #x}}
\par
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_TYPE_TO_STRING\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_TYPE_TO_STRING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_TYPE_TO_STRING(  {\i ...})}}
\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf17 namespace }doctest \{ {\cf17 namespace }detail \{                                                         \\\par
            DOCTEST_TYPE_TO_STRING_IMPL(__VA_ARGS__)                                               \\\par
        \}                                                                                          \\\par
    \}                                                                                              \\\par
    static_assert({\cf17 true}, {\cf22 ""})\par
}
}
{\xe \v DOCTEST_TYPE_TO_STRING_IMPL\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_TYPE_TO_STRING_IMPL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_TYPE_TO_STRING_IMPL(  {\i ...})}}
\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf17 template} <>                                                                                    \\\par
    {\cf17 inline} {\cf17 const} {\cf18 char}* type_to_string<__VA_ARGS__>() \{                                             \\\par
        {\cf19 return} {\cf22 "<"} #__VA_ARGS__ {\cf22 ">"};                                                               \\\par
    \}\par
}
}
{\xe \v DOCTEST_UNARY_ASSERT\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_UNARY_ASSERT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_UNARY_ASSERT( assert_type,   {\i ...})}}
\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     [&] \{                                                                                          \\\par
        doctest::detail::ResultBuilder DOCTEST_RB(doctest::assertType::assert_type, __FILE__,      \\\par
                                                   __LINE__, #__VA_ARGS__);                        \\\par
        DOCTEST_WRAP_IN_TRY(DOCTEST_RB.unary_assert(__VA_ARGS__))                                  \\\par
        DOCTEST_ASSERT_LOG_REACT_RETURN(DOCTEST_RB);                                               \\\par
    \}()\par
}
}
{\xe \v DOCTEST_UNUSED\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_UNUSED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_UNUSED\~ __attribute__((unused))}}
\par
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_VERSION\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_VERSION\~     ({\b DOCTEST_VERSION_MAJOR} * 10000 + {\b DOCTEST_VERSION_MINOR} * 100 + {\b DOCTEST_VERSION_PATCH})}}
\par
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_VERSION_MAJOR\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_VERSION_MAJOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_VERSION_MAJOR\~ 2}}
\par
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_VERSION_MINOR\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_VERSION_MINOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_VERSION_MINOR\~ 4}}
\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_VERSION_PATCH\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_VERSION_PATCH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_VERSION_PATCH\~ 8}}
\par
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_VERSION_STR\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_VERSION_STR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_VERSION_STR}}
\par
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     DOCTEST_TOSTR(DOCTEST_VERSION_MAJOR) {\cf22 "."}                                                       \\\par
    DOCTEST_TOSTR(DOCTEST_VERSION_MINOR) {\cf22 "."}                                                       \\\par
    DOCTEST_TOSTR(DOCTEST_VERSION_PATCH)\par
}
}
{\xe \v DOCTEST_WARN\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_WARN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_WARN(  {\i ...})\~ {\b DOCTEST_ASSERT_IMPLEMENT_1}(DT_WARN, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_WARN_EQ\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_WARN_EQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_WARN_EQ(  {\i ...})\~ {\b DOCTEST_BINARY_ASSERT}(DT_WARN_EQ, eq, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_WARN_FALSE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_WARN_FALSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_WARN_FALSE(  {\i ...})\~ {\b DOCTEST_ASSERT_IMPLEMENT_1}(DT_WARN_FALSE, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_WARN_FALSE_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_WARN_FALSE_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_WARN_FALSE_MESSAGE( cond,   {\i ...})\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_ASSERT_IMPLEMENT_2}(DT_WARN_FALSE, cond); \}()}}
\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_WARN_GE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_WARN_GE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_WARN_GE(  {\i ...})\~ {\b DOCTEST_BINARY_ASSERT}(DT_WARN_GE, ge, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_WARN_GT\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_WARN_GT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_WARN_GT(  {\i ...})\~ {\b DOCTEST_BINARY_ASSERT}(DT_WARN_GT, gt, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_WARN_LE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_WARN_LE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_WARN_LE(  {\i ...})\~ {\b DOCTEST_BINARY_ASSERT}(DT_WARN_LE, le, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_WARN_LT\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_WARN_LT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_WARN_LT(  {\i ...})\~ {\b DOCTEST_BINARY_ASSERT}(DT_WARN_LT, lt, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_WARN_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_WARN_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_WARN_MESSAGE( cond,   {\i ...})\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_ASSERT_IMPLEMENT_2}(DT_WARN, cond); \}()}}
\par
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_WARN_NE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_WARN_NE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_WARN_NE(  {\i ...})\~ {\b DOCTEST_BINARY_ASSERT}(DT_WARN_NE, ne, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_WARN_NOTHROW\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_WARN_NOTHROW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_WARN_NOTHROW(  {\i ...})\~ {\b DOCTEST_ASSERT_NOTHROW}(DT_WARN_NOTHROW, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_WARN_NOTHROW_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_WARN_NOTHROW_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_WARN_NOTHROW_MESSAGE( expr,   {\i ...})\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_WARN_NOTHROW}(expr); \}()}}
\par
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_WARN_THROWS\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_WARN_THROWS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_WARN_THROWS(  {\i ...})\~ {\b DOCTEST_ASSERT_THROWS_WITH}((__VA_ARGS__), #__VA_ARGS__, DT_WARN_THROWS, "")}}
\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_WARN_THROWS_AS\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_WARN_THROWS_AS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_WARN_THROWS_AS( expr,   {\i ...})\~ {\b DOCTEST_ASSERT_THROWS_AS}(expr, DT_WARN_THROWS_AS, "", __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_WARN_THROWS_AS_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_WARN_THROWS_AS_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_WARN_THROWS_AS_MESSAGE( expr,  ex,   {\i ...})\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_WARN_THROWS_AS}(expr, ex); \}()}}
\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_WARN_THROWS_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_WARN_THROWS_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_WARN_THROWS_MESSAGE( expr,   {\i ...})\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_WARN_THROWS}(expr); \}()}}
\par
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_WARN_THROWS_WITH\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_WARN_THROWS_WITH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_WARN_THROWS_WITH( expr,   {\i ...})\~ {\b DOCTEST_ASSERT_THROWS_WITH}(expr, #expr, DT_WARN_THROWS_WITH, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_WARN_THROWS_WITH_AS\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_WARN_THROWS_WITH_AS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_WARN_THROWS_WITH_AS( expr,  message,   {\i ...})\~ {\b DOCTEST_ASSERT_THROWS_AS}(expr, DT_WARN_THROWS_WITH_AS, message, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_WARN_THROWS_WITH_AS_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_WARN_THROWS_WITH_AS_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_WARN_THROWS_WITH_AS_MESSAGE( expr,  with,  ex,   {\i ...})\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_WARN_THROWS_WITH_AS}(expr, with, ex); \}()}}
\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_WARN_THROWS_WITH_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_WARN_THROWS_WITH_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_WARN_THROWS_WITH_MESSAGE( expr,  with,   {\i ...})\~ [&] \{{\b DOCTEST_INFO}(__VA_ARGS__); {\b DOCTEST_WARN_THROWS_WITH}(expr, with); \}()}}
\par
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_WARN_UNARY\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_WARN_UNARY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_WARN_UNARY(  {\i ...})\~ {\b DOCTEST_UNARY_ASSERT}(DT_WARN_UNARY, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_WARN_UNARY_FALSE\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_WARN_UNARY_FALSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_WARN_UNARY_FALSE(  {\i ...})\~ {\b DOCTEST_UNARY_ASSERT}(DT_WARN_UNARY_FALSE, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_WHEN\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_WHEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_WHEN( name)\~ {\b DOCTEST_SUBCASE}("    When: " name)}}
\par
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOCTEST_WRAP_IN_TRY\:doctest.hpp}
{\xe \v doctest.hpp\:DOCTEST_WRAP_IN_TRY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_WRAP_IN_TRY( x)\~ x;}}
\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FAIL\:doctest.hpp}
{\xe \v doctest.hpp\:FAIL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAIL(  {\i ...})\~ {\b DOCTEST_FAIL}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FAIL_CHECK\:doctest.hpp}
{\xe \v doctest.hpp\:FAIL_CHECK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAIL_CHECK(  {\i ...})\~ {\b DOCTEST_FAIL_CHECK}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FAST_CHECK_EQ\:doctest.hpp}
{\xe \v doctest.hpp\:FAST_CHECK_EQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAST_CHECK_EQ(  {\i ...})\~ {\b DOCTEST_FAST_CHECK_EQ}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FAST_CHECK_GE\:doctest.hpp}
{\xe \v doctest.hpp\:FAST_CHECK_GE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAST_CHECK_GE(  {\i ...})\~ {\b DOCTEST_FAST_CHECK_GE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FAST_CHECK_GT\:doctest.hpp}
{\xe \v doctest.hpp\:FAST_CHECK_GT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAST_CHECK_GT(  {\i ...})\~ {\b DOCTEST_FAST_CHECK_GT}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FAST_CHECK_LE\:doctest.hpp}
{\xe \v doctest.hpp\:FAST_CHECK_LE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAST_CHECK_LE(  {\i ...})\~ {\b DOCTEST_FAST_CHECK_LE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FAST_CHECK_LT\:doctest.hpp}
{\xe \v doctest.hpp\:FAST_CHECK_LT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAST_CHECK_LT(  {\i ...})\~ {\b DOCTEST_FAST_CHECK_LT}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FAST_CHECK_NE\:doctest.hpp}
{\xe \v doctest.hpp\:FAST_CHECK_NE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAST_CHECK_NE(  {\i ...})\~ {\b DOCTEST_FAST_CHECK_NE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FAST_CHECK_UNARY\:doctest.hpp}
{\xe \v doctest.hpp\:FAST_CHECK_UNARY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAST_CHECK_UNARY(  {\i ...})\~ {\b DOCTEST_FAST_CHECK_UNARY}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FAST_CHECK_UNARY_FALSE\:doctest.hpp}
{\xe \v doctest.hpp\:FAST_CHECK_UNARY_FALSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAST_CHECK_UNARY_FALSE(  {\i ...})\~ {\b DOCTEST_FAST_CHECK_UNARY_FALSE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FAST_REQUIRE_EQ\:doctest.hpp}
{\xe \v doctest.hpp\:FAST_REQUIRE_EQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAST_REQUIRE_EQ(  {\i ...})\~ {\b DOCTEST_FAST_REQUIRE_EQ}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FAST_REQUIRE_GE\:doctest.hpp}
{\xe \v doctest.hpp\:FAST_REQUIRE_GE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAST_REQUIRE_GE(  {\i ...})\~ {\b DOCTEST_FAST_REQUIRE_GE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FAST_REQUIRE_GT\:doctest.hpp}
{\xe \v doctest.hpp\:FAST_REQUIRE_GT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAST_REQUIRE_GT(  {\i ...})\~ {\b DOCTEST_FAST_REQUIRE_GT}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FAST_REQUIRE_LE\:doctest.hpp}
{\xe \v doctest.hpp\:FAST_REQUIRE_LE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAST_REQUIRE_LE(  {\i ...})\~ {\b DOCTEST_FAST_REQUIRE_LE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FAST_REQUIRE_LT\:doctest.hpp}
{\xe \v doctest.hpp\:FAST_REQUIRE_LT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAST_REQUIRE_LT(  {\i ...})\~ {\b DOCTEST_FAST_REQUIRE_LT}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FAST_REQUIRE_NE\:doctest.hpp}
{\xe \v doctest.hpp\:FAST_REQUIRE_NE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAST_REQUIRE_NE(  {\i ...})\~ {\b DOCTEST_FAST_REQUIRE_NE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FAST_REQUIRE_UNARY\:doctest.hpp}
{\xe \v doctest.hpp\:FAST_REQUIRE_UNARY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAST_REQUIRE_UNARY(  {\i ...})\~ {\b DOCTEST_FAST_REQUIRE_UNARY}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FAST_REQUIRE_UNARY_FALSE\:doctest.hpp}
{\xe \v doctest.hpp\:FAST_REQUIRE_UNARY_FALSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAST_REQUIRE_UNARY_FALSE(  {\i ...})\~ {\b DOCTEST_FAST_REQUIRE_UNARY_FALSE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FAST_WARN_EQ\:doctest.hpp}
{\xe \v doctest.hpp\:FAST_WARN_EQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAST_WARN_EQ(  {\i ...})\~ {\b DOCTEST_FAST_WARN_EQ}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FAST_WARN_GE\:doctest.hpp}
{\xe \v doctest.hpp\:FAST_WARN_GE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAST_WARN_GE(  {\i ...})\~ {\b DOCTEST_FAST_WARN_GE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FAST_WARN_GT\:doctest.hpp}
{\xe \v doctest.hpp\:FAST_WARN_GT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAST_WARN_GT(  {\i ...})\~ {\b DOCTEST_FAST_WARN_GT}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FAST_WARN_LE\:doctest.hpp}
{\xe \v doctest.hpp\:FAST_WARN_LE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAST_WARN_LE(  {\i ...})\~ {\b DOCTEST_FAST_WARN_LE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FAST_WARN_LT\:doctest.hpp}
{\xe \v doctest.hpp\:FAST_WARN_LT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAST_WARN_LT(  {\i ...})\~ {\b DOCTEST_FAST_WARN_LT}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FAST_WARN_NE\:doctest.hpp}
{\xe \v doctest.hpp\:FAST_WARN_NE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAST_WARN_NE(  {\i ...})\~ {\b DOCTEST_FAST_WARN_NE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FAST_WARN_UNARY\:doctest.hpp}
{\xe \v doctest.hpp\:FAST_WARN_UNARY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAST_WARN_UNARY(  {\i ...})\~ {\b DOCTEST_FAST_WARN_UNARY}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FAST_WARN_UNARY_FALSE\:doctest.hpp}
{\xe \v doctest.hpp\:FAST_WARN_UNARY_FALSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAST_WARN_UNARY_FALSE(  {\i ...})\~ {\b DOCTEST_FAST_WARN_UNARY_FALSE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GIVEN\:doctest.hpp}
{\xe \v doctest.hpp\:GIVEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GIVEN( name)\~ {\b DOCTEST_GIVEN}(name)}}
\par
{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v INFO\:doctest.hpp}
{\xe \v doctest.hpp\:INFO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INFO(  {\i ...})\~ {\b DOCTEST_INFO}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MESSAGE(  {\i ...})\~ {\b DOCTEST_MESSAGE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v REGISTER_EXCEPTION_TRANSLATOR\:doctest.hpp}
{\xe \v doctest.hpp\:REGISTER_EXCEPTION_TRANSLATOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REGISTER_EXCEPTION_TRANSLATOR( signature)\~ {\b DOCTEST_REGISTER_EXCEPTION_TRANSLATOR}(signature)}}
\par
{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v REGISTER_LISTENER\:doctest.hpp}
{\xe \v doctest.hpp\:REGISTER_LISTENER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REGISTER_LISTENER( name,  priority,  reporter)\~ {\b DOCTEST_REGISTER_LISTENER}(name, priority, reporter)}}
\par
{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v REGISTER_REPORTER\:doctest.hpp}
{\xe \v doctest.hpp\:REGISTER_REPORTER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REGISTER_REPORTER( name,  priority,  reporter)\~ {\b DOCTEST_REGISTER_REPORTER}(name, priority, reporter)}}
\par
{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v REQUIRE\:doctest.hpp}
{\xe \v doctest.hpp\:REQUIRE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REQUIRE(  {\i ...})\~ {\b DOCTEST_REQUIRE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v REQUIRE_EQ\:doctest.hpp}
{\xe \v doctest.hpp\:REQUIRE_EQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REQUIRE_EQ(  {\i ...})\~ {\b DOCTEST_REQUIRE_EQ}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v REQUIRE_FALSE\:doctest.hpp}
{\xe \v doctest.hpp\:REQUIRE_FALSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REQUIRE_FALSE(  {\i ...})\~ {\b DOCTEST_REQUIRE_FALSE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v REQUIRE_FALSE_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:REQUIRE_FALSE_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REQUIRE_FALSE_MESSAGE( cond,   {\i ...})\~ {\b DOCTEST_REQUIRE_FALSE_MESSAGE}(cond, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v REQUIRE_GE\:doctest.hpp}
{\xe \v doctest.hpp\:REQUIRE_GE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REQUIRE_GE(  {\i ...})\~ {\b DOCTEST_REQUIRE_GE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v REQUIRE_GT\:doctest.hpp}
{\xe \v doctest.hpp\:REQUIRE_GT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REQUIRE_GT(  {\i ...})\~ {\b DOCTEST_REQUIRE_GT}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v REQUIRE_LE\:doctest.hpp}
{\xe \v doctest.hpp\:REQUIRE_LE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REQUIRE_LE(  {\i ...})\~ {\b DOCTEST_REQUIRE_LE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v REQUIRE_LT\:doctest.hpp}
{\xe \v doctest.hpp\:REQUIRE_LT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REQUIRE_LT(  {\i ...})\~ {\b DOCTEST_REQUIRE_LT}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v REQUIRE_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:REQUIRE_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REQUIRE_MESSAGE( cond,   {\i ...})\~ {\b DOCTEST_REQUIRE_MESSAGE}(cond, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v REQUIRE_NE\:doctest.hpp}
{\xe \v doctest.hpp\:REQUIRE_NE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REQUIRE_NE(  {\i ...})\~ {\b DOCTEST_REQUIRE_NE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v REQUIRE_NOTHROW\:doctest.hpp}
{\xe \v doctest.hpp\:REQUIRE_NOTHROW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REQUIRE_NOTHROW(  {\i ...})\~ {\b DOCTEST_REQUIRE_NOTHROW}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v REQUIRE_NOTHROW_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:REQUIRE_NOTHROW_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REQUIRE_NOTHROW_MESSAGE( expr,   {\i ...})\~ {\b DOCTEST_REQUIRE_NOTHROW_MESSAGE}(expr, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v REQUIRE_THROWS\:doctest.hpp}
{\xe \v doctest.hpp\:REQUIRE_THROWS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REQUIRE_THROWS(  {\i ...})\~ {\b DOCTEST_REQUIRE_THROWS}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v REQUIRE_THROWS_AS\:doctest.hpp}
{\xe \v doctest.hpp\:REQUIRE_THROWS_AS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REQUIRE_THROWS_AS( expr,   {\i ...})\~ {\b DOCTEST_REQUIRE_THROWS_AS}(expr, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v REQUIRE_THROWS_AS_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:REQUIRE_THROWS_AS_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REQUIRE_THROWS_AS_MESSAGE( expr,  ex,   {\i ...})\~ {\b DOCTEST_REQUIRE_THROWS_AS_MESSAGE}(expr, ex, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v REQUIRE_THROWS_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:REQUIRE_THROWS_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REQUIRE_THROWS_MESSAGE( expr,   {\i ...})\~ {\b DOCTEST_REQUIRE_THROWS_MESSAGE}(expr, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v REQUIRE_THROWS_WITH\:doctest.hpp}
{\xe \v doctest.hpp\:REQUIRE_THROWS_WITH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REQUIRE_THROWS_WITH( expr,   {\i ...})\~ {\b DOCTEST_REQUIRE_THROWS_WITH}(expr, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v REQUIRE_THROWS_WITH_AS\:doctest.hpp}
{\xe \v doctest.hpp\:REQUIRE_THROWS_WITH_AS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REQUIRE_THROWS_WITH_AS( expr,  with,   {\i ...})\~ {\b DOCTEST_REQUIRE_THROWS_WITH_AS}(expr, with, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v REQUIRE_THROWS_WITH_AS_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:REQUIRE_THROWS_WITH_AS_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REQUIRE_THROWS_WITH_AS_MESSAGE( expr,  with,  ex,   {\i ...})\~ {\b DOCTEST_REQUIRE_THROWS_WITH_AS_MESSAGE}(expr, with, ex, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v REQUIRE_THROWS_WITH_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:REQUIRE_THROWS_WITH_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REQUIRE_THROWS_WITH_MESSAGE( expr,  with,   {\i ...})\~ {\b DOCTEST_REQUIRE_THROWS_WITH_MESSAGE}(expr, with, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v REQUIRE_UNARY\:doctest.hpp}
{\xe \v doctest.hpp\:REQUIRE_UNARY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REQUIRE_UNARY(  {\i ...})\~ {\b DOCTEST_REQUIRE_UNARY}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v REQUIRE_UNARY_FALSE\:doctest.hpp}
{\xe \v doctest.hpp\:REQUIRE_UNARY_FALSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REQUIRE_UNARY_FALSE(  {\i ...})\~ {\b DOCTEST_REQUIRE_UNARY_FALSE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SCENARIO\:doctest.hpp}
{\xe \v doctest.hpp\:SCENARIO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SCENARIO( name)\~ {\b DOCTEST_SCENARIO}(name)}}
\par
{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SCENARIO_CLASS\:doctest.hpp}
{\xe \v doctest.hpp\:SCENARIO_CLASS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SCENARIO_CLASS( name)\~ {\b DOCTEST_SCENARIO_CLASS}(name)}}
\par
{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SCENARIO_TEMPLATE\:doctest.hpp}
{\xe \v doctest.hpp\:SCENARIO_TEMPLATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SCENARIO_TEMPLATE( name,  T,   {\i ...})\~ {\b DOCTEST_SCENARIO_TEMPLATE}(name, T, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SCENARIO_TEMPLATE_DEFINE\:doctest.hpp}
{\xe \v doctest.hpp\:SCENARIO_TEMPLATE_DEFINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SCENARIO_TEMPLATE_DEFINE( name,  T,  id)\~ {\b DOCTEST_SCENARIO_TEMPLATE_DEFINE}(name, T, id)}}
\par
{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SFINAE_OP\:doctest.hpp}
{\xe \v doctest.hpp\:SFINAE_OP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SFINAE_OP( ret,  op)\~ decltype((void)({\b doctest::detail::declval}<L>() op {\b doctest::detail::declval}<R>()),ret\{\})}}
\par
{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SUBCASE\:doctest.hpp}
{\xe \v doctest.hpp\:SUBCASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SUBCASE( name)\~ {\b DOCTEST_SUBCASE}(name)}}
\par
{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST_CASE\:doctest.hpp}
{\xe \v doctest.hpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TEST_CASE( name)\~ {\b DOCTEST_TEST_CASE}(name)}}
\par
{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST_CASE_CLASS\:doctest.hpp}
{\xe \v doctest.hpp\:TEST_CASE_CLASS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TEST_CASE_CLASS( name)\~ {\b DOCTEST_TEST_CASE_CLASS}(name)}}
\par
{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST_CASE_FIXTURE\:doctest.hpp}
{\xe \v doctest.hpp\:TEST_CASE_FIXTURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TEST_CASE_FIXTURE( x,  name)\~ {\b DOCTEST_TEST_CASE_FIXTURE}(x, name)}}
\par
{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST_CASE_TEMPLATE\:doctest.hpp}
{\xe \v doctest.hpp\:TEST_CASE_TEMPLATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TEST_CASE_TEMPLATE( name,  T,   {\i ...})\~ {\b DOCTEST_TEST_CASE_TEMPLATE}(name, T, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST_CASE_TEMPLATE_APPLY\:doctest.hpp}
{\xe \v doctest.hpp\:TEST_CASE_TEMPLATE_APPLY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TEST_CASE_TEMPLATE_APPLY( id,   {\i ...})\~ {\b DOCTEST_TEST_CASE_TEMPLATE_APPLY}(id, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST_CASE_TEMPLATE_DEFINE\:doctest.hpp}
{\xe \v doctest.hpp\:TEST_CASE_TEMPLATE_DEFINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TEST_CASE_TEMPLATE_DEFINE( name,  T,  id)\~ {\b DOCTEST_TEST_CASE_TEMPLATE_DEFINE}(name, T, id)}}
\par
{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST_CASE_TEMPLATE_INSTANTIATE\:doctest.hpp}
{\xe \v doctest.hpp\:TEST_CASE_TEMPLATE_INSTANTIATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TEST_CASE_TEMPLATE_INSTANTIATE( id,   {\i ...})\~ {\b DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE}(id, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST_CASE_TEMPLATE_INVOKE\:doctest.hpp}
{\xe \v doctest.hpp\:TEST_CASE_TEMPLATE_INVOKE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TEST_CASE_TEMPLATE_INVOKE( id,   {\i ...})\~ {\b DOCTEST_TEST_CASE_TEMPLATE_INVOKE}(id, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST_SUITE\:doctest.hpp}
{\xe \v doctest.hpp\:TEST_SUITE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TEST_SUITE( decorators)\~ {\b DOCTEST_TEST_SUITE}(decorators)}}
\par
{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST_SUITE_BEGIN\:doctest.hpp}
{\xe \v doctest.hpp\:TEST_SUITE_BEGIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TEST_SUITE_BEGIN( name)\~ {\b DOCTEST_TEST_SUITE_BEGIN}(name)}}
\par
{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST_SUITE_END\:doctest.hpp}
{\xe \v doctest.hpp\:TEST_SUITE_END}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TEST_SUITE_END\~ {\b DOCTEST_TEST_SUITE_END}}}
\par
{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v THEN\:doctest.hpp}
{\xe \v doctest.hpp\:THEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define THEN( name)\~ {\b DOCTEST_THEN}(name)}}
\par
{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TO_LVALUE\:doctest.hpp}
{\xe \v doctest.hpp\:TO_LVALUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TO_LVALUE(  {\i ...})\~ {\b DOCTEST_TO_LVALUE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TYPE_TO_STRING\:doctest.hpp}
{\xe \v doctest.hpp\:TYPE_TO_STRING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TYPE_TO_STRING(  {\i ...})\~ {\b DOCTEST_TYPE_TO_STRING}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WARN\:doctest.hpp}
{\xe \v doctest.hpp\:WARN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WARN(  {\i ...})\~ {\b DOCTEST_WARN}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WARN_EQ\:doctest.hpp}
{\xe \v doctest.hpp\:WARN_EQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WARN_EQ(  {\i ...})\~ {\b DOCTEST_WARN_EQ}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WARN_FALSE\:doctest.hpp}
{\xe \v doctest.hpp\:WARN_FALSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WARN_FALSE(  {\i ...})\~ {\b DOCTEST_WARN_FALSE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WARN_FALSE_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:WARN_FALSE_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WARN_FALSE_MESSAGE( cond,   {\i ...})\~ {\b DOCTEST_WARN_FALSE_MESSAGE}(cond, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WARN_GE\:doctest.hpp}
{\xe \v doctest.hpp\:WARN_GE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WARN_GE(  {\i ...})\~ {\b DOCTEST_WARN_GE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WARN_GT\:doctest.hpp}
{\xe \v doctest.hpp\:WARN_GT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WARN_GT(  {\i ...})\~ {\b DOCTEST_WARN_GT}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WARN_LE\:doctest.hpp}
{\xe \v doctest.hpp\:WARN_LE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WARN_LE(  {\i ...})\~ {\b DOCTEST_WARN_LE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WARN_LT\:doctest.hpp}
{\xe \v doctest.hpp\:WARN_LT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WARN_LT(  {\i ...})\~ {\b DOCTEST_WARN_LT}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WARN_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:WARN_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WARN_MESSAGE( cond,   {\i ...})\~ {\b DOCTEST_WARN_MESSAGE}(cond, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WARN_NE\:doctest.hpp}
{\xe \v doctest.hpp\:WARN_NE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WARN_NE(  {\i ...})\~ {\b DOCTEST_WARN_NE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WARN_NOTHROW\:doctest.hpp}
{\xe \v doctest.hpp\:WARN_NOTHROW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WARN_NOTHROW(  {\i ...})\~ {\b DOCTEST_WARN_NOTHROW}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WARN_NOTHROW_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:WARN_NOTHROW_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WARN_NOTHROW_MESSAGE( expr,   {\i ...})\~ {\b DOCTEST_WARN_NOTHROW_MESSAGE}(expr, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WARN_THROWS\:doctest.hpp}
{\xe \v doctest.hpp\:WARN_THROWS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WARN_THROWS(  {\i ...})\~ {\b DOCTEST_WARN_THROWS}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WARN_THROWS_AS\:doctest.hpp}
{\xe \v doctest.hpp\:WARN_THROWS_AS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WARN_THROWS_AS( expr,   {\i ...})\~ {\b DOCTEST_WARN_THROWS_AS}(expr, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WARN_THROWS_AS_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:WARN_THROWS_AS_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WARN_THROWS_AS_MESSAGE( expr,  ex,   {\i ...})\~ {\b DOCTEST_WARN_THROWS_AS_MESSAGE}(expr, ex, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WARN_THROWS_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:WARN_THROWS_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WARN_THROWS_MESSAGE( expr,   {\i ...})\~ {\b DOCTEST_WARN_THROWS_MESSAGE}(expr, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WARN_THROWS_WITH\:doctest.hpp}
{\xe \v doctest.hpp\:WARN_THROWS_WITH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WARN_THROWS_WITH( expr,   {\i ...})\~ {\b DOCTEST_WARN_THROWS_WITH}(expr, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WARN_THROWS_WITH_AS\:doctest.hpp}
{\xe \v doctest.hpp\:WARN_THROWS_WITH_AS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WARN_THROWS_WITH_AS( expr,  with,   {\i ...})\~ {\b DOCTEST_WARN_THROWS_WITH_AS}(expr, with, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WARN_THROWS_WITH_AS_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:WARN_THROWS_WITH_AS_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WARN_THROWS_WITH_AS_MESSAGE( expr,  with,  ex,   {\i ...})\~ {\b DOCTEST_WARN_THROWS_WITH_AS_MESSAGE}(expr, with, ex, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WARN_THROWS_WITH_MESSAGE\:doctest.hpp}
{\xe \v doctest.hpp\:WARN_THROWS_WITH_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WARN_THROWS_WITH_MESSAGE( expr,  with,   {\i ...})\~ {\b DOCTEST_WARN_THROWS_WITH_MESSAGE}(expr, with, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WARN_UNARY\:doctest.hpp}
{\xe \v doctest.hpp\:WARN_UNARY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WARN_UNARY(  {\i ...})\~ {\b DOCTEST_WARN_UNARY}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WARN_UNARY_FALSE\:doctest.hpp}
{\xe \v doctest.hpp\:WARN_UNARY_FALSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WARN_UNARY_FALSE(  {\i ...})\~ {\b DOCTEST_WARN_UNARY_FALSE}(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WHEN\:doctest.hpp}
{\xe \v doctest.hpp\:WHEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WHEN( name)\~ {\b DOCTEST_WHEN}(name)}}
\par
{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
doctest.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/doctest.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/doctest.hpp}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 // ====================================================================== lgtm [cpp/missing-header-guard]}\par
2 {\cf20 // == DO NOT MODIFY THIS FILE BY HAND - IT IS AUTO GENERATED BY CMAKE! ==}\par
3 {\cf20 // ======================================================================}\par
4 {\cf20 //}\par
5 {\cf20 // doctest.h - the lightest feature-rich C++ single-header testing framework for unit tests and TDD}\par
6 {\cf20 //}\par
7 {\cf20 // Copyright (c) 2016-2021 Viktor Kirilov}\par
8 {\cf20 //}\par
9 {\cf20 // Distributed under the MIT Software License}\par
10 {\cf20 // See accompanying file LICENSE.txt or copy at}\par
11 {\cf20 // https://opensource.org/licenses/MIT}\par
12 {\cf20 //}\par
13 {\cf20 // The documentation can be found at the library's page:}\par
14 {\cf20 // https://github.com/doctest/doctest/blob/master/doc/markdown/readme.md}\par
15 {\cf20 //}\par
16 {\cf20 // =================================================================================================}\par
17 {\cf20 // =================================================================================================}\par
18 {\cf20 // =================================================================================================}\par
19 {\cf20 //}\par
20 {\cf20 // The library is heavily influenced by Catch - https://github.com/catchorg/Catch2}\par
21 {\cf20 // which uses the Boost Software License - Version 1.0}\par
22 {\cf20 // see here - https://github.com/catchorg/Catch2/blob/master/LICENSE.txt}\par
23 {\cf20 //}\par
24 {\cf20 // The concept of subcases (sections in Catch) and expression decomposition are from there.}\par
25 {\cf20 // Some parts of the code are taken directly:}\par
26 {\cf20 // - stringification - the detection of "ostream& operator<<(ostream&, const T&)" and StringMaker<>}\par
27 {\cf20 // - the Approx() helper class for floating point comparison}\par
28 {\cf20 // - colors in the console}\par
29 {\cf20 // - breaking into a debugger}\par
30 {\cf20 // - signal / SEH handling}\par
31 {\cf20 // - timer}\par
32 {\cf20 // - XmlWriter class - thanks to Phil Nash for allowing the direct reuse (AKA copy/paste)}\par
33 {\cf20 //}\par
34 {\cf20 // The expression decomposing templates are taken from lest - https://github.com/martinmoene/lest}\par
35 {\cf20 // which uses the Boost Software License - Version 1.0}\par
36 {\cf20 // see here - https://github.com/martinmoene/lest/blob/master/LICENSE.txt}\par
37 {\cf20 //}\par
38 {\cf20 // =================================================================================================}\par
39 {\cf20 // =================================================================================================}\par
40 {\cf20 // =================================================================================================}\par
41 \par
42 {\cf21 #ifndef DOCTEST_LIBRARY_INCLUDED}\par
43 {\cf21 #define DOCTEST_LIBRARY_INCLUDED}\par
44 \par
45 {\cf20 // =================================================================================================}\par
46 {\cf20 // == VERSION ======================================================================================}\par
47 {\cf20 // =================================================================================================}\par
48 \par
49 {\cf21 #define DOCTEST_VERSION_MAJOR 2}\par
50 {\cf21 #define DOCTEST_VERSION_MINOR 4}\par
51 {\cf21 #define DOCTEST_VERSION_PATCH 8}\par
52 \par
53 {\cf20 // util we need here}\par
54 {\cf21 #define DOCTEST_TOSTR_IMPL(x) #x}\par
55 {\cf21 #define DOCTEST_TOSTR(x) DOCTEST_TOSTR_IMPL(x)}\par
56 \par
57 {\cf21 #define DOCTEST_VERSION_STR                                                                        \\}\par
58 {\cf21     DOCTEST_TOSTR(DOCTEST_VERSION_MAJOR) "."}                                                       \\\par
59     DOCTEST_TOSTR(DOCTEST_VERSION_MINOR) "."                                                       \\\par
60     DOCTEST_TOSTR(DOCTEST_VERSION_PATCH)\par
61 \par
62 {\cf21 #define DOCTEST_VERSION                                                                            \\}\par
63 {\cf21     (DOCTEST_VERSION_MAJOR * 10000 + DOCTEST_VERSION_MINOR * 100 + DOCTEST_VERSION_PATCH)}\par
64 \par
65 {\cf20 // =================================================================================================}\par
66 {\cf20 // == COMPILER VERSION =============================================================================}\par
67 {\cf20 // =================================================================================================}\par
68 \par
69 {\cf20 // ideas for the version stuff are taken from here: https://github.com/cxxstuff/cxx_detect}\par
70 \par
71 {\cf21 #define DOCTEST_COMPILER(MAJOR, MINOR, PATCH) ((MAJOR)*10000000 + (MINOR)*100000 + (PATCH))}\par
72 \par
73 {\cf20 // GCC/Clang and GCC/MSVC are mutually exclusive, but Clang/MSVC are not because of clang-cl...}\par
74 {\cf21 #if defined(_MSC_VER) && defined(_MSC_FULL_VER)}\par
75 {\cf21 #if _MSC_VER == _MSC_FULL_VER / 10000}\par
76 {\cf21 #define DOCTEST_MSVC DOCTEST_COMPILER(_MSC_VER / 100, _MSC_VER % 100, _MSC_FULL_VER % 10000)}\par
77 {\cf21 #else }{\cf20 // MSVC}\par
78 {\cf21 #define DOCTEST_MSVC                                                                               \\}\par
79 {\cf21     DOCTEST_COMPILER(_MSC_VER / 100, (_MSC_FULL_VER / 100000) % 100, _MSC_FULL_VER % 100000)}\par
80 {\cf21 #endif }{\cf20 // MSVC}\par
81 {\cf21 #endif }{\cf20 // MSVC}\par
82 {\cf21 #if defined(__clang__) && defined(__clang_minor__)}\par
83 {\cf21 #define DOCTEST_CLANG DOCTEST_COMPILER(__clang_major__, __clang_minor__, __clang_patchlevel__)}\par
84 {\cf21 #elif defined(__GNUC__) && defined(__GNUC_MINOR__) && defined(__GNUC_PATCHLEVEL__) &&              \\}\par
85 {\cf21         !defined(__INTEL_COMPILER)}\par
86 {\cf21 #define DOCTEST_GCC DOCTEST_COMPILER(__GNUC__, __GNUC_MINOR__, __GNUC_PATCHLEVEL__)}\par
87 {\cf21 #endif }{\cf20 // GCC}\par
88 \par
89 {\cf21 #ifndef DOCTEST_MSVC}\par
90 {\cf21 #define DOCTEST_MSVC 0}\par
91 {\cf21 #endif }{\cf20 // DOCTEST_MSVC}\par
92 {\cf21 #ifndef DOCTEST_CLANG}\par
93 {\cf21 #define DOCTEST_CLANG 0}\par
94 {\cf21 #endif }{\cf20 // DOCTEST_CLANG}\par
95 {\cf21 #ifndef DOCTEST_GCC}\par
96 {\cf21 #define DOCTEST_GCC 0}\par
97 {\cf21 #endif }{\cf20 // DOCTEST_GCC}\par
98 \par
99 {\cf20 // =================================================================================================}\par
100 {\cf20 // == COMPILER WARNINGS HELPERS ====================================================================}\par
101 {\cf20 // =================================================================================================}\par
102 \par
103 {\cf21 #if DOCTEST_CLANG}\par
104 {\cf21 #define DOCTEST_PRAGMA_TO_STR(x) _Pragma(#x)}\par
105 {\cf21 #define DOCTEST_CLANG_SUPPRESS_WARNING_PUSH _Pragma("clang diagnostic push"})\par
106 {\cf21 #define DOCTEST_CLANG_SUPPRESS_WARNING(w) DOCTEST_PRAGMA_TO_STR(clang diagnostic ignored w)}\par
107 {\cf21 #define DOCTEST_CLANG_SUPPRESS_WARNING_POP _Pragma("clang diagnostic pop"})\par
108 {\cf21 #define DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH(w)                                                \\}\par
109 {\cf21     DOCTEST_CLANG_SUPPRESS_WARNING_PUSH DOCTEST_CLANG_SUPPRESS_WARNING(w)}\par
110 {\cf21 #else }{\cf20 // DOCTEST_CLANG}\par
111 {\cf21 #define DOCTEST_CLANG_SUPPRESS_WARNING_PUSH}\par
112 {\cf21 #define DOCTEST_CLANG_SUPPRESS_WARNING(w)}\par
113 {\cf21 #define DOCTEST_CLANG_SUPPRESS_WARNING_POP}\par
114 {\cf21 #define DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH(w)}\par
115 {\cf21 #endif }{\cf20 // DOCTEST_CLANG}\par
116 \par
117 {\cf21 #if DOCTEST_GCC}\par
118 {\cf21 #define DOCTEST_PRAGMA_TO_STR(x) _Pragma(#x)}\par
119 {\cf21 #define DOCTEST_GCC_SUPPRESS_WARNING_PUSH _Pragma("GCC diagnostic push"})\par
120 {\cf21 #define DOCTEST_GCC_SUPPRESS_WARNING(w) DOCTEST_PRAGMA_TO_STR(GCC diagnostic ignored w)}\par
121 {\cf21 #define DOCTEST_GCC_SUPPRESS_WARNING_POP _Pragma("GCC diagnostic pop"})\par
122 {\cf21 #define DOCTEST_GCC_SUPPRESS_WARNING_WITH_PUSH(w)                                                  \\}\par
123 {\cf21     DOCTEST_GCC_SUPPRESS_WARNING_PUSH DOCTEST_GCC_SUPPRESS_WARNING(w)}\par
124 {\cf21 #else }{\cf20 // DOCTEST_GCC}\par
125 {\cf21 #define DOCTEST_GCC_SUPPRESS_WARNING_PUSH}\par
126 {\cf21 #define DOCTEST_GCC_SUPPRESS_WARNING(w)}\par
127 {\cf21 #define DOCTEST_GCC_SUPPRESS_WARNING_POP}\par
128 {\cf21 #define DOCTEST_GCC_SUPPRESS_WARNING_WITH_PUSH(w)}\par
129 {\cf21 #endif }{\cf20 // DOCTEST_GCC}\par
130 \par
131 {\cf21 #if DOCTEST_MSVC}\par
132 {\cf21 #define DOCTEST_MSVC_SUPPRESS_WARNING_PUSH __pragma(warning(push))}\par
133 {\cf21 #define DOCTEST_MSVC_SUPPRESS_WARNING(w) __pragma(warning(disable : w))}\par
134 {\cf21 #define DOCTEST_MSVC_SUPPRESS_WARNING_POP __pragma(warning(pop))}\par
135 {\cf21 #define DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH(w)                                                 \\}\par
136 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING_PUSH DOCTEST_MSVC_SUPPRESS_WARNING(w)}\par
137 {\cf21 #else }{\cf20 // DOCTEST_MSVC}\par
138 {\cf21 #define DOCTEST_MSVC_SUPPRESS_WARNING_PUSH}\par
139 {\cf21 #define DOCTEST_MSVC_SUPPRESS_WARNING(w)}\par
140 {\cf21 #define DOCTEST_MSVC_SUPPRESS_WARNING_POP}\par
141 {\cf21 #define DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH(w)}\par
142 {\cf21 #endif }{\cf20 // DOCTEST_MSVC}\par
143 \par
144 {\cf20 // =================================================================================================}\par
145 {\cf20 // == COMPILER WARNINGS ============================================================================}\par
146 {\cf20 // =================================================================================================}\par
147 \par
148 {\cf20 // both the header and the implementation suppress all of these,}\par
149 {\cf20 // so it only makes sense to aggregrate them like so}\par
150 {\cf21 #define DOCTEST_SUPPRESS_COMMON_WARNINGS_PUSH                                                      \\}\par
151 {\cf21     DOCTEST_CLANG_SUPPRESS_WARNING_PUSH                                                            \\}\par
152 {\cf21     DOCTEST_CLANG_SUPPRESS_WARNING("-Wunknown-pragmas"})                                            \\\par
153     DOCTEST_CLANG_SUPPRESS_WARNING("-Wweak-vtables")                                               \\\par
154     DOCTEST_CLANG_SUPPRESS_WARNING("-Wpadded")                                                     \\\par
155     DOCTEST_CLANG_SUPPRESS_WARNING("-Wmissing-prototypes")                                         \\\par
156     DOCTEST_CLANG_SUPPRESS_WARNING("-Wunused-local-typedef")                                       \\\par
157     DOCTEST_CLANG_SUPPRESS_WARNING("-Wc++98-compat")                                               \\\par
158     DOCTEST_CLANG_SUPPRESS_WARNING("-Wc++98-compat-pedantic")                                      \\\par
159                                                                                                    \\\par
160     DOCTEST_GCC_SUPPRESS_WARNING_PUSH                                                              \\\par
161     DOCTEST_GCC_SUPPRESS_WARNING("-Wunknown-pragmas")                                              \\\par
162     DOCTEST_GCC_SUPPRESS_WARNING("-Wpragmas")                                                      \\\par
163     DOCTEST_GCC_SUPPRESS_WARNING("-Weffc++")                                                       \\\par
164     DOCTEST_GCC_SUPPRESS_WARNING("-Wstrict-overflow")                                              \\\par
165     DOCTEST_GCC_SUPPRESS_WARNING("-Wstrict-aliasing")                                              \\\par
166     DOCTEST_GCC_SUPPRESS_WARNING("-Wmissing-declarations")                                         \\\par
167     DOCTEST_GCC_SUPPRESS_WARNING("-Wunused-local-typedefs")                                        \\\par
168     DOCTEST_GCC_SUPPRESS_WARNING("-Wuseless-cast")                                                 \\\par
169     DOCTEST_GCC_SUPPRESS_WARNING("-Wnoexcept")                                                     \\\par
170                                                                                                    \\\par
171     DOCTEST_MSVC_SUPPRESS_WARNING_PUSH                                                             \\\par
172     {\cf20 /* these 4 also disabled globally via cmake: */}{\cf21                                                 \\}\par
173 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(4514) }{\cf20 /* unreferenced inline function has been removed */}{\cf21         \\}\par
174 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(4571) }{\cf20 /* SEH related */}{\cf21                                           \\}\par
175 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(4710) }{\cf20 /* function not inlined */}{\cf21                                  \\}\par
176 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(4711) }{\cf20 /* function selected for inline expansion*/}{\cf21                 \\}\par
177 {\cf21     }{\cf20 /* */}{\cf21                                                                                           \\}\par
178 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(4616) }{\cf20 /* invalid compiler warning */}{\cf21                              \\}\par
179 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(4619) }{\cf20 /* invalid compiler warning */}{\cf21                              \\}\par
180 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(4996) }{\cf20 /* The compiler encountered a deprecated declaration */}{\cf21     \\}\par
181 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(4706) }{\cf20 /* assignment within conditional expression */}{\cf21              \\}\par
182 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(4512) }{\cf20 /* 'class' : assignment operator could not be generated */}{\cf21  \\}\par
183 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(4127) }{\cf20 /* conditional expression is constant */}{\cf21                    \\}\par
184 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(4820) }{\cf20 /* padding */}{\cf21                                               \\}\par
185 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(4625) }{\cf20 /* copy constructor was implicitly deleted */}{\cf21               \\}\par
186 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(4626) }{\cf20 /* assignment operator was implicitly deleted */}{\cf21            \\}\par
187 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(5027) }{\cf20 /* move assignment operator implicitly deleted */}{\cf21           \\}\par
188 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(5026) }{\cf20 /* move constructor was implicitly deleted */}{\cf21               \\}\par
189 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(4640) }{\cf20 /* construction of local static object not thread-safe */}{\cf21   \\}\par
190 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(5045) }{\cf20 /* Spectre mitigation for memory load */}{\cf21                    \\}\par
191 {\cf21     }{\cf20 /* static analysis */}{\cf21                                                                           \\}\par
192 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(26439) }{\cf20 /* Function may not throw. Declare it 'noexcept' */}{\cf21        \\}\par
193 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(26495) }{\cf20 /* Always initialize a member variable */}{\cf21                  \\}\par
194 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(26451) }{\cf20 /* Arithmetic overflow ... */}{\cf21                              \\}\par
195 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(26444) }{\cf20 /* Avoid unnamed objects with custom ctor and dtor... */}{\cf21   \\}\par
196 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(26812) }{\cf20 /* Prefer 'enum class' over 'enum' */}{\cf21 }\par
197 \par
198 {\cf21 #define DOCTEST_SUPPRESS_COMMON_WARNINGS_POP                                                       \\}\par
199 {\cf21     DOCTEST_CLANG_SUPPRESS_WARNING_POP                                                             \\}\par
200 {\cf21     DOCTEST_GCC_SUPPRESS_WARNING_POP                                                               \\}\par
201 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING_POP}\par
202 \par
203 DOCTEST_SUPPRESS_COMMON_WARNINGS_PUSH\par
204 \par
205 DOCTEST_CLANG_SUPPRESS_WARNING_PUSH\par
206 DOCTEST_CLANG_SUPPRESS_WARNING({\cf22 "-Wnon-virtual-dtor"})\par
207 DOCTEST_CLANG_SUPPRESS_WARNING("-Wdeprecated")\par
208 \par
209 DOCTEST_GCC_SUPPRESS_WARNING_PUSH\par
210 DOCTEST_GCC_SUPPRESS_WARNING("-Wctor-dtor-privacy")\par
211 DOCTEST_GCC_SUPPRESS_WARNING("-Wnon-virtual-dtor")\par
212 DOCTEST_GCC_SUPPRESS_WARNING("-Wsign-promo")\par
213 \par
214 DOCTEST_MSVC_SUPPRESS_WARNING_PUSH\par
215 DOCTEST_MSVC_SUPPRESS_WARNING(4623) {\cf20 // default constructor was implicitly defined as deleted}\par
216 \par
217 {\cf21 #define DOCTEST_MAKE_STD_HEADERS_CLEAN_FROM_WARNINGS_ON_WALL_BEGIN                                 \\}\par
218 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING_PUSH                                                             \\}\par
219 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(4548) }{\cf20 /* before comma no effect; expected side - effect */}{\cf21        \\}\par
220 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(4265) }{\cf20 /* virtual functions, but destructor is not virtual */}{\cf21      \\}\par
221 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(4986) }{\cf20 /* exception specification does not match previous */}{\cf21       \\}\par
222 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(4350) }{\cf20 /* 'member1' called instead of 'member2' */}{\cf21                 \\}\par
223 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(4668) }{\cf20 /* not defined as a preprocessor macro */}{\cf21                   \\}\par
224 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(4365) }{\cf20 /* signed/unsigned mismatch */}{\cf21                              \\}\par
225 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(4774) }{\cf20 /* format string not a string literal */}{\cf21                    \\}\par
226 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(4820) }{\cf20 /* padding */}{\cf21                                               \\}\par
227 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(4625) }{\cf20 /* copy constructor was implicitly deleted */}{\cf21               \\}\par
228 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(4626) }{\cf20 /* assignment operator was implicitly deleted */}{\cf21            \\}\par
229 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(5027) }{\cf20 /* move assignment operator implicitly deleted */}{\cf21           \\}\par
230 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(5026) }{\cf20 /* move constructor was implicitly deleted */}{\cf21               \\}\par
231 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(4623) }{\cf20 /* default constructor was implicitly deleted */}{\cf21            \\}\par
232 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(5039) }{\cf20 /* pointer to pot. throwing function passed to extern C */}{\cf21  \\}\par
233 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(5045) }{\cf20 /* Spectre mitigation for memory load */}{\cf21                    \\}\par
234 {\cf21     DOCTEST_MSVC_SUPPRESS_WARNING(5105) }{\cf20 /* macro producing 'defined' has undefined behavior */}{\cf21 }\par
235 \par
236 {\cf21 #define DOCTEST_MAKE_STD_HEADERS_CLEAN_FROM_WARNINGS_ON_WALL_END DOCTEST_MSVC_SUPPRESS_WARNING_POP}\par
237 \par
238 {\cf20 // =================================================================================================}\par
239 {\cf20 // == FEATURE DETECTION ============================================================================}\par
240 {\cf20 // =================================================================================================}\par
241 \par
242 {\cf20 // general compiler feature support table: https://en.cppreference.com/w/cpp/compiler_support}\par
243 {\cf20 // MSVC C++11 feature support table: https://msdn.microsoft.com/en-us/library/hh567368.aspx}\par
244 {\cf20 // GCC C++11 feature support table: https://gcc.gnu.org/projects/cxx-status.html}\par
245 {\cf20 // MSVC version table:}\par
246 {\cf20 // https://en.wikipedia.org/wiki/Microsoft_Visual_C%2B%2B#Internal_version_numbering}\par
247 {\cf20 // MSVC++ 14.3 (17) _MSC_VER == 1930 (Visual Studio 2022)}\par
248 {\cf20 // MSVC++ 14.2 (16) _MSC_VER == 1920 (Visual Studio 2019)}\par
249 {\cf20 // MSVC++ 14.1 (15) _MSC_VER == 1910 (Visual Studio 2017)}\par
250 {\cf20 // MSVC++ 14.0      _MSC_VER == 1900 (Visual Studio 2015)}\par
251 {\cf20 // MSVC++ 12.0      _MSC_VER == 1800 (Visual Studio 2013)}\par
252 {\cf20 // MSVC++ 11.0      _MSC_VER == 1700 (Visual Studio 2012)}\par
253 {\cf20 // MSVC++ 10.0      _MSC_VER == 1600 (Visual Studio 2010)}\par
254 {\cf20 // MSVC++ 9.0       _MSC_VER == 1500 (Visual Studio 2008)}\par
255 {\cf20 // MSVC++ 8.0       _MSC_VER == 1400 (Visual Studio 2005)}\par
256 \par
257 {\cf20 // Universal Windows Platform support}\par
258 {\cf21 #if defined(WINAPI_FAMILY) && (WINAPI_FAMILY == WINAPI_FAMILY_APP)}\par
259 {\cf21 #define DOCTEST_CONFIG_NO_WINDOWS_SEH}\par
260 {\cf21 #endif }{\cf20 // WINAPI_FAMILY}\par
261 {\cf21 #if DOCTEST_MSVC && !defined(DOCTEST_CONFIG_WINDOWS_SEH)}\par
262 {\cf21 #define DOCTEST_CONFIG_WINDOWS_SEH}\par
263 {\cf21 #endif }{\cf20 // MSVC}\par
264 {\cf21 #if defined(DOCTEST_CONFIG_NO_WINDOWS_SEH) && defined(DOCTEST_CONFIG_WINDOWS_SEH)}\par
265 {\cf21 #undef DOCTEST_CONFIG_WINDOWS_SEH}\par
266 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_NO_WINDOWS_SEH}\par
267 \par
268 {\cf21 #if !defined(_WIN32) && !defined(__QNX__) && !defined(DOCTEST_CONFIG_POSIX_SIGNALS) &&             \\}\par
269 {\cf21         !defined(__EMSCRIPTEN__)}\par
270 {\cf21 #define DOCTEST_CONFIG_POSIX_SIGNALS}\par
271 {\cf21 #endif }{\cf20 // _WIN32}\par
272 {\cf21 #if defined(DOCTEST_CONFIG_NO_POSIX_SIGNALS) && defined(DOCTEST_CONFIG_POSIX_SIGNALS)}\par
273 {\cf21 #undef DOCTEST_CONFIG_POSIX_SIGNALS}\par
274 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_NO_POSIX_SIGNALS}\par
275 \par
276 {\cf21 #ifndef DOCTEST_CONFIG_NO_EXCEPTIONS}\par
277 {\cf21 #if !defined(__cpp_exceptions) && !defined(__EXCEPTIONS) && !defined(_CPPUNWIND)}\par
278 {\cf21 #define DOCTEST_CONFIG_NO_EXCEPTIONS}\par
279 {\cf21 #endif }{\cf20 // no exceptions}\par
280 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_NO_EXCEPTIONS}\par
281 \par
282 {\cf21 #ifdef DOCTEST_CONFIG_NO_EXCEPTIONS_BUT_WITH_ALL_ASSERTS}\par
283 {\cf21 #ifndef DOCTEST_CONFIG_NO_EXCEPTIONS}\par
284 {\cf21 #define DOCTEST_CONFIG_NO_EXCEPTIONS}\par
285 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_NO_EXCEPTIONS}\par
286 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_NO_EXCEPTIONS_BUT_WITH_ALL_ASSERTS}\par
287 \par
288 {\cf21 #if defined(DOCTEST_CONFIG_NO_EXCEPTIONS) && !defined(DOCTEST_CONFIG_NO_TRY_CATCH_IN_ASSERTS)}\par
289 {\cf21 #define DOCTEST_CONFIG_NO_TRY_CATCH_IN_ASSERTS}\par
290 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_NO_EXCEPTIONS && !DOCTEST_CONFIG_NO_TRY_CATCH_IN_ASSERTS}\par
291 \par
292 {\cf21 #if defined(DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN) && !defined(DOCTEST_CONFIG_IMPLEMENT)}\par
293 {\cf21 #define DOCTEST_CONFIG_IMPLEMENT}\par
294 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN}\par
295 \par
296 {\cf21 #if defined(_WIN32) || defined(__CYGWIN__)}\par
297 {\cf21 #if DOCTEST_MSVC}\par
298 {\cf21 #define DOCTEST_SYMBOL_EXPORT __declspec(dllexport)}\par
299 {\cf21 #define DOCTEST_SYMBOL_IMPORT __declspec(dllimport)}\par
300 {\cf21 #else }{\cf20 // MSVC}\par
301 {\cf21 #define DOCTEST_SYMBOL_EXPORT __attribute__((dllexport))}\par
302 {\cf21 #define DOCTEST_SYMBOL_IMPORT __attribute__((dllimport))}\par
303 {\cf21 #endif }{\cf20 // MSVC}\par
304 {\cf21 #else  }{\cf20 // _WIN32}\par
305 {\cf21 #define DOCTEST_SYMBOL_EXPORT __attribute__((visibility("default"})))\par
306 {\cf21 #define DOCTEST_SYMBOL_IMPORT}\par
307 {\cf21 #endif }{\cf20 // _WIN32}\par
308 \par
309 {\cf21 #ifdef DOCTEST_CONFIG_IMPLEMENTATION_IN_DLL}\par
310 {\cf21 #ifdef DOCTEST_CONFIG_IMPLEMENT}\par
311 {\cf21 #define DOCTEST_INTERFACE DOCTEST_SYMBOL_EXPORT}\par
312 {\cf21 #else }{\cf20 // DOCTEST_CONFIG_IMPLEMENT}\par
313 {\cf21 #define DOCTEST_INTERFACE DOCTEST_SYMBOL_IMPORT}\par
314 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_IMPLEMENT}\par
315 {\cf21 #else  }{\cf20 // DOCTEST_CONFIG_IMPLEMENTATION_IN_DLL}\par
316 {\cf21 #define DOCTEST_INTERFACE}\par
317 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_IMPLEMENTATION_IN_DLL}\par
318 \par
319 {\cf21 #define DOCTEST_EMPTY}\par
320 \par
321 {\cf21 #if DOCTEST_MSVC}\par
322 {\cf21 #define DOCTEST_NOINLINE __declspec(noinline)}\par
323 {\cf21 #define DOCTEST_UNUSED}\par
324 {\cf21 #define DOCTEST_ALIGNMENT(x)}\par
325 {\cf21 #elif DOCTEST_CLANG && DOCTEST_CLANG < DOCTEST_COMPILER(3, 5, 0)}\par
326 {\cf21 #define DOCTEST_NOINLINE}\par
327 {\cf21 #define DOCTEST_UNUSED}\par
328 {\cf21 #define DOCTEST_ALIGNMENT(x)}\par
329 {\cf21 #else}\par
330 {\cf21 #define DOCTEST_NOINLINE __attribute__((noinline))}\par
331 {\cf21 #define DOCTEST_UNUSED __attribute__((unused))}\par
332 {\cf21 #define DOCTEST_ALIGNMENT(x) __attribute__((aligned(x)))}\par
333 {\cf21 #endif}\par
334 \par
335 {\cf21 #ifndef DOCTEST_NORETURN}\par
336 {\cf21 #if DOCTEST_MSVC && (DOCTEST_MSVC < DOCTEST_COMPILER(19, 0, 0))}\par
337 {\cf21 #define DOCTEST_NORETURN}\par
338 {\cf21 #else }{\cf20 // DOCTEST_MSVC}\par
339 {\cf21 #define DOCTEST_NORETURN [[noreturn]]}\par
340 {\cf21 #endif }{\cf20 // DOCTEST_MSVC}\par
341 {\cf21 #endif }{\cf20 // DOCTEST_NORETURN}\par
342 \par
343 {\cf21 #ifndef DOCTEST_NOEXCEPT}\par
344 {\cf21 #if DOCTEST_MSVC && (DOCTEST_MSVC < DOCTEST_COMPILER(19, 0, 0))}\par
345 {\cf21 #define DOCTEST_NOEXCEPT}\par
346 {\cf21 #else }{\cf20 // DOCTEST_MSVC}\par
347 {\cf21 #define DOCTEST_NOEXCEPT noexcept}\par
348 {\cf21 #endif }{\cf20 // DOCTEST_MSVC}\par
349 {\cf21 #endif }{\cf20 // DOCTEST_NOEXCEPT}\par
350 \par
351 {\cf21 #ifndef DOCTEST_CONSTEXPR}\par
352 {\cf21 #if DOCTEST_MSVC && (DOCTEST_MSVC < DOCTEST_COMPILER(19, 0, 0))}\par
353 {\cf21 #define DOCTEST_CONSTEXPR const}\par
354 {\cf21 #else }{\cf20 // DOCTEST_MSVC}\par
355 {\cf21 #define DOCTEST_CONSTEXPR constexpr}\par
356 {\cf21 #endif }{\cf20 // DOCTEST_MSVC}\par
357 {\cf21 #endif }{\cf20 // DOCTEST_CONSTEXPR}\par
358 \par
359 {\cf20 // =================================================================================================}\par
360 {\cf20 // == FEATURE DETECTION END ========================================================================}\par
361 {\cf20 // =================================================================================================}\par
362 \par
363 {\cf20 // internal macros for string concatenation and anonymous variable name generation}\par
364 {\cf21 #define DOCTEST_CAT_IMPL(s1, s2) s1##s2}\par
365 {\cf21 #define DOCTEST_CAT(s1, s2) DOCTEST_CAT_IMPL(s1, s2)}\par
366 {\cf21 #ifdef __COUNTER__ }{\cf20 // not standard and may be missing for some compilers}\par
367 {\cf21 #define DOCTEST_ANONYMOUS(x) DOCTEST_CAT(x, __COUNTER__)}\par
368 {\cf21 #else }{\cf20 // __COUNTER__}\par
369 {\cf21 #define DOCTEST_ANONYMOUS(x) DOCTEST_CAT(x, __LINE__)}\par
370 {\cf21 #endif }{\cf20 // __COUNTER__}\par
371 \par
372 {\cf21 #ifndef DOCTEST_CONFIG_ASSERTION_PARAMETERS_BY_VALUE}\par
373 {\cf21 #define DOCTEST_REF_WRAP(x) x&}\par
374 {\cf21 #else }{\cf20 // DOCTEST_CONFIG_ASSERTION_PARAMETERS_BY_VALUE}\par
375 {\cf21 #define DOCTEST_REF_WRAP(x) x}\par
376 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_ASSERTION_PARAMETERS_BY_VALUE}\par
377 \par
378 {\cf20 // not using __APPLE__ because... this is how Catch does it}\par
379 {\cf21 #ifdef __MAC_OS_X_VERSION_MIN_REQUIRED}\par
380 {\cf21 #define DOCTEST_PLATFORM_MAC}\par
381 {\cf21 #elif defined(__IPHONE_OS_VERSION_MIN_REQUIRED)}\par
382 {\cf21 #define DOCTEST_PLATFORM_IPHONE}\par
383 {\cf21 #elif defined(_WIN32)}\par
384 {\cf21 #define DOCTEST_PLATFORM_WINDOWS}\par
385 {\cf21 #else }{\cf20 // DOCTEST_PLATFORM}\par
386 {\cf21 #define DOCTEST_PLATFORM_LINUX}\par
387 {\cf21 #endif }{\cf20 // DOCTEST_PLATFORM}\par
388 \par
389 {\cf17 namespace }doctest \{ {\cf17 namespace }detail \{\par
390     {\cf17 static} DOCTEST_CONSTEXPR {\cf18 int} consume({\cf17 const} {\cf18 int}*, {\cf18 int}) \{ {\cf19 return} 0; \}\par
391 \}\}\par
392 \par
393 {\cf21 #define DOCTEST_GLOBAL_NO_WARNINGS(var, ...)                                                       \\}\par
394 {\cf21     DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH("-Wglobal-constructors"})                              \\\par
395     static const int var = doctest::detail::consume(&var, __VA_ARGS__);                            \\\par
396     DOCTEST_CLANG_SUPPRESS_WARNING_POP\par
397 \par
398 {\cf21 #ifndef DOCTEST_BREAK_INTO_DEBUGGER}\par
399 {\cf20 // should probably take a look at https://github.com/scottt/debugbreak}\par
400 {\cf21 #ifdef DOCTEST_PLATFORM_LINUX}\par
401 {\cf21 #if defined(__GNUC__) && (defined(__i386) || defined(__x86_64))}\par
402 {\cf20 // Break at the location of the failing check if possible}\par
403 {\cf21 #define DOCTEST_BREAK_INTO_DEBUGGER() __asm__("int $3\\n"} : :) {\cf20 // NOLINT (hicpp-no-assembler)}\par
404 {\cf21 #else}\par
405 {\cf21 #include <signal.h>}\par
406 {\cf21 #define DOCTEST_BREAK_INTO_DEBUGGER() raise(SIGTRAP)}\par
407 {\cf21 #endif}\par
408 {\cf21 #elif defined(DOCTEST_PLATFORM_MAC)}\par
409 {\cf21 #if defined(__x86_64) || defined(__x86_64__) || defined(__amd64__) || defined(__i386)}\par
410 {\cf21 #define DOCTEST_BREAK_INTO_DEBUGGER() __asm__("int $3\\n"} : :) {\cf20 // NOLINT (hicpp-no-assembler)}\par
411 {\cf21 #else}\par
412 {\cf21 #define DOCTEST_BREAK_INTO_DEBUGGER() __asm__("brk #0"}); {\cf20 // NOLINT (hicpp-no-assembler)}\par
413 {\cf21 #endif}\par
414 {\cf21 #elif DOCTEST_MSVC}\par
415 {\cf21 #define DOCTEST_BREAK_INTO_DEBUGGER() __debugbreak()}\par
416 {\cf21 #elif defined(__MINGW32__)}\par
417 DOCTEST_GCC_SUPPRESS_WARNING_WITH_PUSH({\cf22 "-Wredundant-decls"})\par
418 extern "C" __declspec(dllimport) {\cf18 void} __stdcall DebugBreak();\par
419 DOCTEST_GCC_SUPPRESS_WARNING_POP\par
420 {\cf21 #define DOCTEST_BREAK_INTO_DEBUGGER() ::DebugBreak()}\par
421 {\cf21 #else }{\cf20 // linux}\par
422 {\cf21 #define DOCTEST_BREAK_INTO_DEBUGGER() (static_cast<void>(0))}\par
423 {\cf21 #endif }{\cf20 // linux}\par
424 {\cf21 #endif }{\cf20 // DOCTEST_BREAK_INTO_DEBUGGER}\par
425 \par
426 {\cf20 // this is kept here for backwards compatibility since the config option was changed}\par
427 {\cf21 #ifdef DOCTEST_CONFIG_USE_IOSFWD}\par
428 {\cf21 #define DOCTEST_CONFIG_USE_STD_HEADERS}\par
429 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_USE_IOSFWD}\par
430 \par
431 {\cf20 // for clang - always include ciso646 (which drags some std stuff) because}\par
432 {\cf20 // we want to check if we are using libc++ with the _LIBCPP_VERSION macro in}\par
433 {\cf20 // which case we don't want to forward declare stuff from std - for reference:}\par
434 {\cf20 // https://github.com/doctest/doctest/issues/126}\par
435 {\cf20 // https://github.com/doctest/doctest/issues/356}\par
436 {\cf21 #if DOCTEST_CLANG}\par
437 {\cf21 #include <ciso646>}\par
438 {\cf21 #ifdef _LIBCPP_VERSION}\par
439 {\cf21 #define DOCTEST_CONFIG_USE_STD_HEADERS}\par
440 {\cf21 #endif }{\cf20 // _LIBCPP_VERSION}\par
441 {\cf21 #endif }{\cf20 // clang}\par
442 \par
443 {\cf21 #ifdef DOCTEST_CONFIG_USE_STD_HEADERS}\par
444 {\cf21 #ifndef DOCTEST_CONFIG_INCLUDE_TYPE_TRAITS}\par
445 {\cf21 #define DOCTEST_CONFIG_INCLUDE_TYPE_TRAITS}\par
446 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_INCLUDE_TYPE_TRAITS}\par
447 {\cf21 #include <cstddef>}\par
448 {\cf21 #include <ostream>}\par
449 {\cf21 #include <istream>}\par
450 {\cf21 #else }{\cf20 // DOCTEST_CONFIG_USE_STD_HEADERS}\par
451 \par
452 {\cf20 // Forward declaring 'X' in namespace std is not permitted by the C++ Standard.}\par
453 DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH(4643)\par
454 \par
455 namespace std \{ {\cf20 // NOLINT (cert-dcl58-cpp)}\par
456 {\cf17 typedef} {\cf17 decltype}({\cf17 nullptr}) nullptr_t;\par
457 {\cf17 template} <{\cf17 class} {\cf18 char}T>\par
458 {\cf17 struct }char_traits;\par
459 {\cf17 template} <>\par
460 {\cf17 struct }char_traits<char>;\par
461 {\cf17 template} <{\cf17 class} {\cf18 char}T, {\cf17 class} traits>\par
462 {\cf17 class }basic_ostream;\par
463 {\cf17 typedef} basic_ostream<char, char_traits<char>> ostream;\par
464 {\cf17 template} <{\cf17 class} {\cf18 char}T, {\cf17 class} traits>\par
465 {\cf17 class }basic_istream;\par
466 {\cf17 typedef} basic_istream<char, char_traits<char>> istream;\par
467 {\cf17 template} <{\cf17 class}... Types>\par
468 {\cf17 class }tuple;\par
469 {\cf21 #if DOCTEST_MSVC >= DOCTEST_COMPILER(19, 20, 0)}\par
470 {\cf20 // see this issue on why this is needed: https://github.com/doctest/doctest/issues/183}\par
471 {\cf17 template} <{\cf17 class} Ty>\par
472 {\cf17 class }allocator;\par
473 {\cf17 template} <{\cf17 class} Elem, {\cf17 class} Traits, {\cf17 class} Alloc>\par
474 {\cf17 class }basic_string;\par
475 {\cf17 using }string = basic_string<char, char_traits<char>, allocator<char>>;\par
476 {\cf21 #endif }{\cf20 // VS 2019}\par
477 \} {\cf20 // namespace std}\par
478 \par
479 DOCTEST_MSVC_SUPPRESS_WARNING_POP\par
480 \par
481 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_USE_STD_HEADERS}\par
482 \par
483 {\cf21 #ifdef DOCTEST_CONFIG_INCLUDE_TYPE_TRAITS}\par
484 {\cf21 #include <type_traits>}\par
485 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_INCLUDE_TYPE_TRAITS}\par
486 \par
487 {\cf17 namespace }doctest \{\par
488 \par
489 DOCTEST_INTERFACE {\cf17 extern} {\cf18 bool} is_running_in_test;\par
490 \par
491 {\cf20 // A 24 byte string class (can be as small as 17 for x64 and 13 for x86) that can hold strings with length}\par
492 {\cf20 // of up to 23 chars on the stack before going on the heap - the last byte of the buffer is used for:}\par
493 {\cf20 // - "is small" bit - the highest bit - if "0" then it is small - otherwise its "1" (128)}\par
494 {\cf20 // - if small - capacity left before going on the heap - using the lowest 5 bits}\par
495 {\cf20 // - if small - 2 bits are left unused - the second and third highest ones}\par
496 {\cf20 // - if small - acts as a null terminator if strlen() is 23 (24 including the null terminator)}\par
497 {\cf20 //              and the "is small" bit remains "0" ("as well as the capacity left") so its OK}\par
498 {\cf20 // Idea taken from this lecture about the string implementation of facebook/folly - fbstring}\par
499 {\cf20 // https://www.youtube.com/watch?v=kPR8h4-qZdk}\par
500 {\cf20 // TODO:}\par
501 {\cf20 // - optimizations - like not deleting memory unnecessarily in operator= and etc.}\par
502 {\cf20 // - resize/reserve/clear}\par
503 {\cf20 // - substr}\par
504 {\cf20 // - replace}\par
505 {\cf20 // - back/front}\par
506 {\cf20 // - iterator stuff}\par
507 {\cf20 // - find & friends}\par
508 {\cf20 // - push_back/pop_back}\par
509 {\cf20 // - assign/insert/erase}\par
510 {\cf20 // - relational operators as free functions - taking const char* as one of the params}\par
511 {\cf17 class }DOCTEST_INTERFACE String\par
512 \{\par
513     {\cf17 static} {\cf17 const} {\cf18 unsigned} len  = 24;      \par
514     {\cf17 static} {\cf17 const} {\cf18 unsigned} last = len - 1; \par
515 \par
516     {\cf17 struct }view {\cf20 // len should be more than sizeof(view) - because of the final byte for flags}\par
517     \{\par
518         {\cf18 char}*    ptr;\par
519         {\cf18 unsigned} size;\par
520         {\cf18 unsigned} capacity;\par
521     \};\par
522 \par
523     {\cf17 union}\par
524     \{\par
525         {\cf18 char} buf[len];\par
526         view data;\par
527     \};\par
528 \par
529     {\cf18 char}* allocate({\cf18 unsigned} sz);\par
530 \par
531     {\cf18 bool} isOnStack(){\cf17  const }\{ {\cf19 return} (buf[last] & 128) == 0; \}\par
532     {\cf18 void} setOnHeap();\par
533     {\cf18 void} setLast({\cf18 unsigned} in = last);\par
534 \par
535     {\cf18 void} copy({\cf17 const} String& other);\par
536 \par
537 {\cf17 public}:\par
538     String();\par
539     ~String();\par
540 \par
541     {\cf20 // cppcheck-suppress noExplicitConstructor}\par
542     String({\cf17 const} {\cf18 char}* in);\par
543     String({\cf17 const} {\cf18 char}* in, {\cf18 unsigned} in_size);\par
544 \par
545     String(std::istream& in, {\cf18 unsigned} in_size);\par
546 \par
547     String({\cf17 const} String& other);\par
548     String& operator=({\cf17 const} String& other);\par
549 \par
550     String& operator+=({\cf17 const} String& other);\par
551 \par
552     String(String&& other);\par
553     String& operator=(String&& other);\par
554 \par
555     {\cf18 char}  operator[]({\cf18 unsigned} i) {\cf17 const};\par
556     {\cf18 char}& operator[]({\cf18 unsigned} i);\par
557 \par
558     {\cf20 // the only functions I'm willing to leave in the interface - available for inlining}\par
559     {\cf17 const} {\cf18 char}* c_str(){\cf17  const }\{ {\cf19 return} {\cf17 const_cast<}String*{\cf17 >}({\cf17 this})->c_str(); \} {\cf20 // NOLINT}\par
560     {\cf18 char}*       c_str() \{\par
561         {\cf19 if}(isOnStack())\par
562             {\cf19 return} {\cf17 reinterpret_cast<}{\cf18 char}*{\cf17 >}(buf);\par
563         {\cf19 return} data.ptr;\par
564     \}\par
565 \par
566     {\cf18 unsigned} size() {\cf17 const};\par
567     {\cf18 unsigned} capacity() {\cf17 const};\par
568 \par
569     {\cf18 int} compare({\cf17 const} {\cf18 char}* other, {\cf18 bool} no_case = {\cf17 false}) {\cf17 const};\par
570     {\cf18 int} compare({\cf17 const} String& other, {\cf18 bool} no_case = {\cf17 false}) {\cf17 const};\par
571 \};\par
572 \par
573 DOCTEST_INTERFACE String operator+({\cf17 const} String& lhs, {\cf17 const} String& rhs);\par
574 \par
575 DOCTEST_INTERFACE {\cf18 bool} operator==({\cf17 const} String& lhs, {\cf17 const} String& rhs);\par
576 DOCTEST_INTERFACE {\cf18 bool} operator!=({\cf17 const} String& lhs, {\cf17 const} String& rhs);\par
577 DOCTEST_INTERFACE {\cf18 bool} operator<({\cf17 const} String& lhs, {\cf17 const} String& rhs);\par
578 DOCTEST_INTERFACE {\cf18 bool} operator>({\cf17 const} String& lhs, {\cf17 const} String& rhs);\par
579 DOCTEST_INTERFACE {\cf18 bool} operator<=({\cf17 const} String& lhs, {\cf17 const} String& rhs);\par
580 DOCTEST_INTERFACE {\cf18 bool} operator>=({\cf17 const} String& lhs, {\cf17 const} String& rhs);\par
581 \par
582 DOCTEST_INTERFACE std::ostream& operator<<(std::ostream& s, {\cf17 const} String& in);\par
583 \par
584 {\cf17 namespace }Color \{\par
585     {\cf17 enum} Enum\par
586     \{\par
587         None = 0,\par
588         White,\par
589         Red,\par
590         Green,\par
591         Blue,\par
592         Cyan,\par
593         Yellow,\par
594         Grey,\par
595 \par
596         Bright = 0x10,\par
597 \par
598         BrightRed   = Bright | Red,\par
599         BrightGreen = Bright | Green,\par
600         LightGrey   = Bright | Grey,\par
601         BrightWhite = Bright | White\par
602     \};\par
603 \par
604     DOCTEST_INTERFACE std::ostream& operator<<(std::ostream& s, Color::Enum code);\par
605 \} {\cf20 // namespace Color}\par
606 \par
607 {\cf17 namespace }assertType \{\par
608     {\cf17 enum} Enum\par
609     \{\par
610         {\cf20 // macro traits}\par
611 \par
612         is_warn    = 1,\par
613         is_check   = 2 * is_warn,\par
614         is_require = 2 * is_check,\par
615 \par
616         is_normal      = 2 * is_require,\par
617         is_throws      = 2 * is_normal,\par
618         is_throws_as   = 2 * is_throws,\par
619         is_throws_with = 2 * is_throws_as,\par
620         is_nothrow     = 2 * is_throws_with,\par
621 \par
622         is_false = 2 * is_nothrow,\par
623         is_unary = 2 * is_false, {\cf20 // not checked anywhere - used just to distinguish the types}\par
624 \par
625         is_eq = 2 * is_unary,\par
626         is_ne = 2 * is_eq,\par
627 \par
628         is_lt = 2 * is_ne,\par
629         is_gt = 2 * is_lt,\par
630 \par
631         is_ge = 2 * is_gt,\par
632         is_le = 2 * is_ge,\par
633 \par
634         {\cf20 // macro types}\par
635 \par
636         DT_WARN    = is_normal | is_warn,\par
637         DT_CHECK   = is_normal | is_check,\par
638         DT_REQUIRE = is_normal | is_require,\par
639 \par
640         DT_WARN_FALSE    = is_normal | is_false | is_warn,\par
641         DT_CHECK_FALSE   = is_normal | is_false | is_check,\par
642         DT_REQUIRE_FALSE = is_normal | is_false | is_require,\par
643 \par
644         DT_WARN_THROWS    = is_throws | is_warn,\par
645         DT_CHECK_THROWS   = is_throws | is_check,\par
646         DT_REQUIRE_THROWS = is_throws | is_require,\par
647 \par
648         DT_WARN_THROWS_AS    = is_throws_as | is_warn,\par
649         DT_CHECK_THROWS_AS   = is_throws_as | is_check,\par
650         DT_REQUIRE_THROWS_AS = is_throws_as | is_require,\par
651 \par
652         DT_WARN_THROWS_WITH    = is_throws_with | is_warn,\par
653         DT_CHECK_THROWS_WITH   = is_throws_with | is_check,\par
654         DT_REQUIRE_THROWS_WITH = is_throws_with | is_require,\par
655         \par
656         DT_WARN_THROWS_WITH_AS    = is_throws_with | is_throws_as | is_warn,\par
657         DT_CHECK_THROWS_WITH_AS   = is_throws_with | is_throws_as | is_check,\par
658         DT_REQUIRE_THROWS_WITH_AS = is_throws_with | is_throws_as | is_require,\par
659 \par
660         DT_WARN_NOTHROW    = is_nothrow | is_warn,\par
661         DT_CHECK_NOTHROW   = is_nothrow | is_check,\par
662         DT_REQUIRE_NOTHROW = is_nothrow | is_require,\par
663 \par
664         DT_WARN_EQ    = is_normal | is_eq | is_warn,\par
665         DT_CHECK_EQ   = is_normal | is_eq | is_check,\par
666         DT_REQUIRE_EQ = is_normal | is_eq | is_require,\par
667 \par
668         DT_WARN_NE    = is_normal | is_ne | is_warn,\par
669         DT_CHECK_NE   = is_normal | is_ne | is_check,\par
670         DT_REQUIRE_NE = is_normal | is_ne | is_require,\par
671 \par
672         DT_WARN_GT    = is_normal | is_gt | is_warn,\par
673         DT_CHECK_GT   = is_normal | is_gt | is_check,\par
674         DT_REQUIRE_GT = is_normal | is_gt | is_require,\par
675 \par
676         DT_WARN_LT    = is_normal | is_lt | is_warn,\par
677         DT_CHECK_LT   = is_normal | is_lt | is_check,\par
678         DT_REQUIRE_LT = is_normal | is_lt | is_require,\par
679 \par
680         DT_WARN_GE    = is_normal | is_ge | is_warn,\par
681         DT_CHECK_GE   = is_normal | is_ge | is_check,\par
682         DT_REQUIRE_GE = is_normal | is_ge | is_require,\par
683 \par
684         DT_WARN_LE    = is_normal | is_le | is_warn,\par
685         DT_CHECK_LE   = is_normal | is_le | is_check,\par
686         DT_REQUIRE_LE = is_normal | is_le | is_require,\par
687 \par
688         DT_WARN_UNARY    = is_normal | is_unary | is_warn,\par
689         DT_CHECK_UNARY   = is_normal | is_unary | is_check,\par
690         DT_REQUIRE_UNARY = is_normal | is_unary | is_require,\par
691 \par
692         DT_WARN_UNARY_FALSE    = is_normal | is_false | is_unary | is_warn,\par
693         DT_CHECK_UNARY_FALSE   = is_normal | is_false | is_unary | is_check,\par
694         DT_REQUIRE_UNARY_FALSE = is_normal | is_false | is_unary | is_require,\par
695     \};\par
696 \} {\cf20 // namespace assertType}\par
697 \par
698 DOCTEST_INTERFACE {\cf17 const} {\cf18 char}* assertString(assertType::Enum at);\par
699 DOCTEST_INTERFACE {\cf17 const} {\cf18 char}* failureString(assertType::Enum at);\par
700 DOCTEST_INTERFACE {\cf17 const} {\cf18 char}* skipPathFromFilename({\cf17 const} {\cf18 char}* file);\par
701 \par
702 {\cf17 struct }DOCTEST_INTERFACE TestCaseData\par
703 \{\par
704     String      m_file;       {\cf20 // the file in which the test was registered (using String - see #350)}\par
705     {\cf18 unsigned}    m_line;       {\cf20 // the line where the test was registered}\par
706     {\cf17 const} {\cf18 char}* m_name;       {\cf20 // name of the test case}\par
707     {\cf17 const} {\cf18 char}* m_test_suite; {\cf20 // the test suite in which the test was added}\par
708     {\cf17 const} {\cf18 char}* m_description;\par
709     {\cf18 bool}        m_skip;\par
710     {\cf18 bool}        m_no_breaks;\par
711     {\cf18 bool}        m_no_output;\par
712     {\cf18 bool}        m_may_fail;\par
713     {\cf18 bool}        m_should_fail;\par
714     {\cf18 int}         m_expected_failures;\par
715     {\cf18 double}      m_timeout;\par
716 \};\par
717 \par
718 {\cf17 struct }DOCTEST_INTERFACE AssertData\par
719 \{\par
720     {\cf20 // common - for all asserts}\par
721     {\cf17 const} TestCaseData* m_test_case;\par
722     assertType::Enum    m_at;\par
723     {\cf17 const} {\cf18 char}*         m_file;\par
724     {\cf18 int}                 m_line;\par
725     {\cf17 const} {\cf18 char}*         m_expr;\par
726     {\cf18 bool}                m_failed;\par
727 \par
728     {\cf20 // exception-related - for all asserts}\par
729     {\cf18 bool}   m_threw;\par
730     String m_exception;\par
731 \par
732     {\cf20 // for normal asserts}\par
733     String m_decomp;\par
734 \par
735     {\cf20 // for specific exception-related asserts}\par
736     {\cf18 bool}        m_threw_as;\par
737     {\cf17 const} {\cf18 char}* m_exception_type;\par
738     {\cf17 const} {\cf18 char}* m_exception_string;\par
739 \};\par
740 \par
741 {\cf17 struct }DOCTEST_INTERFACE MessageData\par
742 \{\par
743     String           m_string;\par
744     {\cf17 const} {\cf18 char}*      m_file;\par
745     {\cf18 int}              m_line;\par
746     assertType::Enum m_severity;\par
747 \};\par
748 \par
749 {\cf17 struct }DOCTEST_INTERFACE SubcaseSignature\par
750 \{\par
751     String      m_name;\par
752     {\cf17 const} {\cf18 char}* m_file;\par
753     {\cf18 int}         m_line;\par
754 \par
755     {\cf18 bool} operator<({\cf17 const} SubcaseSignature& other) {\cf17 const};\par
756 \};\par
757 \par
758 {\cf17 struct }DOCTEST_INTERFACE IContextScope\par
759 \{\par
760     IContextScope();\par
761     {\cf17 virtual} ~IContextScope();\par
762     {\cf17 virtual} {\cf18 void} stringify(std::ostream*) {\cf17 const} = 0;\par
763 \};\par
764 \par
765 {\cf17 namespace }detail \{\par
766     {\cf17 struct }DOCTEST_INTERFACE TestCase;\par
767 \} {\cf20 // namespace detail}\par
768 \par
769 {\cf17 struct }ContextOptions \par
770 \{\par
771     std::ostream* cout = {\cf17 nullptr}; {\cf20 // stdout stream}\par
772     String        binary_name;    {\cf20 // the test binary name}\par
773 \par
774     {\cf17 const} detail::TestCase* currentTest = {\cf17 nullptr};\par
775 \par
776     {\cf20 // == parameters from the command line}\par
777     String   out;       {\cf20 // output filename}\par
778     String   order_by;  {\cf20 // how tests should be ordered}\par
779     {\cf18 unsigned} rand_seed; {\cf20 // the seed for rand ordering}\par
780 \par
781     {\cf18 unsigned} first; {\cf20 // the first (matching) test to be executed}\par
782     {\cf18 unsigned} last;  {\cf20 // the last (matching) test to be executed}\par
783 \par
784     {\cf18 int} abort_after;           {\cf20 // stop tests after this many failed assertions}\par
785     {\cf18 int} subcase_filter_levels; {\cf20 // apply the subcase filters for the first N levels}\par
786 \par
787     {\cf18 bool} success;              {\cf20 // include successful assertions in output}\par
788     {\cf18 bool} case_sensitive;       {\cf20 // if filtering should be case sensitive}\par
789     {\cf18 bool} exit;                 {\cf20 // if the program should be exited after the tests are ran/whatever}\par
790     {\cf18 bool} duration;             {\cf20 // print the time duration of each test case}\par
791     {\cf18 bool} minimal;              {\cf20 // minimal console output (only test failures)}\par
792     {\cf18 bool} quiet;                {\cf20 // no console output}\par
793     {\cf18 bool} no_throw;             {\cf20 // to skip exceptions-related assertion macros}\par
794     {\cf18 bool} no_exitcode;          {\cf20 // if the framework should return 0 as the exitcode}\par
795     {\cf18 bool} no_run;               {\cf20 // to not run the tests at all (can be done with an "*" exclude)}\par
796     {\cf18 bool} no_intro;             {\cf20 // to not print the intro of the framework}\par
797     {\cf18 bool} no_version;           {\cf20 // to not print the version of the framework}\par
798     {\cf18 bool} no_colors;            {\cf20 // if output to the console should be colorized}\par
799     {\cf18 bool} force_colors;         {\cf20 // forces the use of colors even when a tty cannot be detected}\par
800     {\cf18 bool} no_breaks;            {\cf20 // to not break into the debugger}\par
801     {\cf18 bool} no_skip;              {\cf20 // don't skip test cases which are marked to be skipped}\par
802     {\cf18 bool} gnu_file_line;        {\cf20 // if line numbers should be surrounded with :x: and not (x):}\par
803     {\cf18 bool} no_path_in_filenames; {\cf20 // if the path to files should be removed from the output}\par
804     {\cf18 bool} no_line_numbers;      {\cf20 // if source code line numbers should be omitted from the output}\par
805     {\cf18 bool} no_debug_output;      {\cf20 // no output in the debug console when a debugger is attached}\par
806     {\cf18 bool} no_skipped_summary;   {\cf20 // don't print "skipped" in the summary !!! UNDOCUMENTED !!!}\par
807     {\cf18 bool} no_time_in_output;    {\cf20 // omit any time/timestamps from output !!! UNDOCUMENTED !!!}\par
808 \par
809     {\cf18 bool} help;             {\cf20 // to print the help}\par
810     {\cf18 bool} version;          {\cf20 // to print the version}\par
811     {\cf18 bool} count;            {\cf20 // if only the count of matching tests is to be retrieved}\par
812     {\cf18 bool} list_test_cases;  {\cf20 // to list all tests matching the filters}\par
813     {\cf18 bool} list_test_suites; {\cf20 // to list all suites matching the filters}\par
814     {\cf18 bool} list_reporters;   {\cf20 // lists all registered reporters}\par
815 \};\par
816 \par
817 {\cf17 namespace }detail \{\par
818     {\cf17 template} <{\cf18 bool} CONDITION, {\cf17 typename} TYPE = {\cf18 void}>\par
819     {\cf17 struct }enable_if\par
820     \{\};\par
821 \par
822     {\cf17 template} <{\cf17 typename} TYPE>\par
823     {\cf17 struct }enable_if<true, TYPE>\par
824     \{ {\cf17 typedef} TYPE type; \};\par
825 \par
826     {\cf20 // clang-format off}\par
827     {\cf17 template}<{\cf17 class} T> {\cf17 struct }remove_reference      \{ {\cf17 typedef} T type; \};\par
828     {\cf17 template}<{\cf17 class} T> {\cf17 struct }remove_reference<T&>  \{ {\cf17 typedef} T type; \};\par
829     {\cf17 template}<{\cf17 class} T> {\cf17 struct }remove_reference<T&&> \{ {\cf17 typedef} T type; \};\par
830 \par
831     {\cf17 template}<{\cf17 typename} T, {\cf17 typename} U = T&&> U declval({\cf18 int}); \par
832 \par
833     {\cf17 template}<{\cf17 typename} T> T declval({\cf18 long}); \par
834 \par
835     {\cf17 template}<{\cf17 typename} T> {\cf17 auto} declval() DOCTEST_NOEXCEPT -> decltype(declval<T>(0)) ;\par
836 \par
837     template<class T> struct is_lvalue_reference \{ {\cf17 const} {\cf17 static} {\cf18 bool} value={\cf17 false}; \};\par
838     {\cf17 template}<{\cf17 class} T> {\cf17 struct }is_lvalue_reference<T&> \{ {\cf17 const} {\cf17 static} {\cf18 bool} value={\cf17 true}; \};\par
839 \par
840     {\cf17 template}<{\cf17 class} T> {\cf17 struct }is_rvalue_reference \{ {\cf17 const} {\cf17 static} {\cf18 bool} value={\cf17 false}; \};\par
841     {\cf17 template}<{\cf17 class} T> {\cf17 struct }is_rvalue_reference<T&&> \{ {\cf17 const} {\cf17 static} {\cf18 bool} value={\cf17 true}; \};\par
842 \par
843     {\cf17 template} <{\cf17 class} T>\par
844     {\cf17 inline} T&& forward({\cf17 typename} remove_reference<T>::type& t) DOCTEST_NOEXCEPT\par
845     \{\par
846         {\cf19 return} {\cf17 static_cast<}T&&{\cf17 >}(t);\par
847     \}\par
848 \par
849     {\cf17 template} <{\cf17 class} T>\par
850     {\cf17 inline} T&& forward({\cf17 typename} remove_reference<T>::type&& t) DOCTEST_NOEXCEPT\par
851     \{\par
852         {\cf17 static_assert}(!is_lvalue_reference<T>::value,\par
853                         {\cf22 "Can not forward an rvalue as an lvalue."});\par
854         {\cf19 return} {\cf17 static_cast<}T&&{\cf17 >}(t);\par
855     \}\par
856 \par
857     {\cf17 template}<{\cf17 class} T> {\cf17 struct }remove_const          \{ {\cf17 typedef} T type; \};\par
858     {\cf17 template}<{\cf17 class} T> {\cf17 struct }remove_const<const T> \{ {\cf17 typedef} T type; \};\par
859 {\cf21 #ifdef DOCTEST_CONFIG_INCLUDE_TYPE_TRAITS}\par
860     {\cf17 template}<{\cf17 class} T> {\cf17 struct }is_enum : {\cf17 public} std::is_enum<T> \{\};\par
861     {\cf17 template}<{\cf17 class} T> {\cf17 struct }underlying_type : {\cf17 public} std::underlying_type<T> \{\};\par
862 {\cf21 #else}\par
863     {\cf20 // Use compiler intrinsics}\par
864     {\cf17 template}<{\cf17 class} T> {\cf17 struct }is_enum \{ DOCTEST_CONSTEXPR {\cf17 static} {\cf18 bool} value = __is_enum(T); \};\par
865     {\cf17 template}<{\cf17 class} T> {\cf17 struct }underlying_type \{ {\cf17 typedef} __underlying_type(T) type; \};\par
866 {\cf21 #endif}\par
867     {\cf20 // clang-format on}\par
868 \par
869     {\cf17 template} <{\cf17 typename} T>\par
870     {\cf17 struct }deferred_false\par
871     {\cf20 // cppcheck-suppress unusedStructMember}\par
872     \{ {\cf17 static} {\cf17 const} {\cf18 bool} value = {\cf17 false}; \};\par
873 \par
874     {\cf17 namespace }has_insertion_operator_impl \{\par
875         std::ostream &os();\par
876         {\cf17 template}<{\cf17 class} T>\par
877         DOCTEST_REF_WRAP(T) val();\par
878 \par
879         {\cf17 template}<{\cf17 class}, {\cf17 class} = {\cf18 void}>\par
880         {\cf17 struct }check \{\par
881             {\cf17 static} DOCTEST_CONSTEXPR {\cf18 bool} value = {\cf17 false};\par
882         \};\par
883 \par
884         {\cf17 template}<{\cf17 class} T>\par
885         {\cf17 struct }check<T, decltype(os() << val<T>(), void())> \{\par
886             {\cf17 static} DOCTEST_CONSTEXPR {\cf18 bool} value = {\cf17 true};\par
887         \};\par
888     \} {\cf20 // namespace has_insertion_operator_impl}\par
889 \par
890     {\cf17 template}<{\cf17 class} T>\par
891     {\cf17 using }has_insertion_operator = has_insertion_operator_impl::check<const T>;\par
892 \par
893     DOCTEST_INTERFACE std::ostream* tlssPush();\par
894     DOCTEST_INTERFACE String tlssPop();\par
895 \par
896 \par
897     {\cf17 template} <{\cf18 bool} C>\par
898     {\cf17 struct }StringMakerBase\par
899     \{\par
900         {\cf17 template} <{\cf17 typename} T>\par
901         {\cf17 static} String convert({\cf17 const} DOCTEST_REF_WRAP(T)) \{\par
902             {\cf19 return} {\cf22 "\{?\}"};\par
903         \}\par
904     \};\par
905 \par
906     {\cf20 // Vector<int> and various type other than pointer or array.}\par
907     {\cf17 template}<{\cf17 typename} T>\par
908     {\cf17 struct }filldata\par
909     \{\par
910         {\cf17 static} {\cf18 void} fill(std::ostream* stream, {\cf17 const} T &in) \{\par
911           *stream << in;\par
912         \}\par
913     \};\par
914 \par
915     {\cf17 template}<{\cf17 typename} T,{\cf18 unsigned} {\cf18 long} N>\par
916     {\cf17 struct }filldata<T[N]>\par
917     \{\par
918         {\cf17 static} {\cf18 void} fill(std::ostream* stream, {\cf17 const} T (&in)[N]) \{\par
919             {\cf19 for} ({\cf18 unsigned} {\cf18 long} i = 0; i < N; i++) \{\par
920                 *stream << in[i];\par
921             \}\par
922         \}\par
923     \};\par
924 \par
925     {\cf20 // Specialized since we don't want the terminating null byte!}\par
926     {\cf17 template}<{\cf18 unsigned} {\cf18 long} N>\par
927     {\cf17 struct }filldata<const char[N]>\par
928     \{\par
929         {\cf17 static} {\cf18 void} fill(std::ostream* stream, {\cf17 const} {\cf18 char}(&in)[N]) \{\par
930             *stream << in;\par
931         \}\par
932     \};\par
933 \par
934     {\cf17 template}<{\cf17 typename} T>\par
935     {\cf18 void} filloss(std::ostream* stream, {\cf17 const} T& in) \{\par
936         filldata<T>::fill(stream, in);\par
937     \}\par
938 \par
939     {\cf17 template}<{\cf17 typename} T,{\cf18 unsigned} {\cf18 long} N>\par
940     {\cf18 void} filloss(std::ostream* stream, {\cf17 const} T (&in)[N]) \{\par
941         {\cf20 // T[N], T(&)[N], T(&&)[N] have same behaviour.}\par
942         {\cf20 // Hence remove reference.}\par
943         filldata<{\cf17 typename} remove_reference<{\cf17 decltype}(in)>::type>::fill(stream, in);\par
944     \}\par
945 \par
946     {\cf17 template} <>\par
947     {\cf17 struct }StringMakerBase<true>\par
948     \{\par
949         {\cf17 template} <{\cf17 typename} T>\par
950         {\cf17 static} String convert({\cf17 const} DOCTEST_REF_WRAP(T) in) \{\par
951             {\cf20 /* When parameter "in" is a null terminated const char* it works.}\par
952 {\cf20              * When parameter "in" is a T arr[N] without '\\0' we can fill the}\par
953 {\cf20              * stringstream with N objects (T=char).If in is char pointer *}\par
954 {\cf20              * without '\\0' , it would cause segfault}\par
955 {\cf20              * stepping over unaccessible memory.}\par
956 {\cf20              */}\par
957 \par
958             std::ostream* stream = tlssPush();\par
959             filloss(stream, in);\par
960             {\cf19 return} tlssPop();\par
961         \}\par
962     \};\par
963 \par
964     DOCTEST_INTERFACE String rawMemoryToString({\cf17 const} {\cf18 void}* {\cf18 object}, {\cf18 unsigned} size);\par
965 \par
966     {\cf17 template} <{\cf17 typename} T>\par
967     String rawMemoryToString({\cf17 const} DOCTEST_REF_WRAP(T) {\cf18 object}) \{\par
968         {\cf19 return} rawMemoryToString(&{\cf18 object}, {\cf17 sizeof}({\cf18 object}));\par
969     \}\par
970 \par
971     {\cf17 template} <{\cf17 typename} T>\par
972     {\cf17 const} {\cf18 char}* type_to_string() \{\par
973         {\cf19 return} {\cf22 "<>"};\par
974     \}\par
975 \} {\cf20 // namespace detail}\par
976 \par
977 {\cf17 template} <{\cf17 typename} T>\par
978 {\cf17 struct }StringMaker : {\cf17 public} detail::StringMakerBase<detail::has_insertion_operator<T>::value>\par
979 \{\};\par
980 \par
981 {\cf17 template} <{\cf17 typename} T>\par
982 {\cf17 struct }StringMaker<T*>\par
983 \{\par
984     {\cf17 template} <{\cf17 typename} U>\par
985     {\cf17 static} String convert(U* p) \{\par
986         {\cf19 if}(p)\par
987             {\cf19 return} detail::rawMemoryToString(p);\par
988         {\cf19 return} {\cf22 "NULL"};\par
989     \}\par
990 \};\par
991 \par
992 {\cf17 template} <{\cf17 typename} R, {\cf17 typename} C>\par
993 {\cf17 struct }StringMaker<R C::*>\par
994 \{\par
995     {\cf17 static} String convert(R C::*p) \{\par
996         {\cf19 if}(p)\par
997             {\cf19 return} detail::rawMemoryToString(p);\par
998         {\cf19 return} {\cf22 "NULL"};\par
999     \}\par
1000 \};\par
1001 \par
1002 template <typename T, typename detail::enable_if<!detail::is_enum<T>::value, {\cf18 bool}>::type = {\cf17 true}>\par
1003 String toString({\cf17 const} DOCTEST_REF_WRAP(T) value) \{\par
1004     {\cf19 return} StringMaker<T>::convert(value);\par
1005 \}\par
1006 \par
1007 {\cf21 #ifdef DOCTEST_CONFIG_TREAT_CHAR_STAR_AS_STRING}\par
1008 DOCTEST_INTERFACE String toString({\cf18 char}* in);\par
1009 DOCTEST_INTERFACE String toString({\cf17 const} {\cf18 char}* in);\par
1010 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_TREAT_CHAR_STAR_AS_STRING}\par
1011 DOCTEST_INTERFACE String toString({\cf18 bool} in);\par
1012 DOCTEST_INTERFACE String toString({\cf18 float} in);\par
1013 DOCTEST_INTERFACE String toString({\cf18 double} in);\par
1014 DOCTEST_INTERFACE String toString({\cf18 double} {\cf18 long} in);\par
1015 \par
1016 DOCTEST_INTERFACE String toString({\cf18 char} in);\par
1017 DOCTEST_INTERFACE String toString({\cf18 char} {\cf18 signed} in);\par
1018 DOCTEST_INTERFACE String toString({\cf18 char} {\cf18 unsigned} in);\par
1019 DOCTEST_INTERFACE String toString({\cf18 int} {\cf18 short} in);\par
1020 DOCTEST_INTERFACE String toString({\cf18 int} {\cf18 short} {\cf18 unsigned} in);\par
1021 DOCTEST_INTERFACE String toString({\cf18 int} in);\par
1022 DOCTEST_INTERFACE String toString({\cf18 int} {\cf18 unsigned} in);\par
1023 DOCTEST_INTERFACE String toString({\cf18 int} {\cf18 long} in);\par
1024 DOCTEST_INTERFACE String toString({\cf18 int} {\cf18 long} {\cf18 unsigned} in);\par
1025 DOCTEST_INTERFACE String toString({\cf18 int} {\cf18 long} {\cf18 long} in);\par
1026 DOCTEST_INTERFACE String toString({\cf18 int} {\cf18 long} {\cf18 long} {\cf18 unsigned} in);\par
1027 DOCTEST_INTERFACE String toString(std::nullptr_t in);\par
1028 \par
1029 template <typename T, typename detail::enable_if<detail::is_enum<T>::value, {\cf18 bool}>::type = {\cf17 true}>\par
1030 String toString({\cf17 const} DOCTEST_REF_WRAP(T) value) \{\par
1031     {\cf17 typedef} {\cf17 typename} detail::underlying_type<T>::type UT;\par
1032     {\cf19 return} toString({\cf17 static_cast<}UT{\cf17 >}(value));\par
1033 \}\par
1034 \par
1035 {\cf21 #if DOCTEST_MSVC >= DOCTEST_COMPILER(19, 20, 0)}\par
1036 {\cf20 // see this issue on why this is needed: https://github.com/doctest/doctest/issues/183}\par
1037 DOCTEST_INTERFACE String toString({\cf17 const} std::string& in);\par
1038 {\cf21 #endif }{\cf20 // VS 2019}\par
1039 \par
1040 {\cf17 class }DOCTEST_INTERFACE Approx\par
1041 \{\par
1042 {\cf17 public}:\par
1043     {\cf17 explicit} Approx({\cf18 double} value);\par
1044 \par
1045     Approx operator()({\cf18 double} value) {\cf17 const};\par
1046 \par
1047 {\cf21 #ifdef DOCTEST_CONFIG_INCLUDE_TYPE_TRAITS}\par
1048     {\cf17 template} <{\cf17 typename} T>\par
1049     {\cf17 explicit} Approx({\cf17 const} T& value,\par
1050                     {\cf17 typename} detail::enable_if<std::is_constructible<double, T>::value>::type* =\par
1051                             {\cf17 static_cast<}T*{\cf17 >}({\cf17 nullptr})) \{\par
1052         *{\cf17 this} = Approx({\cf17 static_cast<}{\cf18 double}{\cf17 >}(value));\par
1053     \}\par
1054 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_INCLUDE_TYPE_TRAITS}\par
1055 \par
1056     Approx& epsilon({\cf18 double} newEpsilon);\par
1057 \par
1058 {\cf21 #ifdef DOCTEST_CONFIG_INCLUDE_TYPE_TRAITS}\par
1059     {\cf17 template} <{\cf17 typename} T>\par
1060     {\cf17 typename} detail::enable_if<std::is_constructible<double, T>::value, Approx&>::type epsilon(\par
1061             {\cf17 const} T& newEpsilon) \{\par
1062         m_epsilon = {\cf17 static_cast<}{\cf18 double}{\cf17 >}(newEpsilon);\par
1063         {\cf19 return} *{\cf17 this};\par
1064     \}\par
1065 {\cf21 #endif }{\cf20 //  DOCTEST_CONFIG_INCLUDE_TYPE_TRAITS}\par
1066 \par
1067     Approx& scale({\cf18 double} newScale);\par
1068 \par
1069 {\cf21 #ifdef DOCTEST_CONFIG_INCLUDE_TYPE_TRAITS}\par
1070     {\cf17 template} <{\cf17 typename} T>\par
1071     {\cf17 typename} detail::enable_if<std::is_constructible<double, T>::value, Approx&>::type scale(\par
1072             {\cf17 const} T& newScale) \{\par
1073         m_scale = {\cf17 static_cast<}{\cf18 double}{\cf17 >}(newScale);\par
1074         {\cf19 return} *{\cf17 this};\par
1075     \}\par
1076 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_INCLUDE_TYPE_TRAITS}\par
1077 \par
1078     {\cf20 // clang-format off}\par
1079     DOCTEST_INTERFACE {\cf17 friend} {\cf18 bool} operator==({\cf18 double} lhs, {\cf17 const} Approx & rhs);\par
1080     DOCTEST_INTERFACE {\cf17 friend} {\cf18 bool} operator==({\cf17 const} Approx & lhs, {\cf18 double} rhs);\par
1081     DOCTEST_INTERFACE {\cf17 friend} {\cf18 bool} operator!=({\cf18 double} lhs, {\cf17 const} Approx & rhs);\par
1082     DOCTEST_INTERFACE {\cf17 friend} {\cf18 bool} operator!=({\cf17 const} Approx & lhs, {\cf18 double} rhs);\par
1083     DOCTEST_INTERFACE {\cf17 friend} {\cf18 bool} operator<=({\cf18 double} lhs, {\cf17 const} Approx & rhs);\par
1084     DOCTEST_INTERFACE {\cf17 friend} {\cf18 bool} operator<=({\cf17 const} Approx & lhs, {\cf18 double} rhs);\par
1085     DOCTEST_INTERFACE {\cf17 friend} {\cf18 bool} operator>=({\cf18 double} lhs, {\cf17 const} Approx & rhs);\par
1086     DOCTEST_INTERFACE {\cf17 friend} {\cf18 bool} operator>=({\cf17 const} Approx & lhs, {\cf18 double} rhs);\par
1087     DOCTEST_INTERFACE {\cf17 friend} {\cf18 bool} operator< ({\cf18 double} lhs, {\cf17 const} Approx & rhs);\par
1088     DOCTEST_INTERFACE {\cf17 friend} {\cf18 bool} operator< ({\cf17 const} Approx & lhs, {\cf18 double} rhs);\par
1089     DOCTEST_INTERFACE {\cf17 friend} {\cf18 bool} operator> ({\cf18 double} lhs, {\cf17 const} Approx & rhs);\par
1090     DOCTEST_INTERFACE {\cf17 friend} {\cf18 bool} operator> ({\cf17 const} Approx & lhs, {\cf18 double} rhs);\par
1091 \par
1092     DOCTEST_INTERFACE {\cf17 friend} String toString({\cf17 const} Approx& in);\par
1093 \par
1094 {\cf21 #ifdef DOCTEST_CONFIG_INCLUDE_TYPE_TRAITS}\par
1095 {\cf21 #define DOCTEST_APPROX_PREFIX \\}\par
1096 {\cf21     template <typename T> friend typename detail::enable_if<std::is_constructible<double, T>::value, bool>::type}\par
1097 \par
1098     DOCTEST_APPROX_PREFIX operator==({\cf17 const} T& lhs, {\cf17 const} Approx& rhs) \{ {\cf19 return} operator==({\cf18 double}(lhs), rhs); \}\par
1099     DOCTEST_APPROX_PREFIX operator==({\cf17 const} Approx& lhs, {\cf17 const} T& rhs) \{ {\cf19 return} operator==(rhs, lhs); \}\par
1100     DOCTEST_APPROX_PREFIX operator!=({\cf17 const} T& lhs, {\cf17 const} Approx& rhs) \{ {\cf19 return} !operator==(lhs, rhs); \}\par
1101     DOCTEST_APPROX_PREFIX operator!=({\cf17 const} Approx& lhs, {\cf17 const} T& rhs) \{ {\cf19 return} !operator==(rhs, lhs); \}\par
1102     DOCTEST_APPROX_PREFIX operator<=({\cf17 const} T& lhs, {\cf17 const} Approx& rhs) \{ {\cf19 return} double(lhs) < rhs.m_value || lhs == rhs; \}\par
1103     DOCTEST_APPROX_PREFIX operator<=({\cf17 const} Approx& lhs, {\cf17 const} T& rhs) \{ {\cf19 return} lhs.m_value < double(rhs) || lhs == rhs; \}\par
1104     DOCTEST_APPROX_PREFIX operator>=({\cf17 const} T& lhs, {\cf17 const} Approx& rhs) \{ {\cf19 return} double(lhs) > rhs.m_value || lhs == rhs; \}\par
1105     DOCTEST_APPROX_PREFIX operator>=({\cf17 const} Approx& lhs, {\cf17 const} T& rhs) \{ {\cf19 return} lhs.m_value > double(rhs) || lhs == rhs; \}\par
1106     DOCTEST_APPROX_PREFIX operator< ({\cf17 const} T& lhs, {\cf17 const} Approx& rhs) \{ {\cf19 return} double(lhs) < rhs.m_value && lhs != rhs; \}\par
1107     DOCTEST_APPROX_PREFIX operator< ({\cf17 const} Approx& lhs, {\cf17 const} T& rhs) \{ {\cf19 return} lhs.m_value < double(rhs) && lhs != rhs; \}\par
1108     DOCTEST_APPROX_PREFIX operator> ({\cf17 const} T& lhs, {\cf17 const} Approx& rhs) \{ {\cf19 return} double(lhs) > rhs.m_value && lhs != rhs; \}\par
1109     DOCTEST_APPROX_PREFIX operator> ({\cf17 const} Approx& lhs, {\cf17 const} T& rhs) \{ {\cf19 return} lhs.m_value > double(rhs) && lhs != rhs; \}\par
1110 {\cf21 #undef DOCTEST_APPROX_PREFIX}\par
1111 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_INCLUDE_TYPE_TRAITS}\par
1112 \par
1113     {\cf20 // clang-format on}\par
1114 \par
1115 {\cf17 private}:\par
1116     {\cf18 double} m_epsilon;\par
1117     {\cf18 double} m_scale;\par
1118     {\cf18 double} m_value;\par
1119 \};\par
1120 \par
1121 DOCTEST_INTERFACE String toString({\cf17 const} Approx& in);\par
1122 \par
1123 DOCTEST_INTERFACE {\cf17 const} ContextOptions* getContextOptions();\par
1124 \par
1125 {\cf21 #if !defined(DOCTEST_CONFIG_DISABLE)}\par
1126 \par
1127 {\cf17 namespace }detail \{\par
1128     {\cf20 // clang-format off}\par
1129 {\cf21 #ifdef DOCTEST_CONFIG_TREAT_CHAR_STAR_AS_STRING}\par
1130     {\cf17 template}<{\cf17 class} T>               {\cf17 struct }decay_array       \{ {\cf17 typedef} T type; \};\par
1131     {\cf17 template}<{\cf17 class} T, {\cf18 unsigned} N>   {\cf17 struct }decay_array<T[N]> \{ {\cf17 typedef} T* type; \};\par
1132     {\cf17 template}<{\cf17 class} T>               {\cf17 struct }decay_array<T[]>  \{ {\cf17 typedef} T* type; \};\par
1133 \par
1134     {\cf17 template}<{\cf17 class} T>   {\cf17 struct }not_char_pointer              \{ {\cf17 enum} \{ value = 1 \}; \};\par
1135     {\cf17 template}<>          {\cf17 struct }not_char_pointer<char*>       \{ {\cf17 enum} \{ value = 0 \}; \};\par
1136     {\cf17 template}<>          {\cf17 struct }not_char_pointer<const char*> \{ {\cf17 enum} \{ value = 0 \}; \};\par
1137 \par
1138     {\cf17 template}<{\cf17 class} T> {\cf17 struct }can_use_op : {\cf17 public} not_char_pointer<typename decay_array<T>::type> \{\};\par
1139 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_TREAT_CHAR_STAR_AS_STRING}\par
1140     {\cf20 // clang-format on}\par
1141 \par
1142     {\cf17 struct }DOCTEST_INTERFACE TestFailureException\par
1143     \{\par
1144     \};\par
1145 \par
1146     DOCTEST_INTERFACE {\cf18 bool} checkIfShouldThrow(assertType::Enum at);\par
1147 \par
1148 {\cf21 #ifndef DOCTEST_CONFIG_NO_EXCEPTIONS}\par
1149     DOCTEST_NORETURN\par
1150 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_NO_EXCEPTIONS}\par
1151     DOCTEST_INTERFACE {\cf18 void} throwException();\par
1152 \par
1153     {\cf17 struct }DOCTEST_INTERFACE Subcase\par
1154     \{\par
1155         SubcaseSignature m_signature;\par
1156         {\cf18 bool}             m_entered = {\cf17 false};\par
1157 \par
1158         Subcase({\cf17 const} String& name, {\cf17 const} {\cf18 char}* file, {\cf18 int} line);\par
1159         ~Subcase();\par
1160 \par
1161         {\cf17 operator} bool() {\cf17 const};\par
1162     \};\par
1163 \par
1164     {\cf17 template} <{\cf17 typename} L, {\cf17 typename} R>\par
1165     String stringifyBinaryExpr({\cf17 const} DOCTEST_REF_WRAP(L) lhs, {\cf17 const} {\cf18 char}* op,\par
1166                                {\cf17 const} DOCTEST_REF_WRAP(R) rhs) \{\par
1167         {\cf20 // NOLINTNEXTLINE(clang-analyzer-cplusplus.NewDeleteLeaks)}\par
1168         {\cf19 return} toString(lhs) + op + toString(rhs);\par
1169     \}\par
1170 \par
1171 {\cf21 #if DOCTEST_CLANG && DOCTEST_CLANG < DOCTEST_COMPILER(3, 6, 0)}\par
1172 DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH({\cf22 "-Wunused-comparison"})\par
1173 {\cf21 #endif}\par
1174 \par
1175 {\cf20 // This will check if there is any way it could find a operator like member or friend and uses it.}\par
1176 {\cf20 // If not it doesn't find the operator or if the operator at global scope is defined after}\par
1177 {\cf20 // this template, the template won't be instantiated due to SFINAE. Once the template is not}\par
1178 {\cf20 // instantiated it can look for global operator using normal conversions.}\par
1179 {\cf21 #define SFINAE_OP(ret,op) decltype((void)(doctest::detail::declval<L>() op doctest::detail::declval<R>()),ret\{\})}\par
1180 \par
1181 {\cf21 #define DOCTEST_DO_BINARY_EXPRESSION_COMPARISON(op, op_str, op_macro)                              \\}\par
1182 {\cf21     template <typename R>                                                                          \\}\par
1183 {\cf21     DOCTEST_NOINLINE SFINAE_OP(Result,op) operator op(const R&& rhs) \{                             \\}\par
1184 {\cf21     bool res = op_macro(doctest::detail::forward<const L>(lhs), doctest::detail::forward<const R>(rhs));                                                             \\}\par
1185 {\cf21         if(m_at & assertType::is_false)                                                            \\}\par
1186 {\cf21             res = !res;                                                                            \\}\par
1187 {\cf21         if(!res || doctest::getContextOptions()->success)                                          \\}\par
1188 {\cf21             return Result(res, stringifyBinaryExpr(lhs, op_str, rhs));                             \\}\par
1189 {\cf21         return Result(res);                                                                        \\}\par
1190 {\cf21     \}                                                                                              \\}\par
1191 {\cf21     template <typename R ,typename enable_if<!doctest::detail::is_rvalue_reference<R>::value, void >::type* = nullptr> \\}\par
1192 {\cf21     DOCTEST_NOINLINE SFINAE_OP(Result,op) operator op(const R& rhs) \{                              \\}\par
1193 {\cf21     bool res = op_macro(doctest::detail::forward<const L>(lhs), rhs);                              \\}\par
1194 {\cf21         if(m_at & assertType::is_false)                                                            \\}\par
1195 {\cf21             res = !res;                                                                            \\}\par
1196 {\cf21         if(!res || doctest::getContextOptions()->success)                                          \\}\par
1197 {\cf21             return Result(res, stringifyBinaryExpr(lhs, op_str, rhs));                             \\}\par
1198 {\cf21         return Result(res);                                                                        \\}\par
1199 {\cf21     \}}\par
1200 \par
1201     {\cf20 // more checks could be added - like in Catch:}\par
1202     {\cf20 // https://github.com/catchorg/Catch2/pull/1480/files}\par
1203     {\cf20 // https://github.com/catchorg/Catch2/pull/1481/files}\par
1204 {\cf21 #define DOCTEST_FORBIT_EXPRESSION(rt, op)                                                          \\}\par
1205 {\cf21     template <typename R>                                                                          \\}\par
1206 {\cf21     rt& operator op(const R&) \{                                                                    \\}\par
1207 {\cf21         static_assert(deferred_false<R>::value,                                                    \\}\par
1208 {\cf21                       "Expression Too Complex Please Rewrite As Binary Comparison!"});              \\\par
1209         return *this;                                                                              \\\par
1210     \}\par
1211 \par
1212     {\cf17 struct }DOCTEST_INTERFACE Result\par
1213     \{\par
1214         {\cf18 bool}   m_passed;\par
1215         String m_decomp;\par
1216 \par
1217         Result() = {\cf19 default};\par
1218         Result({\cf18 bool} passed, {\cf17 const} String& decomposition = String());\par
1219 \par
1220         {\cf20 // forbidding some expressions based on this table: https://en.cppreference.com/w/cpp/language/operator_precedence}\par
1221         DOCTEST_FORBIT_EXPRESSION(Result, &)\par
1222         DOCTEST_FORBIT_EXPRESSION(Result, ^)\par
1223         DOCTEST_FORBIT_EXPRESSION(Result, |)\par
1224         DOCTEST_FORBIT_EXPRESSION(Result, &&)\par
1225         DOCTEST_FORBIT_EXPRESSION(Result, ||)\par
1226         DOCTEST_FORBIT_EXPRESSION(Result, ==)\par
1227         DOCTEST_FORBIT_EXPRESSION(Result, !=)\par
1228         DOCTEST_FORBIT_EXPRESSION(Result, <)\par
1229         DOCTEST_FORBIT_EXPRESSION(Result, >)\par
1230         DOCTEST_FORBIT_EXPRESSION(Result, <=)\par
1231         DOCTEST_FORBIT_EXPRESSION(Result, >=)\par
1232         DOCTEST_FORBIT_EXPRESSION(Result, =)\par
1233         DOCTEST_FORBIT_EXPRESSION(Result, +=)\par
1234         DOCTEST_FORBIT_EXPRESSION(Result, -=)\par
1235         DOCTEST_FORBIT_EXPRESSION(Result, *=)\par
1236         DOCTEST_FORBIT_EXPRESSION(Result, /=)\par
1237         DOCTEST_FORBIT_EXPRESSION(Result, %=)\par
1238         DOCTEST_FORBIT_EXPRESSION(Result, <<=)\par
1239         DOCTEST_FORBIT_EXPRESSION(Result, >>=)\par
1240         DOCTEST_FORBIT_EXPRESSION(Result, &=)\par
1241         DOCTEST_FORBIT_EXPRESSION(Result, ^=)\par
1242         DOCTEST_FORBIT_EXPRESSION(Result, |=)\par
1243     \};\par
1244 \par
1245 {\cf21 #ifndef DOCTEST_CONFIG_NO_COMPARISON_WARNING_SUPPRESSION}\par
1246 \par
1247     DOCTEST_CLANG_SUPPRESS_WARNING_PUSH\par
1248     DOCTEST_CLANG_SUPPRESS_WARNING({\cf22 "-Wsign-conversion"})\par
1249     DOCTEST_CLANG_SUPPRESS_WARNING("-Wsign-compare")\par
1250     {\cf20 //DOCTEST_CLANG_SUPPRESS_WARNING("-Wdouble-promotion")}\par
1251     {\cf20 //DOCTEST_CLANG_SUPPRESS_WARNING("-Wconversion")}\par
1252     {\cf20 //DOCTEST_CLANG_SUPPRESS_WARNING("-Wfloat-equal")}\par
1253 \par
1254     DOCTEST_GCC_SUPPRESS_WARNING_PUSH\par
1255     DOCTEST_GCC_SUPPRESS_WARNING("-Wsign-conversion")\par
1256     DOCTEST_GCC_SUPPRESS_WARNING("-Wsign-compare")\par
1257     {\cf20 //DOCTEST_GCC_SUPPRESS_WARNING("-Wdouble-promotion")}\par
1258     {\cf20 //DOCTEST_GCC_SUPPRESS_WARNING("-Wconversion")}\par
1259     {\cf20 //DOCTEST_GCC_SUPPRESS_WARNING("-Wfloat-equal")}\par
1260 \par
1261     DOCTEST_MSVC_SUPPRESS_WARNING_PUSH\par
1262     {\cf20 // https://stackoverflow.com/questions/39479163 what's the difference between 4018 and 4389}\par
1263     DOCTEST_MSVC_SUPPRESS_WARNING(4388) {\cf20 // signed/unsigned mismatch}\par
1264     DOCTEST_MSVC_SUPPRESS_WARNING(4389) {\cf20 // 'operator' : signed/unsigned mismatch}\par
1265     DOCTEST_MSVC_SUPPRESS_WARNING(4018) {\cf20 // 'expression' : signed/unsigned mismatch}\par
1266     {\cf20 //DOCTEST_MSVC_SUPPRESS_WARNING(4805) // 'operation' : unsafe mix of type 'type' and type 'type' in operation}\par
1267 \par
1268 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_NO_COMPARISON_WARNING_SUPPRESSION}\par
1269 \par
1270     {\cf20 // clang-format off}\par
1271 {\cf21 #ifndef DOCTEST_CONFIG_TREAT_CHAR_STAR_AS_STRING}\par
1272 {\cf21 #define DOCTEST_COMPARISON_RETURN_TYPE bool}\par
1273 {\cf21 #else }{\cf20 // DOCTEST_CONFIG_TREAT_CHAR_STAR_AS_STRING}\par
1274 {\cf21 #define DOCTEST_COMPARISON_RETURN_TYPE typename enable_if<can_use_op<L>::value || can_use_op<R>::value, bool>::type}\par
1275     {\cf20 // NOLINTNEXTLINE(clang-analyzer-cplusplus.NewDeleteLeaks)}\par
1276     {\cf17 inline} {\cf18 bool} eq({\cf17 const} {\cf18 char}* lhs, {\cf17 const} {\cf18 char}* rhs) \{ {\cf19 return} String(lhs) == String(rhs); \}\par
1277     {\cf17 inline} {\cf18 bool} ne({\cf17 const} {\cf18 char}* lhs, {\cf17 const} {\cf18 char}* rhs) \{ {\cf19 return} String(lhs) != String(rhs); \}\par
1278     {\cf17 inline} {\cf18 bool} lt({\cf17 const} {\cf18 char}* lhs, {\cf17 const} {\cf18 char}* rhs) \{ {\cf19 return} String(lhs) <  String(rhs); \}\par
1279     {\cf17 inline} {\cf18 bool} gt({\cf17 const} {\cf18 char}* lhs, {\cf17 const} {\cf18 char}* rhs) \{ {\cf19 return} String(lhs) >  String(rhs); \}\par
1280     {\cf17 inline} {\cf18 bool} le({\cf17 const} {\cf18 char}* lhs, {\cf17 const} {\cf18 char}* rhs) \{ {\cf19 return} String(lhs) <= String(rhs); \}\par
1281     {\cf17 inline} {\cf18 bool} ge({\cf17 const} {\cf18 char}* lhs, {\cf17 const} {\cf18 char}* rhs) \{ {\cf19 return} String(lhs) >= String(rhs); \}\par
1282 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_TREAT_CHAR_STAR_AS_STRING}\par
1283     {\cf20 // clang-format on}\par
1284 \par
1285 {\cf21 #define DOCTEST_RELATIONAL_OP(name, op)                                                            \\}\par
1286 {\cf21     template <typename L, typename R>                                                              \\}\par
1287 {\cf21     DOCTEST_COMPARISON_RETURN_TYPE name(const DOCTEST_REF_WRAP(L) lhs,                             \\}\par
1288 {\cf21                                         const DOCTEST_REF_WRAP(R) rhs) \{                           \\}\par
1289 {\cf21         return lhs op rhs;                                                                         \\}\par
1290 {\cf21     \}}\par
1291 \par
1292     DOCTEST_RELATIONAL_OP(eq, ==)\par
1293     DOCTEST_RELATIONAL_OP(ne, !=)\par
1294     DOCTEST_RELATIONAL_OP(lt, <)\par
1295     DOCTEST_RELATIONAL_OP(gt, >)\par
1296     DOCTEST_RELATIONAL_OP(le, <=)\par
1297     DOCTEST_RELATIONAL_OP(ge, >=)\par
1298 \par
1299 {\cf21 #ifndef DOCTEST_CONFIG_TREAT_CHAR_STAR_AS_STRING}\par
1300 {\cf21 #define DOCTEST_CMP_EQ(l, r) l == r}\par
1301 {\cf21 #define DOCTEST_CMP_NE(l, r) l != r}\par
1302 {\cf21 #define DOCTEST_CMP_GT(l, r) l > r}\par
1303 {\cf21 #define DOCTEST_CMP_LT(l, r) l < r}\par
1304 {\cf21 #define DOCTEST_CMP_GE(l, r) l >= r}\par
1305 {\cf21 #define DOCTEST_CMP_LE(l, r) l <= r}\par
1306 {\cf21 #else }{\cf20 // DOCTEST_CONFIG_TREAT_CHAR_STAR_AS_STRING}\par
1307 {\cf21 #define DOCTEST_CMP_EQ(l, r) eq(l, r)}\par
1308 {\cf21 #define DOCTEST_CMP_NE(l, r) ne(l, r)}\par
1309 {\cf21 #define DOCTEST_CMP_GT(l, r) gt(l, r)}\par
1310 {\cf21 #define DOCTEST_CMP_LT(l, r) lt(l, r)}\par
1311 {\cf21 #define DOCTEST_CMP_GE(l, r) ge(l, r)}\par
1312 {\cf21 #define DOCTEST_CMP_LE(l, r) le(l, r)}\par
1313 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_TREAT_CHAR_STAR_AS_STRING}\par
1314 \par
1315     {\cf17 template} <{\cf17 typename} L>\par
1316     {\cf20 // cppcheck-suppress copyCtorAndEqOperator}\par
1317     {\cf17 struct }Expression_lhs\par
1318     \{\par
1319         L                lhs;\par
1320         assertType::Enum m_at;\par
1321 \par
1322         {\cf17 explicit} Expression_lhs(L&& in, assertType::Enum at)\par
1323                 : lhs(doctest::detail::forward<L>(in))\par
1324                 , m_at(at) \{\}\par
1325 \par
1326         DOCTEST_NOINLINE {\cf17 operator} Result() \{\par
1327 {\cf20 // this is needed only for MSVC 2015}\par
1328 DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH(4800) {\cf20 // 'int': forcing value to bool}\par
1329             {\cf18 bool} res = {\cf17 static_cast<}{\cf18 bool}{\cf17 >}(lhs);\par
1330 DOCTEST_MSVC_SUPPRESS_WARNING_POP\par
1331             {\cf19 if}(m_at & assertType::is_false) \par
1332                 res = !res;\par
1333 \par
1334             {\cf19 if}(!res || getContextOptions()->success)\par
1335                 {\cf19 return} Result(res, toString(lhs));\par
1336             {\cf19 return} Result(res);\par
1337         \}\par
1338 \par
1339         {\cf20 /* This is required for user-defined conversions from Expression_lhs to L */}\par
1340         {\cf17 operator} L(){\cf17  const }\{ {\cf19 return} lhs; \}\par
1341 \par
1342         {\cf20 // clang-format off}\par
1343         DOCTEST_DO_BINARY_EXPRESSION_COMPARISON(==, {\cf22 " == "}, DOCTEST_CMP_EQ) \par
1344         DOCTEST_DO_BINARY_EXPRESSION_COMPARISON(!=, {\cf22 " != "}, DOCTEST_CMP_NE) \par
1345         DOCTEST_DO_BINARY_EXPRESSION_COMPARISON(>,  {\cf22 " >  "}, DOCTEST_CMP_GT) \par
1346         DOCTEST_DO_BINARY_EXPRESSION_COMPARISON(<,  {\cf22 " <  "}, DOCTEST_CMP_LT) \par
1347         DOCTEST_DO_BINARY_EXPRESSION_COMPARISON(>=, {\cf22 " >= "}, DOCTEST_CMP_GE) \par
1348         DOCTEST_DO_BINARY_EXPRESSION_COMPARISON(<=, {\cf22 " <= "}, DOCTEST_CMP_LE) \par
1349         {\cf20 // clang-format on}\par
1350 \par
1351         {\cf20 // forbidding some expressions based on this table: https://en.cppreference.com/w/cpp/language/operator_precedence}\par
1352         DOCTEST_FORBIT_EXPRESSION(Expression_lhs, &)\par
1353         DOCTEST_FORBIT_EXPRESSION(Expression_lhs, ^)\par
1354         DOCTEST_FORBIT_EXPRESSION(Expression_lhs, |)\par
1355         DOCTEST_FORBIT_EXPRESSION(Expression_lhs, &&)\par
1356         DOCTEST_FORBIT_EXPRESSION(Expression_lhs, ||)\par
1357         DOCTEST_FORBIT_EXPRESSION(Expression_lhs, =)\par
1358         DOCTEST_FORBIT_EXPRESSION(Expression_lhs, +=)\par
1359         DOCTEST_FORBIT_EXPRESSION(Expression_lhs, -=)\par
1360         DOCTEST_FORBIT_EXPRESSION(Expression_lhs, *=)\par
1361         DOCTEST_FORBIT_EXPRESSION(Expression_lhs, /=)\par
1362         DOCTEST_FORBIT_EXPRESSION(Expression_lhs, %=)\par
1363         DOCTEST_FORBIT_EXPRESSION(Expression_lhs, <<=)\par
1364         DOCTEST_FORBIT_EXPRESSION(Expression_lhs, >>=)\par
1365         DOCTEST_FORBIT_EXPRESSION(Expression_lhs, &=)\par
1366         DOCTEST_FORBIT_EXPRESSION(Expression_lhs, ^=)\par
1367         DOCTEST_FORBIT_EXPRESSION(Expression_lhs, |=)\par
1368         {\cf20 // these 2 are unfortunate because they should be allowed - they have higher precedence over the comparisons, but the}\par
1369         {\cf20 // ExpressionDecomposer class uses the left shift operator to capture the left operand of the binary expression...}\par
1370         DOCTEST_FORBIT_EXPRESSION(Expression_lhs, <<)\par
1371         DOCTEST_FORBIT_EXPRESSION(Expression_lhs, >>)\par
1372     \};\par
1373 \par
1374 {\cf21 #ifndef DOCTEST_CONFIG_NO_COMPARISON_WARNING_SUPPRESSION}\par
1375 \par
1376     DOCTEST_CLANG_SUPPRESS_WARNING_POP\par
1377     DOCTEST_MSVC_SUPPRESS_WARNING_POP\par
1378     DOCTEST_GCC_SUPPRESS_WARNING_POP\par
1379 \par
1380 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_NO_COMPARISON_WARNING_SUPPRESSION}\par
1381 \par
1382 {\cf21 #if DOCTEST_CLANG && DOCTEST_CLANG < DOCTEST_COMPILER(3, 6, 0)}\par
1383 DOCTEST_CLANG_SUPPRESS_WARNING_POP\par
1384 {\cf21 #endif}\par
1385 \par
1386     {\cf17 struct }DOCTEST_INTERFACE ExpressionDecomposer\par
1387     \{\par
1388         assertType::Enum m_at;\par
1389 \par
1390         ExpressionDecomposer(assertType::Enum at);\par
1391 \par
1392         {\cf20 // The right operator for capturing expressions is "<=" instead of "<<" (based on the operator precedence table)}\par
1393         {\cf20 // but then there will be warnings from GCC about "-Wparentheses" and since "_Pragma()" is problematic this will stay for now...}\par
1394         {\cf20 // https://github.com/catchorg/Catch2/issues/870}\par
1395         {\cf20 // https://github.com/catchorg/Catch2/issues/565}\par
1396         {\cf17 template} <{\cf17 typename} L>\par
1397         Expression_lhs<const L> operator<<({\cf17 const} L &&operand) \{\par
1398             {\cf19 return} Expression_lhs<const L>(doctest::detail::forward<const L>(operand), m_at);\par
1399         \}\par
1400 \par
1401         template <typename L,typename enable_if<!doctest::detail::is_rvalue_reference<L>::value,{\cf18 void} >::type* = {\cf17 nullptr}>\par
1402         Expression_lhs<const L&> operator<<({\cf17 const} L &operand) \{\par
1403             {\cf19 return} Expression_lhs<const L&>(operand, m_at);\par
1404         \}\par
1405     \};\par
1406 \par
1407     {\cf17 struct }DOCTEST_INTERFACE TestSuite\par
1408     \{\par
1409         {\cf17 const} {\cf18 char}* m_test_suite = {\cf17 nullptr};\par
1410         {\cf17 const} {\cf18 char}* m_description = {\cf17 nullptr};\par
1411         {\cf18 bool}        m_skip = {\cf17 false};\par
1412         {\cf18 bool}        m_no_breaks = {\cf17 false};\par
1413         {\cf18 bool}        m_no_output = {\cf17 false};\par
1414         {\cf18 bool}        m_may_fail = {\cf17 false};\par
1415         {\cf18 bool}        m_should_fail = {\cf17 false};\par
1416         {\cf18 int}         m_expected_failures = 0;\par
1417         {\cf18 double}      m_timeout = 0;\par
1418 \par
1419         TestSuite& operator*({\cf17 const} {\cf18 char}* in);\par
1420 \par
1421         {\cf17 template} <{\cf17 typename} T>\par
1422         TestSuite& operator*({\cf17 const} T& in) \{\par
1423             in.fill(*{\cf17 this});\par
1424             {\cf19 return} *{\cf17 this};\par
1425         \}\par
1426     \};\par
1427 \par
1428     {\cf17 typedef} void (*funcType)();\par
1429 \par
1430     {\cf17 struct }DOCTEST_INTERFACE TestCase : {\cf17 public} TestCaseData\par
1431     \{\par
1432         funcType m_test; {\cf20 // a function pointer to the test case}\par
1433 \par
1434         {\cf17 const} {\cf18 char}* m_type; {\cf20 // for templated test cases - gets appended to the real name}\par
1435         {\cf18 int} m_template_id; {\cf20 // an ID used to distinguish between the different versions of a templated test case}\par
1436         String m_full_name; {\cf20 // contains the name (only for templated test cases!) + the template type}\par
1437 \par
1438         TestCase(funcType test, {\cf17 const} {\cf18 char}* file, {\cf18 unsigned} line, {\cf17 const} TestSuite& test_suite,\par
1439                  {\cf17 const} {\cf18 char}* type = {\cf22 ""}, {\cf18 int} template_id = -1);\par
1440 \par
1441         TestCase({\cf17 const} TestCase& other);\par
1442 \par
1443         DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH(26434) {\cf20 // hides a non-virtual function}\par
1444         TestCase& operator=(const TestCase& other);\par
1445         DOCTEST_MSVC_SUPPRESS_WARNING_POP\par
1446 \par
1447         TestCase& operator*(const {\cf18 char}* in);\par
1448 \par
1449         template <typename T>\par
1450         TestCase& operator*(const T& in) \{\par
1451             in.fill(*{\cf17 this});\par
1452             {\cf19 return} *{\cf17 this};\par
1453         \}\par
1454 \par
1455         {\cf18 bool} operator<({\cf17 const} TestCase& other) {\cf17 const};\par
1456     \};\par
1457 \par
1458     {\cf20 // forward declarations of functions used by the macros}\par
1459     DOCTEST_INTERFACE {\cf18 int}  regTest({\cf17 const} TestCase& tc);\par
1460     DOCTEST_INTERFACE {\cf18 int}  setTestSuite({\cf17 const} TestSuite& ts);\par
1461     DOCTEST_INTERFACE {\cf18 bool} isDebuggerActive();\par
1462 \par
1463     {\cf17 template}<{\cf17 typename} T>\par
1464     {\cf18 int} instantiationHelper({\cf17 const} T&) \{ {\cf19 return} 0; \}\par
1465 \par
1466     {\cf17 namespace }binaryAssertComparison \{\par
1467         {\cf17 enum} Enum\par
1468         \{\par
1469             eq = 0,\par
1470             ne,\par
1471             gt,\par
1472             lt,\par
1473             ge,\par
1474             le\par
1475         \};\par
1476     \} {\cf20 // namespace binaryAssertComparison}\par
1477 \par
1478     {\cf20 // clang-format off}\par
1479     {\cf17 template} <{\cf18 int}, {\cf17 class} L, {\cf17 class} R> {\cf17 struct }RelationalComparator     \{ {\cf18 bool} operator()({\cf17 const} DOCTEST_REF_WRAP(L),     {\cf17 const} DOCTEST_REF_WRAP(R)    ){\cf17  const }\{ {\cf19 return} {\cf17 false};        \} \};\par
1480 \par
1481 {\cf21 #define DOCTEST_BINARY_RELATIONAL_OP(n, op) \\}\par
1482 {\cf21     template <class L, class R> struct RelationalComparator<n, L, R> \{ bool operator()(const DOCTEST_REF_WRAP(L) lhs, const DOCTEST_REF_WRAP(R) rhs) const \{ return op(lhs, rhs); \} \};}\par
1483     {\cf20 // clang-format on}\par
1484 \par
1485     DOCTEST_BINARY_RELATIONAL_OP(0, doctest::detail::eq)\par
1486     DOCTEST_BINARY_RELATIONAL_OP(1, doctest::detail::ne)\par
1487     DOCTEST_BINARY_RELATIONAL_OP(2, doctest::detail::gt)\par
1488     DOCTEST_BINARY_RELATIONAL_OP(3, doctest::detail::lt)\par
1489     DOCTEST_BINARY_RELATIONAL_OP(4, doctest::detail::ge)\par
1490     DOCTEST_BINARY_RELATIONAL_OP(5, doctest::detail::le)\par
1491 \par
1492     struct DOCTEST_INTERFACE ResultBuilder : public AssertData\par
1493     \{\par
1494         ResultBuilder(assertType::Enum at, {\cf17 const} {\cf18 char}* file, {\cf18 int} line, {\cf17 const} {\cf18 char}* expr,\par
1495                       {\cf17 const} {\cf18 char}* exception_type = {\cf22 ""}, {\cf17 const} {\cf18 char}* exception_string = {\cf22 ""});\par
1496 \par
1497         {\cf18 void} setResult({\cf17 const} Result& res);\par
1498 \par
1499         {\cf17 template} <{\cf18 int} comparison, {\cf17 typename} L, {\cf17 typename} R>\par
1500         DOCTEST_NOINLINE {\cf18 bool} binary_assert({\cf17 const} DOCTEST_REF_WRAP(L) lhs,\par
1501                                             {\cf17 const} DOCTEST_REF_WRAP(R) rhs) \{\par
1502             m_failed = !RelationalComparator<comparison, L, R>()(lhs, rhs);\par
1503             {\cf19 if}(m_failed || getContextOptions()->success)\par
1504                 m_decomp = stringifyBinaryExpr(lhs, {\cf22 ", "}, rhs);\par
1505             {\cf19 return} !m_failed;\par
1506         \}\par
1507 \par
1508         {\cf17 template} <{\cf17 typename} L>\par
1509         DOCTEST_NOINLINE {\cf18 bool} unary_assert({\cf17 const} DOCTEST_REF_WRAP(L) val) \{\par
1510             m_failed = !val;\par
1511 \par
1512             {\cf19 if}(m_at & assertType::is_false) \par
1513                 m_failed = !m_failed;\par
1514 \par
1515             {\cf19 if}(m_failed || getContextOptions()->success)\par
1516                 m_decomp = toString(val);\par
1517 \par
1518             {\cf19 return} !m_failed;\par
1519         \}\par
1520 \par
1521         {\cf18 void} translateException();\par
1522 \par
1523         {\cf18 bool} log();\par
1524         {\cf18 void} react() {\cf17 const};\par
1525     \};\par
1526 \par
1527     {\cf17 namespace }assertAction \{\par
1528         {\cf17 enum} Enum\par
1529         \{\par
1530             nothing     = 0,\par
1531             dbgbreak    = 1,\par
1532             shouldthrow = 2\par
1533         \};\par
1534     \} {\cf20 // namespace assertAction}\par
1535 \par
1536     DOCTEST_INTERFACE {\cf18 void} failed_out_of_a_testing_context({\cf17 const} AssertData& ad);\par
1537 \par
1538     DOCTEST_INTERFACE {\cf18 bool} decomp_assert(assertType::Enum at, {\cf17 const} {\cf18 char}* file, {\cf18 int} line,\par
1539                                          {\cf17 const} {\cf18 char}* expr, Result result);\par
1540 \par
1541 {\cf21 #define DOCTEST_ASSERT_OUT_OF_TESTS(decomp)                                                        \\}\par
1542 {\cf21     do \{                                                                                           \\}\par
1543 {\cf21         if(!is_running_in_test) \{                                                                  \\}\par
1544 {\cf21             if(failed) \{                                                                           \\}\par
1545 {\cf21                 ResultBuilder rb(at, file, line, expr);                                            \\}\par
1546 {\cf21                 rb.m_failed = failed;                                                              \\}\par
1547 {\cf21                 rb.m_decomp = decomp;                                                              \\}\par
1548 {\cf21                 failed_out_of_a_testing_context(rb);                                               \\}\par
1549 {\cf21                 if(isDebuggerActive() && !getContextOptions()->no_breaks)                          \\}\par
1550 {\cf21                     DOCTEST_BREAK_INTO_DEBUGGER();                                                 \\}\par
1551 {\cf21                 if(checkIfShouldThrow(at))                                                         \\}\par
1552 {\cf21                     throwException();                                                              \\}\par
1553 {\cf21             \}                                                                                      \\}\par
1554 {\cf21             return !failed;                                                                        \\}\par
1555 {\cf21         \}                                                                                          \\}\par
1556 {\cf21     \} while(false)}\par
1557 \par
1558 {\cf21 #define DOCTEST_ASSERT_IN_TESTS(decomp)                                                            \\}\par
1559 {\cf21     ResultBuilder rb(at, file, line, expr);                                                        \\}\par
1560 {\cf21     rb.m_failed = failed;                                                                          \\}\par
1561 {\cf21     if(rb.m_failed || getContextOptions()->success)                                                \\}\par
1562 {\cf21         rb.m_decomp = decomp;                                                                      \\}\par
1563 {\cf21     if(rb.log())                                                                                   \\}\par
1564 {\cf21         DOCTEST_BREAK_INTO_DEBUGGER();                                                             \\}\par
1565 {\cf21     if(rb.m_failed && checkIfShouldThrow(at))                                                      \\}\par
1566 {\cf21     throwException()}\par
1567 \par
1568     {\cf17 template} <{\cf18 int} comparison, {\cf17 typename} L, {\cf17 typename} R>\par
1569     DOCTEST_NOINLINE {\cf18 bool} binary_assert(assertType::Enum at, {\cf17 const} {\cf18 char}* file, {\cf18 int} line,\par
1570                                         {\cf17 const} {\cf18 char}* expr, {\cf17 const} DOCTEST_REF_WRAP(L) lhs,\par
1571                                         {\cf17 const} DOCTEST_REF_WRAP(R) rhs) \{\par
1572         {\cf18 bool} failed = !RelationalComparator<comparison, L, R>()(lhs, rhs);\par
1573 \par
1574         {\cf20 // ###################################################################################}\par
1575         {\cf20 // IF THE DEBUGGER BREAKS HERE - GO 1 LEVEL UP IN THE CALLSTACK FOR THE FAILING ASSERT}\par
1576         {\cf20 // THIS IS THE EFFECT OF HAVING 'DOCTEST_CONFIG_SUPER_FAST_ASSERTS' DEFINED}\par
1577         {\cf20 // ###################################################################################}\par
1578         DOCTEST_ASSERT_OUT_OF_TESTS(stringifyBinaryExpr(lhs, {\cf22 ", "}, rhs));\par
1579         DOCTEST_ASSERT_IN_TESTS(stringifyBinaryExpr(lhs, {\cf22 ", "}, rhs));\par
1580         {\cf19 return} !failed;\par
1581     \}\par
1582 \par
1583     {\cf17 template} <{\cf17 typename} L>\par
1584     DOCTEST_NOINLINE {\cf18 bool} unary_assert(assertType::Enum at, {\cf17 const} {\cf18 char}* file, {\cf18 int} line,\par
1585                                        {\cf17 const} {\cf18 char}* expr, {\cf17 const} DOCTEST_REF_WRAP(L) val) \{\par
1586         {\cf18 bool} failed = !val;\par
1587 \par
1588         {\cf19 if}(at & assertType::is_false) \par
1589             failed = !failed;\par
1590 \par
1591         {\cf20 // ###################################################################################}\par
1592         {\cf20 // IF THE DEBUGGER BREAKS HERE - GO 1 LEVEL UP IN THE CALLSTACK FOR THE FAILING ASSERT}\par
1593         {\cf20 // THIS IS THE EFFECT OF HAVING 'DOCTEST_CONFIG_SUPER_FAST_ASSERTS' DEFINED}\par
1594         {\cf20 // ###################################################################################}\par
1595         DOCTEST_ASSERT_OUT_OF_TESTS(toString(val));\par
1596         DOCTEST_ASSERT_IN_TESTS(toString(val));\par
1597         {\cf19 return} !failed;\par
1598     \}\par
1599 \par
1600     {\cf17 struct }DOCTEST_INTERFACE IExceptionTranslator\par
1601     \{\par
1602         IExceptionTranslator();\par
1603         {\cf17 virtual} ~IExceptionTranslator();\par
1604         {\cf17 virtual} {\cf18 bool} translate(String&) {\cf17 const} = 0;\par
1605     \};\par
1606 \par
1607     {\cf17 template} <{\cf17 typename} T>\par
1608     {\cf17 class }ExceptionTranslator : {\cf17 public} IExceptionTranslator \par
1609     \{\par
1610     {\cf17 public}:\par
1611         {\cf17 explicit} ExceptionTranslator(String (*translateFunction)(T))\par
1612                 : m_translateFunction(translateFunction) \{\}\par
1613 \par
1614         {\cf18 bool} translate(String& res){\cf17  const override }\{\par
1615 {\cf21 #ifndef DOCTEST_CONFIG_NO_EXCEPTIONS}\par
1616             {\cf19 try} \{\par
1617                 {\cf19 throw}; {\cf20 // lgtm [cpp/rethrow-no-exception]}\par
1618                 {\cf20 // cppcheck-suppress catchExceptionByValue}\par
1619             \} {\cf19 catch}(T ex) \{                    {\cf20 // NOLINT}\par
1620                 res = m_translateFunction(ex); \par
1621                 {\cf19 return} {\cf17 true};\par
1622             \} {\cf19 catch}(...) \{\}         \par
1623 {\cf21 #endif                              }{\cf20 // DOCTEST_CONFIG_NO_EXCEPTIONS}\par
1624             {\cf17 static_cast<}{\cf18 void}{\cf17 >}(res); {\cf20 // to silence -Wunused-parameter}\par
1625             {\cf19 return} {\cf17 false};\par
1626         \}\par
1627 \par
1628     {\cf17 private}:\par
1629         String (*m_translateFunction)(T);\par
1630     \};\par
1631 \par
1632     DOCTEST_INTERFACE {\cf18 void} registerExceptionTranslatorImpl({\cf17 const} IExceptionTranslator* et);\par
1633 \par
1634     {\cf17 template} <{\cf18 bool} C>\par
1635     {\cf17 struct }StringStreamBase\par
1636     \{\par
1637         {\cf17 template} <{\cf17 typename} T>\par
1638         {\cf17 static} {\cf18 void} convert(std::ostream* s, {\cf17 const} T& in) \{\par
1639             *s << toString(in);\par
1640         \}\par
1641 \par
1642         {\cf20 // always treat char* as a string in this context - no matter}\par
1643         {\cf20 // if DOCTEST_CONFIG_TREAT_CHAR_STAR_AS_STRING is defined}\par
1644         {\cf17 static} {\cf18 void} convert(std::ostream* s, {\cf17 const} {\cf18 char}* in) \{ *s << String(in); \}\par
1645     \};\par
1646 \par
1647     {\cf17 template} <>\par
1648     {\cf17 struct }StringStreamBase<true>\par
1649     \{\par
1650         {\cf17 template} <{\cf17 typename} T>\par
1651         {\cf17 static} {\cf18 void} convert(std::ostream* s, {\cf17 const} T& in) \{\par
1652             *s << in;\par
1653         \}\par
1654     \};\par
1655 \par
1656     {\cf17 template} <{\cf17 typename} T>\par
1657     {\cf17 struct }StringStream : {\cf17 public} StringStreamBase<has_insertion_operator<T>::value>\par
1658     \{\};\par
1659 \par
1660     {\cf17 template} <{\cf17 typename} T>\par
1661     {\cf18 void} toStream(std::ostream* s, {\cf17 const} T& value) \{\par
1662         StringStream<T>::convert(s, value);\par
1663     \}\par
1664 \par
1665 {\cf21 #ifdef DOCTEST_CONFIG_TREAT_CHAR_STAR_AS_STRING}\par
1666     DOCTEST_INTERFACE {\cf18 void} toStream(std::ostream* s, {\cf18 char}* in);\par
1667     DOCTEST_INTERFACE {\cf18 void} toStream(std::ostream* s, {\cf17 const} {\cf18 char}* in);\par
1668 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_TREAT_CHAR_STAR_AS_STRING}\par
1669     DOCTEST_INTERFACE {\cf18 void} toStream(std::ostream* s, {\cf18 bool} in);\par
1670     DOCTEST_INTERFACE {\cf18 void} toStream(std::ostream* s, {\cf18 float} in);\par
1671     DOCTEST_INTERFACE {\cf18 void} toStream(std::ostream* s, {\cf18 double} in);\par
1672     DOCTEST_INTERFACE {\cf18 void} toStream(std::ostream* s, {\cf18 double} {\cf18 long} in);\par
1673 \par
1674     DOCTEST_INTERFACE {\cf18 void} toStream(std::ostream* s, {\cf18 char} in);\par
1675     DOCTEST_INTERFACE {\cf18 void} toStream(std::ostream* s, {\cf18 char} {\cf18 signed} in);\par
1676     DOCTEST_INTERFACE {\cf18 void} toStream(std::ostream* s, {\cf18 char} {\cf18 unsigned} in);\par
1677     DOCTEST_INTERFACE {\cf18 void} toStream(std::ostream* s, {\cf18 int} {\cf18 short} in);\par
1678     DOCTEST_INTERFACE {\cf18 void} toStream(std::ostream* s, {\cf18 int} {\cf18 short} {\cf18 unsigned} in);\par
1679     DOCTEST_INTERFACE {\cf18 void} toStream(std::ostream* s, {\cf18 int} in);\par
1680     DOCTEST_INTERFACE {\cf18 void} toStream(std::ostream* s, {\cf18 int} {\cf18 unsigned} in);\par
1681     DOCTEST_INTERFACE {\cf18 void} toStream(std::ostream* s, {\cf18 int} {\cf18 long} in);\par
1682     DOCTEST_INTERFACE {\cf18 void} toStream(std::ostream* s, {\cf18 int} {\cf18 long} {\cf18 unsigned} in);\par
1683     DOCTEST_INTERFACE {\cf18 void} toStream(std::ostream* s, {\cf18 int} {\cf18 long} {\cf18 long} in);\par
1684     DOCTEST_INTERFACE {\cf18 void} toStream(std::ostream* s, {\cf18 int} {\cf18 long} {\cf18 long} {\cf18 unsigned} in);\par
1685 \par
1686     {\cf20 // ContextScope base class used to allow implementing methods of ContextScope }\par
1687     {\cf20 // that don't depend on the template parameter in doctest.cpp.}\par
1688     {\cf17 class }DOCTEST_INTERFACE ContextScopeBase : {\cf17 public} IContextScope \{\par
1689     {\cf17 protected}:\par
1690         ContextScopeBase();\par
1691         ContextScopeBase(ContextScopeBase&& other);\par
1692 \par
1693         {\cf18 void} destroy();\par
1694         {\cf18 bool} need_to_destroy\{{\cf17 true}\};\par
1695     \};\par
1696 \par
1697     {\cf17 template} <{\cf17 typename} L> {\cf17 class }ContextScope : {\cf17 public} ContextScopeBase\par
1698     \{\par
1699         {\cf17 const} L lambda_;\par
1700 \par
1701     {\cf17 public}:\par
1702         {\cf17 explicit} ContextScope({\cf17 const} L &lambda) : lambda_(lambda) \{\}\par
1703 \par
1704         ContextScope(ContextScope &&other) : ContextScopeBase(static_cast<ContextScopeBase&&>(other)), lambda_(other.lambda_) \{\}\par
1705 \par
1706         {\cf18 void} stringify(std::ostream* s){\cf17  const override }\{ lambda_(s); \}\par
1707 \par
1708         ~ContextScope(){\cf17  override }\{\par
1709             {\cf19 if} (need_to_destroy) \{\par
1710                 destroy();\par
1711             \}\par
1712         \}\par
1713     \};\par
1714 \par
1715     {\cf17 struct }DOCTEST_INTERFACE MessageBuilder : {\cf17 public} MessageData\par
1716     \{\par
1717         std::ostream* m_stream;\par
1718         {\cf18 bool}          logged = {\cf17 false};\par
1719 \par
1720         MessageBuilder({\cf17 const} {\cf18 char}* file, {\cf18 int} line, assertType::Enum severity);\par
1721         MessageBuilder() = {\cf17 delete};\par
1722         ~MessageBuilder();\par
1723 \par
1724         {\cf20 // the preferred way of chaining parameters for stringification}\par
1725         {\cf17 template} <{\cf17 typename} T>\par
1726         MessageBuilder& operator,({\cf17 const} T& in) \{\par
1727             toStream(m_stream, in);\par
1728             {\cf19 return} *{\cf17 this};\par
1729         \}\par
1730 \par
1731         {\cf20 // kept here just for backwards-compatibility - the comma operator should be preferred now}\par
1732         {\cf17 template} <{\cf17 typename} T>\par
1733         MessageBuilder& operator<<({\cf17 const} T& in) \{ {\cf19 return} this->operator,(in); \}\par
1734 \par
1735         {\cf20 // the `,` operator has the lowest operator precedence - if `<<` is used by the user then}\par
1736         {\cf20 // the `,` operator will be called last which is not what we want and thus the `*` operator}\par
1737         {\cf20 // is used first (has higher operator precedence compared to `<<`) so that we guarantee that}\par
1738         {\cf20 // an operator of the MessageBuilder class is called first before the rest of the parameters}\par
1739         {\cf17 template} <{\cf17 typename} T>\par
1740         MessageBuilder& operator*({\cf17 const} T& in) \{ {\cf19 return} this->operator,(in); \}\par
1741 \par
1742         {\cf18 bool} log();\par
1743         {\cf18 void} react();\par
1744     \};\par
1745     \par
1746     {\cf17 template} <{\cf17 typename} L>\par
1747     ContextScope<L> MakeContextScope({\cf17 const} L &lambda) \{\par
1748         {\cf19 return} ContextScope<L>(lambda);\par
1749     \}\par
1750 \} {\cf20 // namespace detail}\par
1751 \par
1752 {\cf21 #define DOCTEST_DEFINE_DECORATOR(name, type, def)                                                  \\}\par
1753 {\cf21     struct name                                                                                    \\}\par
1754 {\cf21     \{                                                                                              \\}\par
1755 {\cf21         type data;                                                                                 \\}\par
1756 {\cf21         name(type in = def)                                                                        \\}\par
1757 {\cf21                 : data(in) \{\}                                                                      \\}\par
1758 {\cf21         void fill(detail::TestCase& state) const \{ state.DOCTEST_CAT(m_, name) = data; \}           \\}\par
1759 {\cf21         void fill(detail::TestSuite& state) const \{ state.DOCTEST_CAT(m_, name) = data; \}          \\}\par
1760 {\cf21     \}}\par
1761 \par
1762 DOCTEST_DEFINE_DECORATOR(test_suite, {\cf17 const} {\cf18 char}*, {\cf22 ""});\par
1763 DOCTEST_DEFINE_DECORATOR(description, {\cf17 const} {\cf18 char}*, {\cf22 ""});\par
1764 DOCTEST_DEFINE_DECORATOR(skip, {\cf18 bool}, {\cf17 true});\par
1765 DOCTEST_DEFINE_DECORATOR(no_breaks, {\cf18 bool}, {\cf17 true});\par
1766 DOCTEST_DEFINE_DECORATOR(no_output, {\cf18 bool}, {\cf17 true});\par
1767 DOCTEST_DEFINE_DECORATOR(timeout, {\cf18 double}, 0);\par
1768 DOCTEST_DEFINE_DECORATOR(may_fail, {\cf18 bool}, {\cf17 true});\par
1769 DOCTEST_DEFINE_DECORATOR(should_fail, {\cf18 bool}, {\cf17 true});\par
1770 DOCTEST_DEFINE_DECORATOR(expected_failures, {\cf18 int}, 0);\par
1771 \par
1772 {\cf17 template} <{\cf17 typename} T>\par
1773 {\cf18 int} registerExceptionTranslator(String (*translateFunction)(T)) \{\par
1774     DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH({\cf22 "-Wexit-time-destructors"})\par
1775     {\cf17 static} detail::ExceptionTranslator<T> exceptionTranslator(translateFunction);\par
1776     DOCTEST_CLANG_SUPPRESS_WARNING_POP\par
1777     detail::registerExceptionTranslatorImpl(&exceptionTranslator);\par
1778     {\cf19 return} 0;\par
1779 \}\par
1780 \par
1781 \} {\cf20 // namespace doctest}\par
1782 \par
1783 {\cf20 // in a separate namespace outside of doctest because the DOCTEST_TEST_SUITE macro}\par
1784 {\cf20 // introduces an anonymous namespace in which getCurrentTestSuite gets overridden}\par
1785 {\cf17 namespace }doctest_detail_test_suite_ns \{\par
1786 DOCTEST_INTERFACE doctest::detail::TestSuite& getCurrentTestSuite();\par
1787 \} {\cf20 // namespace doctest_detail_test_suite_ns}\par
1788 \par
1789 {\cf17 namespace }doctest \{\par
1790 {\cf21 #else  }{\cf20 // DOCTEST_CONFIG_DISABLE}\par
1791 {\cf17 template} <{\cf17 typename} T>\par
1792 {\cf18 int} registerExceptionTranslator(String (*)(T)) \{\par
1793     {\cf19 return} 0;\par
1794 \}\par
1795 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_DISABLE}\par
1796 \par
1797 {\cf17 namespace }detail \{\par
1798     {\cf17 typedef} void (*assert_handler)({\cf17 const} AssertData&);\par
1799     {\cf17 struct }ContextState;\par
1800 \} {\cf20 // namespace detail}\par
1801 \par
1802 {\cf17 class }DOCTEST_INTERFACE Context\par
1803 \{\par
1804     detail::ContextState* p;\par
1805 \par
1806     {\cf18 void} parseArgs({\cf18 int} argc, {\cf17 const} {\cf18 char}* {\cf17 const}* argv, {\cf18 bool} withDefaults = {\cf17 false});\par
1807 \par
1808 {\cf17 public}:\par
1809     {\cf17 explicit} Context({\cf18 int} argc = 0, {\cf17 const} {\cf18 char}* {\cf17 const}* argv = {\cf17 nullptr});\par
1810 \par
1811     ~Context();\par
1812 \par
1813     {\cf18 void} applyCommandLine({\cf18 int} argc, {\cf17 const} {\cf18 char}* {\cf17 const}* argv);\par
1814 \par
1815     {\cf18 void} addFilter({\cf17 const} {\cf18 char}* filter, {\cf17 const} {\cf18 char}* value);\par
1816     {\cf18 void} clearFilters();\par
1817     {\cf18 void} setOption({\cf17 const} {\cf18 char}* option, {\cf18 bool} value);\par
1818     {\cf18 void} setOption({\cf17 const} {\cf18 char}* option, {\cf18 int} value);\par
1819     {\cf18 void} setOption({\cf17 const} {\cf18 char}* option, {\cf17 const} {\cf18 char}* value);\par
1820 \par
1821     {\cf18 bool} shouldExit();\par
1822 \par
1823     {\cf18 void} setAsDefaultForAssertsOutOfTestCases();\par
1824 \par
1825     {\cf18 void} setAssertHandler(detail::assert_handler ah);\par
1826 \par
1827     {\cf18 void} setCout(std::ostream* out);\par
1828 \par
1829     {\cf18 int} run();\par
1830 \};\par
1831 \par
1832 {\cf17 namespace }TestCaseFailureReason \{\par
1833     {\cf17 enum} Enum\par
1834     \{\par
1835         None                     = 0,\par
1836         AssertFailure            = 1,   {\cf20 // an assertion has failed in the test case}\par
1837         Exception                = 2,   {\cf20 // test case threw an exception}\par
1838         Crash                    = 4,   {\cf20 // a crash...}\par
1839         TooManyFailedAsserts     = 8,   {\cf20 // the abort-after option}\par
1840         Timeout                  = 16,  {\cf20 // see the timeout decorator}\par
1841         ShouldHaveFailedButDidnt = 32,  {\cf20 // see the should_fail decorator}\par
1842         ShouldHaveFailedAndDid   = 64,  {\cf20 // see the should_fail decorator}\par
1843         DidntFailExactlyNumTimes = 128, {\cf20 // see the expected_failures decorator}\par
1844         FailedExactlyNumTimes    = 256, {\cf20 // see the expected_failures decorator}\par
1845         CouldHaveFailedAndDid    = 512  {\cf20 // see the may_fail decorator}\par
1846     \};\par
1847 \} {\cf20 // namespace TestCaseFailureReason}\par
1848 \par
1849 {\cf17 struct }DOCTEST_INTERFACE CurrentTestCaseStats\par
1850 \{\par
1851     {\cf18 int}    numAssertsCurrentTest;\par
1852     {\cf18 int}    numAssertsFailedCurrentTest;\par
1853     {\cf18 double} seconds;\par
1854     {\cf18 int}    failure_flags; {\cf20 // use TestCaseFailureReason::Enum}\par
1855     {\cf18 bool}   testCaseSuccess;\par
1856 \};\par
1857 \par
1858 {\cf17 struct }DOCTEST_INTERFACE TestCaseException\par
1859 \{\par
1860     String error_string;\par
1861     {\cf18 bool}   is_crash;\par
1862 \};\par
1863 \par
1864 {\cf17 struct }DOCTEST_INTERFACE TestRunStats\par
1865 \{\par
1866     {\cf18 unsigned} numTestCases;\par
1867     {\cf18 unsigned} numTestCasesPassingFilters;\par
1868     {\cf18 unsigned} numTestSuitesPassingFilters;\par
1869     {\cf18 unsigned} numTestCasesFailed;\par
1870     {\cf18 int}      numAsserts;\par
1871     {\cf18 int}      numAssertsFailed;\par
1872 \};\par
1873 \par
1874 {\cf17 struct }QueryData\par
1875 \{\par
1876     {\cf17 const} TestRunStats*  run_stats = {\cf17 nullptr};\par
1877     {\cf17 const} TestCaseData** data      = {\cf17 nullptr};\par
1878     {\cf18 unsigned}             num_data  = 0;\par
1879 \};\par
1880 \par
1881 {\cf17 struct }DOCTEST_INTERFACE IReporter\par
1882 \{\par
1883     {\cf20 // The constructor has to accept "const ContextOptions&" as a single argument}\par
1884     {\cf20 // which has most of the options for the run + a pointer to the stdout stream}\par
1885     {\cf20 // Reporter(const ContextOptions& in)}\par
1886 \par
1887     {\cf20 // called when a query should be reported (listing test cases, printing the version, etc.)}\par
1888     {\cf17 virtual} {\cf18 void} report_query({\cf17 const} QueryData&) = 0;\par
1889 \par
1890     {\cf20 // called when the whole test run starts}\par
1891     {\cf17 virtual} {\cf18 void} test_run_start() = 0;\par
1892     {\cf20 // called when the whole test run ends (caching a pointer to the input doesn't make sense here)}\par
1893     {\cf17 virtual} {\cf18 void} test_run_end({\cf17 const} TestRunStats&) = 0;\par
1894 \par
1895     {\cf20 // called when a test case is started (safe to cache a pointer to the input)}\par
1896     {\cf17 virtual} {\cf18 void} test_case_start({\cf17 const} TestCaseData&) = 0;\par
1897     {\cf20 // called when a test case is reentered because of unfinished subcases (safe to cache a pointer to the input)}\par
1898     {\cf17 virtual} {\cf18 void} test_case_reenter({\cf17 const} TestCaseData&) = 0;\par
1899     {\cf20 // called when a test case has ended}\par
1900     {\cf17 virtual} {\cf18 void} test_case_end({\cf17 const} CurrentTestCaseStats&) = 0;\par
1901 \par
1902     {\cf20 // called when an exception is thrown from the test case (or it crashes)}\par
1903     {\cf17 virtual} {\cf18 void} test_case_exception({\cf17 const} TestCaseException&) = 0;\par
1904 \par
1905     {\cf20 // called whenever a subcase is entered (don't cache pointers to the input)}\par
1906     {\cf17 virtual} {\cf18 void} subcase_start({\cf17 const} SubcaseSignature&) = 0;\par
1907     {\cf20 // called whenever a subcase is exited (don't cache pointers to the input)}\par
1908     {\cf17 virtual} {\cf18 void} subcase_end() = 0;\par
1909 \par
1910     {\cf20 // called for each assert (don't cache pointers to the input)}\par
1911     {\cf17 virtual} {\cf18 void} log_assert({\cf17 const} AssertData&) = 0;\par
1912     {\cf20 // called for each message (don't cache pointers to the input)}\par
1913     {\cf17 virtual} {\cf18 void} log_message({\cf17 const} MessageData&) = 0;\par
1914 \par
1915     {\cf20 // called when a test case is skipped either because it doesn't pass the filters, has a skip decorator}\par
1916     {\cf20 // or isn't in the execution range (between first and last) (safe to cache a pointer to the input)}\par
1917     {\cf17 virtual} {\cf18 void} test_case_skipped({\cf17 const} TestCaseData&) = 0;\par
1918 \par
1919     {\cf20 // doctest will not be managing the lifetimes of reporters given to it but this would still be nice to have}\par
1920     {\cf17 virtual} ~IReporter();\par
1921 \par
1922     {\cf20 // can obtain all currently active contexts and stringify them if one wishes to do so}\par
1923     {\cf17 static} {\cf18 int}                         get_num_active_contexts();\par
1924     {\cf17 static} {\cf17 const} IContextScope* {\cf17 const}* get_active_contexts();\par
1925 \par
1926     {\cf20 // can iterate through contexts which have been stringified automatically in their destructors when an exception has been thrown}\par
1927     {\cf17 static} {\cf18 int}           get_num_stringified_contexts();\par
1928     {\cf17 static} {\cf17 const} String* get_stringified_contexts();\par
1929 \};\par
1930 \par
1931 {\cf17 namespace }detail \{\par
1932     {\cf17 typedef} IReporter* (*reporterCreatorFunc)({\cf17 const} ContextOptions&);\par
1933 \par
1934     DOCTEST_INTERFACE {\cf18 void} registerReporterImpl({\cf17 const} {\cf18 char}* name, {\cf18 int} prio, reporterCreatorFunc c, {\cf18 bool} isReporter);\par
1935 \par
1936     {\cf17 template} <{\cf17 typename} Reporter>\par
1937     IReporter* reporterCreator({\cf17 const} ContextOptions& o) \{\par
1938         {\cf19 return} {\cf17 new} Reporter(o);\par
1939     \}\par
1940 \} {\cf20 // namespace detail}\par
1941 \par
1942 {\cf17 template} <{\cf17 typename} Reporter>\par
1943 {\cf18 int} registerReporter({\cf17 const} {\cf18 char}* name, {\cf18 int} priority, {\cf18 bool} isReporter) \{\par
1944     detail::registerReporterImpl(name, priority, detail::reporterCreator<Reporter>, isReporter);\par
1945     {\cf19 return} 0;\par
1946 \}\par
1947 \} {\cf20 // namespace doctest}\par
1948 \par
1949 {\cf20 // if registering is not disabled}\par
1950 {\cf21 #if !defined(DOCTEST_CONFIG_DISABLE)}\par
1951 \par
1952 {\cf20 // common code in asserts - for convenience}\par
1953 {\cf21 #define DOCTEST_ASSERT_LOG_REACT_RETURN(b)                                                         \\}\par
1954 {\cf21     if(b.log())                                                                                    \\}\par
1955 {\cf21         DOCTEST_BREAK_INTO_DEBUGGER();                                                             \\}\par
1956 {\cf21     b.react(); \\}\par
1957 {\cf21     return !b.m_failed}\par
1958 \par
1959 {\cf21 #ifdef DOCTEST_CONFIG_NO_TRY_CATCH_IN_ASSERTS}\par
1960 {\cf21 #define DOCTEST_WRAP_IN_TRY(x) x;}\par
1961 {\cf21 #else }{\cf20 // DOCTEST_CONFIG_NO_TRY_CATCH_IN_ASSERTS}\par
1962 {\cf21 #define DOCTEST_WRAP_IN_TRY(x)                                                                     \\}\par
1963 {\cf21     try \{                                                                                          \\}\par
1964 {\cf21         x;                                                                                         \\}\par
1965 {\cf21     \} catch(...) \{ DOCTEST_RB.translateException(); \}}\par
1966 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_NO_TRY_CATCH_IN_ASSERTS}\par
1967 \par
1968 {\cf21 #ifdef DOCTEST_CONFIG_VOID_CAST_EXPRESSIONS}\par
1969 {\cf21 #define DOCTEST_CAST_TO_VOID(...)                                                                  \\}\par
1970 {\cf21     DOCTEST_GCC_SUPPRESS_WARNING_WITH_PUSH("-Wuseless-cast"})                                       \\\par
1971     static_cast<void>(__VA_ARGS__);                                                                \\\par
1972     DOCTEST_GCC_SUPPRESS_WARNING_POP\par
1973 {\cf21 #else }{\cf20 // DOCTEST_CONFIG_VOID_CAST_EXPRESSIONS}\par
1974 {\cf21 #define DOCTEST_CAST_TO_VOID(...) __VA_ARGS__;}\par
1975 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_VOID_CAST_EXPRESSIONS}\par
1976 \par
1977 {\cf20 // registers the test by initializing a dummy var with a function}\par
1978 {\cf21 #define DOCTEST_REGISTER_FUNCTION(global_prefix, f, decorators)                                    \\}\par
1979 {\cf21     global_prefix DOCTEST_GLOBAL_NO_WARNINGS(DOCTEST_ANONYMOUS(DOCTEST_ANON_VAR_),                 \\}\par
1980 {\cf21             doctest::detail::regTest(                                                              \\}\par
1981 {\cf21                     doctest::detail::TestCase(                                                     \\}\par
1982 {\cf21                             f, __FILE__, __LINE__,                                                 \\}\par
1983 {\cf21                             doctest_detail_test_suite_ns::getCurrentTestSuite()) *                 \\}\par
1984 {\cf21                     decorators))}\par
1985 \par
1986 {\cf21 #define DOCTEST_IMPLEMENT_FIXTURE(der, base, func, decorators)                                     \\}\par
1987 {\cf21     namespace \{                                                                                    \\}\par
1988 {\cf21         struct der : public base                                                                   \\}\par
1989 {\cf21         \{                                                                                          \\}\par
1990 {\cf21             void f();                                                                              \\}\par
1991 {\cf21         \};                                                                                         \\}\par
1992 {\cf21         static void func() \{                                                                       \\}\par
1993 {\cf21             der v;                                                                                 \\}\par
1994 {\cf21             v.f();                                                                                 \\}\par
1995 {\cf21         \}                                                                                          \\}\par
1996 {\cf21         DOCTEST_REGISTER_FUNCTION(DOCTEST_EMPTY, func, decorators)                                 \\}\par
1997 {\cf21     \}                                                                                              \\}\par
1998 {\cf21     inline DOCTEST_NOINLINE void der::f()}\par
1999 \par
2000 {\cf21 #define DOCTEST_CREATE_AND_REGISTER_FUNCTION(f, decorators)                                        \\}\par
2001 {\cf21     static void f();                                                                               \\}\par
2002 {\cf21     DOCTEST_REGISTER_FUNCTION(DOCTEST_EMPTY, f, decorators)                                        \\}\par
2003 {\cf21     static void f()}\par
2004 \par
2005 {\cf21 #define DOCTEST_CREATE_AND_REGISTER_FUNCTION_IN_CLASS(f, proxy, decorators)                        \\}\par
2006 {\cf21     static doctest::detail::funcType proxy() \{ return f; \}                                         \\}\par
2007 {\cf21     DOCTEST_REGISTER_FUNCTION(inline, proxy(), decorators)                                   \\}\par
2008 {\cf21     static void f()}\par
2009 \par
2010 {\cf20 // for registering tests}\par
2011 {\cf21 #define DOCTEST_TEST_CASE(decorators)                                                              \\}\par
2012 {\cf21     DOCTEST_CREATE_AND_REGISTER_FUNCTION(DOCTEST_ANONYMOUS(DOCTEST_ANON_FUNC_), decorators)}\par
2013 \par
2014 {\cf20 // for registering tests in classes - requires C++17 for inline variables!}\par
2015 {\cf21 #if __cplusplus >= 201703L || (DOCTEST_MSVC >= DOCTEST_COMPILER(19, 12, 0) && _MSVC_LANG >= 201703L)}\par
2016 {\cf21 #define DOCTEST_TEST_CASE_CLASS(decorators)                                                        \\}\par
2017 {\cf21     DOCTEST_CREATE_AND_REGISTER_FUNCTION_IN_CLASS(DOCTEST_ANONYMOUS(DOCTEST_ANON_FUNC_),           \\}\par
2018 {\cf21                                                   DOCTEST_ANONYMOUS(DOCTEST_ANON_PROXY_),          \\}\par
2019 {\cf21                                                   decorators)}\par
2020 {\cf21 #else }{\cf20 // DOCTEST_TEST_CASE_CLASS}\par
2021 {\cf21 #define DOCTEST_TEST_CASE_CLASS(...)                                                               \\}\par
2022 {\cf21     TEST_CASES_CAN_BE_REGISTERED_IN_CLASSES_ONLY_IN_CPP17_MODE_OR_WITH_VS_2017_OR_NEWER}\par
2023 {\cf21 #endif }{\cf20 // DOCTEST_TEST_CASE_CLASS}\par
2024 \par
2025 {\cf20 // for registering tests with a fixture}\par
2026 {\cf21 #define DOCTEST_TEST_CASE_FIXTURE(c, decorators)                                                   \\}\par
2027 {\cf21     DOCTEST_IMPLEMENT_FIXTURE(DOCTEST_ANONYMOUS(DOCTEST_ANON_CLASS_), c,                           \\}\par
2028 {\cf21                               DOCTEST_ANONYMOUS(DOCTEST_ANON_FUNC_), decorators)}\par
2029 \par
2030 {\cf20 // for converting types to strings without the <typeinfo> header and demangling}\par
2031 {\cf21 #define DOCTEST_TYPE_TO_STRING_IMPL(...)                                                           \\}\par
2032 {\cf21     template <>                                                                                    \\}\par
2033 {\cf21     inline const char* type_to_string<__VA_ARGS__>() \{                                             \\}\par
2034 {\cf21         return "<"} #__VA_ARGS__ ">";                                                               \\\par
2035     \}\par
2036 {\cf21 #define DOCTEST_TYPE_TO_STRING(...)                                                                \\}\par
2037 {\cf21     namespace doctest \{ namespace detail \{                                                         \\}\par
2038 {\cf21             DOCTEST_TYPE_TO_STRING_IMPL(__VA_ARGS__)                                               \\}\par
2039 {\cf21         \}                                                                                          \\}\par
2040 {\cf21     \}                                                                                              \\}\par
2041 {\cf21     static_assert(true, ""})\par
2042 \par
2043 {\cf21 #define DOCTEST_TEST_CASE_TEMPLATE_DEFINE_IMPL(dec, T, iter, func)                                 \\}\par
2044 {\cf21     template <typename T>                                                                          \\}\par
2045 {\cf21     static void func();                                                                            \\}\par
2046 {\cf21     namespace \{                                                                                    \\}\par
2047 {\cf21         template <typename Tuple>                                                                  \\}\par
2048 {\cf21         struct iter;                                                                               \\}\par
2049 {\cf21         template <typename Type, typename... Rest>                                                 \\}\par
2050 {\cf21         struct iter<std::tuple<Type, Rest...>>                                                     \\}\par
2051 {\cf21         \{                                                                                          \\}\par
2052 {\cf21             iter(const char* file, unsigned line, int index) \{                                     \\}\par
2053 {\cf21                 doctest::detail::regTest(doctest::detail::TestCase(func<Type>, file, line,         \\}\par
2054 {\cf21                                             doctest_detail_test_suite_ns::getCurrentTestSuite(),   \\}\par
2055 {\cf21                                             doctest::detail::type_to_string<Type>(),               \\}\par
2056 {\cf21                                             int(line) * 1000 + index)                              \\}\par
2057 {\cf21                                          * dec);                                                   \\}\par
2058 {\cf21                 iter<std::tuple<Rest...>>(file, line, index + 1);                                  \\}\par
2059 {\cf21             \}                                                                                      \\}\par
2060 {\cf21         \};                                                                                         \\}\par
2061 {\cf21         template <>                                                                                \\}\par
2062 {\cf21         struct iter<std::tuple<>>                                                                  \\}\par
2063 {\cf21         \{                                                                                          \\}\par
2064 {\cf21             iter(const char*, unsigned, int) \{\}                                                    \\}\par
2065 {\cf21         \};                                                                                         \\}\par
2066 {\cf21     \}                                                                                              \\}\par
2067 {\cf21     template <typename T>                                                                          \\}\par
2068 {\cf21     static void func()}\par
2069 \par
2070 {\cf21 #define DOCTEST_TEST_CASE_TEMPLATE_DEFINE(dec, T, id)                                              \\}\par
2071 {\cf21     DOCTEST_TEST_CASE_TEMPLATE_DEFINE_IMPL(dec, T, DOCTEST_CAT(id, ITERATOR),                      \\}\par
2072 {\cf21                                            DOCTEST_ANONYMOUS(DOCTEST_ANON_TMP_))}\par
2073 \par
2074 {\cf21 #define DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE_IMPL(id, anon, ...)                                 \\}\par
2075 {\cf21     DOCTEST_GLOBAL_NO_WARNINGS(DOCTEST_CAT(anon, DUMMY),                                           \\}\par
2076 {\cf21         doctest::detail::instantiationHelper(                                                      \\}\par
2077 {\cf21             DOCTEST_CAT(id, ITERATOR)<__VA_ARGS__>(__FILE__, __LINE__, 0)))}\par
2078 \par
2079 {\cf21 #define DOCTEST_TEST_CASE_TEMPLATE_INVOKE(id, ...)                                                 \\}\par
2080 {\cf21     DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE_IMPL(id, DOCTEST_ANONYMOUS(DOCTEST_ANON_TMP_), std::tuple<__VA_ARGS__>) \\}\par
2081 {\cf21     static_assert(true, ""})\par
2082 \par
2083 {\cf21 #define DOCTEST_TEST_CASE_TEMPLATE_APPLY(id, ...)                                                  \\}\par
2084 {\cf21     DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE_IMPL(id, DOCTEST_ANONYMOUS(DOCTEST_ANON_TMP_), __VA_ARGS__) \\}\par
2085 {\cf21     static_assert(true, ""})\par
2086 \par
2087 {\cf21 #define DOCTEST_TEST_CASE_TEMPLATE_IMPL(dec, T, anon, ...)                                         \\}\par
2088 {\cf21     DOCTEST_TEST_CASE_TEMPLATE_DEFINE_IMPL(dec, T, DOCTEST_CAT(anon, ITERATOR), anon);             \\}\par
2089 {\cf21     DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE_IMPL(anon, anon, std::tuple<__VA_ARGS__>)               \\}\par
2090 {\cf21     template <typename T>                                                                          \\}\par
2091 {\cf21     static void anon()}\par
2092 \par
2093 {\cf21 #define DOCTEST_TEST_CASE_TEMPLATE(dec, T, ...)                                                    \\}\par
2094 {\cf21     DOCTEST_TEST_CASE_TEMPLATE_IMPL(dec, T, DOCTEST_ANONYMOUS(DOCTEST_ANON_TMP_), __VA_ARGS__)}\par
2095 \par
2096 {\cf20 // for subcases}\par
2097 {\cf21 #define DOCTEST_SUBCASE(name)                                                                      \\}\par
2098 {\cf21     if(const doctest::detail::Subcase & DOCTEST_ANONYMOUS(DOCTEST_ANON_SUBCASE_) DOCTEST_UNUSED =  \\}\par
2099 {\cf21                doctest::detail::Subcase(name, __FILE__, __LINE__))}\par
2100 \par
2101 {\cf20 // for grouping tests in test suites by using code blocks}\par
2102 {\cf21 #define DOCTEST_TEST_SUITE_IMPL(decorators, ns_name)                                               \\}\par
2103 {\cf21     namespace ns_name \{ namespace doctest_detail_test_suite_ns \{                                   \\}\par
2104 {\cf21             static DOCTEST_NOINLINE doctest::detail::TestSuite& getCurrentTestSuite() \{            \\}\par
2105 {\cf21                 DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH(4640)                                      \\}\par
2106 {\cf21                 DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH("-Wexit-time-destructors"})                \\\par
2107                 DOCTEST_GCC_SUPPRESS_WARNING_WITH_PUSH("-Wmissing-field-initializers")             \\\par
2108                 static doctest::detail::TestSuite data\{\};                                          \\\par
2109                 static bool                       inited = false;                                  \\\par
2110                 DOCTEST_MSVC_SUPPRESS_WARNING_POP                                                  \\\par
2111                 DOCTEST_CLANG_SUPPRESS_WARNING_POP                                                 \\\par
2112                 DOCTEST_GCC_SUPPRESS_WARNING_POP                                                   \\\par
2113                 if(!inited) \{                                                                      \\\par
2114                     data* decorators;                                                              \\\par
2115                     inited = true;                                                                 \\\par
2116                 \}                                                                                  \\\par
2117                 return data;                                                                       \\\par
2118             \}                                                                                      \\\par
2119         \}                                                                                          \\\par
2120     \}                                                                                              \\\par
2121     namespace ns_name\par
2122 \par
2123 {\cf21 #define DOCTEST_TEST_SUITE(decorators)                                                             \\}\par
2124 {\cf21     DOCTEST_TEST_SUITE_IMPL(decorators, DOCTEST_ANONYMOUS(DOCTEST_ANON_SUITE_))}\par
2125 \par
2126 {\cf20 // for starting a testsuite block}\par
2127 {\cf21 #define DOCTEST_TEST_SUITE_BEGIN(decorators)                                                       \\}\par
2128 {\cf21     DOCTEST_GLOBAL_NO_WARNINGS(DOCTEST_ANONYMOUS(DOCTEST_ANON_VAR_),                               \\}\par
2129 {\cf21             doctest::detail::setTestSuite(doctest::detail::TestSuite() * decorators))              \\}\par
2130 {\cf21     static_assert(true, ""})\par
2131 \par
2132 {\cf20 // for ending a testsuite block}\par
2133 {\cf21 #define DOCTEST_TEST_SUITE_END                                                                     \\}\par
2134 {\cf21     DOCTEST_GLOBAL_NO_WARNINGS(DOCTEST_ANONYMOUS(DOCTEST_ANON_VAR_),                               \\}\par
2135 {\cf21             doctest::detail::setTestSuite(doctest::detail::TestSuite() * ""}))                      \\\par
2136     typedef int DOCTEST_ANONYMOUS(DOCTEST_ANON_FOR_SEMICOLON_)\par
2137 \par
2138 {\cf20 // for registering exception translators}\par
2139 {\cf21 #define DOCTEST_REGISTER_EXCEPTION_TRANSLATOR_IMPL(translatorName, signature)                      \\}\par
2140 {\cf21     inline doctest::String translatorName(signature);                                              \\}\par
2141 {\cf21     DOCTEST_GLOBAL_NO_WARNINGS(DOCTEST_ANONYMOUS(DOCTEST_ANON_TRANSLATOR_),                        \\}\par
2142 {\cf21             doctest::registerExceptionTranslator(translatorName))                                  \\}\par
2143 {\cf21     doctest::String translatorName(signature)}\par
2144 \par
2145 {\cf21 #define DOCTEST_REGISTER_EXCEPTION_TRANSLATOR(signature)                                           \\}\par
2146 {\cf21     DOCTEST_REGISTER_EXCEPTION_TRANSLATOR_IMPL(DOCTEST_ANONYMOUS(DOCTEST_ANON_TRANSLATOR_),        \\}\par
2147 {\cf21                                                signature)}\par
2148 \par
2149 {\cf20 // for registering reporters}\par
2150 {\cf21 #define DOCTEST_REGISTER_REPORTER(name, priority, reporter)                                        \\}\par
2151 {\cf21     DOCTEST_GLOBAL_NO_WARNINGS(DOCTEST_ANONYMOUS(DOCTEST_ANON_REPORTER_),                          \\}\par
2152 {\cf21             doctest::registerReporter<reporter>(name, priority, true))                             \\}\par
2153 {\cf21     static_assert(true, ""})\par
2154 \par
2155 {\cf20 // for registering listeners}\par
2156 {\cf21 #define DOCTEST_REGISTER_LISTENER(name, priority, reporter)                                        \\}\par
2157 {\cf21     DOCTEST_GLOBAL_NO_WARNINGS(DOCTEST_ANONYMOUS(DOCTEST_ANON_REPORTER_),                          \\}\par
2158 {\cf21             doctest::registerReporter<reporter>(name, priority, false))                            \\}\par
2159 {\cf21     static_assert(true, ""})\par
2160 \par
2161 {\cf20 // clang-format off}\par
2162 {\cf20 // for logging - disabling formatting because it's important to have these on 2 separate lines - see PR #557}\par
2163 {\cf21 #define DOCTEST_INFO(...)                                                                          \\}\par
2164 {\cf21     DOCTEST_INFO_IMPL(DOCTEST_ANONYMOUS(DOCTEST_CAPTURE_),                                         \\}\par
2165 {\cf21                       DOCTEST_ANONYMOUS(DOCTEST_CAPTURE_OTHER_),                                   \\}\par
2166 {\cf21                       __VA_ARGS__)}\par
2167 {\cf20 // clang-format on}\par
2168 \par
2169 {\cf21 #define DOCTEST_INFO_IMPL(mb_name, s_name, ...)                                       \\}\par
2170 {\cf21     auto DOCTEST_ANONYMOUS(DOCTEST_CAPTURE_) = doctest::detail::MakeContextScope(                  \\}\par
2171 {\cf21         [&](std::ostream* s_name) \{                                                                \\}\par
2172 {\cf21         doctest::detail::MessageBuilder mb_name(__FILE__, __LINE__, doctest::assertType::is_warn); \\}\par
2173 {\cf21         mb_name.m_stream = s_name;                                                                 \\}\par
2174 {\cf21         mb_name * __VA_ARGS__;                                                                     \\}\par
2175 {\cf21     \})}\par
2176 \par
2177 {\cf21 #define DOCTEST_CAPTURE(x) DOCTEST_INFO(#x " := "}, x)\par
2178 \par
2179 {\cf21 #define DOCTEST_ADD_AT_IMPL(type, file, line, mb, ...)                                             \\}\par
2180 {\cf21     [&] \{                                                                                          \\}\par
2181 {\cf21         doctest::detail::MessageBuilder mb(file, line, doctest::assertType::type);                 \\}\par
2182 {\cf21         mb * __VA_ARGS__;                                                                          \\}\par
2183 {\cf21         if(mb.log())                                                                               \\}\par
2184 {\cf21             DOCTEST_BREAK_INTO_DEBUGGER();                                                         \\}\par
2185 {\cf21         mb.react();                                                                                \\}\par
2186 {\cf21     \}()}\par
2187 \par
2188 {\cf20 // clang-format off}\par
2189 {\cf21 #define DOCTEST_ADD_MESSAGE_AT(file, line, ...) DOCTEST_ADD_AT_IMPL(is_warn, file, line, DOCTEST_ANONYMOUS(DOCTEST_MESSAGE_), __VA_ARGS__)}\par
2190 {\cf21 #define DOCTEST_ADD_FAIL_CHECK_AT(file, line, ...) DOCTEST_ADD_AT_IMPL(is_check, file, line, DOCTEST_ANONYMOUS(DOCTEST_MESSAGE_), __VA_ARGS__)}\par
2191 {\cf21 #define DOCTEST_ADD_FAIL_AT(file, line, ...) DOCTEST_ADD_AT_IMPL(is_require, file, line, DOCTEST_ANONYMOUS(DOCTEST_MESSAGE_), __VA_ARGS__)}\par
2192 {\cf20 // clang-format on}\par
2193 \par
2194 {\cf21 #define DOCTEST_MESSAGE(...) DOCTEST_ADD_MESSAGE_AT(__FILE__, __LINE__, __VA_ARGS__)}\par
2195 {\cf21 #define DOCTEST_FAIL_CHECK(...) DOCTEST_ADD_FAIL_CHECK_AT(__FILE__, __LINE__, __VA_ARGS__)}\par
2196 {\cf21 #define DOCTEST_FAIL(...) DOCTEST_ADD_FAIL_AT(__FILE__, __LINE__, __VA_ARGS__)}\par
2197 \par
2198 {\cf21 #define DOCTEST_TO_LVALUE(...) __VA_ARGS__ }{\cf20 // Not removed to keep backwards compatibility.}\par
2199 \par
2200 {\cf21 #ifndef DOCTEST_CONFIG_SUPER_FAST_ASSERTS}\par
2201 \par
2202 {\cf21 #define DOCTEST_ASSERT_IMPLEMENT_2(assert_type, ...)                                               \\}\par
2203 {\cf21     DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH("-Woverloaded-shift-op-parentheses"})                  \\\par
2204     doctest::detail::ResultBuilder DOCTEST_RB(doctest::assertType::assert_type, __FILE__,          \\\par
2205                                                __LINE__, #__VA_ARGS__);                            \\\par
2206     DOCTEST_WRAP_IN_TRY(DOCTEST_RB.setResult(                                                      \\\par
2207             doctest::detail::ExpressionDecomposer(doctest::assertType::assert_type)                \\\par
2208             << __VA_ARGS__))                                                                       \\\par
2209     DOCTEST_ASSERT_LOG_REACT_RETURN(DOCTEST_RB)                                                    \\\par
2210     DOCTEST_CLANG_SUPPRESS_WARNING_POP\par
2211 \par
2212 {\cf21 #define DOCTEST_ASSERT_IMPLEMENT_1(assert_type, ...)                                               \\}\par
2213 {\cf21     [&] \{                                                                                          \\}\par
2214 {\cf21         DOCTEST_ASSERT_IMPLEMENT_2(assert_type, __VA_ARGS__);                                      \\}\par
2215 {\cf21     \}()}\par
2216 \par
2217 {\cf21 #else }{\cf20 // DOCTEST_CONFIG_SUPER_FAST_ASSERTS}\par
2218 \par
2219 {\cf20 // necessary for <ASSERT>_MESSAGE}\par
2220 {\cf21 #define DOCTEST_ASSERT_IMPLEMENT_2 DOCTEST_ASSERT_IMPLEMENT_1}\par
2221 \par
2222 {\cf21 #define DOCTEST_ASSERT_IMPLEMENT_1(assert_type, ...)                                               \\}\par
2223 {\cf21     DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH("-Woverloaded-shift-op-parentheses"})                  \\\par
2224     doctest::detail::decomp_assert(                                                                \\\par
2225             doctest::assertType::assert_type, __FILE__, __LINE__, #__VA_ARGS__,                    \\\par
2226             doctest::detail::ExpressionDecomposer(doctest::assertType::assert_type)                \\\par
2227                     << __VA_ARGS__) DOCTEST_CLANG_SUPPRESS_WARNING_POP\par
2228 \par
2229 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_SUPER_FAST_ASSERTS}\par
2230 \par
2231 {\cf21 #define DOCTEST_WARN(...) DOCTEST_ASSERT_IMPLEMENT_1(DT_WARN, __VA_ARGS__)}\par
2232 {\cf21 #define DOCTEST_CHECK(...) DOCTEST_ASSERT_IMPLEMENT_1(DT_CHECK, __VA_ARGS__)}\par
2233 {\cf21 #define DOCTEST_REQUIRE(...) DOCTEST_ASSERT_IMPLEMENT_1(DT_REQUIRE, __VA_ARGS__)}\par
2234 {\cf21 #define DOCTEST_WARN_FALSE(...) DOCTEST_ASSERT_IMPLEMENT_1(DT_WARN_FALSE, __VA_ARGS__)}\par
2235 {\cf21 #define DOCTEST_CHECK_FALSE(...) DOCTEST_ASSERT_IMPLEMENT_1(DT_CHECK_FALSE, __VA_ARGS__)}\par
2236 {\cf21 #define DOCTEST_REQUIRE_FALSE(...) DOCTEST_ASSERT_IMPLEMENT_1(DT_REQUIRE_FALSE, __VA_ARGS__)}\par
2237 \par
2238 {\cf20 // clang-format off}\par
2239 {\cf21 #define DOCTEST_WARN_MESSAGE(cond, ...) [&] \{DOCTEST_INFO(__VA_ARGS__); DOCTEST_ASSERT_IMPLEMENT_2(DT_WARN, cond); \}()}\par
2240 {\cf21 #define DOCTEST_CHECK_MESSAGE(cond, ...) [&] \{DOCTEST_INFO(__VA_ARGS__); DOCTEST_ASSERT_IMPLEMENT_2(DT_CHECK, cond); \}()}\par
2241 {\cf21 #define DOCTEST_REQUIRE_MESSAGE(cond, ...) [&] \{DOCTEST_INFO(__VA_ARGS__); DOCTEST_ASSERT_IMPLEMENT_2(DT_REQUIRE, cond); \}()}\par
2242 {\cf21 #define DOCTEST_WARN_FALSE_MESSAGE(cond, ...) [&] \{DOCTEST_INFO(__VA_ARGS__); DOCTEST_ASSERT_IMPLEMENT_2(DT_WARN_FALSE, cond); \}()}\par
2243 {\cf21 #define DOCTEST_CHECK_FALSE_MESSAGE(cond, ...) [&] \{DOCTEST_INFO(__VA_ARGS__); DOCTEST_ASSERT_IMPLEMENT_2(DT_CHECK_FALSE, cond); \}()}\par
2244 {\cf21 #define DOCTEST_REQUIRE_FALSE_MESSAGE(cond, ...) [&] \{DOCTEST_INFO(__VA_ARGS__); DOCTEST_ASSERT_IMPLEMENT_2(DT_REQUIRE_FALSE, cond); \}()}\par
2245 {\cf20 // clang-format on}\par
2246 \par
2247 {\cf21 #define DOCTEST_ASSERT_THROWS_AS(expr, assert_type, message, ...)                                  \\}\par
2248 {\cf21     [&] \{                                                                                          \\}\par
2249 {\cf21         if(!doctest::getContextOptions()->no_throw) \{                                              \\}\par
2250 {\cf21             doctest::detail::ResultBuilder DOCTEST_RB(doctest::assertType::assert_type, __FILE__,  \\}\par
2251 {\cf21                                                        __LINE__, #expr, #__VA_ARGS__, message);    \\}\par
2252 {\cf21             try \{                                                                                  \\}\par
2253 {\cf21                 DOCTEST_CAST_TO_VOID(expr)                                                         \\}\par
2254 {\cf21             \} catch(const typename doctest::detail::remove_const<                                  \\}\par
2255 {\cf21                     typename doctest::detail::remove_reference<__VA_ARGS__>::type>::type&) \{       \\}\par
2256 {\cf21                 DOCTEST_RB.translateException();                                                   \\}\par
2257 {\cf21                 DOCTEST_RB.m_threw_as = true;                                                      \\}\par
2258 {\cf21             \} catch(...) \{ DOCTEST_RB.translateException(); \}                                      \\}\par
2259 {\cf21             DOCTEST_ASSERT_LOG_REACT_RETURN(DOCTEST_RB);                                           \\}\par
2260 {\cf21         \} else \{                                                                                   \\}\par
2261 {\cf21             return false;                                                                          \\}\par
2262 {\cf21         \}                                                                                          \\}\par
2263 {\cf21     \}()}\par
2264 \par
2265 {\cf21 #define DOCTEST_ASSERT_THROWS_WITH(expr, expr_str, assert_type, ...)                               \\}\par
2266 {\cf21     [&] \{                                                                                          \\}\par
2267 {\cf21         if(!doctest::getContextOptions()->no_throw) \{                                              \\}\par
2268 {\cf21             doctest::detail::ResultBuilder DOCTEST_RB(doctest::assertType::assert_type, __FILE__,  \\}\par
2269 {\cf21                                                        __LINE__, expr_str, ""}, __VA_ARGS__);       \\\par
2270             try \{                                                                                  \\\par
2271                 DOCTEST_CAST_TO_VOID(expr)                                                         \\\par
2272             \} catch(...) \{ DOCTEST_RB.translateException(); \}                                      \\\par
2273             DOCTEST_ASSERT_LOG_REACT_RETURN(DOCTEST_RB);                                           \\\par
2274         \} else \{                                                                                   \\\par
2275            return false;                                                                           \\\par
2276         \}                                                                                          \\\par
2277     \}()\par
2278 \par
2279 {\cf21 #define DOCTEST_ASSERT_NOTHROW(assert_type, ...)                                                   \\}\par
2280 {\cf21     [&] \{                                                                                          \\}\par
2281 {\cf21         doctest::detail::ResultBuilder DOCTEST_RB(doctest::assertType::assert_type, __FILE__,      \\}\par
2282 {\cf21                                                    __LINE__, #__VA_ARGS__);                        \\}\par
2283 {\cf21         try \{                                                                                      \\}\par
2284 {\cf21             DOCTEST_CAST_TO_VOID(__VA_ARGS__)                                                      \\}\par
2285 {\cf21         \} catch(...) \{ DOCTEST_RB.translateException(); \}                                          \\}\par
2286 {\cf21         DOCTEST_ASSERT_LOG_REACT_RETURN(DOCTEST_RB);                                               \\}\par
2287 {\cf21     \}()}\par
2288 \par
2289 {\cf20 // clang-format off}\par
2290 {\cf21 #define DOCTEST_WARN_THROWS(...) DOCTEST_ASSERT_THROWS_WITH((__VA_ARGS__), #__VA_ARGS__, DT_WARN_THROWS, ""})\par
2291 {\cf21 #define DOCTEST_CHECK_THROWS(...) DOCTEST_ASSERT_THROWS_WITH((__VA_ARGS__), #__VA_ARGS__, DT_CHECK_THROWS, ""})\par
2292 {\cf21 #define DOCTEST_REQUIRE_THROWS(...) DOCTEST_ASSERT_THROWS_WITH((__VA_ARGS__), #__VA_ARGS__, DT_REQUIRE_THROWS, ""})\par
2293 \par
2294 {\cf21 #define DOCTEST_WARN_THROWS_AS(expr, ...) DOCTEST_ASSERT_THROWS_AS(expr, DT_WARN_THROWS_AS, ""}, __VA_ARGS__)\par
2295 {\cf21 #define DOCTEST_CHECK_THROWS_AS(expr, ...) DOCTEST_ASSERT_THROWS_AS(expr, DT_CHECK_THROWS_AS, ""}, __VA_ARGS__)\par
2296 {\cf21 #define DOCTEST_REQUIRE_THROWS_AS(expr, ...) DOCTEST_ASSERT_THROWS_AS(expr, DT_REQUIRE_THROWS_AS, ""}, __VA_ARGS__)\par
2297 \par
2298 {\cf21 #define DOCTEST_WARN_THROWS_WITH(expr, ...) DOCTEST_ASSERT_THROWS_WITH(expr, #expr, DT_WARN_THROWS_WITH, __VA_ARGS__)}\par
2299 {\cf21 #define DOCTEST_CHECK_THROWS_WITH(expr, ...) DOCTEST_ASSERT_THROWS_WITH(expr, #expr, DT_CHECK_THROWS_WITH, __VA_ARGS__)}\par
2300 {\cf21 #define DOCTEST_REQUIRE_THROWS_WITH(expr, ...) DOCTEST_ASSERT_THROWS_WITH(expr, #expr, DT_REQUIRE_THROWS_WITH, __VA_ARGS__)}\par
2301 \par
2302 {\cf21 #define DOCTEST_WARN_THROWS_WITH_AS(expr, message, ...) DOCTEST_ASSERT_THROWS_AS(expr, DT_WARN_THROWS_WITH_AS, message, __VA_ARGS__)}\par
2303 {\cf21 #define DOCTEST_CHECK_THROWS_WITH_AS(expr, message, ...) DOCTEST_ASSERT_THROWS_AS(expr, DT_CHECK_THROWS_WITH_AS, message, __VA_ARGS__)}\par
2304 {\cf21 #define DOCTEST_REQUIRE_THROWS_WITH_AS(expr, message, ...) DOCTEST_ASSERT_THROWS_AS(expr, DT_REQUIRE_THROWS_WITH_AS, message, __VA_ARGS__)}\par
2305 \par
2306 {\cf21 #define DOCTEST_WARN_NOTHROW(...) DOCTEST_ASSERT_NOTHROW(DT_WARN_NOTHROW, __VA_ARGS__)}\par
2307 {\cf21 #define DOCTEST_CHECK_NOTHROW(...) DOCTEST_ASSERT_NOTHROW(DT_CHECK_NOTHROW, __VA_ARGS__)}\par
2308 {\cf21 #define DOCTEST_REQUIRE_NOTHROW(...) DOCTEST_ASSERT_NOTHROW(DT_REQUIRE_NOTHROW, __VA_ARGS__)}\par
2309 \par
2310 {\cf21 #define DOCTEST_WARN_THROWS_MESSAGE(expr, ...) [&] \{DOCTEST_INFO(__VA_ARGS__); DOCTEST_WARN_THROWS(expr); \}()}\par
2311 {\cf21 #define DOCTEST_CHECK_THROWS_MESSAGE(expr, ...) [&] \{DOCTEST_INFO(__VA_ARGS__); DOCTEST_CHECK_THROWS(expr); \}()}\par
2312 {\cf21 #define DOCTEST_REQUIRE_THROWS_MESSAGE(expr, ...) [&] \{DOCTEST_INFO(__VA_ARGS__); DOCTEST_REQUIRE_THROWS(expr); \}()}\par
2313 {\cf21 #define DOCTEST_WARN_THROWS_AS_MESSAGE(expr, ex, ...) [&] \{DOCTEST_INFO(__VA_ARGS__); DOCTEST_WARN_THROWS_AS(expr, ex); \}()}\par
2314 {\cf21 #define DOCTEST_CHECK_THROWS_AS_MESSAGE(expr, ex, ...) [&] \{DOCTEST_INFO(__VA_ARGS__); DOCTEST_CHECK_THROWS_AS(expr, ex); \}()}\par
2315 {\cf21 #define DOCTEST_REQUIRE_THROWS_AS_MESSAGE(expr, ex, ...) [&] \{DOCTEST_INFO(__VA_ARGS__); DOCTEST_REQUIRE_THROWS_AS(expr, ex); \}()}\par
2316 {\cf21 #define DOCTEST_WARN_THROWS_WITH_MESSAGE(expr, with, ...) [&] \{DOCTEST_INFO(__VA_ARGS__); DOCTEST_WARN_THROWS_WITH(expr, with); \}()}\par
2317 {\cf21 #define DOCTEST_CHECK_THROWS_WITH_MESSAGE(expr, with, ...) [&] \{DOCTEST_INFO(__VA_ARGS__); DOCTEST_CHECK_THROWS_WITH(expr, with); \}()}\par
2318 {\cf21 #define DOCTEST_REQUIRE_THROWS_WITH_MESSAGE(expr, with, ...) [&] \{DOCTEST_INFO(__VA_ARGS__); DOCTEST_REQUIRE_THROWS_WITH(expr, with); \}()}\par
2319 {\cf21 #define DOCTEST_WARN_THROWS_WITH_AS_MESSAGE(expr, with, ex, ...) [&] \{DOCTEST_INFO(__VA_ARGS__); DOCTEST_WARN_THROWS_WITH_AS(expr, with, ex); \}()}\par
2320 {\cf21 #define DOCTEST_CHECK_THROWS_WITH_AS_MESSAGE(expr, with, ex, ...) [&] \{DOCTEST_INFO(__VA_ARGS__); DOCTEST_CHECK_THROWS_WITH_AS(expr, with, ex); \}()}\par
2321 {\cf21 #define DOCTEST_REQUIRE_THROWS_WITH_AS_MESSAGE(expr, with, ex, ...) [&] \{DOCTEST_INFO(__VA_ARGS__); DOCTEST_REQUIRE_THROWS_WITH_AS(expr, with, ex); \}()}\par
2322 {\cf21 #define DOCTEST_WARN_NOTHROW_MESSAGE(expr, ...) [&] \{DOCTEST_INFO(__VA_ARGS__); DOCTEST_WARN_NOTHROW(expr); \}()}\par
2323 {\cf21 #define DOCTEST_CHECK_NOTHROW_MESSAGE(expr, ...) [&] \{DOCTEST_INFO(__VA_ARGS__); DOCTEST_CHECK_NOTHROW(expr); \}()}\par
2324 {\cf21 #define DOCTEST_REQUIRE_NOTHROW_MESSAGE(expr, ...) [&] \{DOCTEST_INFO(__VA_ARGS__); DOCTEST_REQUIRE_NOTHROW(expr); \}()}\par
2325 {\cf20 // clang-format on}\par
2326 \par
2327 {\cf21 #ifndef DOCTEST_CONFIG_SUPER_FAST_ASSERTS}\par
2328 \par
2329 {\cf21 #define DOCTEST_BINARY_ASSERT(assert_type, comp, ...)                                              \\}\par
2330 {\cf21     [&] \{                                                                                          \\}\par
2331 {\cf21         doctest::detail::ResultBuilder DOCTEST_RB(doctest::assertType::assert_type, __FILE__,      \\}\par
2332 {\cf21                                                    __LINE__, #__VA_ARGS__);                        \\}\par
2333 {\cf21         DOCTEST_WRAP_IN_TRY(                                                                       \\}\par
2334 {\cf21                 DOCTEST_RB.binary_assert<doctest::detail::binaryAssertComparison::comp>(           \\}\par
2335 {\cf21                         __VA_ARGS__))                                                              \\}\par
2336 {\cf21         DOCTEST_ASSERT_LOG_REACT_RETURN(DOCTEST_RB);                                               \\}\par
2337 {\cf21     \}()}\par
2338 \par
2339 {\cf21 #define DOCTEST_UNARY_ASSERT(assert_type, ...)                                                     \\}\par
2340 {\cf21     [&] \{                                                                                          \\}\par
2341 {\cf21         doctest::detail::ResultBuilder DOCTEST_RB(doctest::assertType::assert_type, __FILE__,      \\}\par
2342 {\cf21                                                    __LINE__, #__VA_ARGS__);                        \\}\par
2343 {\cf21         DOCTEST_WRAP_IN_TRY(DOCTEST_RB.unary_assert(__VA_ARGS__))                                  \\}\par
2344 {\cf21         DOCTEST_ASSERT_LOG_REACT_RETURN(DOCTEST_RB);                                               \\}\par
2345 {\cf21     \}()}\par
2346 \par
2347 {\cf21 #else }{\cf20 // DOCTEST_CONFIG_SUPER_FAST_ASSERTS}\par
2348 \par
2349 {\cf21 #define DOCTEST_BINARY_ASSERT(assert_type, comparison, ...)                                        \\}\par
2350 {\cf21     doctest::detail::binary_assert<doctest::detail::binaryAssertComparison::comparison>(           \\}\par
2351 {\cf21             doctest::assertType::assert_type, __FILE__, __LINE__, #__VA_ARGS__, __VA_ARGS__)}\par
2352 \par
2353 {\cf21 #define DOCTEST_UNARY_ASSERT(assert_type, ...)                                                     \\}\par
2354 {\cf21     doctest::detail::unary_assert(doctest::assertType::assert_type, __FILE__, __LINE__,            \\}\par
2355 {\cf21                                   #__VA_ARGS__, __VA_ARGS__)}\par
2356 \par
2357 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_SUPER_FAST_ASSERTS}\par
2358 \par
2359 {\cf21 #define DOCTEST_WARN_EQ(...) DOCTEST_BINARY_ASSERT(DT_WARN_EQ, eq, __VA_ARGS__)}\par
2360 {\cf21 #define DOCTEST_CHECK_EQ(...) DOCTEST_BINARY_ASSERT(DT_CHECK_EQ, eq, __VA_ARGS__)}\par
2361 {\cf21 #define DOCTEST_REQUIRE_EQ(...) DOCTEST_BINARY_ASSERT(DT_REQUIRE_EQ, eq, __VA_ARGS__)}\par
2362 {\cf21 #define DOCTEST_WARN_NE(...) DOCTEST_BINARY_ASSERT(DT_WARN_NE, ne, __VA_ARGS__)}\par
2363 {\cf21 #define DOCTEST_CHECK_NE(...) DOCTEST_BINARY_ASSERT(DT_CHECK_NE, ne, __VA_ARGS__)}\par
2364 {\cf21 #define DOCTEST_REQUIRE_NE(...) DOCTEST_BINARY_ASSERT(DT_REQUIRE_NE, ne, __VA_ARGS__)}\par
2365 {\cf21 #define DOCTEST_WARN_GT(...) DOCTEST_BINARY_ASSERT(DT_WARN_GT, gt, __VA_ARGS__)}\par
2366 {\cf21 #define DOCTEST_CHECK_GT(...) DOCTEST_BINARY_ASSERT(DT_CHECK_GT, gt, __VA_ARGS__)}\par
2367 {\cf21 #define DOCTEST_REQUIRE_GT(...) DOCTEST_BINARY_ASSERT(DT_REQUIRE_GT, gt, __VA_ARGS__)}\par
2368 {\cf21 #define DOCTEST_WARN_LT(...) DOCTEST_BINARY_ASSERT(DT_WARN_LT, lt, __VA_ARGS__)}\par
2369 {\cf21 #define DOCTEST_CHECK_LT(...) DOCTEST_BINARY_ASSERT(DT_CHECK_LT, lt, __VA_ARGS__)}\par
2370 {\cf21 #define DOCTEST_REQUIRE_LT(...) DOCTEST_BINARY_ASSERT(DT_REQUIRE_LT, lt, __VA_ARGS__)}\par
2371 {\cf21 #define DOCTEST_WARN_GE(...) DOCTEST_BINARY_ASSERT(DT_WARN_GE, ge, __VA_ARGS__)}\par
2372 {\cf21 #define DOCTEST_CHECK_GE(...) DOCTEST_BINARY_ASSERT(DT_CHECK_GE, ge, __VA_ARGS__)}\par
2373 {\cf21 #define DOCTEST_REQUIRE_GE(...) DOCTEST_BINARY_ASSERT(DT_REQUIRE_GE, ge, __VA_ARGS__)}\par
2374 {\cf21 #define DOCTEST_WARN_LE(...) DOCTEST_BINARY_ASSERT(DT_WARN_LE, le, __VA_ARGS__)}\par
2375 {\cf21 #define DOCTEST_CHECK_LE(...) DOCTEST_BINARY_ASSERT(DT_CHECK_LE, le, __VA_ARGS__)}\par
2376 {\cf21 #define DOCTEST_REQUIRE_LE(...) DOCTEST_BINARY_ASSERT(DT_REQUIRE_LE, le, __VA_ARGS__)}\par
2377 \par
2378 {\cf21 #define DOCTEST_WARN_UNARY(...) DOCTEST_UNARY_ASSERT(DT_WARN_UNARY, __VA_ARGS__)}\par
2379 {\cf21 #define DOCTEST_CHECK_UNARY(...) DOCTEST_UNARY_ASSERT(DT_CHECK_UNARY, __VA_ARGS__)}\par
2380 {\cf21 #define DOCTEST_REQUIRE_UNARY(...) DOCTEST_UNARY_ASSERT(DT_REQUIRE_UNARY, __VA_ARGS__)}\par
2381 {\cf21 #define DOCTEST_WARN_UNARY_FALSE(...) DOCTEST_UNARY_ASSERT(DT_WARN_UNARY_FALSE, __VA_ARGS__)}\par
2382 {\cf21 #define DOCTEST_CHECK_UNARY_FALSE(...) DOCTEST_UNARY_ASSERT(DT_CHECK_UNARY_FALSE, __VA_ARGS__)}\par
2383 {\cf21 #define DOCTEST_REQUIRE_UNARY_FALSE(...) DOCTEST_UNARY_ASSERT(DT_REQUIRE_UNARY_FALSE, __VA_ARGS__)}\par
2384 \par
2385 {\cf21 #ifdef DOCTEST_CONFIG_NO_EXCEPTIONS}\par
2386 \par
2387 {\cf21 #undef DOCTEST_WARN_THROWS}\par
2388 {\cf21 #undef DOCTEST_CHECK_THROWS}\par
2389 {\cf21 #undef DOCTEST_REQUIRE_THROWS}\par
2390 {\cf21 #undef DOCTEST_WARN_THROWS_AS}\par
2391 {\cf21 #undef DOCTEST_CHECK_THROWS_AS}\par
2392 {\cf21 #undef DOCTEST_REQUIRE_THROWS_AS}\par
2393 {\cf21 #undef DOCTEST_WARN_THROWS_WITH}\par
2394 {\cf21 #undef DOCTEST_CHECK_THROWS_WITH}\par
2395 {\cf21 #undef DOCTEST_REQUIRE_THROWS_WITH}\par
2396 {\cf21 #undef DOCTEST_WARN_THROWS_WITH_AS}\par
2397 {\cf21 #undef DOCTEST_CHECK_THROWS_WITH_AS}\par
2398 {\cf21 #undef DOCTEST_REQUIRE_THROWS_WITH_AS}\par
2399 {\cf21 #undef DOCTEST_WARN_NOTHROW}\par
2400 {\cf21 #undef DOCTEST_CHECK_NOTHROW}\par
2401 {\cf21 #undef DOCTEST_REQUIRE_NOTHROW}\par
2402 \par
2403 {\cf21 #undef DOCTEST_WARN_THROWS_MESSAGE}\par
2404 {\cf21 #undef DOCTEST_CHECK_THROWS_MESSAGE}\par
2405 {\cf21 #undef DOCTEST_REQUIRE_THROWS_MESSAGE}\par
2406 {\cf21 #undef DOCTEST_WARN_THROWS_AS_MESSAGE}\par
2407 {\cf21 #undef DOCTEST_CHECK_THROWS_AS_MESSAGE}\par
2408 {\cf21 #undef DOCTEST_REQUIRE_THROWS_AS_MESSAGE}\par
2409 {\cf21 #undef DOCTEST_WARN_THROWS_WITH_MESSAGE}\par
2410 {\cf21 #undef DOCTEST_CHECK_THROWS_WITH_MESSAGE}\par
2411 {\cf21 #undef DOCTEST_REQUIRE_THROWS_WITH_MESSAGE}\par
2412 {\cf21 #undef DOCTEST_WARN_THROWS_WITH_AS_MESSAGE}\par
2413 {\cf21 #undef DOCTEST_CHECK_THROWS_WITH_AS_MESSAGE}\par
2414 {\cf21 #undef DOCTEST_REQUIRE_THROWS_WITH_AS_MESSAGE}\par
2415 {\cf21 #undef DOCTEST_WARN_NOTHROW_MESSAGE}\par
2416 {\cf21 #undef DOCTEST_CHECK_NOTHROW_MESSAGE}\par
2417 {\cf21 #undef DOCTEST_REQUIRE_NOTHROW_MESSAGE}\par
2418 \par
2419 {\cf21 #ifdef DOCTEST_CONFIG_NO_EXCEPTIONS_BUT_WITH_ALL_ASSERTS}\par
2420 \par
2421 {\cf21 #define DOCTEST_WARN_THROWS(...) ([] \{ return false; \})}\par
2422 {\cf21 #define DOCTEST_CHECK_THROWS(...) ([] \{ return false; \})}\par
2423 {\cf21 #define DOCTEST_REQUIRE_THROWS(...) ([] \{ return false; \})}\par
2424 {\cf21 #define DOCTEST_WARN_THROWS_AS(expr, ...) ([] \{ return false; \})}\par
2425 {\cf21 #define DOCTEST_CHECK_THROWS_AS(expr, ...) ([] \{ return false; \})}\par
2426 {\cf21 #define DOCTEST_REQUIRE_THROWS_AS(expr, ...) ([] \{ return false; \})}\par
2427 {\cf21 #define DOCTEST_WARN_THROWS_WITH(expr, ...) ([] \{ return false; \})}\par
2428 {\cf21 #define DOCTEST_CHECK_THROWS_WITH(expr, ...) ([] \{ return false; \})}\par
2429 {\cf21 #define DOCTEST_REQUIRE_THROWS_WITH(expr, ...) ([] \{ return false; \})}\par
2430 {\cf21 #define DOCTEST_WARN_THROWS_WITH_AS(expr, with, ...) ([] \{ return false; \})}\par
2431 {\cf21 #define DOCTEST_CHECK_THROWS_WITH_AS(expr, with, ...) ([] \{ return false; \})}\par
2432 {\cf21 #define DOCTEST_REQUIRE_THROWS_WITH_AS(expr, with, ...) ([] \{ return false; \})}\par
2433 {\cf21 #define DOCTEST_WARN_NOTHROW(...) ([] \{ return false; \})}\par
2434 {\cf21 #define DOCTEST_CHECK_NOTHROW(...) ([] \{ return false; \})}\par
2435 {\cf21 #define DOCTEST_REQUIRE_NOTHROW(...) ([] \{ return false; \})}\par
2436 \par
2437 {\cf21 #define DOCTEST_WARN_THROWS_MESSAGE(expr, ...) ([] \{ return false; \})}\par
2438 {\cf21 #define DOCTEST_CHECK_THROWS_MESSAGE(expr, ...) ([] \{ return false; \})}\par
2439 {\cf21 #define DOCTEST_REQUIRE_THROWS_MESSAGE(expr, ...) ([] \{ return false; \})}\par
2440 {\cf21 #define DOCTEST_WARN_THROWS_AS_MESSAGE(expr, ex, ...) ([] \{ return false; \})}\par
2441 {\cf21 #define DOCTEST_CHECK_THROWS_AS_MESSAGE(expr, ex, ...) ([] \{ return false; \})}\par
2442 {\cf21 #define DOCTEST_REQUIRE_THROWS_AS_MESSAGE(expr, ex, ...) ([] \{ return false; \})}\par
2443 {\cf21 #define DOCTEST_WARN_THROWS_WITH_MESSAGE(expr, with, ...) ([] \{ return false; \})}\par
2444 {\cf21 #define DOCTEST_CHECK_THROWS_WITH_MESSAGE(expr, with, ...) ([] \{ return false; \})}\par
2445 {\cf21 #define DOCTEST_REQUIRE_THROWS_WITH_MESSAGE(expr, with, ...) ([] \{ return false; \})}\par
2446 {\cf21 #define DOCTEST_WARN_THROWS_WITH_AS_MESSAGE(expr, with, ex, ...) ([] \{ return false; \})}\par
2447 {\cf21 #define DOCTEST_CHECK_THROWS_WITH_AS_MESSAGE(expr, with, ex, ...) ([] \{ return false; \})}\par
2448 {\cf21 #define DOCTEST_REQUIRE_THROWS_WITH_AS_MESSAGE(expr, with, ex, ...) ([] \{ return false; \})}\par
2449 {\cf21 #define DOCTEST_WARN_NOTHROW_MESSAGE(expr, ...) ([] \{ return false; \})}\par
2450 {\cf21 #define DOCTEST_CHECK_NOTHROW_MESSAGE(expr, ...) ([] \{ return false; \})}\par
2451 {\cf21 #define DOCTEST_REQUIRE_NOTHROW_MESSAGE(expr, ...) ([] \{ return false; \})}\par
2452 \par
2453 {\cf21 #else }{\cf20 // DOCTEST_CONFIG_NO_EXCEPTIONS_BUT_WITH_ALL_ASSERTS}\par
2454 \par
2455 {\cf21 #undef DOCTEST_REQUIRE}\par
2456 {\cf21 #undef DOCTEST_REQUIRE_FALSE}\par
2457 {\cf21 #undef DOCTEST_REQUIRE_MESSAGE}\par
2458 {\cf21 #undef DOCTEST_REQUIRE_FALSE_MESSAGE}\par
2459 {\cf21 #undef DOCTEST_REQUIRE_EQ}\par
2460 {\cf21 #undef DOCTEST_REQUIRE_NE}\par
2461 {\cf21 #undef DOCTEST_REQUIRE_GT}\par
2462 {\cf21 #undef DOCTEST_REQUIRE_LT}\par
2463 {\cf21 #undef DOCTEST_REQUIRE_GE}\par
2464 {\cf21 #undef DOCTEST_REQUIRE_LE}\par
2465 {\cf21 #undef DOCTEST_REQUIRE_UNARY}\par
2466 {\cf21 #undef DOCTEST_REQUIRE_UNARY_FALSE}\par
2467 \par
2468 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_NO_EXCEPTIONS_BUT_WITH_ALL_ASSERTS}\par
2469 \par
2470 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_NO_EXCEPTIONS}\par
2471 \par
2472 {\cf20 // =================================================================================================}\par
2473 {\cf20 // == WHAT FOLLOWS IS VERSIONS OF THE MACROS THAT DO NOT DO ANY REGISTERING!                      ==}\par
2474 {\cf20 // == THIS CAN BE ENABLED BY DEFINING DOCTEST_CONFIG_DISABLE GLOBALLY!                            ==}\par
2475 {\cf20 // =================================================================================================}\par
2476 {\cf21 #else }{\cf20 // DOCTEST_CONFIG_DISABLE}\par
2477 \par
2478 {\cf21 #define DOCTEST_IMPLEMENT_FIXTURE(der, base, func, name)                                           \\}\par
2479 {\cf21     namespace \{                                                                                    \\}\par
2480 {\cf21         template <typename DOCTEST_UNUSED_TEMPLATE_TYPE>                                           \\}\par
2481 {\cf21         struct der : public base                                                                   \\}\par
2482 {\cf21         \{ void f(); \};                                                                             \\}\par
2483 {\cf21     \}                                                                                              \\}\par
2484 {\cf21     template <typename DOCTEST_UNUSED_TEMPLATE_TYPE>                                               \\}\par
2485 {\cf21     inline void der<DOCTEST_UNUSED_TEMPLATE_TYPE>::f()}\par
2486 \par
2487 {\cf21 #define DOCTEST_CREATE_AND_REGISTER_FUNCTION(f, name)                                              \\}\par
2488 {\cf21     template <typename DOCTEST_UNUSED_TEMPLATE_TYPE>                                               \\}\par
2489 {\cf21     static inline void f()}\par
2490 \par
2491 {\cf20 // for registering tests}\par
2492 {\cf21 #define DOCTEST_TEST_CASE(name)                                                                    \\}\par
2493 {\cf21     DOCTEST_CREATE_AND_REGISTER_FUNCTION(DOCTEST_ANONYMOUS(DOCTEST_ANON_FUNC_), name)}\par
2494 \par
2495 {\cf20 // for registering tests in classes}\par
2496 {\cf21 #define DOCTEST_TEST_CASE_CLASS(name)                                                              \\}\par
2497 {\cf21     DOCTEST_CREATE_AND_REGISTER_FUNCTION(DOCTEST_ANONYMOUS(DOCTEST_ANON_FUNC_), name)}\par
2498 \par
2499 {\cf20 // for registering tests with a fixture}\par
2500 {\cf21 #define DOCTEST_TEST_CASE_FIXTURE(x, name)                                                         \\}\par
2501 {\cf21     DOCTEST_IMPLEMENT_FIXTURE(DOCTEST_ANONYMOUS(DOCTEST_ANON_CLASS_), x,                           \\}\par
2502 {\cf21                               DOCTEST_ANONYMOUS(DOCTEST_ANON_FUNC_), name)}\par
2503 \par
2504 {\cf20 // for converting types to strings without the <typeinfo> header and demangling}\par
2505 {\cf21 #define DOCTEST_TYPE_TO_STRING(...) static_assert(true, ""})\par
2506 {\cf21 #define DOCTEST_TYPE_TO_STRING_IMPL(...)}\par
2507 \par
2508 {\cf20 // for typed tests}\par
2509 {\cf21 #define DOCTEST_TEST_CASE_TEMPLATE(name, type, ...)                                                \\}\par
2510 {\cf21     template <typename type>                                                                       \\}\par
2511 {\cf21     inline void DOCTEST_ANONYMOUS(DOCTEST_ANON_TMP_)()}\par
2512 \par
2513 {\cf21 #define DOCTEST_TEST_CASE_TEMPLATE_DEFINE(name, type, id)                                          \\}\par
2514 {\cf21     template <typename type>                                                                       \\}\par
2515 {\cf21     inline void DOCTEST_ANONYMOUS(DOCTEST_ANON_TMP_)()}\par
2516 \par
2517 {\cf21 #define DOCTEST_TEST_CASE_TEMPLATE_INVOKE(id, ...) static_assert(true, ""})\par
2518 {\cf21 #define DOCTEST_TEST_CASE_TEMPLATE_APPLY(id, ...) static_assert(true, ""})\par
2519 \par
2520 {\cf20 // for subcases}\par
2521 {\cf21 #define DOCTEST_SUBCASE(name)}\par
2522 \par
2523 {\cf20 // for a testsuite block}\par
2524 {\cf21 #define DOCTEST_TEST_SUITE(name) namespace}\par
2525 \par
2526 {\cf20 // for starting a testsuite block}\par
2527 {\cf21 #define DOCTEST_TEST_SUITE_BEGIN(name) static_assert(true, ""})\par
2528 \par
2529 {\cf20 // for ending a testsuite block}\par
2530 {\cf21 #define DOCTEST_TEST_SUITE_END typedef int DOCTEST_ANONYMOUS(DOCTEST_ANON_FOR_SEMICOLON_)}\par
2531 \par
2532 {\cf21 #define DOCTEST_REGISTER_EXCEPTION_TRANSLATOR(signature)                                           \\}\par
2533 {\cf21     template <typename DOCTEST_UNUSED_TEMPLATE_TYPE>                                               \\}\par
2534 {\cf21     static inline doctest::String DOCTEST_ANONYMOUS(DOCTEST_ANON_TRANSLATOR_)(signature)}\par
2535 \par
2536 {\cf21 #define DOCTEST_REGISTER_REPORTER(name, priority, reporter)}\par
2537 {\cf21 #define DOCTEST_REGISTER_LISTENER(name, priority, reporter)}\par
2538 \par
2539 {\cf21 #define DOCTEST_INFO(...) (static_cast<void>(0))}\par
2540 {\cf21 #define DOCTEST_CAPTURE(x) (static_cast<void>(0))}\par
2541 {\cf21 #define DOCTEST_ADD_MESSAGE_AT(file, line, ...) (static_cast<void>(0))}\par
2542 {\cf21 #define DOCTEST_ADD_FAIL_CHECK_AT(file, line, ...) (static_cast<void>(0))}\par
2543 {\cf21 #define DOCTEST_ADD_FAIL_AT(file, line, ...) (static_cast<void>(0))}\par
2544 {\cf21 #define DOCTEST_MESSAGE(...) (static_cast<void>(0))}\par
2545 {\cf21 #define DOCTEST_FAIL_CHECK(...) (static_cast<void>(0))}\par
2546 {\cf21 #define DOCTEST_FAIL(...) (static_cast<void>(0))}\par
2547 \par
2548 {\cf21 #ifdef DOCTEST_CONFIG_EVALUATE_ASSERTS_EVEN_WHEN_DISABLED}\par
2549 \par
2550 {\cf21 #define DOCTEST_WARN(...) [&] \{ return __VA_ARGS__; \}()}\par
2551 {\cf21 #define DOCTEST_CHECK(...) [&] \{ return __VA_ARGS__; \}()}\par
2552 {\cf21 #define DOCTEST_REQUIRE(...) [&] \{ return __VA_ARGS__; \}()}\par
2553 {\cf21 #define DOCTEST_WARN_FALSE(...) [&] \{ return !(__VA_ARGS__); \}()}\par
2554 {\cf21 #define DOCTEST_CHECK_FALSE(...) [&] \{ return !(__VA_ARGS__); \}()}\par
2555 {\cf21 #define DOCTEST_REQUIRE_FALSE(...) [&] \{ return !(__VA_ARGS__); \}()}\par
2556 \par
2557 {\cf21 #define DOCTEST_WARN_MESSAGE(cond, ...) [&] \{ return cond; \}()}\par
2558 {\cf21 #define DOCTEST_CHECK_MESSAGE(cond, ...) [&] \{ return cond; \}()}\par
2559 {\cf21 #define DOCTEST_REQUIRE_MESSAGE(cond, ...) [&] \{ return cond; \}()}\par
2560 {\cf21 #define DOCTEST_WARN_FALSE_MESSAGE(cond, ...) [&] \{ return !(cond); \}()}\par
2561 {\cf21 #define DOCTEST_CHECK_FALSE_MESSAGE(cond, ...) [&] \{ return !(cond); \}()}\par
2562 {\cf21 #define DOCTEST_REQUIRE_FALSE_MESSAGE(cond, ...) [&] \{ return !(cond); \}()}\par
2563 \par
2564 {\cf17 namespace }doctest \{\par
2565 {\cf17 namespace }detail \{\par
2566 {\cf21 #define DOCTEST_RELATIONAL_OP(name, op)                                                            \\}\par
2567 {\cf21     template <typename L, typename R>                                                              \\}\par
2568 {\cf21     bool name(const DOCTEST_REF_WRAP(L) lhs, const DOCTEST_REF_WRAP(R) rhs) \{ return lhs op rhs; \}}\par
2569 \par
2570     DOCTEST_RELATIONAL_OP(eq, ==)\par
2571     DOCTEST_RELATIONAL_OP(ne, !=)\par
2572     DOCTEST_RELATIONAL_OP(lt, <)\par
2573     DOCTEST_RELATIONAL_OP(gt, >)\par
2574     DOCTEST_RELATIONAL_OP(le, <=)\par
2575     DOCTEST_RELATIONAL_OP(ge, >=)\par
2576 \} {\cf20 // namespace detail}\par
2577 \} {\cf20 // namespace doctest}\par
2578 \par
2579 {\cf21 #define DOCTEST_WARN_EQ(...) [&] \{ return doctest::detail::eq(__VA_ARGS__); \}()}\par
2580 {\cf21 #define DOCTEST_CHECK_EQ(...) [&] \{ return doctest::detail::eq(__VA_ARGS__); \}()}\par
2581 {\cf21 #define DOCTEST_REQUIRE_EQ(...) [&] \{ return doctest::detail::eq(__VA_ARGS__); \}()}\par
2582 {\cf21 #define DOCTEST_WARN_NE(...) [&] \{ return doctest::detail::ne(__VA_ARGS__); \}()}\par
2583 {\cf21 #define DOCTEST_CHECK_NE(...) [&] \{ return doctest::detail::ne(__VA_ARGS__); \}()}\par
2584 {\cf21 #define DOCTEST_REQUIRE_NE(...) [&] \{ return doctest::detail::ne(__VA_ARGS__); \}()}\par
2585 {\cf21 #define DOCTEST_WARN_LT(...) [&] \{ return doctest::detail::lt(__VA_ARGS__); \}()}\par
2586 {\cf21 #define DOCTEST_CHECK_LT(...) [&] \{ return doctest::detail::lt(__VA_ARGS__); \}()}\par
2587 {\cf21 #define DOCTEST_REQUIRE_LT(...) [&] \{ return doctest::detail::lt(__VA_ARGS__); \}()}\par
2588 {\cf21 #define DOCTEST_WARN_GT(...) [&] \{ return doctest::detail::gt(__VA_ARGS__); \}()}\par
2589 {\cf21 #define DOCTEST_CHECK_GT(...) [&] \{ return doctest::detail::gt(__VA_ARGS__); \}()}\par
2590 {\cf21 #define DOCTEST_REQUIRE_GT(...) [&] \{ return doctest::detail::gt(__VA_ARGS__); \}()}\par
2591 {\cf21 #define DOCTEST_WARN_LE(...) [&] \{ return doctest::detail::le(__VA_ARGS__); \}()}\par
2592 {\cf21 #define DOCTEST_CHECK_LE(...) [&] \{ return doctest::detail::le(__VA_ARGS__); \}()}\par
2593 {\cf21 #define DOCTEST_REQUIRE_LE(...) [&] \{ return doctest::detail::le(__VA_ARGS__); \}()}\par
2594 {\cf21 #define DOCTEST_WARN_GE(...) [&] \{ return doctest::detail::ge(__VA_ARGS__); \}()}\par
2595 {\cf21 #define DOCTEST_CHECK_GE(...) [&] \{ return doctest::detail::ge(__VA_ARGS__); \}()}\par
2596 {\cf21 #define DOCTEST_REQUIRE_GE(...) [&] \{ return doctest::detail::ge(__VA_ARGS__); \}()}\par
2597 {\cf21 #define DOCTEST_WARN_UNARY(...) [&] \{ return __VA_ARGS__; \}()}\par
2598 {\cf21 #define DOCTEST_CHECK_UNARY(...) [&] \{ return __VA_ARGS__; \}()}\par
2599 {\cf21 #define DOCTEST_REQUIRE_UNARY(...) [&] \{ return __VA_ARGS__; \}()}\par
2600 {\cf21 #define DOCTEST_WARN_UNARY_FALSE(...) [&] \{ return !(__VA_ARGS__); \}()}\par
2601 {\cf21 #define DOCTEST_CHECK_UNARY_FALSE(...) [&] \{ return !(__VA_ARGS__); \}()}\par
2602 {\cf21 #define DOCTEST_REQUIRE_UNARY_FALSE(...) [&] \{ return !(__VA_ARGS__); \}()}\par
2603 \par
2604 {\cf21 #else }{\cf20 // DOCTEST_CONFIG_EVALUATE_ASSERTS_EVEN_WHEN_DISABLED}\par
2605 \par
2606 {\cf21 #define DOCTEST_WARN(...) ([] \{ return false; \})}\par
2607 {\cf21 #define DOCTEST_CHECK(...) ([] \{ return false; \})}\par
2608 {\cf21 #define DOCTEST_REQUIRE(...) ([] \{ return false; \})}\par
2609 {\cf21 #define DOCTEST_WARN_FALSE(...) ([] \{ return false; \})}\par
2610 {\cf21 #define DOCTEST_CHECK_FALSE(...) ([] \{ return false; \})}\par
2611 {\cf21 #define DOCTEST_REQUIRE_FALSE(...) ([] \{ return false; \})}\par
2612 \par
2613 {\cf21 #define DOCTEST_WARN_MESSAGE(cond, ...) ([] \{ return false; \})}\par
2614 {\cf21 #define DOCTEST_CHECK_MESSAGE(cond, ...) ([] \{ return false; \})}\par
2615 {\cf21 #define DOCTEST_REQUIRE_MESSAGE(cond, ...) ([] \{ return false; \})}\par
2616 {\cf21 #define DOCTEST_WARN_FALSE_MESSAGE(cond, ...) ([] \{ return false; \})}\par
2617 {\cf21 #define DOCTEST_CHECK_FALSE_MESSAGE(cond, ...) ([] \{ return false; \})}\par
2618 {\cf21 #define DOCTEST_REQUIRE_FALSE_MESSAGE(cond, ...) ([] \{ return false; \})}\par
2619 \par
2620 {\cf21 #define DOCTEST_WARN_EQ(...) ([] \{ return false; \})}\par
2621 {\cf21 #define DOCTEST_CHECK_EQ(...) ([] \{ return false; \})}\par
2622 {\cf21 #define DOCTEST_REQUIRE_EQ(...) ([] \{ return false; \})}\par
2623 {\cf21 #define DOCTEST_WARN_NE(...) ([] \{ return false; \})}\par
2624 {\cf21 #define DOCTEST_CHECK_NE(...) ([] \{ return false; \})}\par
2625 {\cf21 #define DOCTEST_REQUIRE_NE(...) ([] \{ return false; \})}\par
2626 {\cf21 #define DOCTEST_WARN_GT(...) ([] \{ return false; \})}\par
2627 {\cf21 #define DOCTEST_CHECK_GT(...) ([] \{ return false; \})}\par
2628 {\cf21 #define DOCTEST_REQUIRE_GT(...) ([] \{ return false; \})}\par
2629 {\cf21 #define DOCTEST_WARN_LT(...) ([] \{ return false; \})}\par
2630 {\cf21 #define DOCTEST_CHECK_LT(...) ([] \{ return false; \})}\par
2631 {\cf21 #define DOCTEST_REQUIRE_LT(...) ([] \{ return false; \})}\par
2632 {\cf21 #define DOCTEST_WARN_GE(...) ([] \{ return false; \})}\par
2633 {\cf21 #define DOCTEST_CHECK_GE(...) ([] \{ return false; \})}\par
2634 {\cf21 #define DOCTEST_REQUIRE_GE(...) ([] \{ return false; \})}\par
2635 {\cf21 #define DOCTEST_WARN_LE(...) ([] \{ return false; \})}\par
2636 {\cf21 #define DOCTEST_CHECK_LE(...) ([] \{ return false; \})}\par
2637 {\cf21 #define DOCTEST_REQUIRE_LE(...) ([] \{ return false; \})}\par
2638 \par
2639 {\cf21 #define DOCTEST_WARN_UNARY(...) ([] \{ return false; \})}\par
2640 {\cf21 #define DOCTEST_CHECK_UNARY(...) ([] \{ return false; \})}\par
2641 {\cf21 #define DOCTEST_REQUIRE_UNARY(...) ([] \{ return false; \})}\par
2642 {\cf21 #define DOCTEST_WARN_UNARY_FALSE(...) ([] \{ return false; \})}\par
2643 {\cf21 #define DOCTEST_CHECK_UNARY_FALSE(...) ([] \{ return false; \})}\par
2644 {\cf21 #define DOCTEST_REQUIRE_UNARY_FALSE(...) ([] \{ return false; \})}\par
2645 \par
2646 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_EVALUATE_ASSERTS_EVEN_WHEN_DISABLED}\par
2647 \par
2648 {\cf20 // TODO: think about if these also need to work properly even when doctest is disabled}\par
2649 {\cf21 #define DOCTEST_WARN_THROWS(...) ([] \{ return false; \})}\par
2650 {\cf21 #define DOCTEST_CHECK_THROWS(...) ([] \{ return false; \})}\par
2651 {\cf21 #define DOCTEST_REQUIRE_THROWS(...) ([] \{ return false; \})}\par
2652 {\cf21 #define DOCTEST_WARN_THROWS_AS(expr, ...) ([] \{ return false; \})}\par
2653 {\cf21 #define DOCTEST_CHECK_THROWS_AS(expr, ...) ([] \{ return false; \})}\par
2654 {\cf21 #define DOCTEST_REQUIRE_THROWS_AS(expr, ...) ([] \{ return false; \})}\par
2655 {\cf21 #define DOCTEST_WARN_THROWS_WITH(expr, ...) ([] \{ return false; \})}\par
2656 {\cf21 #define DOCTEST_CHECK_THROWS_WITH(expr, ...) ([] \{ return false; \})}\par
2657 {\cf21 #define DOCTEST_REQUIRE_THROWS_WITH(expr, ...) ([] \{ return false; \})}\par
2658 {\cf21 #define DOCTEST_WARN_THROWS_WITH_AS(expr, with, ...) ([] \{ return false; \})}\par
2659 {\cf21 #define DOCTEST_CHECK_THROWS_WITH_AS(expr, with, ...) ([] \{ return false; \})}\par
2660 {\cf21 #define DOCTEST_REQUIRE_THROWS_WITH_AS(expr, with, ...) ([] \{ return false; \})}\par
2661 {\cf21 #define DOCTEST_WARN_NOTHROW(...) ([] \{ return false; \})}\par
2662 {\cf21 #define DOCTEST_CHECK_NOTHROW(...) ([] \{ return false; \})}\par
2663 {\cf21 #define DOCTEST_REQUIRE_NOTHROW(...) ([] \{ return false; \})}\par
2664 \par
2665 {\cf21 #define DOCTEST_WARN_THROWS_MESSAGE(expr, ...) ([] \{ return false; \})}\par
2666 {\cf21 #define DOCTEST_CHECK_THROWS_MESSAGE(expr, ...) ([] \{ return false; \})}\par
2667 {\cf21 #define DOCTEST_REQUIRE_THROWS_MESSAGE(expr, ...) ([] \{ return false; \})}\par
2668 {\cf21 #define DOCTEST_WARN_THROWS_AS_MESSAGE(expr, ex, ...) ([] \{ return false; \})}\par
2669 {\cf21 #define DOCTEST_CHECK_THROWS_AS_MESSAGE(expr, ex, ...) ([] \{ return false; \})}\par
2670 {\cf21 #define DOCTEST_REQUIRE_THROWS_AS_MESSAGE(expr, ex, ...) ([] \{ return false; \})}\par
2671 {\cf21 #define DOCTEST_WARN_THROWS_WITH_MESSAGE(expr, with, ...) ([] \{ return false; \})}\par
2672 {\cf21 #define DOCTEST_CHECK_THROWS_WITH_MESSAGE(expr, with, ...) ([] \{ return false; \})}\par
2673 {\cf21 #define DOCTEST_REQUIRE_THROWS_WITH_MESSAGE(expr, with, ...) ([] \{ return false; \})}\par
2674 {\cf21 #define DOCTEST_WARN_THROWS_WITH_AS_MESSAGE(expr, with, ex, ...) ([] \{ return false; \})}\par
2675 {\cf21 #define DOCTEST_CHECK_THROWS_WITH_AS_MESSAGE(expr, with, ex, ...) ([] \{ return false; \})}\par
2676 {\cf21 #define DOCTEST_REQUIRE_THROWS_WITH_AS_MESSAGE(expr, with, ex, ...) ([] \{ return false; \})}\par
2677 {\cf21 #define DOCTEST_WARN_NOTHROW_MESSAGE(expr, ...) ([] \{ return false; \})}\par
2678 {\cf21 #define DOCTEST_CHECK_NOTHROW_MESSAGE(expr, ...) ([] \{ return false; \})}\par
2679 {\cf21 #define DOCTEST_REQUIRE_NOTHROW_MESSAGE(expr, ...) ([] \{ return false; \})}\par
2680 \par
2681 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_DISABLE}\par
2682 \par
2683 {\cf20 // clang-format off}\par
2684 {\cf20 // KEPT FOR BACKWARDS COMPATIBILITY - FORWARDING TO THE RIGHT MACROS}\par
2685 {\cf21 #define DOCTEST_FAST_WARN_EQ             DOCTEST_WARN_EQ}\par
2686 {\cf21 #define DOCTEST_FAST_CHECK_EQ            DOCTEST_CHECK_EQ}\par
2687 {\cf21 #define DOCTEST_FAST_REQUIRE_EQ          DOCTEST_REQUIRE_EQ}\par
2688 {\cf21 #define DOCTEST_FAST_WARN_NE             DOCTEST_WARN_NE}\par
2689 {\cf21 #define DOCTEST_FAST_CHECK_NE            DOCTEST_CHECK_NE}\par
2690 {\cf21 #define DOCTEST_FAST_REQUIRE_NE          DOCTEST_REQUIRE_NE}\par
2691 {\cf21 #define DOCTEST_FAST_WARN_GT             DOCTEST_WARN_GT}\par
2692 {\cf21 #define DOCTEST_FAST_CHECK_GT            DOCTEST_CHECK_GT}\par
2693 {\cf21 #define DOCTEST_FAST_REQUIRE_GT          DOCTEST_REQUIRE_GT}\par
2694 {\cf21 #define DOCTEST_FAST_WARN_LT             DOCTEST_WARN_LT}\par
2695 {\cf21 #define DOCTEST_FAST_CHECK_LT            DOCTEST_CHECK_LT}\par
2696 {\cf21 #define DOCTEST_FAST_REQUIRE_LT          DOCTEST_REQUIRE_LT}\par
2697 {\cf21 #define DOCTEST_FAST_WARN_GE             DOCTEST_WARN_GE}\par
2698 {\cf21 #define DOCTEST_FAST_CHECK_GE            DOCTEST_CHECK_GE}\par
2699 {\cf21 #define DOCTEST_FAST_REQUIRE_GE          DOCTEST_REQUIRE_GE}\par
2700 {\cf21 #define DOCTEST_FAST_WARN_LE             DOCTEST_WARN_LE}\par
2701 {\cf21 #define DOCTEST_FAST_CHECK_LE            DOCTEST_CHECK_LE}\par
2702 {\cf21 #define DOCTEST_FAST_REQUIRE_LE          DOCTEST_REQUIRE_LE}\par
2703 \par
2704 {\cf21 #define DOCTEST_FAST_WARN_UNARY          DOCTEST_WARN_UNARY}\par
2705 {\cf21 #define DOCTEST_FAST_CHECK_UNARY         DOCTEST_CHECK_UNARY}\par
2706 {\cf21 #define DOCTEST_FAST_REQUIRE_UNARY       DOCTEST_REQUIRE_UNARY}\par
2707 {\cf21 #define DOCTEST_FAST_WARN_UNARY_FALSE    DOCTEST_WARN_UNARY_FALSE}\par
2708 {\cf21 #define DOCTEST_FAST_CHECK_UNARY_FALSE   DOCTEST_CHECK_UNARY_FALSE}\par
2709 {\cf21 #define DOCTEST_FAST_REQUIRE_UNARY_FALSE DOCTEST_REQUIRE_UNARY_FALSE}\par
2710 \par
2711 {\cf21 #define DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE(id, ...) DOCTEST_TEST_CASE_TEMPLATE_INVOKE(id,__VA_ARGS__)}\par
2712 {\cf20 // clang-format on}\par
2713 \par
2714 {\cf20 // BDD style macros}\par
2715 {\cf20 // clang-format off}\par
2716 {\cf21 #define DOCTEST_SCENARIO(name) DOCTEST_TEST_CASE("  Scenario: "} name)\par
2717 {\cf21 #define DOCTEST_SCENARIO_CLASS(name) DOCTEST_TEST_CASE_CLASS("  Scenario: "} name)\par
2718 {\cf21 #define DOCTEST_SCENARIO_TEMPLATE(name, T, ...)  DOCTEST_TEST_CASE_TEMPLATE("  Scenario: "} name, T, __VA_ARGS__)\par
2719 {\cf21 #define DOCTEST_SCENARIO_TEMPLATE_DEFINE(name, T, id) DOCTEST_TEST_CASE_TEMPLATE_DEFINE("  Scenario: "} name, T, id)\par
2720 \par
2721 {\cf21 #define DOCTEST_GIVEN(name)     DOCTEST_SUBCASE("   Given: "} name)\par
2722 {\cf21 #define DOCTEST_WHEN(name)      DOCTEST_SUBCASE("    When: "} name)\par
2723 {\cf21 #define DOCTEST_AND_WHEN(name)  DOCTEST_SUBCASE("And when: "} name)\par
2724 {\cf21 #define DOCTEST_THEN(name)      DOCTEST_SUBCASE("    Then: "} name)\par
2725 {\cf21 #define DOCTEST_AND_THEN(name)  DOCTEST_SUBCASE("     And: "} name)\par
2726 {\cf20 // clang-format on}\par
2727 \par
2728 {\cf20 // == SHORT VERSIONS OF THE MACROS}\par
2729 {\cf21 #if !defined(DOCTEST_CONFIG_NO_SHORT_MACRO_NAMES)}\par
2730 \par
2731 {\cf21 #define TEST_CASE(name) DOCTEST_TEST_CASE(name)}\par
2732 {\cf21 #define TEST_CASE_CLASS(name) DOCTEST_TEST_CASE_CLASS(name)}\par
2733 {\cf21 #define TEST_CASE_FIXTURE(x, name) DOCTEST_TEST_CASE_FIXTURE(x, name)}\par
2734 {\cf21 #define TYPE_TO_STRING(...) DOCTEST_TYPE_TO_STRING(__VA_ARGS__)}\par
2735 {\cf21 #define TEST_CASE_TEMPLATE(name, T, ...) DOCTEST_TEST_CASE_TEMPLATE(name, T, __VA_ARGS__)}\par
2736 {\cf21 #define TEST_CASE_TEMPLATE_DEFINE(name, T, id) DOCTEST_TEST_CASE_TEMPLATE_DEFINE(name, T, id)}\par
2737 {\cf21 #define TEST_CASE_TEMPLATE_INVOKE(id, ...) DOCTEST_TEST_CASE_TEMPLATE_INVOKE(id, __VA_ARGS__)}\par
2738 {\cf21 #define TEST_CASE_TEMPLATE_APPLY(id, ...) DOCTEST_TEST_CASE_TEMPLATE_APPLY(id, __VA_ARGS__)}\par
2739 {\cf21 #define SUBCASE(name) DOCTEST_SUBCASE(name)}\par
2740 {\cf21 #define TEST_SUITE(decorators) DOCTEST_TEST_SUITE(decorators)}\par
2741 {\cf21 #define TEST_SUITE_BEGIN(name) DOCTEST_TEST_SUITE_BEGIN(name)}\par
2742 {\cf21 #define TEST_SUITE_END DOCTEST_TEST_SUITE_END}\par
2743 {\cf21 #define REGISTER_EXCEPTION_TRANSLATOR(signature) DOCTEST_REGISTER_EXCEPTION_TRANSLATOR(signature)}\par
2744 {\cf21 #define REGISTER_REPORTER(name, priority, reporter) DOCTEST_REGISTER_REPORTER(name, priority, reporter)}\par
2745 {\cf21 #define REGISTER_LISTENER(name, priority, reporter) DOCTEST_REGISTER_LISTENER(name, priority, reporter)}\par
2746 {\cf21 #define INFO(...) DOCTEST_INFO(__VA_ARGS__)}\par
2747 {\cf21 #define CAPTURE(x) DOCTEST_CAPTURE(x)}\par
2748 {\cf21 #define ADD_MESSAGE_AT(file, line, ...) DOCTEST_ADD_MESSAGE_AT(file, line, __VA_ARGS__)}\par
2749 {\cf21 #define ADD_FAIL_CHECK_AT(file, line, ...) DOCTEST_ADD_FAIL_CHECK_AT(file, line, __VA_ARGS__)}\par
2750 {\cf21 #define ADD_FAIL_AT(file, line, ...) DOCTEST_ADD_FAIL_AT(file, line, __VA_ARGS__)}\par
2751 {\cf21 #define MESSAGE(...) DOCTEST_MESSAGE(__VA_ARGS__)}\par
2752 {\cf21 #define FAIL_CHECK(...) DOCTEST_FAIL_CHECK(__VA_ARGS__)}\par
2753 {\cf21 #define FAIL(...) DOCTEST_FAIL(__VA_ARGS__)}\par
2754 {\cf21 #define TO_LVALUE(...) DOCTEST_TO_LVALUE(__VA_ARGS__)}\par
2755 \par
2756 {\cf21 #define WARN(...) DOCTEST_WARN(__VA_ARGS__)}\par
2757 {\cf21 #define WARN_FALSE(...) DOCTEST_WARN_FALSE(__VA_ARGS__)}\par
2758 {\cf21 #define WARN_THROWS(...) DOCTEST_WARN_THROWS(__VA_ARGS__)}\par
2759 {\cf21 #define WARN_THROWS_AS(expr, ...) DOCTEST_WARN_THROWS_AS(expr, __VA_ARGS__)}\par
2760 {\cf21 #define WARN_THROWS_WITH(expr, ...) DOCTEST_WARN_THROWS_WITH(expr, __VA_ARGS__)}\par
2761 {\cf21 #define WARN_THROWS_WITH_AS(expr, with, ...) DOCTEST_WARN_THROWS_WITH_AS(expr, with, __VA_ARGS__)}\par
2762 {\cf21 #define WARN_NOTHROW(...) DOCTEST_WARN_NOTHROW(__VA_ARGS__)}\par
2763 {\cf21 #define CHECK(...) DOCTEST_CHECK(__VA_ARGS__)}\par
2764 {\cf21 #define CHECK_FALSE(...) DOCTEST_CHECK_FALSE(__VA_ARGS__)}\par
2765 {\cf21 #define CHECK_THROWS(...) DOCTEST_CHECK_THROWS(__VA_ARGS__)}\par
2766 {\cf21 #define CHECK_THROWS_AS(expr, ...) DOCTEST_CHECK_THROWS_AS(expr, __VA_ARGS__)}\par
2767 {\cf21 #define CHECK_THROWS_WITH(expr, ...) DOCTEST_CHECK_THROWS_WITH(expr, __VA_ARGS__)}\par
2768 {\cf21 #define CHECK_THROWS_WITH_AS(expr, with, ...) DOCTEST_CHECK_THROWS_WITH_AS(expr, with, __VA_ARGS__)}\par
2769 {\cf21 #define CHECK_NOTHROW(...) DOCTEST_CHECK_NOTHROW(__VA_ARGS__)}\par
2770 {\cf21 #define REQUIRE(...) DOCTEST_REQUIRE(__VA_ARGS__)}\par
2771 {\cf21 #define REQUIRE_FALSE(...) DOCTEST_REQUIRE_FALSE(__VA_ARGS__)}\par
2772 {\cf21 #define REQUIRE_THROWS(...) DOCTEST_REQUIRE_THROWS(__VA_ARGS__)}\par
2773 {\cf21 #define REQUIRE_THROWS_AS(expr, ...) DOCTEST_REQUIRE_THROWS_AS(expr, __VA_ARGS__)}\par
2774 {\cf21 #define REQUIRE_THROWS_WITH(expr, ...) DOCTEST_REQUIRE_THROWS_WITH(expr, __VA_ARGS__)}\par
2775 {\cf21 #define REQUIRE_THROWS_WITH_AS(expr, with, ...) DOCTEST_REQUIRE_THROWS_WITH_AS(expr, with, __VA_ARGS__)}\par
2776 {\cf21 #define REQUIRE_NOTHROW(...) DOCTEST_REQUIRE_NOTHROW(__VA_ARGS__)}\par
2777 \par
2778 {\cf21 #define WARN_MESSAGE(cond, ...) DOCTEST_WARN_MESSAGE(cond, __VA_ARGS__)}\par
2779 {\cf21 #define WARN_FALSE_MESSAGE(cond, ...) DOCTEST_WARN_FALSE_MESSAGE(cond, __VA_ARGS__)}\par
2780 {\cf21 #define WARN_THROWS_MESSAGE(expr, ...) DOCTEST_WARN_THROWS_MESSAGE(expr, __VA_ARGS__)}\par
2781 {\cf21 #define WARN_THROWS_AS_MESSAGE(expr, ex, ...) DOCTEST_WARN_THROWS_AS_MESSAGE(expr, ex, __VA_ARGS__)}\par
2782 {\cf21 #define WARN_THROWS_WITH_MESSAGE(expr, with, ...) DOCTEST_WARN_THROWS_WITH_MESSAGE(expr, with, __VA_ARGS__)}\par
2783 {\cf21 #define WARN_THROWS_WITH_AS_MESSAGE(expr, with, ex, ...) DOCTEST_WARN_THROWS_WITH_AS_MESSAGE(expr, with, ex, __VA_ARGS__)}\par
2784 {\cf21 #define WARN_NOTHROW_MESSAGE(expr, ...) DOCTEST_WARN_NOTHROW_MESSAGE(expr, __VA_ARGS__)}\par
2785 {\cf21 #define CHECK_MESSAGE(cond, ...) DOCTEST_CHECK_MESSAGE(cond, __VA_ARGS__)}\par
2786 {\cf21 #define CHECK_FALSE_MESSAGE(cond, ...) DOCTEST_CHECK_FALSE_MESSAGE(cond, __VA_ARGS__)}\par
2787 {\cf21 #define CHECK_THROWS_MESSAGE(expr, ...) DOCTEST_CHECK_THROWS_MESSAGE(expr, __VA_ARGS__)}\par
2788 {\cf21 #define CHECK_THROWS_AS_MESSAGE(expr, ex, ...) DOCTEST_CHECK_THROWS_AS_MESSAGE(expr, ex, __VA_ARGS__)}\par
2789 {\cf21 #define CHECK_THROWS_WITH_MESSAGE(expr, with, ...) DOCTEST_CHECK_THROWS_WITH_MESSAGE(expr, with, __VA_ARGS__)}\par
2790 {\cf21 #define CHECK_THROWS_WITH_AS_MESSAGE(expr, with, ex, ...) DOCTEST_CHECK_THROWS_WITH_AS_MESSAGE(expr, with, ex, __VA_ARGS__)}\par
2791 {\cf21 #define CHECK_NOTHROW_MESSAGE(expr, ...) DOCTEST_CHECK_NOTHROW_MESSAGE(expr, __VA_ARGS__)}\par
2792 {\cf21 #define REQUIRE_MESSAGE(cond, ...) DOCTEST_REQUIRE_MESSAGE(cond, __VA_ARGS__)}\par
2793 {\cf21 #define REQUIRE_FALSE_MESSAGE(cond, ...) DOCTEST_REQUIRE_FALSE_MESSAGE(cond, __VA_ARGS__)}\par
2794 {\cf21 #define REQUIRE_THROWS_MESSAGE(expr, ...) DOCTEST_REQUIRE_THROWS_MESSAGE(expr, __VA_ARGS__)}\par
2795 {\cf21 #define REQUIRE_THROWS_AS_MESSAGE(expr, ex, ...) DOCTEST_REQUIRE_THROWS_AS_MESSAGE(expr, ex, __VA_ARGS__)}\par
2796 {\cf21 #define REQUIRE_THROWS_WITH_MESSAGE(expr, with, ...) DOCTEST_REQUIRE_THROWS_WITH_MESSAGE(expr, with, __VA_ARGS__)}\par
2797 {\cf21 #define REQUIRE_THROWS_WITH_AS_MESSAGE(expr, with, ex, ...) DOCTEST_REQUIRE_THROWS_WITH_AS_MESSAGE(expr, with, ex, __VA_ARGS__)}\par
2798 {\cf21 #define REQUIRE_NOTHROW_MESSAGE(expr, ...) DOCTEST_REQUIRE_NOTHROW_MESSAGE(expr, __VA_ARGS__)}\par
2799 \par
2800 {\cf21 #define SCENARIO(name) DOCTEST_SCENARIO(name)}\par
2801 {\cf21 #define SCENARIO_CLASS(name) DOCTEST_SCENARIO_CLASS(name)}\par
2802 {\cf21 #define SCENARIO_TEMPLATE(name, T, ...) DOCTEST_SCENARIO_TEMPLATE(name, T, __VA_ARGS__)}\par
2803 {\cf21 #define SCENARIO_TEMPLATE_DEFINE(name, T, id) DOCTEST_SCENARIO_TEMPLATE_DEFINE(name, T, id)}\par
2804 {\cf21 #define GIVEN(name) DOCTEST_GIVEN(name)}\par
2805 {\cf21 #define WHEN(name) DOCTEST_WHEN(name)}\par
2806 {\cf21 #define AND_WHEN(name) DOCTEST_AND_WHEN(name)}\par
2807 {\cf21 #define THEN(name) DOCTEST_THEN(name)}\par
2808 {\cf21 #define AND_THEN(name) DOCTEST_AND_THEN(name)}\par
2809 \par
2810 {\cf21 #define WARN_EQ(...) DOCTEST_WARN_EQ(__VA_ARGS__)}\par
2811 {\cf21 #define CHECK_EQ(...) DOCTEST_CHECK_EQ(__VA_ARGS__)}\par
2812 {\cf21 #define REQUIRE_EQ(...) DOCTEST_REQUIRE_EQ(__VA_ARGS__)}\par
2813 {\cf21 #define WARN_NE(...) DOCTEST_WARN_NE(__VA_ARGS__)}\par
2814 {\cf21 #define CHECK_NE(...) DOCTEST_CHECK_NE(__VA_ARGS__)}\par
2815 {\cf21 #define REQUIRE_NE(...) DOCTEST_REQUIRE_NE(__VA_ARGS__)}\par
2816 {\cf21 #define WARN_GT(...) DOCTEST_WARN_GT(__VA_ARGS__)}\par
2817 {\cf21 #define CHECK_GT(...) DOCTEST_CHECK_GT(__VA_ARGS__)}\par
2818 {\cf21 #define REQUIRE_GT(...) DOCTEST_REQUIRE_GT(__VA_ARGS__)}\par
2819 {\cf21 #define WARN_LT(...) DOCTEST_WARN_LT(__VA_ARGS__)}\par
2820 {\cf21 #define CHECK_LT(...) DOCTEST_CHECK_LT(__VA_ARGS__)}\par
2821 {\cf21 #define REQUIRE_LT(...) DOCTEST_REQUIRE_LT(__VA_ARGS__)}\par
2822 {\cf21 #define WARN_GE(...) DOCTEST_WARN_GE(__VA_ARGS__)}\par
2823 {\cf21 #define CHECK_GE(...) DOCTEST_CHECK_GE(__VA_ARGS__)}\par
2824 {\cf21 #define REQUIRE_GE(...) DOCTEST_REQUIRE_GE(__VA_ARGS__)}\par
2825 {\cf21 #define WARN_LE(...) DOCTEST_WARN_LE(__VA_ARGS__)}\par
2826 {\cf21 #define CHECK_LE(...) DOCTEST_CHECK_LE(__VA_ARGS__)}\par
2827 {\cf21 #define REQUIRE_LE(...) DOCTEST_REQUIRE_LE(__VA_ARGS__)}\par
2828 {\cf21 #define WARN_UNARY(...) DOCTEST_WARN_UNARY(__VA_ARGS__)}\par
2829 {\cf21 #define CHECK_UNARY(...) DOCTEST_CHECK_UNARY(__VA_ARGS__)}\par
2830 {\cf21 #define REQUIRE_UNARY(...) DOCTEST_REQUIRE_UNARY(__VA_ARGS__)}\par
2831 {\cf21 #define WARN_UNARY_FALSE(...) DOCTEST_WARN_UNARY_FALSE(__VA_ARGS__)}\par
2832 {\cf21 #define CHECK_UNARY_FALSE(...) DOCTEST_CHECK_UNARY_FALSE(__VA_ARGS__)}\par
2833 {\cf21 #define REQUIRE_UNARY_FALSE(...) DOCTEST_REQUIRE_UNARY_FALSE(__VA_ARGS__)}\par
2834 \par
2835 {\cf20 // KEPT FOR BACKWARDS COMPATIBILITY}\par
2836 {\cf21 #define FAST_WARN_EQ(...) DOCTEST_FAST_WARN_EQ(__VA_ARGS__)}\par
2837 {\cf21 #define FAST_CHECK_EQ(...) DOCTEST_FAST_CHECK_EQ(__VA_ARGS__)}\par
2838 {\cf21 #define FAST_REQUIRE_EQ(...) DOCTEST_FAST_REQUIRE_EQ(__VA_ARGS__)}\par
2839 {\cf21 #define FAST_WARN_NE(...) DOCTEST_FAST_WARN_NE(__VA_ARGS__)}\par
2840 {\cf21 #define FAST_CHECK_NE(...) DOCTEST_FAST_CHECK_NE(__VA_ARGS__)}\par
2841 {\cf21 #define FAST_REQUIRE_NE(...) DOCTEST_FAST_REQUIRE_NE(__VA_ARGS__)}\par
2842 {\cf21 #define FAST_WARN_GT(...) DOCTEST_FAST_WARN_GT(__VA_ARGS__)}\par
2843 {\cf21 #define FAST_CHECK_GT(...) DOCTEST_FAST_CHECK_GT(__VA_ARGS__)}\par
2844 {\cf21 #define FAST_REQUIRE_GT(...) DOCTEST_FAST_REQUIRE_GT(__VA_ARGS__)}\par
2845 {\cf21 #define FAST_WARN_LT(...) DOCTEST_FAST_WARN_LT(__VA_ARGS__)}\par
2846 {\cf21 #define FAST_CHECK_LT(...) DOCTEST_FAST_CHECK_LT(__VA_ARGS__)}\par
2847 {\cf21 #define FAST_REQUIRE_LT(...) DOCTEST_FAST_REQUIRE_LT(__VA_ARGS__)}\par
2848 {\cf21 #define FAST_WARN_GE(...) DOCTEST_FAST_WARN_GE(__VA_ARGS__)}\par
2849 {\cf21 #define FAST_CHECK_GE(...) DOCTEST_FAST_CHECK_GE(__VA_ARGS__)}\par
2850 {\cf21 #define FAST_REQUIRE_GE(...) DOCTEST_FAST_REQUIRE_GE(__VA_ARGS__)}\par
2851 {\cf21 #define FAST_WARN_LE(...) DOCTEST_FAST_WARN_LE(__VA_ARGS__)}\par
2852 {\cf21 #define FAST_CHECK_LE(...) DOCTEST_FAST_CHECK_LE(__VA_ARGS__)}\par
2853 {\cf21 #define FAST_REQUIRE_LE(...) DOCTEST_FAST_REQUIRE_LE(__VA_ARGS__)}\par
2854 \par
2855 {\cf21 #define FAST_WARN_UNARY(...) DOCTEST_FAST_WARN_UNARY(__VA_ARGS__)}\par
2856 {\cf21 #define FAST_CHECK_UNARY(...) DOCTEST_FAST_CHECK_UNARY(__VA_ARGS__)}\par
2857 {\cf21 #define FAST_REQUIRE_UNARY(...) DOCTEST_FAST_REQUIRE_UNARY(__VA_ARGS__)}\par
2858 {\cf21 #define FAST_WARN_UNARY_FALSE(...) DOCTEST_FAST_WARN_UNARY_FALSE(__VA_ARGS__)}\par
2859 {\cf21 #define FAST_CHECK_UNARY_FALSE(...) DOCTEST_FAST_CHECK_UNARY_FALSE(__VA_ARGS__)}\par
2860 {\cf21 #define FAST_REQUIRE_UNARY_FALSE(...) DOCTEST_FAST_REQUIRE_UNARY_FALSE(__VA_ARGS__)}\par
2861 \par
2862 {\cf21 #define TEST_CASE_TEMPLATE_INSTANTIATE(id, ...) DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE(id, __VA_ARGS__)}\par
2863 \par
2864 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_NO_SHORT_MACRO_NAMES}\par
2865 \par
2866 {\cf21 #if !defined(DOCTEST_CONFIG_DISABLE)}\par
2867 \par
2868 {\cf20 // this is here to clear the 'current test suite' for the current translation unit - at the top}\par
2869 DOCTEST_TEST_SUITE_END();\par
2870 \par
2871 {\cf20 // add stringification for primitive/fundamental types}\par
2872 {\cf17 namespace }doctest \{ {\cf17 namespace }detail \{\par
2873     DOCTEST_TYPE_TO_STRING_IMPL({\cf18 bool})\par
2874     DOCTEST_TYPE_TO_STRING_IMPL({\cf18 float})\par
2875     DOCTEST_TYPE_TO_STRING_IMPL({\cf18 double})\par
2876     DOCTEST_TYPE_TO_STRING_IMPL({\cf18 long} {\cf18 double})\par
2877     DOCTEST_TYPE_TO_STRING_IMPL({\cf18 char})\par
2878     DOCTEST_TYPE_TO_STRING_IMPL({\cf18 signed} {\cf18 char})\par
2879     DOCTEST_TYPE_TO_STRING_IMPL({\cf18 unsigned} {\cf18 char})\par
2880 {\cf21 #if !DOCTEST_MSVC || defined(_NATIVE_WCHAR_T_DEFINED)}\par
2881     DOCTEST_TYPE_TO_STRING_IMPL({\cf18 wchar_t})\par
2882 {\cf21 #endif }{\cf20 // not MSVC or wchar_t support enabled}\par
2883     DOCTEST_TYPE_TO_STRING_IMPL({\cf18 short} {\cf18 int})\par
2884     DOCTEST_TYPE_TO_STRING_IMPL({\cf18 unsigned} {\cf18 short} {\cf18 int})\par
2885     DOCTEST_TYPE_TO_STRING_IMPL({\cf18 int})\par
2886     DOCTEST_TYPE_TO_STRING_IMPL({\cf18 unsigned} {\cf18 int})\par
2887     DOCTEST_TYPE_TO_STRING_IMPL({\cf18 long} {\cf18 int})\par
2888     DOCTEST_TYPE_TO_STRING_IMPL({\cf18 unsigned} {\cf18 long} {\cf18 int})\par
2889     DOCTEST_TYPE_TO_STRING_IMPL({\cf18 long} {\cf18 long} {\cf18 int})\par
2890     DOCTEST_TYPE_TO_STRING_IMPL({\cf18 unsigned} {\cf18 long} {\cf18 long} {\cf18 int})\par
2891 \}\} {\cf20 // namespace doctest::detail}\par
2892 \par
2893 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_DISABLE}\par
2894 \par
2895 DOCTEST_CLANG_SUPPRESS_WARNING_POP\par
2896 DOCTEST_MSVC_SUPPRESS_WARNING_POP\par
2897 DOCTEST_GCC_SUPPRESS_WARNING_POP\par
2898 \par
2899 DOCTEST_SUPPRESS_COMMON_WARNINGS_POP\par
2900 \par
2901 {\cf21 #endif }{\cf20 // DOCTEST_LIBRARY_INCLUDED}\par
2902 \par
2903 {\cf21 #ifndef DOCTEST_SINGLE_HEADER}\par
2904 {\cf21 #define DOCTEST_SINGLE_HEADER}\par
2905 {\cf21 #endif }{\cf20 // DOCTEST_SINGLE_HEADER}\par
2906 \par
2907 {\cf21 #if defined(DOCTEST_CONFIG_IMPLEMENT) || !defined(DOCTEST_SINGLE_HEADER)}\par
2908 \par
2909 {\cf21 #ifndef DOCTEST_SINGLE_HEADER}\par
2910 {\cf21 #include "doctest_fwd.h"}\par
2911 {\cf21 #endif }{\cf20 // DOCTEST_SINGLE_HEADER}\par
2912 \par
2913 DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH({\cf22 "-Wunused-macros"})\par
2914 \par
2915 {\cf21 #ifndef DOCTEST_LIBRARY_IMPLEMENTATION}\par
2916 {\cf21 #define DOCTEST_LIBRARY_IMPLEMENTATION}\par
2917 \par
2918 DOCTEST_CLANG_SUPPRESS_WARNING_POP\par
2919 \par
2920 DOCTEST_SUPPRESS_COMMON_WARNINGS_PUSH\par
2921 \par
2922 DOCTEST_CLANG_SUPPRESS_WARNING_PUSH\par
2923 DOCTEST_CLANG_SUPPRESS_WARNING({\cf22 "-Wglobal-constructors"})\par
2924 DOCTEST_CLANG_SUPPRESS_WARNING("-Wexit-time-destructors")\par
2925 DOCTEST_CLANG_SUPPRESS_WARNING("-Wsign-conversion")\par
2926 DOCTEST_CLANG_SUPPRESS_WARNING("-Wshorten-64-to-32")\par
2927 DOCTEST_CLANG_SUPPRESS_WARNING("-Wmissing-variable-declarations")\par
2928 DOCTEST_CLANG_SUPPRESS_WARNING("-Wswitch")\par
2929 DOCTEST_CLANG_SUPPRESS_WARNING("-Wswitch-enum")\par
2930 DOCTEST_CLANG_SUPPRESS_WARNING("-Wcovered-switch-default")\par
2931 DOCTEST_CLANG_SUPPRESS_WARNING("-Wmissing-noreturn")\par
2932 DOCTEST_CLANG_SUPPRESS_WARNING("-Wdisabled-macro-expansion")\par
2933 DOCTEST_CLANG_SUPPRESS_WARNING("-Wmissing-braces")\par
2934 DOCTEST_CLANG_SUPPRESS_WARNING("-Wmissing-field-initializers")\par
2935 DOCTEST_CLANG_SUPPRESS_WARNING("-Wunused-member-function")\par
2936 DOCTEST_CLANG_SUPPRESS_WARNING("-Wnonportable-system-include-path")\par
2937 \par
2938 DOCTEST_GCC_SUPPRESS_WARNING_PUSH\par
2939 DOCTEST_GCC_SUPPRESS_WARNING("-Wconversion")\par
2940 DOCTEST_GCC_SUPPRESS_WARNING("-Wsign-conversion")\par
2941 DOCTEST_GCC_SUPPRESS_WARNING("-Wmissing-field-initializers")\par
2942 DOCTEST_GCC_SUPPRESS_WARNING("-Wmissing-braces")\par
2943 DOCTEST_GCC_SUPPRESS_WARNING("-Wswitch")\par
2944 DOCTEST_GCC_SUPPRESS_WARNING("-Wswitch-enum")\par
2945 DOCTEST_GCC_SUPPRESS_WARNING("-Wswitch-default")\par
2946 DOCTEST_GCC_SUPPRESS_WARNING("-Wunsafe-loop-optimizations")\par
2947 DOCTEST_GCC_SUPPRESS_WARNING("-Wold-style-cast")\par
2948 DOCTEST_GCC_SUPPRESS_WARNING("-Wunused-function")\par
2949 DOCTEST_GCC_SUPPRESS_WARNING("-Wmultiple-inheritance")\par
2950 DOCTEST_GCC_SUPPRESS_WARNING("-Wsuggest-attribute")\par
2951 \par
2952 DOCTEST_MSVC_SUPPRESS_WARNING_PUSH\par
2953 DOCTEST_MSVC_SUPPRESS_WARNING(4267) {\cf20 // 'var' : conversion from 'x' to 'y', possible loss of data}\par
2954 DOCTEST_MSVC_SUPPRESS_WARNING(4530) {\cf20 // C++ exception handler used, but unwind semantics not enabled}\par
2955 DOCTEST_MSVC_SUPPRESS_WARNING(4577) {\cf20 // 'noexcept' used with no exception handling mode specified}\par
2956 DOCTEST_MSVC_SUPPRESS_WARNING(4774) {\cf20 // format string expected in argument is not a string literal}\par
2957 DOCTEST_MSVC_SUPPRESS_WARNING(4365) {\cf20 // conversion from 'int' to 'unsigned', signed/unsigned mismatch}\par
2958 DOCTEST_MSVC_SUPPRESS_WARNING(5039) {\cf20 // pointer to potentially throwing function passed to extern C}\par
2959 DOCTEST_MSVC_SUPPRESS_WARNING(4800) {\cf20 // forcing value to bool 'true' or 'false' (performance warning)}\par
2960 DOCTEST_MSVC_SUPPRESS_WARNING(5245) {\cf20 // unreferenced function with internal linkage has been removed}\par
2961 \par
2962 DOCTEST_MAKE_STD_HEADERS_CLEAN_FROM_WARNINGS_ON_WALL_BEGIN\par
2963 \par
2964 {\cf20 // required includes - will go only in one translation unit!}\par
2965 {\cf21 #include <ctime>}\par
2966 {\cf21 #include <cmath>}\par
2967 {\cf21 #include <climits>}\par
2968 {\cf20 // borland (Embarcadero) compiler requires math.h and not cmath - https://github.com/doctest/doctest/pull/37}\par
2969 {\cf21 #ifdef __BORLANDC__}\par
2970 {\cf21 #include <math.h>}\par
2971 {\cf21 #endif }{\cf20 // __BORLANDC__}\par
2972 {\cf21 #include <new>}\par
2973 {\cf21 #include <cstdio>}\par
2974 {\cf21 #include <cstdlib>}\par
2975 {\cf21 #include <cstring>}\par
2976 {\cf21 #include <limits>}\par
2977 {\cf21 #include <utility>}\par
2978 {\cf21 #include <fstream>}\par
2979 {\cf21 #include <sstream>}\par
2980 {\cf21 #include <iostream>}\par
2981 {\cf21 #include <algorithm>}\par
2982 {\cf21 #include <iomanip>}\par
2983 {\cf21 #include <vector>}\par
2984 {\cf21 #include <atomic>}\par
2985 {\cf21 #include <mutex>}\par
2986 {\cf21 #include <set>}\par
2987 {\cf21 #include <map>}\par
2988 {\cf21 #include <exception>}\par
2989 {\cf21 #include <stdexcept>}\par
2990 {\cf21 #include <csignal>}\par
2991 {\cf21 #include <cfloat>}\par
2992 {\cf21 #include <cctype>}\par
2993 {\cf21 #include <cstdint>}\par
2994 \par
2995 {\cf21 #ifdef DOCTEST_PLATFORM_MAC}\par
2996 {\cf21 #include <sys/types.h>}\par
2997 {\cf21 #include <unistd.h>}\par
2998 {\cf21 #include <sys/sysctl.h>}\par
2999 {\cf21 #endif }{\cf20 // DOCTEST_PLATFORM_MAC}\par
3000 \par
3001 {\cf21 #ifdef DOCTEST_PLATFORM_WINDOWS}\par
3002 \par
3003 {\cf20 // defines for a leaner windows.h}\par
3004 {\cf21 #ifndef WIN32_LEAN_AND_MEAN}\par
3005 {\cf21 #define WIN32_LEAN_AND_MEAN}\par
3006 {\cf21 #endif }{\cf20 // WIN32_LEAN_AND_MEAN}\par
3007 {\cf21 #ifndef NOMINMAX}\par
3008 {\cf21 #define NOMINMAX}\par
3009 {\cf21 #endif }{\cf20 // NOMINMAX}\par
3010 \par
3011 {\cf20 // not sure what AfxWin.h is for - here I do what Catch does}\par
3012 {\cf21 #ifdef __AFXDLL}\par
3013 {\cf21 #include <AfxWin.h>}\par
3014 {\cf21 #else}\par
3015 {\cf21 #include <windows.h>}\par
3016 {\cf21 #endif}\par
3017 {\cf21 #include <io.h>}\par
3018 \par
3019 {\cf21 #else }{\cf20 // DOCTEST_PLATFORM_WINDOWS}\par
3020 \par
3021 {\cf21 #include <sys/time.h>}\par
3022 {\cf21 #include <unistd.h>}\par
3023 \par
3024 {\cf21 #endif }{\cf20 // DOCTEST_PLATFORM_WINDOWS}\par
3025 \par
3026 {\cf20 // this is a fix for https://github.com/doctest/doctest/issues/348}\par
3027 {\cf20 // https://mail.gnome.org/archives/xml/2012-January/msg00000.html}\par
3028 {\cf21 #if !defined(HAVE_UNISTD_H) && !defined(STDOUT_FILENO)}\par
3029 {\cf21 #define STDOUT_FILENO fileno(stdout)}\par
3030 {\cf21 #endif }{\cf20 // HAVE_UNISTD_H}\par
3031 \par
3032 DOCTEST_MAKE_STD_HEADERS_CLEAN_FROM_WARNINGS_ON_WALL_END\par
3033 \par
3034 {\cf20 // counts the number of elements in a C array}\par
3035 {\cf21 #define DOCTEST_COUNTOF(x) (sizeof(x) / sizeof(x[0]))}\par
3036 \par
3037 {\cf21 #ifdef DOCTEST_CONFIG_DISABLE}\par
3038 {\cf21 #define DOCTEST_BRANCH_ON_DISABLED(if_disabled, if_not_disabled) if_disabled}\par
3039 {\cf21 #else }{\cf20 // DOCTEST_CONFIG_DISABLE}\par
3040 {\cf21 #define DOCTEST_BRANCH_ON_DISABLED(if_disabled, if_not_disabled) if_not_disabled}\par
3041 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_DISABLE}\par
3042 \par
3043 {\cf21 #ifndef DOCTEST_CONFIG_OPTIONS_PREFIX}\par
3044 {\cf21 #define DOCTEST_CONFIG_OPTIONS_PREFIX "dt-"}\par
3045 {\cf21 #endif}\par
3046 \par
3047 {\cf21 #ifndef DOCTEST_THREAD_LOCAL}\par
3048 {\cf21 #if DOCTEST_MSVC && (DOCTEST_MSVC < DOCTEST_COMPILER(19, 0, 0))}\par
3049 {\cf21 #define DOCTEST_THREAD_LOCAL}\par
3050 {\cf21 #else }{\cf20 // DOCTEST_MSVC}\par
3051 {\cf21 #define DOCTEST_THREAD_LOCAL thread_local}\par
3052 {\cf21 #endif }{\cf20 // DOCTEST_MSVC}\par
3053 {\cf21 #endif }{\cf20 // DOCTEST_THREAD_LOCAL}\par
3054 \par
3055 {\cf21 #ifndef DOCTEST_MULTI_LANE_ATOMICS_THREAD_LANES}\par
3056 {\cf21 #define DOCTEST_MULTI_LANE_ATOMICS_THREAD_LANES 32}\par
3057 {\cf21 #endif}\par
3058 \par
3059 {\cf21 #ifndef DOCTEST_MULTI_LANE_ATOMICS_CACHE_LINE_SIZE}\par
3060 {\cf21 #define DOCTEST_MULTI_LANE_ATOMICS_CACHE_LINE_SIZE 64}\par
3061 {\cf21 #endif}\par
3062 \par
3063 {\cf21 #ifdef DOCTEST_CONFIG_NO_UNPREFIXED_OPTIONS}\par
3064 {\cf21 #define DOCTEST_OPTIONS_PREFIX_DISPLAY DOCTEST_CONFIG_OPTIONS_PREFIX}\par
3065 {\cf21 #else}\par
3066 {\cf21 #define DOCTEST_OPTIONS_PREFIX_DISPLAY ""}\par
3067 {\cf21 #endif}\par
3068 \par
3069 {\cf21 #if defined(WINAPI_FAMILY) && (WINAPI_FAMILY == WINAPI_FAMILY_APP)}\par
3070 {\cf21 #define DOCTEST_CONFIG_NO_MULTI_LANE_ATOMICS}\par
3071 {\cf21 #endif}\par
3072 \par
3073 {\cf21 #ifndef DOCTEST_CDECL}\par
3074 {\cf21 #define DOCTEST_CDECL __cdecl}\par
3075 {\cf21 #endif}\par
3076 \par
3077 {\cf17 namespace }doctest \{\par
3078 \par
3079 {\cf18 bool} is_running_in_test = {\cf17 false};\par
3080 \par
3081 {\cf17 namespace }\{\par
3082     {\cf17 using namespace }detail;\par
3083 \par
3084     {\cf17 template} <{\cf17 typename} Ex>\par
3085     DOCTEST_NORETURN {\cf18 void} throw_exception(Ex {\cf17 const}& e) \{\par
3086 {\cf21 #ifndef DOCTEST_CONFIG_NO_EXCEPTIONS}\par
3087         {\cf19 throw} e;\par
3088 {\cf21 #else  }{\cf20 // DOCTEST_CONFIG_NO_EXCEPTIONS}\par
3089         std::cerr << {\cf22 "doctest will terminate because it needed to throw an exception.\\n"}\par
3090                   << {\cf22 "The message was: "} << e.what() << {\cf23 '\\n'};\par
3091         std::terminate();\par
3092 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_NO_EXCEPTIONS}\par
3093     \}\par
3094 \par
3095 {\cf21 #ifndef DOCTEST_INTERNAL_ERROR}\par
3096 {\cf21 #define DOCTEST_INTERNAL_ERROR(msg)                                                                \\}\par
3097 {\cf21     throw_exception(std::logic_error(                                                              \\}\par
3098 {\cf21             __FILE__ ":"} DOCTEST_TOSTR(__LINE__) ": Internal doctest error: " msg))\par
3099 {\cf21 #endif }{\cf20 // DOCTEST_INTERNAL_ERROR}\par
3100 \par
3101     {\cf20 // case insensitive strcmp}\par
3102     {\cf18 int} stricmp({\cf17 const} {\cf18 char}* a, {\cf17 const} {\cf18 char}* b) \{\par
3103         {\cf19 for}(;; a++, b++) \{\par
3104             {\cf17 const} {\cf18 int} d = tolower(*a) - tolower(*b);\par
3105             {\cf19 if}(d != 0 || !*a)\par
3106                 {\cf19 return} d;\par
3107         \}\par
3108     \}\par
3109 \par
3110     {\cf17 template} <{\cf17 typename} T>\par
3111     String fpToString(T value, {\cf18 int} precision) \{\par
3112         std::ostringstream oss;\par
3113         oss << std::setprecision(precision) << std::fixed << value;\par
3114         std::string d = oss.str();\par
3115         {\cf18 size_t}      i = d.find_last_not_of({\cf23 '0'});\par
3116         {\cf19 if}(i != std::string::npos && i != d.size() - 1) \{\par
3117             {\cf19 if}(d[i] == {\cf23 '.'})\par
3118                 i++;\par
3119             d = d.substr(0, i + 1);\par
3120         \}\par
3121         {\cf19 return} d.c_str();\par
3122     \}\par
3123 \par
3124     {\cf17 struct }Endianness\par
3125     \{\par
3126         {\cf17 enum} Arch\par
3127         \{\par
3128             Big,\par
3129             Little\par
3130         \};\par
3131 \par
3132         {\cf17 static} Arch which() \{\par
3133             {\cf18 int} x = 1;\par
3134             {\cf20 // casting any data pointer to char* is allowed}\par
3135             {\cf17 auto} ptr = {\cf17 reinterpret_cast<}{\cf18 char}*{\cf17 >}(&x);\par
3136             {\cf19 if}(*ptr)\par
3137                 {\cf19 return} Little;\par
3138             {\cf19 return} Big;\par
3139         \}\par
3140     \};\par
3141 \} {\cf20 // namespace}\par
3142 \par
3143 {\cf17 namespace }detail \{\par
3144     String rawMemoryToString({\cf17 const} {\cf18 void}* {\cf18 object}, {\cf18 unsigned} size) \{\par
3145         {\cf20 // Reverse order for little endian architectures}\par
3146         {\cf18 int} i = 0, end = {\cf17 static_cast<}{\cf18 int}{\cf17 >}(size), inc = 1;\par
3147         {\cf19 if}(Endianness::which() == Endianness::Little) \{\par
3148             i   = end - 1;\par
3149             end = inc = -1;\par
3150         \}\par
3151 \par
3152         {\cf18 unsigned} {\cf17 const} {\cf18 char}* bytes = {\cf17 static_cast<}{\cf18 unsigned} {\cf17 const }{\cf18 char}*{\cf17 >}(object);\par
3153         std::ostream*        oss   = tlssPush();\par
3154         *oss << {\cf22 "0x"} << std::setfill({\cf23 '0'}) << std::hex;\par
3155         {\cf19 for}(; i != end; i += inc)\par
3156             *oss << std::setw(2) << {\cf17 static_cast<}{\cf18 unsigned}{\cf17 >}(bytes[i]);\par
3157         {\cf19 return} tlssPop();\par
3158     \}\par
3159 \par
3160     DOCTEST_THREAD_LOCAL {\cf17 class}\par
3161     \{\par
3162         std::vector<std::streampos> stack;\par
3163         std::stringstream           ss;\par
3164 \par
3165     {\cf17 public}:\par
3166         std::ostream* push() \{\par
3167             stack.push_back(ss.tellp());\par
3168             {\cf19 return} &ss;\par
3169         \}\par
3170 \par
3171         String pop() \{\par
3172             {\cf19 if} (stack.empty())\par
3173                 DOCTEST_INTERNAL_ERROR({\cf22 "TLSS was empty when trying to pop!"});\par
3174 \par
3175             std::streampos pos = stack.back();\par
3176             stack.pop_back();\par
3177             {\cf18 unsigned} sz = {\cf17 static_cast<}{\cf18 unsigned}{\cf17 >}(ss.tellp() - pos);\par
3178             ss.rdbuf()->pubseekpos(pos, std::ios::in | std::ios::out);\par
3179             {\cf19 return} String(ss, sz);\par
3180         \}\par
3181     \} g_oss;\par
3182 \par
3183     std::ostream* tlssPush() \{\par
3184         {\cf19 return} g_oss.push();\par
3185     \}\par
3186 \par
3187     String tlssPop() \{\par
3188         {\cf19 return} g_oss.pop();\par
3189     \}\par
3190 \par
3191 {\cf21 #ifndef DOCTEST_CONFIG_DISABLE}\par
3192 \par
3193 {\cf17 namespace }timer_large_integer\par
3194 \{\par
3195     \par
3196 {\cf21 #if defined(DOCTEST_PLATFORM_WINDOWS)}\par
3197     {\cf17 typedef} ULONGLONG type;\par
3198 {\cf21 #else }{\cf20 // DOCTEST_PLATFORM_WINDOWS}\par
3199     {\cf17 typedef} std::uint64_t type;\par
3200 {\cf21 #endif }{\cf20 // DOCTEST_PLATFORM_WINDOWS}\par
3201 \}\par
3202 \par
3203 {\cf17 typedef} timer_large_integer::type ticks_t;\par
3204 \par
3205 {\cf21 #ifdef DOCTEST_CONFIG_GETCURRENTTICKS}\par
3206     ticks_t getCurrentTicks() \{ {\cf19 return} DOCTEST_CONFIG_GETCURRENTTICKS(); \}\par
3207 {\cf21 #elif defined(DOCTEST_PLATFORM_WINDOWS)}\par
3208     ticks_t getCurrentTicks() \{\par
3209         {\cf17 static} LARGE_INTEGER hz = \{0\}, hzo = \{0\};\par
3210         {\cf19 if}(!hz.QuadPart) \{\par
3211             QueryPerformanceFrequency(&hz);\par
3212             QueryPerformanceCounter(&hzo);\par
3213         \}\par
3214         LARGE_INTEGER t;\par
3215         QueryPerformanceCounter(&t);\par
3216         {\cf19 return} ((t.QuadPart - hzo.QuadPart) * LONGLONG(1000000)) / hz.QuadPart;\par
3217     \}\par
3218 {\cf21 #else  }{\cf20 // DOCTEST_PLATFORM_WINDOWS}\par
3219     ticks_t getCurrentTicks() \{\par
3220         timeval t;\par
3221         gettimeofday(&t, {\cf17 nullptr});\par
3222         {\cf19 return} {\cf17 static_cast<}ticks_t{\cf17 >}(t.tv_sec) * 1000000 + {\cf17 static_cast<}ticks_t{\cf17 >}(t.tv_usec);\par
3223     \}\par
3224 {\cf21 #endif }{\cf20 // DOCTEST_PLATFORM_WINDOWS}\par
3225 \par
3226     {\cf17 struct }Timer\par
3227     \{\par
3228         {\cf18 void}         start() \{ m_ticks = getCurrentTicks(); \}\par
3229         {\cf18 unsigned} {\cf18 int} getElapsedMicroseconds(){\cf17  const }\{\par
3230             {\cf19 return} {\cf17 static_cast<}{\cf18 unsigned} {\cf18 int}{\cf17 >}(getCurrentTicks() - m_ticks);\par
3231         \}\par
3232         {\cf20 //unsigned int getElapsedMilliseconds() const \{}\par
3233         {\cf20 //    return static_cast<unsigned int>(getElapsedMicroseconds() / 1000);}\par
3234         {\cf20 //\}}\par
3235         {\cf18 double} getElapsedSeconds(){\cf17  const }\{ {\cf19 return} {\cf17 static_cast<}{\cf18 double}{\cf17 >}(getCurrentTicks() - m_ticks) / 1000000.0; \}\par
3236 \par
3237     {\cf17 private}:\par
3238         ticks_t m_ticks = 0;\par
3239     \};\par
3240 \par
3241 {\cf21 #ifdef DOCTEST_CONFIG_NO_MULTI_LANE_ATOMICS}\par
3242     {\cf17 template} <{\cf17 typename} T>\par
3243     {\cf17 using }AtomicOrMultiLaneAtomic = std::atomic<T>;\par
3244 {\cf21 #else }{\cf20 // DOCTEST_CONFIG_NO_MULTI_LANE_ATOMICS}\par
3245     {\cf20 // Provides a multilane implementation of an atomic variable that supports add, sub, load,}\par
3246     {\cf20 // store. Instead of using a single atomic variable, this splits up into multiple ones,}\par
3247     {\cf20 // each sitting on a separate cache line. The goal is to provide a speedup when most}\par
3248     {\cf20 // operations are modifying. It achieves this with two properties:}\par
3249     {\cf20 //}\par
3250     {\cf20 // * Multiple atomics are used, so chance of congestion from the same atomic is reduced.}\par
3251     {\cf20 // * Each atomic sits on a separate cache line, so false sharing is reduced.}\par
3252     {\cf20 //}\par
3253     {\cf20 // The disadvantage is that there is a small overhead due to the use of TLS, and load/store}\par
3254     {\cf20 // is slower because all atomics have to be accessed.}\par
3255     {\cf17 template} <{\cf17 typename} T>\par
3256     {\cf17 class }MultiLaneAtomic\par
3257     \{\par
3258         {\cf17 struct }CacheLineAlignedAtomic\par
3259         \{\par
3260             std::atomic<T> atomic\{\};\par
3261             {\cf18 char} padding[DOCTEST_MULTI_LANE_ATOMICS_CACHE_LINE_SIZE - {\cf17 sizeof}(std::atomic<T>)];\par
3262         \};\par
3263         CacheLineAlignedAtomic m_atomics[DOCTEST_MULTI_LANE_ATOMICS_THREAD_LANES];\par
3264 \par
3265         {\cf17 static_assert}({\cf17 sizeof}(CacheLineAlignedAtomic) == DOCTEST_MULTI_LANE_ATOMICS_CACHE_LINE_SIZE,\par
3266                       {\cf22 "guarantee one atomic takes exactly one cache line"});\par
3267 \par
3268     {\cf17 public}:\par
3269         T operator++() DOCTEST_NOEXCEPT \{ {\cf19 return} fetch_add(1) + 1; \}\par
3270 \par
3271         T operator++({\cf18 int}) DOCTEST_NOEXCEPT \{ {\cf19 return} fetch_add(1); \}\par
3272 \par
3273         T fetch_add(T arg, std::memory_order order = std::memory_order_seq_cst) DOCTEST_NOEXCEPT \{\par
3274             {\cf19 return} myAtomic().fetch_add(arg, order);\par
3275         \}\par
3276 \par
3277         T fetch_sub(T arg, std::memory_order order = std::memory_order_seq_cst) DOCTEST_NOEXCEPT \{\par
3278             {\cf19 return} myAtomic().fetch_sub(arg, order);\par
3279         \}\par
3280 \par
3281         {\cf17 operator} T() {\cf17 const} DOCTEST_NOEXCEPT \{ {\cf19 return} load(); \}\par
3282 \par
3283         T load(std::memory_order order = std::memory_order_seq_cst) {\cf17 const} DOCTEST_NOEXCEPT \{\par
3284             {\cf17 auto} result = T();\par
3285             {\cf19 for}({\cf17 auto} {\cf17 const}& c : m_atomics) \{\par
3286                 result += c.atomic.load(order);\par
3287             \}\par
3288             {\cf19 return} result;\par
3289         \}\par
3290 \par
3291         T operator=(T desired) DOCTEST_NOEXCEPT \{ {\cf20 // lgtm [cpp/assignment-does-not-return-this]}\par
3292             store(desired);\par
3293             {\cf19 return} desired;\par
3294         \}\par
3295 \par
3296         {\cf18 void} store(T desired, std::memory_order order = std::memory_order_seq_cst) DOCTEST_NOEXCEPT \{\par
3297             {\cf20 // first value becomes desired", all others become 0.}\par
3298             {\cf19 for}({\cf17 auto}& c : m_atomics) \{\par
3299                 c.atomic.store(desired, order);\par
3300                 desired = \{\};\par
3301             \}\par
3302         \}\par
3303 \par
3304     {\cf17 private}:\par
3305         {\cf20 // Each thread has a different atomic that it operates on. If more than NumLanes threads}\par
3306         {\cf20 // use this, some will use the same atomic. So performance will degrade a bit, but still}\par
3307         {\cf20 // everything will work.}\par
3308         {\cf20 //}\par
3309         {\cf20 // The logic here is a bit tricky. The call should be as fast as possible, so that there}\par
3310         {\cf20 // is minimal to no overhead in determining the correct atomic for the current thread.}\par
3311         {\cf20 //}\par
3312         {\cf20 // 1. A global static counter laneCounter counts continuously up.}\par
3313         {\cf20 // 2. Each successive thread will use modulo operation of that counter so it gets an atomic}\par
3314         {\cf20 //    assigned in a round-robin fashion.}\par
3315         {\cf20 // 3. This tlsLaneIdx is stored in the thread local data, so it is directly available with}\par
3316         {\cf20 //    little overhead.}\par
3317         std::atomic<T>& myAtomic() DOCTEST_NOEXCEPT \{\par
3318             {\cf17 static} std::atomic<size_t> laneCounter;\par
3319             DOCTEST_THREAD_LOCAL {\cf18 size_t} tlsLaneIdx =\par
3320                     laneCounter++ % DOCTEST_MULTI_LANE_ATOMICS_THREAD_LANES;\par
3321 \par
3322             {\cf19 return} m_atomics[tlsLaneIdx].atomic;\par
3323         \}\par
3324     \};\par
3325 \par
3326     {\cf17 template} <{\cf17 typename} T>\par
3327     {\cf17 using }AtomicOrMultiLaneAtomic = MultiLaneAtomic<T>;\par
3328 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_NO_MULTI_LANE_ATOMICS}\par
3329 \par
3330     {\cf20 // this holds both parameters from the command line and runtime data for tests}\par
3331     {\cf17 struct }ContextState : ContextOptions, TestRunStats, CurrentTestCaseStats\par
3332     \{\par
3333         AtomicOrMultiLaneAtomic<int> numAssertsCurrentTest_atomic;\par
3334         AtomicOrMultiLaneAtomic<int> numAssertsFailedCurrentTest_atomic;\par
3335 \par
3336         std::vector<std::vector<String>> filters = {\cf17 decltype}(filters)(9); {\cf20 // 9 different filters}\par
3337 \par
3338         std::vector<IReporter*> reporters_currently_used;\par
3339 \par
3340         assert_handler ah = {\cf17 nullptr};\par
3341 \par
3342         Timer timer;\par
3343 \par
3344         std::vector<String> stringifiedContexts; {\cf20 // logging from INFO() due to an exception}\par
3345 \par
3346         {\cf20 // stuff for subcases}\par
3347         std::vector<SubcaseSignature>     subcasesStack;\par
3348         std::set<{\cf17 decltype}(subcasesStack)> subcasesPassed;\par
3349         {\cf18 int}                               subcasesCurrentMaxLevel;\par
3350         {\cf18 bool}                              should_reenter;\par
3351         std::atomic<bool>                 shouldLogCurrentException;\par
3352 \par
3353         {\cf18 void} resetRunData() \{\par
3354             numTestCases                = 0;\par
3355             numTestCasesPassingFilters  = 0;\par
3356             numTestSuitesPassingFilters = 0;\par
3357             numTestCasesFailed          = 0;\par
3358             numAsserts                  = 0;\par
3359             numAssertsFailed            = 0;\par
3360             numAssertsCurrentTest       = 0;\par
3361             numAssertsFailedCurrentTest = 0;\par
3362         \}\par
3363 \par
3364         {\cf18 void} finalizeTestCaseData() \{\par
3365             seconds = timer.getElapsedSeconds();\par
3366 \par
3367             {\cf20 // update the non-atomic counters}\par
3368             numAsserts += numAssertsCurrentTest_atomic;\par
3369             numAssertsFailed += numAssertsFailedCurrentTest_atomic;\par
3370             numAssertsCurrentTest       = numAssertsCurrentTest_atomic;\par
3371             numAssertsFailedCurrentTest = numAssertsFailedCurrentTest_atomic;\par
3372 \par
3373             {\cf19 if}(numAssertsFailedCurrentTest)\par
3374                 failure_flags |= TestCaseFailureReason::AssertFailure;\par
3375 \par
3376             {\cf19 if}(Approx(currentTest->m_timeout).epsilon(DBL_EPSILON) != 0 &&\par
3377                Approx(seconds).epsilon(DBL_EPSILON) > currentTest->m_timeout)\par
3378                 failure_flags |= TestCaseFailureReason::Timeout;\par
3379 \par
3380             {\cf19 if}(currentTest->m_should_fail) \{\par
3381                 {\cf19 if}(failure_flags) \{\par
3382                     failure_flags |= TestCaseFailureReason::ShouldHaveFailedAndDid;\par
3383                 \} {\cf19 else} \{\par
3384                     failure_flags |= TestCaseFailureReason::ShouldHaveFailedButDidnt;\par
3385                 \}\par
3386             \} {\cf19 else} {\cf19 if}(failure_flags && currentTest->m_may_fail) \{\par
3387                 failure_flags |= TestCaseFailureReason::CouldHaveFailedAndDid;\par
3388             \} {\cf19 else} {\cf19 if}(currentTest->m_expected_failures > 0) \{\par
3389                 {\cf19 if}(numAssertsFailedCurrentTest == currentTest->m_expected_failures) \{\par
3390                     failure_flags |= TestCaseFailureReason::FailedExactlyNumTimes;\par
3391                 \} {\cf19 else} \{\par
3392                     failure_flags |= TestCaseFailureReason::DidntFailExactlyNumTimes;\par
3393                 \}\par
3394             \}\par
3395 \par
3396             {\cf18 bool} ok_to_fail = (TestCaseFailureReason::ShouldHaveFailedAndDid & failure_flags) ||\par
3397                               (TestCaseFailureReason::CouldHaveFailedAndDid & failure_flags) ||\par
3398                               (TestCaseFailureReason::FailedExactlyNumTimes & failure_flags);\par
3399 \par
3400             {\cf20 // if any subcase has failed - the whole test case has failed}\par
3401             testCaseSuccess = !(failure_flags && !ok_to_fail);\par
3402             {\cf19 if}(!testCaseSuccess)\par
3403                 numTestCasesFailed++;\par
3404         \}\par
3405     \};\par
3406 \par
3407     ContextState* g_cs = {\cf17 nullptr};\par
3408 \par
3409     {\cf20 // used to avoid locks for the debug output}\par
3410     {\cf20 // TODO: figure out if this is indeed necessary/correct - seems like either there still}\par
3411     {\cf20 // could be a race or that there wouldn't be a race even if using the context directly}\par
3412     DOCTEST_THREAD_LOCAL {\cf18 bool} g_no_colors;\par
3413 \par
3414 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_DISABLE}\par
3415 \} {\cf20 // namespace detail}\par
3416 \par
3417 {\cf18 char}* String::allocate({\cf18 unsigned} sz) \{\par
3418     {\cf19 if} (sz <= last) \{\par
3419         buf[sz] = {\cf23 '\\0'};\par
3420         setLast(last - sz);\par
3421         {\cf19 return} buf;\par
3422     \} {\cf19 else} \{\par
3423         setOnHeap();\par
3424         data.size = sz;\par
3425         data.capacity = data.size + 1;\par
3426         data.ptr = {\cf17 new} {\cf18 char}[data.capacity];\par
3427         data.ptr[sz] = {\cf23 '\\0'};\par
3428         {\cf19 return} data.ptr;\par
3429     \}\par
3430 \}\par
3431 \par
3432 {\cf18 void} String::setOnHeap() \{ *{\cf17 reinterpret_cast<}{\cf18 unsigned} {\cf18 char}*{\cf17 >}(&buf[last]) = 128; \}\par
3433 {\cf18 void} String::setLast({\cf18 unsigned} in) \{ buf[last] = char(in); \}\par
3434 \par
3435 {\cf18 void} String::copy({\cf17 const} String& other) \{\par
3436     {\cf19 if}(other.isOnStack()) \{\par
3437         memcpy(buf, other.buf, len);\par
3438     \} {\cf19 else} \{\par
3439         memcpy(allocate(other.data.size), other.data.ptr, other.data.size);\par
3440     \}\par
3441 \}\par
3442 \par
3443 String::String() \{\par
3444     buf[0] = {\cf23 '\\0'};\par
3445     setLast();\par
3446 \}\par
3447 \par
3448 String::~String() \{\par
3449     {\cf19 if}(!isOnStack())\par
3450         {\cf17 delete}[] data.ptr;\par
3451     {\cf20 // NOLINTNEXTLINE(clang-analyzer-cplusplus.NewDeleteLeaks)}\par
3452 \}\par
3453 \par
3454 String::String({\cf17 const} {\cf18 char}* in)\par
3455         : String(in, strlen(in)) \{\}\par
3456 \par
3457 String::String({\cf17 const} {\cf18 char}* in, {\cf18 unsigned} in_size) \{\par
3458     memcpy(allocate(in_size), in, in_size);\par
3459 \}\par
3460 \par
3461 String::String(std::istream& in, {\cf18 unsigned} in_size) \{\par
3462     in.read(allocate(in_size), in_size);\par
3463 \}\par
3464 \par
3465 String::String({\cf17 const} String& other) \{ copy(other); \}\par
3466 \par
3467 String& String::operator=({\cf17 const} String& other) \{\par
3468     {\cf19 if}({\cf17 this} != &other) \{\par
3469         {\cf19 if}(!isOnStack())\par
3470             {\cf17 delete}[] data.ptr;\par
3471 \par
3472         copy(other);\par
3473     \}\par
3474 \par
3475     {\cf19 return} *{\cf17 this};\par
3476 \}\par
3477 \par
3478 String& String::operator+=({\cf17 const} String& other) \{\par
3479     {\cf17 const} {\cf18 unsigned} my_old_size = size();\par
3480     {\cf17 const} {\cf18 unsigned} other_size  = other.size();\par
3481     {\cf17 const} {\cf18 unsigned} total_size  = my_old_size + other_size;\par
3482     {\cf19 if}(isOnStack()) \{\par
3483         {\cf19 if}(total_size < len) \{\par
3484             {\cf20 // append to the current stack space}\par
3485             memcpy(buf + my_old_size, other.c_str(), other_size + 1);\par
3486             {\cf20 // NOLINTNEXTLINE(clang-analyzer-cplusplus.NewDeleteLeaks)}\par
3487             setLast(last - total_size);\par
3488         \} {\cf19 else} \{\par
3489             {\cf20 // alloc new chunk}\par
3490             {\cf18 char}* temp = {\cf17 new} {\cf18 char}[total_size + 1];\par
3491             {\cf20 // copy current data to new location before writing in the union}\par
3492             memcpy(temp, buf, my_old_size); {\cf20 // skip the +1 ('\\0') for speed}\par
3493             {\cf20 // update data in union}\par
3494             setOnHeap();\par
3495             data.size     = total_size;\par
3496             data.capacity = data.size + 1;\par
3497             data.ptr      = temp;\par
3498             {\cf20 // transfer the rest of the data}\par
3499             memcpy(data.ptr + my_old_size, other.c_str(), other_size + 1);\par
3500         \}\par
3501     \} {\cf19 else} \{\par
3502         {\cf19 if}(data.capacity > total_size) \{\par
3503             {\cf20 // append to the current heap block}\par
3504             data.size = total_size;\par
3505             memcpy(data.ptr + my_old_size, other.c_str(), other_size + 1);\par
3506         \} {\cf19 else} \{\par
3507             {\cf20 // resize}\par
3508             data.capacity *= 2;\par
3509             {\cf19 if}(data.capacity <= total_size)\par
3510                 data.capacity = total_size + 1;\par
3511             {\cf20 // alloc new chunk}\par
3512             {\cf18 char}* temp = {\cf17 new} {\cf18 char}[data.capacity];\par
3513             {\cf20 // copy current data to new location before releasing it}\par
3514             memcpy(temp, data.ptr, my_old_size); {\cf20 // skip the +1 ('\\0') for speed}\par
3515             {\cf20 // release old chunk}\par
3516             {\cf17 delete}[] data.ptr;\par
3517             {\cf20 // update the rest of the union members}\par
3518             data.size = total_size;\par
3519             data.ptr  = temp;\par
3520             {\cf20 // transfer the rest of the data}\par
3521             memcpy(data.ptr + my_old_size, other.c_str(), other_size + 1);\par
3522         \}\par
3523     \}\par
3524 \par
3525     {\cf19 return} *{\cf17 this};\par
3526 \}\par
3527 \par
3528 String::String(String&& other) \{\par
3529     memcpy(buf, other.buf, len);\par
3530     other.buf[0] = {\cf23 '\\0'};\par
3531     other.setLast();\par
3532 \}\par
3533 \par
3534 String& String::operator=(String&& other) \{\par
3535     {\cf19 if}({\cf17 this} != &other) \{\par
3536         {\cf19 if}(!isOnStack())\par
3537             {\cf17 delete}[] data.ptr;\par
3538         memcpy(buf, other.buf, len);\par
3539         other.buf[0] = {\cf23 '\\0'};\par
3540         other.setLast();\par
3541     \}\par
3542     {\cf19 return} *{\cf17 this};\par
3543 \}\par
3544 \par
3545 {\cf18 char} String::operator[]({\cf18 unsigned} i){\cf17  const }\{\par
3546     {\cf19 return} {\cf17 const_cast<}String*{\cf17 >}({\cf17 this})->{\cf17 operator}[](i); {\cf20 // NOLINT}\par
3547 \}\par
3548 \par
3549 {\cf18 char}& String::operator[]({\cf18 unsigned} i) \{\par
3550     {\cf19 if}(isOnStack())\par
3551         {\cf19 return} {\cf17 reinterpret_cast<}{\cf18 char}*{\cf17 >}(buf)[i];\par
3552     {\cf19 return} data.ptr[i];\par
3553 \}\par
3554 \par
3555 DOCTEST_GCC_SUPPRESS_WARNING_WITH_PUSH({\cf22 "-Wmaybe-uninitialized"})\par
3556 {\cf18 unsigned} String::size(){\cf17  const }\{\par
3557     {\cf19 if}(isOnStack())\par
3558         {\cf19 return} last - (unsigned(buf[last]) & 31); {\cf20 // using "last" would work only if "len" is 32}\par
3559     {\cf19 return} data.size;\par
3560 \}\par
3561 DOCTEST_GCC_SUPPRESS_WARNING_POP\par
3562 \par
3563 {\cf18 unsigned} String::capacity(){\cf17  const }\{\par
3564     {\cf19 if}(isOnStack())\par
3565         {\cf19 return} len;\par
3566     {\cf19 return} data.capacity;\par
3567 \}\par
3568 \par
3569 {\cf18 int} String::compare({\cf17 const} {\cf18 char}* other, {\cf18 bool} no_case){\cf17  const }\{\par
3570     {\cf19 if}(no_case)\par
3571         {\cf19 return} doctest::stricmp(c_str(), other);\par
3572     {\cf19 return} std::strcmp(c_str(), other);\par
3573 \}\par
3574 \par
3575 {\cf18 int} String::compare({\cf17 const} String& other, {\cf18 bool} no_case){\cf17  const }\{\par
3576     {\cf19 return} compare(other.c_str(), no_case);\par
3577 \}\par
3578 \par
3579 {\cf20 // NOLINTNEXTLINE(clang-analyzer-cplusplus.NewDeleteLeaks)}\par
3580 String operator+({\cf17 const} String& lhs, {\cf17 const} String& rhs) \{ {\cf19 return}  String(lhs) += rhs; \}\par
3581 \par
3582 {\cf20 // clang-format off}\par
3583 {\cf18 bool} operator==({\cf17 const} String& lhs, {\cf17 const} String& rhs) \{ {\cf19 return} lhs.compare(rhs) == 0; \}\par
3584 {\cf18 bool} operator!=({\cf17 const} String& lhs, {\cf17 const} String& rhs) \{ {\cf19 return} lhs.compare(rhs) != 0; \}\par
3585 {\cf18 bool} operator< ({\cf17 const} String& lhs, {\cf17 const} String& rhs) \{ {\cf19 return} lhs.compare(rhs) < 0; \}\par
3586 {\cf18 bool} operator> ({\cf17 const} String& lhs, {\cf17 const} String& rhs) \{ {\cf19 return} lhs.compare(rhs) > 0; \}\par
3587 {\cf18 bool} operator<=({\cf17 const} String& lhs, {\cf17 const} String& rhs) \{ {\cf19 return} (lhs != rhs) ? lhs.compare(rhs) < 0 : {\cf17 true}; \}\par
3588 {\cf18 bool} operator>=({\cf17 const} String& lhs, {\cf17 const} String& rhs) \{ {\cf19 return} (lhs != rhs) ? lhs.compare(rhs) > 0 : {\cf17 true}; \}\par
3589 {\cf20 // clang-format on}\par
3590 \par
3591 std::ostream& operator<<(std::ostream& s, {\cf17 const} String& in) \{ {\cf19 return} s << in.c_str(); \}\par
3592 \par
3593 {\cf17 namespace }\{\par
3594     {\cf18 void} color_to_stream(std::ostream&, Color::Enum) DOCTEST_BRANCH_ON_DISABLED(\{\}, ;)\par
3595 \} {\cf20 // namespace}\par
3596 \par
3597 {\cf17 namespace }Color \{\par
3598     std::ostream& operator<<(std::ostream& s, Color::Enum code) \{\par
3599         color_to_stream(s, code);\par
3600         {\cf19 return} s;\par
3601     \}\par
3602 \} {\cf20 // namespace Color}\par
3603 \par
3604 {\cf20 // clang-format off}\par
3605 {\cf17 const} {\cf18 char}* assertString(assertType::Enum at) \{\par
3606     DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH(4062) {\cf20 // enum 'x' in switch of enum 'y' is not handled}\par
3607     {\cf19 switch}(at) \{  \par
3608         {\cf19 case} assertType::DT_WARN                    : {\cf19 return} {\cf22 "WARN"};\par
3609         {\cf19 case} assertType::DT_CHECK                   : {\cf19 return} {\cf22 "CHECK"};\par
3610         {\cf19 case} assertType::DT_REQUIRE                 : {\cf19 return} {\cf22 "REQUIRE"};\par
3611 \par
3612         {\cf19 case} assertType::DT_WARN_FALSE              : {\cf19 return} {\cf22 "WARN_FALSE"};\par
3613         {\cf19 case} assertType::DT_CHECK_FALSE             : {\cf19 return} {\cf22 "CHECK_FALSE"};\par
3614         {\cf19 case} assertType::DT_REQUIRE_FALSE           : {\cf19 return} {\cf22 "REQUIRE_FALSE"};\par
3615 \par
3616         {\cf19 case} assertType::DT_WARN_THROWS             : {\cf19 return} {\cf22 "WARN_THROWS"};\par
3617         {\cf19 case} assertType::DT_CHECK_THROWS            : {\cf19 return} {\cf22 "CHECK_THROWS"};\par
3618         {\cf19 case} assertType::DT_REQUIRE_THROWS          : {\cf19 return} {\cf22 "REQUIRE_THROWS"};\par
3619 \par
3620         {\cf19 case} assertType::DT_WARN_THROWS_AS          : {\cf19 return} {\cf22 "WARN_THROWS_AS"};\par
3621         {\cf19 case} assertType::DT_CHECK_THROWS_AS         : {\cf19 return} {\cf22 "CHECK_THROWS_AS"};\par
3622         {\cf19 case} assertType::DT_REQUIRE_THROWS_AS       : {\cf19 return} {\cf22 "REQUIRE_THROWS_AS"};\par
3623 \par
3624         {\cf19 case} assertType::DT_WARN_THROWS_WITH        : {\cf19 return} {\cf22 "WARN_THROWS_WITH"};\par
3625         {\cf19 case} assertType::DT_CHECK_THROWS_WITH       : {\cf19 return} {\cf22 "CHECK_THROWS_WITH"};\par
3626         {\cf19 case} assertType::DT_REQUIRE_THROWS_WITH     : {\cf19 return} {\cf22 "REQUIRE_THROWS_WITH"};\par
3627 \par
3628         {\cf19 case} assertType::DT_WARN_THROWS_WITH_AS     : {\cf19 return} {\cf22 "WARN_THROWS_WITH_AS"};\par
3629         {\cf19 case} assertType::DT_CHECK_THROWS_WITH_AS    : {\cf19 return} {\cf22 "CHECK_THROWS_WITH_AS"};\par
3630         {\cf19 case} assertType::DT_REQUIRE_THROWS_WITH_AS  : {\cf19 return} {\cf22 "REQUIRE_THROWS_WITH_AS"};\par
3631 \par
3632         {\cf19 case} assertType::DT_WARN_NOTHROW            : {\cf19 return} {\cf22 "WARN_NOTHROW"};\par
3633         {\cf19 case} assertType::DT_CHECK_NOTHROW           : {\cf19 return} {\cf22 "CHECK_NOTHROW"};\par
3634         {\cf19 case} assertType::DT_REQUIRE_NOTHROW         : {\cf19 return} {\cf22 "REQUIRE_NOTHROW"};\par
3635 \par
3636         {\cf19 case} assertType::DT_WARN_EQ                 : {\cf19 return} {\cf22 "WARN_EQ"};\par
3637         {\cf19 case} assertType::DT_CHECK_EQ                : {\cf19 return} {\cf22 "CHECK_EQ"};\par
3638         {\cf19 case} assertType::DT_REQUIRE_EQ              : {\cf19 return} {\cf22 "REQUIRE_EQ"};\par
3639         {\cf19 case} assertType::DT_WARN_NE                 : {\cf19 return} {\cf22 "WARN_NE"};\par
3640         {\cf19 case} assertType::DT_CHECK_NE                : {\cf19 return} {\cf22 "CHECK_NE"};\par
3641         {\cf19 case} assertType::DT_REQUIRE_NE              : {\cf19 return} {\cf22 "REQUIRE_NE"};\par
3642         {\cf19 case} assertType::DT_WARN_GT                 : {\cf19 return} {\cf22 "WARN_GT"};\par
3643         {\cf19 case} assertType::DT_CHECK_GT                : {\cf19 return} {\cf22 "CHECK_GT"};\par
3644         {\cf19 case} assertType::DT_REQUIRE_GT              : {\cf19 return} {\cf22 "REQUIRE_GT"};\par
3645         {\cf19 case} assertType::DT_WARN_LT                 : {\cf19 return} {\cf22 "WARN_LT"};\par
3646         {\cf19 case} assertType::DT_CHECK_LT                : {\cf19 return} {\cf22 "CHECK_LT"};\par
3647         {\cf19 case} assertType::DT_REQUIRE_LT              : {\cf19 return} {\cf22 "REQUIRE_LT"};\par
3648         {\cf19 case} assertType::DT_WARN_GE                 : {\cf19 return} {\cf22 "WARN_GE"};\par
3649         {\cf19 case} assertType::DT_CHECK_GE                : {\cf19 return} {\cf22 "CHECK_GE"};\par
3650         {\cf19 case} assertType::DT_REQUIRE_GE              : {\cf19 return} {\cf22 "REQUIRE_GE"};\par
3651         {\cf19 case} assertType::DT_WARN_LE                 : {\cf19 return} {\cf22 "WARN_LE"};\par
3652         {\cf19 case} assertType::DT_CHECK_LE                : {\cf19 return} {\cf22 "CHECK_LE"};\par
3653         {\cf19 case} assertType::DT_REQUIRE_LE              : {\cf19 return} {\cf22 "REQUIRE_LE"};\par
3654 \par
3655         {\cf19 case} assertType::DT_WARN_UNARY              : {\cf19 return} {\cf22 "WARN_UNARY"};\par
3656         {\cf19 case} assertType::DT_CHECK_UNARY             : {\cf19 return} {\cf22 "CHECK_UNARY"};\par
3657         {\cf19 case} assertType::DT_REQUIRE_UNARY           : {\cf19 return} {\cf22 "REQUIRE_UNARY"};\par
3658         {\cf19 case} assertType::DT_WARN_UNARY_FALSE        : {\cf19 return} {\cf22 "WARN_UNARY_FALSE"};\par
3659         {\cf19 case} assertType::DT_CHECK_UNARY_FALSE       : {\cf19 return} {\cf22 "CHECK_UNARY_FALSE"};\par
3660         {\cf19 case} assertType::DT_REQUIRE_UNARY_FALSE     : {\cf19 return} {\cf22 "REQUIRE_UNARY_FALSE"};\par
3661     \}\par
3662     DOCTEST_MSVC_SUPPRESS_WARNING_POP\par
3663     {\cf19 return} {\cf22 ""};\par
3664 \}\par
3665 {\cf20 // clang-format on}\par
3666 \par
3667 {\cf17 const} {\cf18 char}* failureString(assertType::Enum at) \{\par
3668     {\cf19 if}(at & assertType::is_warn) \par
3669         {\cf19 return} {\cf22 "WARNING"};\par
3670     {\cf19 if}(at & assertType::is_check) \par
3671         {\cf19 return} {\cf22 "ERROR"};\par
3672     {\cf19 if}(at & assertType::is_require) \par
3673         {\cf19 return} {\cf22 "FATAL ERROR"};\par
3674     {\cf19 return} {\cf22 ""};\par
3675 \}\par
3676 \par
3677 DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH({\cf22 "-Wnull-dereference"})\par
3678 DOCTEST_GCC_SUPPRESS_WARNING_WITH_PUSH({\cf22 "-Wnull-dereference"})\par
3679 {\cf20 // depending on the current options this will remove the path of filenames}\par
3680 {\cf17 const} {\cf18 char}* skipPathFromFilename({\cf17 const} {\cf18 char}* file) \{\par
3681 {\cf21 #ifndef DOCTEST_CONFIG_DISABLE}\par
3682     {\cf19 if}(getContextOptions()->no_path_in_filenames) \{\par
3683         {\cf17 auto} back    = std::strrchr(file, {\cf23 '\\\\'});\par
3684         {\cf17 auto} forward = std::strrchr(file, {\cf23 '/'});\par
3685         {\cf19 if}(back || forward) \{\par
3686             {\cf19 if}(back > forward)\par
3687                 forward = back;\par
3688             {\cf19 return} forward + 1;\par
3689         \}\par
3690     \}\par
3691 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_DISABLE}\par
3692     {\cf19 return} file;\par
3693 \}\par
3694 DOCTEST_CLANG_SUPPRESS_WARNING_POP\par
3695 DOCTEST_GCC_SUPPRESS_WARNING_POP\par
3696 \par
3697 {\cf18 bool} SubcaseSignature::operator<({\cf17 const} SubcaseSignature& other){\cf17  const }\{\par
3698     {\cf19 if}(m_line != other.m_line)\par
3699         {\cf19 return} m_line < other.m_line;\par
3700     {\cf19 if}(std::strcmp(m_file, other.m_file) != 0)\par
3701         {\cf19 return} std::strcmp(m_file, other.m_file) < 0;\par
3702     {\cf19 return} m_name.compare(other.m_name) < 0;\par
3703 \}\par
3704 \par
3705 IContextScope::IContextScope()  = {\cf19 default};\par
3706 IContextScope::~IContextScope() = {\cf19 default};\par
3707 \par
3708 {\cf21 #ifdef DOCTEST_CONFIG_TREAT_CHAR_STAR_AS_STRING}\par
3709 String toString({\cf18 char}* in) \{ {\cf19 return} toString({\cf17 static_cast<}{\cf17 const }{\cf18 char}*{\cf17 >}(in)); \}\par
3710 {\cf20 // NOLINTNEXTLINE(clang-analyzer-cplusplus.NewDeleteLeaks)}\par
3711 String toString({\cf17 const} {\cf18 char}* in) \{ {\cf19 return} String({\cf22 "\\""}) + (in ? in : {\cf22 "\{null string\}"}) + {\cf22 "\\""}; \}\par
3712 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_TREAT_CHAR_STAR_AS_STRING}\par
3713 String toString({\cf18 bool} in) \{ {\cf19 return} in ? {\cf22 "true"} : {\cf22 "false"}; \}\par
3714 String toString({\cf18 float} in) \{ {\cf19 return} fpToString(in, 5) + {\cf22 "f"}; \}\par
3715 String toString({\cf18 double} in) \{ {\cf19 return} fpToString(in, 10); \}\par
3716 String toString({\cf18 double} {\cf18 long} in) \{ {\cf19 return} fpToString(in, 15); \}\par
3717 \par
3718 {\cf21 #define DOCTEST_TO_STRING_OVERLOAD(type, fmt)                                                      \\}\par
3719 {\cf21     String toString(type in) \{                                                                     \\}\par
3720 {\cf21         char buf[64];                                                                              \\}\par
3721 {\cf21         std::sprintf(buf, fmt, in);                                                                \\}\par
3722 {\cf21         return buf;                                                                                \\}\par
3723 {\cf21     \}}\par
3724 \par
3725 DOCTEST_TO_STRING_OVERLOAD({\cf18 char}, {\cf22 "%d"})\par
3726 DOCTEST_TO_STRING_OVERLOAD({\cf18 char} {\cf18 signed}, {\cf22 "%d"})\par
3727 DOCTEST_TO_STRING_OVERLOAD({\cf18 char} {\cf18 unsigned}, {\cf22 "%u"})\par
3728 DOCTEST_TO_STRING_OVERLOAD({\cf18 int} {\cf18 short}, {\cf22 "%d"})\par
3729 DOCTEST_TO_STRING_OVERLOAD({\cf18 int} {\cf18 short} {\cf18 unsigned}, {\cf22 "%u"})\par
3730 DOCTEST_TO_STRING_OVERLOAD({\cf18 int}, {\cf22 "%d"})\par
3731 DOCTEST_TO_STRING_OVERLOAD({\cf18 unsigned}, {\cf22 "%u"})\par
3732 DOCTEST_TO_STRING_OVERLOAD({\cf18 int} {\cf18 long}, {\cf22 "%ld"})\par
3733 DOCTEST_TO_STRING_OVERLOAD({\cf18 int} {\cf18 long} {\cf18 unsigned}, {\cf22 "%lu"})\par
3734 DOCTEST_TO_STRING_OVERLOAD({\cf18 int} {\cf18 long} {\cf18 long}, {\cf22 "%lld"})\par
3735 DOCTEST_TO_STRING_OVERLOAD({\cf18 int} {\cf18 long} {\cf18 long} {\cf18 unsigned}, {\cf22 "%llu"})\par
3736 \par
3737 String toString(std::nullptr_t) \{ {\cf19 return} {\cf22 "NULL"}; \}\par
3738 \par
3739 {\cf21 #if DOCTEST_MSVC >= DOCTEST_COMPILER(19, 20, 0)}\par
3740 {\cf20 // see this issue on why this is needed: https://github.com/doctest/doctest/issues/183}\par
3741 String toString({\cf17 const} std::string& in) \{ {\cf19 return} in.c_str(); \}\par
3742 {\cf21 #endif }{\cf20 // VS 2019}\par
3743 \par
3744 Approx::Approx({\cf18 double} value)\par
3745         : m_epsilon({\cf17 static_cast<}{\cf18 double}{\cf17 >}(std::numeric_limits<float>::epsilon()) * 100)\par
3746         , m_scale(1.0)\par
3747         , m_value(value) \{\}\par
3748 \par
3749 Approx Approx::operator()({\cf18 double} value){\cf17  const }\{\par
3750     Approx approx(value);\par
3751     approx.epsilon(m_epsilon);\par
3752     approx.scale(m_scale);\par
3753     {\cf19 return} approx;\par
3754 \}\par
3755 \par
3756 Approx& Approx::epsilon({\cf18 double} newEpsilon) \{\par
3757     m_epsilon = newEpsilon;\par
3758     {\cf19 return} *{\cf17 this};\par
3759 \}\par
3760 Approx& Approx::scale({\cf18 double} newScale) \{\par
3761     m_scale = newScale;\par
3762     {\cf19 return} *{\cf17 this};\par
3763 \}\par
3764 \par
3765 {\cf18 bool} operator==({\cf18 double} lhs, {\cf17 const} Approx& rhs) \{\par
3766     {\cf20 // Thanks to Richard Harris for his help refining this formula}\par
3767     {\cf19 return} std::fabs(lhs - rhs.m_value) <\par
3768            rhs.m_epsilon * (rhs.m_scale + std::max<double>(std::fabs(lhs), std::fabs(rhs.m_value)));\par
3769 \}\par
3770 {\cf18 bool} operator==({\cf17 const} Approx& lhs, {\cf18 double} rhs) \{ {\cf19 return} operator==(rhs, lhs); \}\par
3771 {\cf18 bool} operator!=({\cf18 double} lhs, {\cf17 const} Approx& rhs) \{ {\cf19 return} !operator==(lhs, rhs); \}\par
3772 {\cf18 bool} operator!=({\cf17 const} Approx& lhs, {\cf18 double} rhs) \{ {\cf19 return} !operator==(rhs, lhs); \}\par
3773 {\cf18 bool} operator<=({\cf18 double} lhs, {\cf17 const} Approx& rhs) \{ {\cf19 return} lhs < rhs.m_value || lhs == rhs; \}\par
3774 {\cf18 bool} operator<=({\cf17 const} Approx& lhs, {\cf18 double} rhs) \{ {\cf19 return} lhs.m_value < rhs || lhs == rhs; \}\par
3775 {\cf18 bool} operator>=({\cf18 double} lhs, {\cf17 const} Approx& rhs) \{ {\cf19 return} lhs > rhs.m_value || lhs == rhs; \}\par
3776 {\cf18 bool} operator>=({\cf17 const} Approx& lhs, {\cf18 double} rhs) \{ {\cf19 return} lhs.m_value > rhs || lhs == rhs; \}\par
3777 {\cf18 bool} operator<({\cf18 double} lhs, {\cf17 const} Approx& rhs) \{ {\cf19 return} lhs < rhs.m_value && lhs != rhs; \}\par
3778 {\cf18 bool} operator<({\cf17 const} Approx& lhs, {\cf18 double} rhs) \{ {\cf19 return} lhs.m_value < rhs && lhs != rhs; \}\par
3779 {\cf18 bool} operator>({\cf18 double} lhs, {\cf17 const} Approx& rhs) \{ {\cf19 return} lhs > rhs.m_value && lhs != rhs; \}\par
3780 {\cf18 bool} operator>({\cf17 const} Approx& lhs, {\cf18 double} rhs) \{ {\cf19 return} lhs.m_value > rhs && lhs != rhs; \}\par
3781 \par
3782 String toString({\cf17 const} Approx& in) \{\par
3783     {\cf20 // NOLINTNEXTLINE(clang-analyzer-cplusplus.NewDeleteLeaks)}\par
3784     {\cf19 return} {\cf22 "Approx( "} + doctest::toString(in.m_value) + {\cf22 " )"};\par
3785 \}\par
3786 {\cf17 const} ContextOptions* getContextOptions() \{ {\cf19 return} DOCTEST_BRANCH_ON_DISABLED({\cf17 nullptr}, g_cs); \}\par
3787 \par
3788 \} {\cf20 // namespace doctest}\par
3789 \par
3790 {\cf21 #ifdef DOCTEST_CONFIG_DISABLE}\par
3791 {\cf17 namespace }doctest \{\par
3792 Context::Context({\cf18 int}, {\cf17 const} {\cf18 char}* {\cf17 const}*) \{\}\par
3793 Context::~Context() = {\cf19 default};\par
3794 {\cf18 void} Context::applyCommandLine({\cf18 int}, {\cf17 const} {\cf18 char}* {\cf17 const}*) \{\}\par
3795 {\cf18 void} Context::addFilter({\cf17 const} {\cf18 char}*, {\cf17 const} {\cf18 char}*) \{\}\par
3796 {\cf18 void} Context::clearFilters() \{\}\par
3797 {\cf18 void} Context::setOption({\cf17 const} {\cf18 char}*, {\cf18 bool}) \{\}\par
3798 {\cf18 void} Context::setOption({\cf17 const} {\cf18 char}*, {\cf18 int}) \{\}\par
3799 {\cf18 void} Context::setOption({\cf17 const} {\cf18 char}*, {\cf17 const} {\cf18 char}*) \{\}\par
3800 {\cf18 bool} Context::shouldExit() \{ {\cf19 return} {\cf17 false}; \}\par
3801 {\cf18 void} Context::setAsDefaultForAssertsOutOfTestCases() \{\}\par
3802 {\cf18 void} Context::setAssertHandler(detail::assert_handler) \{\}\par
3803 {\cf18 void} Context::setCout(std::ostream* out) \{\}\par
3804 {\cf18 int}  Context::run() \{ {\cf19 return} 0; \}\par
3805 \par
3806 IReporter::~IReporter() = {\cf19 default};\par
3807 \par
3808 {\cf18 int}                         IReporter::get_num_active_contexts() \{ {\cf19 return} 0; \}\par
3809 {\cf17 const} IContextScope* {\cf17 const}* IReporter::get_active_contexts() \{ {\cf19 return} {\cf17 nullptr}; \}\par
3810 {\cf18 int}                         IReporter::get_num_stringified_contexts() \{ {\cf19 return} 0; \}\par
3811 {\cf17 const} String*               IReporter::get_stringified_contexts() \{ {\cf19 return} {\cf17 nullptr}; \}\par
3812 \par
3813 {\cf18 int} registerReporter({\cf17 const} {\cf18 char}*, {\cf18 int}, IReporter*) \{ {\cf19 return} 0; \}\par
3814 \par
3815 \} {\cf20 // namespace doctest}\par
3816 {\cf21 #else }{\cf20 // DOCTEST_CONFIG_DISABLE}\par
3817 \par
3818 {\cf21 #if !defined(DOCTEST_CONFIG_COLORS_NONE)}\par
3819 {\cf21 #if !defined(DOCTEST_CONFIG_COLORS_WINDOWS) && !defined(DOCTEST_CONFIG_COLORS_ANSI)}\par
3820 {\cf21 #ifdef DOCTEST_PLATFORM_WINDOWS}\par
3821 {\cf21 #define DOCTEST_CONFIG_COLORS_WINDOWS}\par
3822 {\cf21 #else }{\cf20 // linux}\par
3823 {\cf21 #define DOCTEST_CONFIG_COLORS_ANSI}\par
3824 {\cf21 #endif }{\cf20 // platform}\par
3825 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_COLORS_WINDOWS && DOCTEST_CONFIG_COLORS_ANSI}\par
3826 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_COLORS_NONE}\par
3827 \par
3828 {\cf17 namespace }doctest_detail_test_suite_ns \{\par
3829 {\cf20 // holds the current test suite}\par
3830 doctest::detail::TestSuite& getCurrentTestSuite() \{\par
3831     {\cf17 static} doctest::detail::TestSuite data\{\};\par
3832     {\cf19 return} data;\par
3833 \}\par
3834 \} {\cf20 // namespace doctest_detail_test_suite_ns}\par
3835 \par
3836 {\cf17 namespace }doctest \{\par
3837 {\cf17 namespace }\{\par
3838     {\cf20 // the int (priority) is part of the key for automatic sorting - sadly one can register a}\par
3839     {\cf20 // reporter with a duplicate name and a different priority but hopefully that won't happen often :|}\par
3840     {\cf17 typedef} std::map<std::pair<int, String>, reporterCreatorFunc> reporterMap;\par
3841 \par
3842     reporterMap& getReporters() \{\par
3843         {\cf17 static} reporterMap data;\par
3844         {\cf19 return} data;\par
3845     \}\par
3846     reporterMap& getListeners() \{\par
3847         {\cf17 static} reporterMap data;\par
3848         {\cf19 return} data;\par
3849     \}\par
3850 \} {\cf20 // namespace}\par
3851 {\cf17 namespace }detail \{\par
3852 {\cf21 #define DOCTEST_ITERATE_THROUGH_REPORTERS(function, ...)                                           \\}\par
3853 {\cf21     for(auto& curr_rep : g_cs->reporters_currently_used)                                           \\}\par
3854 {\cf21     curr_rep->function(__VA_ARGS__)}\par
3855 \par
3856     {\cf18 bool} checkIfShouldThrow(assertType::Enum at) \{\par
3857         {\cf19 if}(at & assertType::is_require) \par
3858             {\cf19 return} {\cf17 true};\par
3859 \par
3860         {\cf19 if}((at & assertType::is_check) \par
3861            && getContextOptions()->abort_after > 0 &&\par
3862            (g_cs->numAssertsFailed + g_cs->numAssertsFailedCurrentTest_atomic) >=\par
3863                    getContextOptions()->abort_after)\par
3864             {\cf19 return} {\cf17 true};\par
3865 \par
3866         {\cf19 return} {\cf17 false};\par
3867     \}\par
3868 \par
3869 {\cf21 #ifndef DOCTEST_CONFIG_NO_EXCEPTIONS}\par
3870     DOCTEST_NORETURN {\cf18 void} throwException() \{\par
3871         g_cs->shouldLogCurrentException = {\cf17 false};\par
3872         {\cf19 throw} TestFailureException();\par
3873     \} {\cf20 // NOLINT(cert-err60-cpp)}\par
3874 {\cf21 #else }{\cf20 // DOCTEST_CONFIG_NO_EXCEPTIONS}\par
3875     {\cf18 void} throwException() \{\}\par
3876 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_NO_EXCEPTIONS}\par
3877 \} {\cf20 // namespace detail}\par
3878 \par
3879 {\cf17 namespace }\{\par
3880     {\cf17 using namespace }detail;\par
3881     {\cf20 // matching of a string against a wildcard mask (case sensitivity configurable) taken from}\par
3882     {\cf20 // https://www.codeproject.com/Articles/1088/Wildcard-string-compare-globbing}\par
3883     {\cf18 int} wildcmp({\cf17 const} {\cf18 char}* str, {\cf17 const} {\cf18 char}* wild, {\cf18 bool} caseSensitive) \{\par
3884         {\cf17 const} {\cf18 char}* cp = str;\par
3885         {\cf17 const} {\cf18 char}* mp = wild;\par
3886 \par
3887         {\cf19 while}((*str) && (*wild != {\cf23 '*'})) \{\par
3888             {\cf19 if}((caseSensitive ? (*wild != *str) : (tolower(*wild) != tolower(*str))) &&\par
3889                (*wild != {\cf22 '?'})) \{\par
3890                 {\cf19 return} 0;\par
3891             \}\par
3892             wild++;\par
3893             str++;\par
3894         \}\par
3895 \par
3896         {\cf19 while}(*str) \{\par
3897             {\cf19 if}(*wild == {\cf23 '*'}) \{\par
3898                 {\cf19 if}(!*++wild) \{\par
3899                     {\cf19 return} 1;\par
3900                 \}\par
3901                 mp = wild;\par
3902                 cp = str + 1;\par
3903             \} {\cf19 else} {\cf19 if}((caseSensitive ? (*wild == *str) : (tolower(*wild) == tolower(*str))) ||\par
3904                       (*wild == {\cf22 '?'})) \{\par
3905                 wild++;\par
3906                 str++;\par
3907             \} {\cf19 else} \{\par
3908                 wild = mp;   \par
3909                 str  = cp++; \par
3910             \}\par
3911         \}\par
3912 \par
3913         {\cf19 while}(*wild == {\cf23 '*'}) \{\par
3914             wild++;\par
3915         \}\par
3916         {\cf19 return} !*wild;\par
3917     \}\par
3918 \par
3920     {\cf20 //unsigned hashStr(unsigned const char* str) \{}\par
3921     {\cf20 //    unsigned long hash = 5381;}\par
3922     {\cf20 //    char          c;}\par
3923     {\cf20 //    while((c = *str++))}\par
3924     {\cf20 //        hash = ((hash << 5) + hash) + c; // hash * 33 + c}\par
3925     {\cf20 //    return hash;}\par
3926     {\cf20 //\}}\par
3927 \par
3928     {\cf20 // checks if the name matches any of the filters (and can be configured what to do when empty)}\par
3929     {\cf18 bool} matchesAny({\cf17 const} {\cf18 char}* name, {\cf17 const} std::vector<String>& filters, {\cf18 bool} matchEmpty,\par
3930                     {\cf18 bool} caseSensitive) \{\par
3931         {\cf19 if}(filters.empty() && matchEmpty)\par
3932             {\cf19 return} {\cf17 true};\par
3933         {\cf19 for}({\cf17 auto}& curr : filters)\par
3934             if(wildcmp(name, curr.c_str(), caseSensitive))\par
3935                 return true;\par
3936         {\cf19 return} {\cf17 false};\par
3937     \}\par
3938 \} {\cf20 // namespace}\par
3939 {\cf17 namespace }detail \{\par
3940 \par
3941     Subcase::Subcase({\cf17 const} String& name, {\cf17 const} {\cf18 char}* file, {\cf18 int} line)\par
3942             : m_signature(\{name, file, line\}) \{\par
3943         {\cf17 auto}* s = g_cs;\par
3944 \par
3945         {\cf20 // check subcase filters}\par
3946         {\cf19 if}(s->subcasesStack.size() < size_t(s->subcase_filter_levels)) \{\par
3947             {\cf19 if}(!matchesAny(m_signature.m_name.c_str(), s->filters[6], {\cf17 true}, s->case_sensitive))\par
3948                 {\cf19 return};\par
3949             {\cf19 if}(matchesAny(m_signature.m_name.c_str(), s->filters[7], {\cf17 false}, s->case_sensitive))\par
3950                 {\cf19 return};\par
3951         \}\par
3952         \par
3953         {\cf20 // if a Subcase on the same level has already been entered}\par
3954         {\cf19 if}(s->subcasesStack.size() < size_t(s->subcasesCurrentMaxLevel)) \{\par
3955             s->should_reenter = {\cf17 true};\par
3956             {\cf19 return};\par
3957         \}\par
3958 \par
3959         {\cf20 // push the current signature to the stack so we can check if the}\par
3960         {\cf20 // current stack + the current new subcase have been traversed}\par
3961         s->subcasesStack.push_back(m_signature);\par
3962         {\cf19 if}(s->subcasesPassed.count(s->subcasesStack) != 0) \{\par
3963             {\cf20 // pop - revert to previous stack since we've already passed this}\par
3964             s->subcasesStack.pop_back();\par
3965             {\cf19 return};\par
3966         \}\par
3967 \par
3968         s->subcasesCurrentMaxLevel = s->subcasesStack.size();\par
3969         m_entered = {\cf17 true};\par
3970 \par
3971         DOCTEST_ITERATE_THROUGH_REPORTERS(subcase_start, m_signature);\par
3972     \}\par
3973 \par
3974     DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH(4996) {\cf20 // std::uncaught_exception is deprecated in C++17}\par
3975     DOCTEST_GCC_SUPPRESS_WARNING_WITH_PUSH("-Wdeprecated-declarations")\par
3976     DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH("-Wdeprecated-declarations")\par
3977 \par
3978     Subcase::~Subcase() \{\par
3979         {\cf19 if}(m_entered) \{\par
3980             {\cf20 // only mark the subcase stack as passed if no subcases have been skipped}\par
3981             {\cf19 if}(g_cs->should_reenter == {\cf17 false})\par
3982                 g_cs->subcasesPassed.insert(g_cs->subcasesStack);\par
3983             g_cs->subcasesStack.pop_back();\par
3984 \par
3985 {\cf21 #if defined(__cpp_lib_uncaught_exceptions) && __cpp_lib_uncaught_exceptions >= 201411L && (!defined(__MAC_OS_X_VERSION_MIN_REQUIRED) || __MAC_OS_X_VERSION_MIN_REQUIRED >= 101200)}\par
3986             {\cf19 if}(std::uncaught_exceptions() > 0\par
3987 #{\cf19 else}\par
3988             {\cf19 if}(std::uncaught_exception()\par
3989 #endif\par
3990             && g_cs->shouldLogCurrentException) \{\par
3991                 DOCTEST_ITERATE_THROUGH_REPORTERS(\par
3992                         test_case_exception, \{{\cf22 "exception thrown in subcase - will translate later "}\par
3993                                               {\cf22 "when the whole test case has been exited (cannot "}\par
3994                                               {\cf22 "translate while there is an active exception)"},\par
3995                                               false\});\par
3996                 g_cs->shouldLogCurrentException = {\cf17 false};\par
3997             \}\par
3998             DOCTEST_ITERATE_THROUGH_REPORTERS(subcase_end, DOCTEST_EMPTY);\par
3999         \}\par
4000     \}\par
4001 \par
4002     DOCTEST_CLANG_SUPPRESS_WARNING_POP\par
4003     DOCTEST_GCC_SUPPRESS_WARNING_POP\par
4004     DOCTEST_MSVC_SUPPRESS_WARNING_POP\par
4005 \par
4006     Subcase::operator bool(){\cf17  const }\{ {\cf19 return} m_entered; \}\par
4007 \par
4008     Result::Result({\cf18 bool} passed, {\cf17 const} String& decomposition)\par
4009             : m_passed(passed)\par
4010             , m_decomp(decomposition) \{\}\par
4011 \par
4012     ExpressionDecomposer::ExpressionDecomposer(assertType::Enum at)\par
4013             : m_at(at) \{\}\par
4014 \par
4015     TestSuite& TestSuite::operator*({\cf17 const} {\cf18 char}* in) \{\par
4016         m_test_suite = in;\par
4017         {\cf19 return} *{\cf17 this};\par
4018     \}\par
4019 \par
4020     TestCase::TestCase(funcType test, {\cf17 const} {\cf18 char}* file, {\cf18 unsigned} line, {\cf17 const} TestSuite& test_suite,\par
4021                        {\cf17 const} {\cf18 char}* type, {\cf18 int} template_id) \{\par
4022         m_file              = file;\par
4023         m_line              = line;\par
4024         m_name              = {\cf17 nullptr}; {\cf20 // will be later overridden in operator*}\par
4025         m_test_suite        = test_suite.m_test_suite;\par
4026         m_description       = test_suite.m_description;\par
4027         m_skip              = test_suite.m_skip;\par
4028         m_no_breaks         = test_suite.m_no_breaks;\par
4029         m_no_output         = test_suite.m_no_output;\par
4030         m_may_fail          = test_suite.m_may_fail;\par
4031         m_should_fail       = test_suite.m_should_fail;\par
4032         m_expected_failures = test_suite.m_expected_failures;\par
4033         m_timeout           = test_suite.m_timeout;\par
4034 \par
4035         m_test        = test;\par
4036         m_type        = type;\par
4037         m_template_id = template_id;\par
4038     \}\par
4039 \par
4040     TestCase::TestCase({\cf17 const} TestCase& other)\par
4041             : TestCaseData() \{\par
4042         *{\cf17 this} = other;\par
4043     \}\par
4044 \par
4045     DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH(26434) {\cf20 // hides a non-virtual function}\par
4046     DOCTEST_MSVC_SUPPRESS_WARNING(26437)           {\cf20 // Do not slice}\par
4047     TestCase& TestCase::operator=(const TestCase& other) \{\par
4048         {\cf17 static_cast<}TestCaseData&{\cf17 >}(*this) = {\cf17 static_cast<}{\cf17 const }TestCaseData&{\cf17 >}(other);\par
4049 \par
4050         m_test        = other.m_test;\par
4051         m_type        = other.m_type;\par
4052         m_template_id = other.m_template_id;\par
4053         m_full_name   = other.m_full_name;\par
4054 \par
4055         {\cf19 if}(m_template_id != -1)\par
4056             m_name = m_full_name.c_str();\par
4057         {\cf19 return} *{\cf17 this};\par
4058     \}\par
4059     DOCTEST_MSVC_SUPPRESS_WARNING_POP\par
4060 \par
4061     TestCase& TestCase::operator*({\cf17 const} {\cf18 char}* in) \{\par
4062         m_name = in;\par
4063         {\cf20 // make a new name with an appended type for templated test case}\par
4064         {\cf19 if}(m_template_id != -1) \{\par
4065             m_full_name = String(m_name) + m_type;\par
4066             {\cf20 // redirect the name to point to the newly constructed full name}\par
4067             m_name = m_full_name.c_str();\par
4068         \}\par
4069         {\cf19 return} *{\cf17 this};\par
4070     \}\par
4071 \par
4072     {\cf18 bool} TestCase::operator<({\cf17 const} TestCase& other){\cf17  const }\{\par
4073         {\cf20 // this will be used only to differentiate between test cases - not relevant for sorting}\par
4074         {\cf19 if}(m_line != other.m_line)\par
4075             {\cf19 return} m_line < other.m_line;\par
4076         {\cf17 const} {\cf18 int} name_cmp = strcmp(m_name, other.m_name);\par
4077         {\cf19 if}(name_cmp != 0)\par
4078             {\cf19 return} name_cmp < 0;\par
4079         {\cf17 const} {\cf18 int} file_cmp = m_file.compare(other.m_file);\par
4080         {\cf19 if}(file_cmp != 0)\par
4081             {\cf19 return} file_cmp < 0;\par
4082         {\cf19 return} m_template_id < other.m_template_id;\par
4083     \}\par
4084 \par
4085     {\cf20 // all the registered tests}\par
4086     std::set<TestCase>& getRegisteredTests() \{\par
4087         {\cf17 static} std::set<TestCase> data;\par
4088         {\cf19 return} data;\par
4089     \}\par
4090 \} {\cf20 // namespace detail}\par
4091 {\cf17 namespace }\{\par
4092     {\cf17 using namespace }detail;\par
4093     {\cf20 // for sorting tests by file/line}\par
4094     {\cf18 bool} fileOrderComparator({\cf17 const} TestCase* lhs, {\cf17 const} TestCase* rhs) \{\par
4095         {\cf20 // this is needed because MSVC gives different case for drive letters}\par
4096         {\cf20 // for __FILE__ when evaluated in a header and a source file}\par
4097         {\cf17 const} {\cf18 int} res = lhs->m_file.compare(rhs->m_file, {\cf18 bool}(DOCTEST_MSVC));\par
4098         {\cf19 if}(res != 0)\par
4099             {\cf19 return} res < 0;\par
4100         {\cf19 if}(lhs->m_line != rhs->m_line)\par
4101             {\cf19 return} lhs->m_line < rhs->m_line;\par
4102         {\cf19 return} lhs->m_template_id < rhs->m_template_id;\par
4103     \}\par
4104 \par
4105     {\cf20 // for sorting tests by suite/file/line}\par
4106     {\cf18 bool} suiteOrderComparator({\cf17 const} TestCase* lhs, {\cf17 const} TestCase* rhs) \{\par
4107         {\cf17 const} {\cf18 int} res = std::strcmp(lhs->m_test_suite, rhs->m_test_suite);\par
4108         {\cf19 if}(res != 0)\par
4109             {\cf19 return} res < 0;\par
4110         {\cf19 return} fileOrderComparator(lhs, rhs);\par
4111     \}\par
4112 \par
4113     {\cf20 // for sorting tests by name/suite/file/line}\par
4114     {\cf18 bool} nameOrderComparator({\cf17 const} TestCase* lhs, {\cf17 const} TestCase* rhs) \{\par
4115         {\cf17 const} {\cf18 int} res = std::strcmp(lhs->m_name, rhs->m_name);\par
4116         {\cf19 if}(res != 0)\par
4117             {\cf19 return} res < 0;\par
4118         {\cf19 return} suiteOrderComparator(lhs, rhs);\par
4119     \}\par
4120 \par
4121     DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH({\cf22 "-Wdeprecated-declarations"})\par
4122     void color_to_stream(std::ostream& s, Color::Enum code) \{\par
4123         {\cf17 static_cast<}{\cf18 void}{\cf17 >}(s);    {\cf20 // for DOCTEST_CONFIG_COLORS_NONE or DOCTEST_CONFIG_COLORS_WINDOWS}\par
4124         {\cf17 static_cast<}{\cf18 void}{\cf17 >}(code); {\cf20 // for DOCTEST_CONFIG_COLORS_NONE}\par
4125 {\cf21 #ifdef DOCTEST_CONFIG_COLORS_ANSI}\par
4126         {\cf19 if}(g_no_colors ||\par
4127            (isatty(STDOUT_FILENO) == {\cf17 false} && getContextOptions()->force_colors == {\cf17 false}))\par
4128             {\cf19 return};\par
4129 \par
4130         {\cf17 auto} col = {\cf22 ""};\par
4131         {\cf20 // clang-format off}\par
4132             {\cf19 switch}(code) \{ \par
4133                 {\cf19 case} Color::Red:         col = {\cf22 "[0;31m"}; {\cf19 break};\par
4134                 {\cf19 case} Color::Green:       col = {\cf22 "[0;32m"}; {\cf19 break};\par
4135                 {\cf19 case} Color::Blue:        col = {\cf22 "[0;34m"}; {\cf19 break};\par
4136                 {\cf19 case} Color::Cyan:        col = {\cf22 "[0;36m"}; {\cf19 break};\par
4137                 {\cf19 case} Color::Yellow:      col = {\cf22 "[0;33m"}; {\cf19 break};\par
4138                 {\cf19 case} Color::Grey:        col = {\cf22 "[1;30m"}; {\cf19 break};\par
4139                 {\cf19 case} Color::LightGrey:   col = {\cf22 "[0;37m"}; {\cf19 break};\par
4140                 {\cf19 case} Color::BrightRed:   col = {\cf22 "[1;31m"}; {\cf19 break};\par
4141                 {\cf19 case} Color::BrightGreen: col = {\cf22 "[1;32m"}; {\cf19 break};\par
4142                 {\cf19 case} Color::BrightWhite: col = {\cf22 "[1;37m"}; {\cf19 break};\par
4143                 {\cf19 case} Color::Bright: {\cf20 // invalid}\par
4144                 {\cf19 case} Color::None:\par
4145                 {\cf19 case} Color::White:\par
4146                 {\cf19 default}:                 col = {\cf22 "[0m"};\par
4147             \}\par
4148         {\cf20 // clang-format on}\par
4149         s << {\cf22 "\\033"} << col;\par
4150 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_COLORS_ANSI}\par
4151 \par
4152 {\cf21 #ifdef DOCTEST_CONFIG_COLORS_WINDOWS}\par
4153         {\cf19 if}(g_no_colors ||\par
4154            (_isatty(_fileno(stdout)) == {\cf17 false} && getContextOptions()->force_colors == {\cf17 false}))\par
4155             {\cf19 return};\par
4156 \par
4157         {\cf17 static} {\cf17 struct }ConsoleHelper \{\par
4158             HANDLE stdoutHandle;\par
4159             WORD   origFgAttrs;\par
4160             WORD   origBgAttrs;\par
4161 \par
4162             ConsoleHelper() \{\par
4163                 stdoutHandle = GetStdHandle(STD_OUTPUT_HANDLE);\par
4164                 CONSOLE_SCREEN_BUFFER_INFO csbiInfo;\par
4165                 GetConsoleScreenBufferInfo(stdoutHandle, &csbiInfo);\par
4166                 origFgAttrs = csbiInfo.wAttributes & ~(BACKGROUND_GREEN | BACKGROUND_RED |\par
4167                     BACKGROUND_BLUE | BACKGROUND_INTENSITY);\par
4168                 origBgAttrs = csbiInfo.wAttributes & ~(FOREGROUND_GREEN | FOREGROUND_RED |\par
4169                     FOREGROUND_BLUE | FOREGROUND_INTENSITY);\par
4170             \}\par
4171         \} ch;\par
4172 \par
4173 {\cf21 #define DOCTEST_SET_ATTR(x) SetConsoleTextAttribute(ch.stdoutHandle, x | ch.origBgAttrs)}\par
4174 \par
4175         {\cf20 // clang-format off}\par
4176         {\cf19 switch} (code) \{\par
4177             {\cf19 case} Color::White:       DOCTEST_SET_ATTR(FOREGROUND_GREEN | FOREGROUND_RED | FOREGROUND_BLUE); {\cf19 break};\par
4178             {\cf19 case} Color::Red:         DOCTEST_SET_ATTR(FOREGROUND_RED);                                      {\cf19 break};\par
4179             {\cf19 case} Color::Green:       DOCTEST_SET_ATTR(FOREGROUND_GREEN);                                    {\cf19 break};\par
4180             {\cf19 case} Color::Blue:        DOCTEST_SET_ATTR(FOREGROUND_BLUE);                                     {\cf19 break};\par
4181             {\cf19 case} Color::Cyan:        DOCTEST_SET_ATTR(FOREGROUND_BLUE | FOREGROUND_GREEN);                  {\cf19 break};\par
4182             {\cf19 case} Color::Yellow:      DOCTEST_SET_ATTR(FOREGROUND_RED | FOREGROUND_GREEN);                   {\cf19 break};\par
4183             {\cf19 case} Color::Grey:        DOCTEST_SET_ATTR(0);                                                   {\cf19 break};\par
4184             {\cf19 case} Color::LightGrey:   DOCTEST_SET_ATTR(FOREGROUND_INTENSITY);                                {\cf19 break};\par
4185             {\cf19 case} Color::BrightRed:   DOCTEST_SET_ATTR(FOREGROUND_INTENSITY | FOREGROUND_RED);               {\cf19 break};\par
4186             {\cf19 case} Color::BrightGreen: DOCTEST_SET_ATTR(FOREGROUND_INTENSITY | FOREGROUND_GREEN);             {\cf19 break};\par
4187             {\cf19 case} Color::BrightWhite: DOCTEST_SET_ATTR(FOREGROUND_INTENSITY | FOREGROUND_GREEN | FOREGROUND_RED | FOREGROUND_BLUE); {\cf19 break};\par
4188             {\cf19 case} Color::None:\par
4189             {\cf19 case} Color::Bright: {\cf20 // invalid}\par
4190             {\cf19 default}:                 DOCTEST_SET_ATTR(ch.origFgAttrs);\par
4191         \}\par
4192             {\cf20 // clang-format on}\par
4193 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_COLORS_WINDOWS}\par
4194     \}\par
4195     DOCTEST_CLANG_SUPPRESS_WARNING_POP\par
4196 \par
4197     std::vector<const IExceptionTranslator*>& getExceptionTranslators() \{\par
4198         {\cf17 static} std::vector<const IExceptionTranslator*> data;\par
4199         {\cf19 return} data;\par
4200     \}\par
4201 \par
4202     String translateActiveException() \{\par
4203 {\cf21 #ifndef DOCTEST_CONFIG_NO_EXCEPTIONS}\par
4204         String res;\par
4205         {\cf17 auto}&  translators = getExceptionTranslators();\par
4206         {\cf19 for}({\cf17 auto}& curr : translators)\par
4207             if(curr->translate(res))\par
4208                 return res;\par
4209         {\cf20 // clang-format off}\par
4210         DOCTEST_GCC_SUPPRESS_WARNING_WITH_PUSH({\cf22 "-Wcatch-value"})\par
4211         {\cf17 try} \{\par
4212             {\cf19 throw};\par
4213         \} {\cf19 catch}(std::exception& ex) \{\par
4214             {\cf19 return} ex.what();\par
4215         \} {\cf19 catch}(std::string& msg) \{\par
4216             {\cf19 return} msg.c_str();\par
4217         \} {\cf19 catch}({\cf17 const} {\cf18 char}* msg) \{\par
4218             {\cf19 return} msg;\par
4219         \} {\cf19 catch}(...) \{\par
4220             {\cf19 return} {\cf22 "unknown exception"};\par
4221         \}\par
4222         DOCTEST_GCC_SUPPRESS_WARNING_POP\par
4223 {\cf20 // clang-format on}\par
4224 {\cf21 #else  }{\cf20 // DOCTEST_CONFIG_NO_EXCEPTIONS}\par
4225         {\cf19 return} {\cf22 ""};\par
4226 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_NO_EXCEPTIONS}\par
4227     \}\par
4228 \} {\cf20 // namespace}\par
4229 \par
4230 {\cf17 namespace }detail \{\par
4231     {\cf20 // used by the macros for registering tests}\par
4232     {\cf18 int} regTest({\cf17 const} TestCase& tc) \{\par
4233         getRegisteredTests().insert(tc);\par
4234         {\cf19 return} 0;\par
4235     \}\par
4236 \par
4237     {\cf20 // sets the current test suite}\par
4238     {\cf18 int} setTestSuite({\cf17 const} TestSuite& ts) \{\par
4239         doctest_detail_test_suite_ns::getCurrentTestSuite() = ts;\par
4240         {\cf19 return} 0;\par
4241     \}\par
4242 \par
4243 {\cf21 #ifdef DOCTEST_IS_DEBUGGER_ACTIVE}\par
4244     {\cf18 bool} isDebuggerActive() \{ {\cf19 return} DOCTEST_IS_DEBUGGER_ACTIVE(); \}\par
4245 {\cf21 #else }{\cf20 // DOCTEST_IS_DEBUGGER_ACTIVE}\par
4246 {\cf21 #ifdef DOCTEST_PLATFORM_LINUX}\par
4247     {\cf17 class }ErrnoGuard \{\par
4248     {\cf17 public}:\par
4249         ErrnoGuard() : m_oldErrno(errno) \{\}\par
4250         ~ErrnoGuard() \{ errno = m_oldErrno; \}\par
4251     {\cf17 private}:\par
4252         {\cf18 int} m_oldErrno;\par
4253     \};\par
4254     {\cf20 // See the comments in Catch2 for the reasoning behind this implementation:}\par
4255     {\cf20 // https://github.com/catchorg/Catch2/blob/v2.13.1/include/internal/catch_debugger.cpp#L79-L102}\par
4256     {\cf18 bool} isDebuggerActive() \{\par
4257         ErrnoGuard guard;\par
4258         std::ifstream in({\cf22 "/proc/self/status"});\par
4259         {\cf19 for}(std::string line; std::getline(in, line);) \{\par
4260             {\cf17 static} {\cf17 const} {\cf18 int} PREFIX_LEN = 11;\par
4261             {\cf19 if}(line.compare(0, PREFIX_LEN, {\cf22 "TracerPid:\\t"}) == 0) \{\par
4262                 {\cf19 return} line.length() > PREFIX_LEN && line[PREFIX_LEN] != {\cf23 '0'};\par
4263             \}\par
4264         \}\par
4265         {\cf19 return} {\cf17 false};\par
4266     \}\par
4267 {\cf21 #elif defined(DOCTEST_PLATFORM_MAC)}\par
4268     {\cf20 // The following function is taken directly from the following technical note:}\par
4269     {\cf20 // https://developer.apple.com/library/archive/qa/qa1361/_index.html}\par
4270     {\cf20 // Returns true if the current process is being debugged (either}\par
4271     {\cf20 // running under the debugger or has a debugger attached post facto).}\par
4272     {\cf18 bool} isDebuggerActive() \{\par
4273         {\cf18 int}        mib[4];\par
4274         kinfo_proc info;\par
4275         {\cf18 size_t}     size;\par
4276         {\cf20 // Initialize the flags so that, if sysctl fails for some bizarre}\par
4277         {\cf20 // reason, we get a predictable result.}\par
4278         info.kp_proc.p_flag = 0;\par
4279         {\cf20 // Initialize mib, which tells sysctl the info we want, in this case}\par
4280         {\cf20 // we're looking for information about a specific process ID.}\par
4281         mib[0] = CTL_KERN;\par
4282         mib[1] = KERN_PROC;\par
4283         mib[2] = KERN_PROC_PID;\par
4284         mib[3] = getpid();\par
4285         {\cf20 // Call sysctl.}\par
4286         size = {\cf17 sizeof}(info);\par
4287         {\cf19 if}(sysctl(mib, DOCTEST_COUNTOF(mib), &info, &size, 0, 0) != 0) \{\par
4288             std::cerr << {\cf22 "\\nCall to sysctl failed - unable to determine if debugger is active **\\n"};\par
4289             {\cf19 return} {\cf17 false};\par
4290         \}\par
4291         {\cf20 // We're being debugged if the P_TRACED flag is set.}\par
4292         {\cf19 return} ((info.kp_proc.p_flag & P_TRACED) != 0);\par
4293     \}\par
4294 {\cf21 #elif DOCTEST_MSVC || defined(__MINGW32__) || defined(__MINGW64__)}\par
4295     {\cf18 bool} isDebuggerActive() \{ return ::IsDebuggerPresent() != 0; \}\par
4296 {\cf21 #else}\par
4297     {\cf18 bool} isDebuggerActive() \{ {\cf19 return} {\cf17 false}; \}\par
4298 {\cf21 #endif }{\cf20 // Platform}\par
4299 {\cf21 #endif }{\cf20 // DOCTEST_IS_DEBUGGER_ACTIVE}\par
4300 \par
4301     {\cf18 void} registerExceptionTranslatorImpl({\cf17 const} IExceptionTranslator* et) \{\par
4302         {\cf19 if}(std::find(getExceptionTranslators().begin(), getExceptionTranslators().end(), et) ==\par
4303            getExceptionTranslators().end())\par
4304             getExceptionTranslators().push_back(et);\par
4305     \}\par
4306 \par
4307 {\cf21 #ifdef DOCTEST_CONFIG_TREAT_CHAR_STAR_AS_STRING}\par
4308     {\cf18 void} toStream(std::ostream* s, {\cf18 char}* in) \{ *s << in; \}\par
4309     {\cf18 void} toStream(std::ostream* s, {\cf17 const} {\cf18 char}* in) \{ *s << in; \}\par
4310 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_TREAT_CHAR_STAR_AS_STRING}\par
4311     {\cf18 void} toStream(std::ostream* s, {\cf18 bool} in) \{ *s << std::boolalpha << in << std::noboolalpha; \}\par
4312     {\cf18 void} toStream(std::ostream* s, {\cf18 float} in) \{ *s << in; \}\par
4313     {\cf18 void} toStream(std::ostream* s, {\cf18 double} in) \{ *s << in; \}\par
4314     {\cf18 void} toStream(std::ostream* s, {\cf18 double} {\cf18 long} in) \{ *s << in; \}\par
4315 \par
4316     {\cf18 void} toStream(std::ostream* s, {\cf18 char} in) \{ *s << in; \}\par
4317     {\cf18 void} toStream(std::ostream* s, {\cf18 char} {\cf18 signed} in) \{ *s << in; \}\par
4318     {\cf18 void} toStream(std::ostream* s, {\cf18 char} {\cf18 unsigned} in) \{ *s << in; \}\par
4319     {\cf18 void} toStream(std::ostream* s, {\cf18 int} {\cf18 short} in) \{ *s << in; \}\par
4320     {\cf18 void} toStream(std::ostream* s, {\cf18 int} {\cf18 short} {\cf18 unsigned} in) \{ *s << in; \}\par
4321     {\cf18 void} toStream(std::ostream* s, {\cf18 int} in) \{ *s << in; \}\par
4322     {\cf18 void} toStream(std::ostream* s, {\cf18 int} {\cf18 unsigned} in) \{ *s << in; \}\par
4323     {\cf18 void} toStream(std::ostream* s, {\cf18 int} {\cf18 long} in) \{ *s << in; \}\par
4324     {\cf18 void} toStream(std::ostream* s, {\cf18 int} {\cf18 long} {\cf18 unsigned} in) \{ *s << in; \}\par
4325     {\cf18 void} toStream(std::ostream* s, {\cf18 int} {\cf18 long} {\cf18 long} in) \{ *s << in; \}\par
4326     {\cf18 void} toStream(std::ostream* s, {\cf18 int} {\cf18 long} {\cf18 long} {\cf18 unsigned} in) \{ *s << in; \}\par
4327 \par
4328     DOCTEST_THREAD_LOCAL std::vector<IContextScope*> g_infoContexts; {\cf20 // for logging with INFO()}\par
4329 \par
4330     ContextScopeBase::ContextScopeBase() \{\par
4331         g_infoContexts.push_back({\cf17 this});\par
4332     \}\par
4333 \par
4334     ContextScopeBase::ContextScopeBase(ContextScopeBase&& other) \{\par
4335         {\cf19 if} (other.need_to_destroy) \{\par
4336             other.destroy();\par
4337         \}\par
4338         other.need_to_destroy = {\cf17 false};\par
4339         g_infoContexts.push_back({\cf17 this});\par
4340     \}\par
4341 \par
4342     DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH(4996) {\cf20 // std::uncaught_exception is deprecated in C++17}\par
4343     DOCTEST_GCC_SUPPRESS_WARNING_WITH_PUSH("-Wdeprecated-declarations")\par
4344     DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH("-Wdeprecated-declarations")\par
4345 \par
4346     {\cf20 // destroy cannot be inlined into the destructor because that would mean calling stringify after}\par
4347     {\cf20 // ContextScope has been destroyed (base class destructors run after derived class destructors).}\par
4348     {\cf20 // Instead, ContextScope calls this method directly from its destructor.}\par
4349     {\cf18 void} ContextScopeBase::destroy() \{\par
4350 {\cf21 #if defined(__cpp_lib_uncaught_exceptions) && __cpp_lib_uncaught_exceptions >= 201411L && (!defined(__MAC_OS_X_VERSION_MIN_REQUIRED) || __MAC_OS_X_VERSION_MIN_REQUIRED >= 101200)}\par
4351         {\cf19 if}(std::uncaught_exceptions() > 0) \{\par
4352 {\cf21 #else}\par
4353         {\cf19 if}(std::uncaught_exception()) \{\par
4354 {\cf21 #endif}\par
4355             std::ostringstream s;\par
4356             this->stringify(&s);\par
4357             g_cs->stringifiedContexts.push_back(s.str().c_str());\par
4358         \}\par
4359         g_infoContexts.pop_back();\par
4360     \}\par
4361 \par
4362     DOCTEST_CLANG_SUPPRESS_WARNING_POP\par
4363     DOCTEST_GCC_SUPPRESS_WARNING_POP\par
4364     DOCTEST_MSVC_SUPPRESS_WARNING_POP\par
4365 \} {\cf20 // namespace detail}\par
4366 {\cf17 namespace }\{\par
4367     {\cf17 using namespace }detail;\par
4368 \par
4369 {\cf21 #if !defined(DOCTEST_CONFIG_POSIX_SIGNALS) && !defined(DOCTEST_CONFIG_WINDOWS_SEH)}\par
4370     {\cf17 struct }FatalConditionHandler\par
4371     \{\par
4372         {\cf17 static} {\cf18 void} reset() \{\}\par
4373         {\cf17 static} {\cf18 void} allocateAltStackMem() \{\}\par
4374         {\cf17 static} {\cf18 void} freeAltStackMem() \{\}\par
4375     \};\par
4376 {\cf21 #else }{\cf20 // DOCTEST_CONFIG_POSIX_SIGNALS || DOCTEST_CONFIG_WINDOWS_SEH}\par
4377 \par
4378     {\cf18 void} reportFatal({\cf17 const} std::string&);\par
4379 \par
4380 {\cf21 #ifdef DOCTEST_PLATFORM_WINDOWS}\par
4381 \par
4382     {\cf17 struct }SignalDefs\par
4383     \{\par
4384         DWORD id;\par
4385         {\cf17 const} {\cf18 char}* name;\par
4386     \};\par
4387     {\cf20 // There is no 1-1 mapping between signals and windows exceptions.}\par
4388     {\cf20 // Windows can easily distinguish between SO and SigSegV,}\par
4389     {\cf20 // but SigInt, SigTerm, etc are handled differently.}\par
4390     SignalDefs signalDefs[] = \{\par
4391             \{{\cf17 static_cast<}DWORD{\cf17 >}(EXCEPTION_ILLEGAL_INSTRUCTION),\par
4392              {\cf22 "SIGILL - Illegal instruction signal"}\},\par
4393             \{{\cf17 static_cast<}DWORD{\cf17 >}(EXCEPTION_STACK_OVERFLOW), {\cf22 "SIGSEGV - Stack overflow"}\},\par
4394             \{{\cf17 static_cast<}DWORD{\cf17 >}(EXCEPTION_ACCESS_VIOLATION),\par
4395              {\cf22 "SIGSEGV - Segmentation violation signal"}\},\par
4396             \{{\cf17 static_cast<}DWORD{\cf17 >}(EXCEPTION_INT_DIVIDE_BY_ZERO), {\cf22 "Divide by zero error"}\},\par
4397     \};\par
4398 \par
4399     {\cf17 struct }FatalConditionHandler\par
4400     \{\par
4401         {\cf17 static} LONG CALLBACK handleException(PEXCEPTION_POINTERS ExceptionInfo) \{\par
4402             {\cf20 // Multiple threads may enter this filter/handler at once. We want the error message to be printed on the}\par
4403             {\cf20 // console just once no matter how many threads have crashed.}\par
4404             {\cf17 static} std::mutex mutex;\par
4405             {\cf17 static} {\cf18 bool} execute = {\cf17 true};\par
4406             \{\par
4407                 std::lock_guard<std::mutex> lock(mutex);\par
4408                 {\cf19 if}(execute) \{\par
4409                     {\cf18 bool} reported = {\cf17 false};\par
4410                     {\cf19 for}({\cf18 size_t} i = 0; i < DOCTEST_COUNTOF(signalDefs); ++i) \{\par
4411                         {\cf19 if}(ExceptionInfo->ExceptionRecord->ExceptionCode == signalDefs[i].id) \{\par
4412                             reportFatal(signalDefs[i].name);\par
4413                             reported = {\cf17 true};\par
4414                             {\cf19 break};\par
4415                         \}\par
4416                     \}\par
4417                     {\cf19 if}(reported == {\cf17 false})\par
4418                         reportFatal({\cf22 "Unhandled SEH exception caught"});\par
4419                     {\cf19 if}(isDebuggerActive() && !g_cs->no_breaks)\par
4420                         DOCTEST_BREAK_INTO_DEBUGGER();\par
4421                 \}\par
4422                 execute = {\cf17 false};\par
4423             \}\par
4424             std::exit(EXIT_FAILURE);\par
4425         \}\par
4426 \par
4427         {\cf17 static} {\cf18 void} allocateAltStackMem() \{\}\par
4428         {\cf17 static} {\cf18 void} freeAltStackMem() \{\}\par
4429 \par
4430         FatalConditionHandler() \{\par
4431             isSet = {\cf17 true};\par
4432             {\cf20 // 32k seems enough for doctest to handle stack overflow,}\par
4433             {\cf20 // but the value was found experimentally, so there is no strong guarantee}\par
4434             guaranteeSize = 32 * 1024;\par
4435             {\cf20 // Register an unhandled exception filter}\par
4436             previousTop = SetUnhandledExceptionFilter(handleException);\par
4437             {\cf20 // Pass in guarantee size to be filled}\par
4438             SetThreadStackGuarantee(&guaranteeSize);\par
4439 \par
4440             {\cf20 // On Windows uncaught exceptions from another thread, exceptions from}\par
4441             {\cf20 // destructors, or calls to std::terminate are not a SEH exception}\par
4442 \par
4443             {\cf20 // The terminal handler gets called when:}\par
4444             {\cf20 // - std::terminate is called FROM THE TEST RUNNER THREAD}\par
4445             {\cf20 // - an exception is thrown from a destructor FROM THE TEST RUNNER THREAD}\par
4446             original_terminate_handler = std::get_terminate();\par
4447             std::set_terminate([]() DOCTEST_NOEXCEPT \{\par
4448                 reportFatal({\cf22 "Terminate handler called"});\par
4449                 {\cf19 if}(isDebuggerActive() && !g_cs->no_breaks)\par
4450                     DOCTEST_BREAK_INTO_DEBUGGER();\par
4451                 std::exit(EXIT_FAILURE); {\cf20 // explicitly exit - otherwise the SIGABRT handler may be called as well}\par
4452             \});\par
4453 \par
4454             {\cf20 // SIGABRT is raised when:}\par
4455             {\cf20 // - std::terminate is called FROM A DIFFERENT THREAD}\par
4456             {\cf20 // - an exception is thrown from a destructor FROM A DIFFERENT THREAD}\par
4457             {\cf20 // - an uncaught exception is thrown FROM A DIFFERENT THREAD}\par
4458             prev_sigabrt_handler = std::signal(SIGABRT, []({\cf18 int} signal) DOCTEST_NOEXCEPT \{\par
4459                 {\cf19 if}(signal == SIGABRT) \{\par
4460                     reportFatal({\cf22 "SIGABRT - Abort (abnormal termination) signal"});\par
4461                     {\cf19 if}(isDebuggerActive() && !g_cs->no_breaks)\par
4462                         DOCTEST_BREAK_INTO_DEBUGGER();\par
4463                     std::exit(EXIT_FAILURE);\par
4464                 \}\par
4465             \});\par
4466 \par
4467             {\cf20 // The following settings are taken from google test, and more}\par
4468             {\cf20 // specifically from UnitTest::Run() inside of gtest.cc}\par
4469 \par
4470             {\cf20 // the user does not want to see pop-up dialogs about crashes}\par
4471             prev_error_mode_1 = SetErrorMode(SEM_FAILCRITICALERRORS | SEM_NOALIGNMENTFAULTEXCEPT |\par
4472                                              SEM_NOGPFAULTERRORBOX | SEM_NOOPENFILEERRORBOX);\par
4473             {\cf20 // This forces the abort message to go to stderr in all circumstances.}\par
4474             prev_error_mode_2 = _set_error_mode(_OUT_TO_STDERR);\par
4475             {\cf20 // In the debug version, Visual Studio pops up a separate dialog}\par
4476             {\cf20 // offering a choice to debug the aborted program - we want to disable that.}\par
4477             prev_abort_behavior = _set_abort_behavior(0x0, _WRITE_ABORT_MSG | _CALL_REPORTFAULT);\par
4478             {\cf20 // In debug mode, the Windows CRT can crash with an assertion over invalid}\par
4479             {\cf20 // input (e.g. passing an invalid file descriptor). The default handling}\par
4480             {\cf20 // for these assertions is to pop up a dialog and wait for user input.}\par
4481             {\cf20 // Instead ask the CRT to dump such assertions to stderr non-interactively.}\par
4482             prev_report_mode = _CrtSetReportMode(_CRT_ASSERT, _CRTDBG_MODE_FILE | _CRTDBG_MODE_DEBUG);\par
4483             prev_report_file = _CrtSetReportFile(_CRT_ASSERT, _CRTDBG_FILE_STDERR);\par
4484         \}\par
4485 \par
4486         {\cf17 static} {\cf18 void} reset() \{\par
4487             {\cf19 if}(isSet) \{\par
4488                 {\cf20 // Unregister handler and restore the old guarantee}\par
4489                 SetUnhandledExceptionFilter(previousTop);\par
4490                 SetThreadStackGuarantee(&guaranteeSize);\par
4491                 std::set_terminate(original_terminate_handler);\par
4492                 std::signal(SIGABRT, prev_sigabrt_handler);\par
4493                 SetErrorMode(prev_error_mode_1);\par
4494                 _set_error_mode(prev_error_mode_2);\par
4495                 _set_abort_behavior(prev_abort_behavior, _WRITE_ABORT_MSG | _CALL_REPORTFAULT);\par
4496                 {\cf17 static_cast<}{\cf18 void}{\cf17 >}(_CrtSetReportMode(_CRT_ASSERT, prev_report_mode));\par
4497                 {\cf17 static_cast<}{\cf18 void}{\cf17 >}(_CrtSetReportFile(_CRT_ASSERT, prev_report_file));\par
4498                 isSet = {\cf17 false};\par
4499             \}\par
4500         \}\par
4501 \par
4502         ~FatalConditionHandler() \{ reset(); \}\par
4503 \par
4504     {\cf17 private}:\par
4505         {\cf17 static} UINT         prev_error_mode_1;\par
4506         {\cf17 static} {\cf18 int}          prev_error_mode_2;\par
4507         {\cf17 static} {\cf18 unsigned} {\cf18 int} prev_abort_behavior;\par
4508         {\cf17 static} {\cf18 int}          prev_report_mode;\par
4509         {\cf17 static} _HFILE       prev_report_file;\par
4510         {\cf17 static} void (DOCTEST_CDECL *prev_sigabrt_handler)(int);\par
4511         {\cf17 static} std::terminate_handler original_terminate_handler;\par
4512         {\cf17 static} {\cf18 bool} isSet;\par
4513         {\cf17 static} ULONG guaranteeSize;\par
4514         {\cf17 static} LPTOP_LEVEL_EXCEPTION_FILTER previousTop;\par
4515     \};\par
4516 \par
4517     UINT         FatalConditionHandler::prev_error_mode_1;\par
4518     {\cf18 int}          FatalConditionHandler::prev_error_mode_2;\par
4519     {\cf18 unsigned} {\cf18 int} FatalConditionHandler::prev_abort_behavior;\par
4520     {\cf18 int}          FatalConditionHandler::prev_report_mode;\par
4521     _HFILE       FatalConditionHandler::prev_report_file;\par
4522     void (DOCTEST_CDECL *FatalConditionHandler::prev_sigabrt_handler)(int);\par
4523     std::terminate_handler FatalConditionHandler::original_terminate_handler;\par
4524     {\cf18 bool} FatalConditionHandler::isSet = {\cf17 false};\par
4525     ULONG FatalConditionHandler::guaranteeSize = 0;\par
4526     LPTOP_LEVEL_EXCEPTION_FILTER FatalConditionHandler::previousTop = {\cf17 nullptr};\par
4527 \par
4528 {\cf21 #else }{\cf20 // DOCTEST_PLATFORM_WINDOWS}\par
4529 \par
4530     {\cf17 struct }SignalDefs\par
4531     \{\par
4532         {\cf18 int}         id;\par
4533         {\cf17 const} {\cf18 char}* name;\par
4534     \};\par
4535     SignalDefs signalDefs[] = \{\{SIGINT, {\cf22 "SIGINT - Terminal interrupt signal"}\},\par
4536                                \{SIGILL, {\cf22 "SIGILL - Illegal instruction signal"}\},\par
4537                                \{SIGFPE, {\cf22 "SIGFPE - Floating point error signal"}\},\par
4538                                \{SIGSEGV, {\cf22 "SIGSEGV - Segmentation violation signal"}\},\par
4539                                \{SIGTERM, {\cf22 "SIGTERM - Termination request signal"}\},\par
4540                                \{SIGABRT, {\cf22 "SIGABRT - Abort (abnormal termination) signal"}\}\};\par
4541 \par
4542     {\cf17 struct }FatalConditionHandler\par
4543     \{\par
4544         {\cf17 static} {\cf18 bool}             isSet;\par
4545         {\cf17 static} {\cf17 struct }sigaction oldSigActions[DOCTEST_COUNTOF(signalDefs)];\par
4546         {\cf17 static} stack_t          oldSigStack;\par
4547         {\cf17 static} {\cf18 size_t}           altStackSize;\par
4548         {\cf17 static} {\cf18 char}*            altStackMem;\par
4549 \par
4550         {\cf17 static} {\cf18 void} handleSignal({\cf18 int} sig) \{\par
4551             {\cf17 const} {\cf18 char}* name = {\cf22 "<unknown signal>"};\par
4552             {\cf19 for}(std::size_t i = 0; i < DOCTEST_COUNTOF(signalDefs); ++i) \{\par
4553                 SignalDefs& def = signalDefs[i];\par
4554                 {\cf19 if}(sig == def.id) \{\par
4555                     name = def.name;\par
4556                     {\cf19 break};\par
4557                 \}\par
4558             \}\par
4559             reset();\par
4560             reportFatal(name);\par
4561             raise(sig);\par
4562         \}\par
4563 \par
4564         {\cf17 static} {\cf18 void} allocateAltStackMem() \{\par
4565             altStackMem = {\cf17 new} {\cf18 char}[altStackSize];\par
4566         \}\par
4567 \par
4568         {\cf17 static} {\cf18 void} freeAltStackMem() \{\par
4569             {\cf17 delete}[] altStackMem;\par
4570         \}\par
4571 \par
4572         FatalConditionHandler() \{\par
4573             isSet = {\cf17 true};\par
4574             stack_t sigStack;\par
4575             sigStack.ss_sp    = altStackMem;\par
4576             sigStack.ss_size  = altStackSize;\par
4577             sigStack.ss_flags = 0;\par
4578             sigaltstack(&sigStack, &oldSigStack);\par
4579             {\cf17 struct }sigaction sa = \{\};\par
4580             sa.sa_handler       = handleSignal; {\cf20 // NOLINT}\par
4581             sa.sa_flags         = SA_ONSTACK;\par
4582             {\cf19 for}(std::size_t i = 0; i < DOCTEST_COUNTOF(signalDefs); ++i) \{\par
4583                 sigaction(signalDefs[i].{\cf18 id}, &sa, &oldSigActions[i]);\par
4584             \}\par
4585         \}\par
4586 \par
4587         ~FatalConditionHandler() \{ reset(); \}\par
4588         {\cf17 static} {\cf18 void} reset() \{\par
4589             {\cf19 if}(isSet) \{\par
4590                 {\cf20 // Set signals back to previous values -- hopefully nobody overwrote them in the meantime}\par
4591                 {\cf19 for}(std::size_t i = 0; i < DOCTEST_COUNTOF(signalDefs); ++i) \{\par
4592                     sigaction(signalDefs[i].{\cf18 id}, &oldSigActions[i], {\cf17 nullptr});\par
4593                 \}\par
4594                 {\cf20 // Return the old stack}\par
4595                 sigaltstack(&oldSigStack, {\cf17 nullptr});\par
4596                 isSet = {\cf17 false};\par
4597             \}\par
4598         \}\par
4599     \};\par
4600 \par
4601     {\cf18 bool}             FatalConditionHandler::isSet = {\cf17 false};\par
4602     {\cf17 struct }sigaction FatalConditionHandler::oldSigActions[DOCTEST_COUNTOF(signalDefs)] = \{\};\par
4603     stack_t          FatalConditionHandler::oldSigStack = \{\};\par
4604     {\cf18 size_t}           FatalConditionHandler::altStackSize = 4 * SIGSTKSZ;\par
4605     {\cf18 char}*            FatalConditionHandler::altStackMem = {\cf17 nullptr};\par
4606 \par
4607 {\cf21 #endif }{\cf20 // DOCTEST_PLATFORM_WINDOWS}\par
4608 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_POSIX_SIGNALS || DOCTEST_CONFIG_WINDOWS_SEH}\par
4609 \par
4610 \} {\cf20 // namespace}\par
4611 \par
4612 {\cf17 namespace }\{\par
4613     {\cf17 using namespace }detail;\par
4614 \par
4615 {\cf21 #ifdef DOCTEST_PLATFORM_WINDOWS}\par
4616 {\cf21 #define DOCTEST_OUTPUT_DEBUG_STRING(text) ::OutputDebugStringA(text)}\par
4617 {\cf21 #else}\par
4618     {\cf20 // TODO: integration with XCode and other IDEs}\par
4619 {\cf21 #define DOCTEST_OUTPUT_DEBUG_STRING(text) }{\cf20 // NOLINT(clang-diagnostic-unused-macros)}\par
4620 {\cf21 #endif }{\cf20 // Platform}\par
4621 \par
4622     {\cf18 void} addAssert(assertType::Enum at) \{\par
4623         {\cf19 if}((at & assertType::is_warn) == 0) \par
4624             g_cs->numAssertsCurrentTest_atomic++;\par
4625     \}\par
4626 \par
4627     {\cf18 void} addFailedAssert(assertType::Enum at) \{\par
4628         {\cf19 if}((at & assertType::is_warn) == 0) \par
4629             g_cs->numAssertsFailedCurrentTest_atomic++;\par
4630     \}\par
4631 \par
4632 {\cf21 #if defined(DOCTEST_CONFIG_POSIX_SIGNALS) || defined(DOCTEST_CONFIG_WINDOWS_SEH)}\par
4633     {\cf18 void} reportFatal({\cf17 const} std::string& message) \{\par
4634         g_cs->failure_flags |= TestCaseFailureReason::Crash;\par
4635 \par
4636         DOCTEST_ITERATE_THROUGH_REPORTERS(test_case_exception, \{message.c_str(), {\cf17 true}\});\par
4637 \par
4638         {\cf19 while}(g_cs->subcasesStack.size()) \{\par
4639             g_cs->subcasesStack.pop_back();\par
4640             DOCTEST_ITERATE_THROUGH_REPORTERS(subcase_end, DOCTEST_EMPTY);\par
4641         \}\par
4642 \par
4643         g_cs->finalizeTestCaseData();\par
4644 \par
4645         DOCTEST_ITERATE_THROUGH_REPORTERS(test_case_end, *g_cs);\par
4646 \par
4647         DOCTEST_ITERATE_THROUGH_REPORTERS(test_run_end, *g_cs);\par
4648     \}\par
4649 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_POSIX_SIGNALS || DOCTEST_CONFIG_WINDOWS_SEH}\par
4650 \} {\cf20 // namespace}\par
4651 {\cf17 namespace }detail \{\par
4652 \par
4653     ResultBuilder::ResultBuilder(assertType::Enum at, {\cf17 const} {\cf18 char}* file, {\cf18 int} line, {\cf17 const} {\cf18 char}* expr,\par
4654                                  {\cf17 const} {\cf18 char}* exception_type, {\cf17 const} {\cf18 char}* exception_string) \{\par
4655         m_test_case        = g_cs->currentTest;\par
4656         m_at               = at;\par
4657         m_file             = file;\par
4658         m_line             = line;\par
4659         m_expr             = expr;\par
4660         m_failed           = {\cf17 true};\par
4661         m_threw            = {\cf17 false};\par
4662         m_threw_as         = {\cf17 false};\par
4663         m_exception_type   = exception_type;\par
4664         m_exception_string = exception_string;\par
4665 {\cf21 #if DOCTEST_MSVC}\par
4666         {\cf19 if}(m_expr[0] == {\cf23 ' '}) {\cf20 // this happens when variadic macros are disabled under MSVC}\par
4667             ++m_expr;\par
4668 {\cf21 #endif }{\cf20 // MSVC}\par
4669     \}\par
4670 \par
4671     {\cf18 void} ResultBuilder::setResult({\cf17 const} Result& res) \{\par
4672         m_decomp = res.m_decomp;\par
4673         m_failed = !res.m_passed;\par
4674     \}\par
4675 \par
4676     {\cf18 void} ResultBuilder::translateException() \{\par
4677         m_threw     = {\cf17 true};\par
4678         m_exception = translateActiveException();\par
4679     \}\par
4680 \par
4681     {\cf18 bool} ResultBuilder::log() \{\par
4682         {\cf19 if}(m_at & assertType::is_throws) \{ \par
4683             m_failed = !m_threw;\par
4684         \} {\cf19 else} {\cf19 if}((m_at & assertType::is_throws_as) && (m_at & assertType::is_throws_with)) \{ \par
4685             m_failed = !m_threw_as || (m_exception != m_exception_string);\par
4686         \} {\cf19 else} {\cf19 if}(m_at & assertType::is_throws_as) \{ \par
4687             m_failed = !m_threw_as;\par
4688         \} {\cf19 else} {\cf19 if}(m_at & assertType::is_throws_with) \{ \par
4689             m_failed = m_exception != m_exception_string;\par
4690         \} {\cf19 else} {\cf19 if}(m_at & assertType::is_nothrow) \{ \par
4691             m_failed = m_threw;\par
4692         \}\par
4693 \par
4694         {\cf19 if}(m_exception.size())\par
4695             m_exception = {\cf22 "\\""} + m_exception + {\cf22 "\\""};\par
4696 \par
4697         {\cf19 if}(is_running_in_test) \{\par
4698             addAssert(m_at);\par
4699             DOCTEST_ITERATE_THROUGH_REPORTERS(log_assert, *{\cf17 this});\par
4700 \par
4701             {\cf19 if}(m_failed)\par
4702                 addFailedAssert(m_at);\par
4703         \} {\cf19 else} {\cf19 if}(m_failed) \{\par
4704             failed_out_of_a_testing_context(*{\cf17 this});\par
4705         \}\par
4706 \par
4707         {\cf19 return} m_failed && isDebuggerActive() && !getContextOptions()->no_breaks &&\par
4708             (g_cs->currentTest == {\cf17 nullptr} || !g_cs->currentTest->m_no_breaks); {\cf20 // break into debugger}\par
4709     \}\par
4710 \par
4711     {\cf18 void} ResultBuilder::react(){\cf17  const }\{\par
4712         {\cf19 if}(m_failed && checkIfShouldThrow(m_at))\par
4713             throwException();\par
4714     \}\par
4715 \par
4716     {\cf18 void} failed_out_of_a_testing_context({\cf17 const} AssertData& ad) \{\par
4717         {\cf19 if}(g_cs->ah)\par
4718             g_cs->ah(ad);\par
4719         {\cf19 else}\par
4720             std::abort();\par
4721     \}\par
4722 \par
4723     {\cf18 bool} decomp_assert(assertType::Enum at, {\cf17 const} {\cf18 char}* file, {\cf18 int} line, {\cf17 const} {\cf18 char}* expr,\par
4724                        Result result) \{\par
4725         {\cf18 bool} failed = !result.m_passed;\par
4726 \par
4727         {\cf20 // ###################################################################################}\par
4728         {\cf20 // IF THE DEBUGGER BREAKS HERE - GO 1 LEVEL UP IN THE CALLSTACK FOR THE FAILING ASSERT}\par
4729         {\cf20 // THIS IS THE EFFECT OF HAVING 'DOCTEST_CONFIG_SUPER_FAST_ASSERTS' DEFINED}\par
4730         {\cf20 // ###################################################################################}\par
4731         DOCTEST_ASSERT_OUT_OF_TESTS(result.m_decomp);\par
4732         DOCTEST_ASSERT_IN_TESTS(result.m_decomp);\par
4733         {\cf20 // NOLINTNEXTLINE(clang-analyzer-cplusplus.NewDeleteLeaks)}\par
4734         {\cf19 return} !failed;\par
4735     \}\par
4736 \par
4737     MessageBuilder::MessageBuilder({\cf17 const} {\cf18 char}* file, {\cf18 int} line, assertType::Enum severity) \{\par
4738         m_stream   = tlssPush();\par
4739         m_file     = file;\par
4740         m_line     = line;\par
4741         m_severity = severity;\par
4742     \}\par
4743 \par
4744     MessageBuilder::~MessageBuilder() \{\par
4745         {\cf19 if} (!logged)\par
4746             tlssPop();\par
4747     \}\par
4748 \par
4749     IExceptionTranslator::IExceptionTranslator()  = {\cf19 default};\par
4750     IExceptionTranslator::~IExceptionTranslator() = {\cf19 default};\par
4751 \par
4752     {\cf18 bool} MessageBuilder::log() \{\par
4753         {\cf19 if} (!logged) \{\par
4754             m_string = tlssPop();\par
4755             logged = {\cf17 true};\par
4756         \}\par
4757         \par
4758         DOCTEST_ITERATE_THROUGH_REPORTERS(log_message, *{\cf17 this});\par
4759 \par
4760         {\cf17 const} {\cf18 bool} isWarn = m_severity & assertType::is_warn;\par
4761 \par
4762         {\cf20 // warn is just a message in this context so we don't treat it as an assert}\par
4763         {\cf19 if}(!isWarn) \{\par
4764             addAssert(m_severity);\par
4765             addFailedAssert(m_severity);\par
4766         \}\par
4767 \par
4768         {\cf19 return} isDebuggerActive() && !getContextOptions()->no_breaks && !isWarn &&\par
4769             (g_cs->currentTest == {\cf17 nullptr} || !g_cs->currentTest->m_no_breaks); {\cf20 // break into debugger}\par
4770     \}\par
4771 \par
4772     {\cf18 void} MessageBuilder::react() \{\par
4773         {\cf19 if}(m_severity & assertType::is_require) \par
4774             throwException();\par
4775     \}\par
4776 \} {\cf20 // namespace detail}\par
4777 {\cf17 namespace }\{\par
4778     {\cf17 using namespace }detail;\par
4779 \par
4780     {\cf20 // clang-format off}\par
4781 \par
4782 {\cf20 // =================================================================================================}\par
4783 {\cf20 // The following code has been taken verbatim from Catch2/include/internal/catch_xmlwriter.h/cpp}\par
4784 {\cf20 // This is done so cherry-picking bug fixes is trivial - even the style/formatting is untouched.}\par
4785 {\cf20 // =================================================================================================}\par
4786 \par
4787     {\cf17 class }XmlEncode \{\par
4788     {\cf17 public}:\par
4789         {\cf17 enum} ForWhat \{ ForTextNodes, ForAttributes \};\par
4790 \par
4791         XmlEncode( std::string {\cf17 const}& str, ForWhat forWhat = ForTextNodes );\par
4792 \par
4793         {\cf18 void} encodeTo( std::ostream& os ) {\cf17 const};\par
4794 \par
4795         {\cf17 friend} std::ostream& operator << ( std::ostream& os, XmlEncode {\cf17 const}& xmlEncode );\par
4796 \par
4797     {\cf17 private}:\par
4798         std::string m_str;\par
4799         ForWhat m_forWhat;\par
4800     \};\par
4801 \par
4802     {\cf17 class }XmlWriter \{\par
4803     {\cf17 public}:\par
4804 \par
4805         {\cf17 class }ScopedElement \{\par
4806         {\cf17 public}:\par
4807             ScopedElement( XmlWriter* writer );\par
4808 \par
4809             ScopedElement( ScopedElement&& other ) DOCTEST_NOEXCEPT;\par
4810             ScopedElement& operator=( ScopedElement&& other ) DOCTEST_NOEXCEPT;\par
4811 \par
4812             ~ScopedElement();\par
4813 \par
4814             ScopedElement& writeText( std::string {\cf17 const}& text, {\cf18 bool} indent = {\cf17 true} );\par
4815 \par
4816             {\cf17 template}<{\cf17 typename} T>\par
4817             ScopedElement& writeAttribute( std::string {\cf17 const}& name, T {\cf17 const}& attribute ) \{\par
4818                 m_writer->writeAttribute( name, attribute );\par
4819                 {\cf19 return} *{\cf17 this};\par
4820             \}\par
4821 \par
4822         {\cf17 private}:\par
4823             {\cf17 mutable} XmlWriter* m_writer = {\cf17 nullptr};\par
4824         \};\par
4825 \par
4826         XmlWriter( std::ostream& os = std::cout );\par
4827         ~XmlWriter();\par
4828 \par
4829         XmlWriter( XmlWriter {\cf17 const}& ) = {\cf17 delete};\par
4830         XmlWriter& operator=( XmlWriter {\cf17 const}& ) = {\cf17 delete};\par
4831 \par
4832         XmlWriter& startElement( std::string {\cf17 const}& name );\par
4833 \par
4834         ScopedElement scopedElement( std::string {\cf17 const}& name );\par
4835 \par
4836         XmlWriter& endElement();\par
4837 \par
4838         XmlWriter& writeAttribute( std::string {\cf17 const}& name, std::string {\cf17 const}& attribute );\par
4839 \par
4840         XmlWriter& writeAttribute( std::string {\cf17 const}& name, {\cf17 const} {\cf18 char}* attribute );\par
4841 \par
4842         XmlWriter& writeAttribute( std::string {\cf17 const}& name, {\cf18 bool} attribute );\par
4843 \par
4844         {\cf17 template}<{\cf17 typename} T>\par
4845         XmlWriter& writeAttribute( std::string {\cf17 const}& name, T {\cf17 const}& attribute ) \{\par
4846         std::stringstream rss;\par
4847             rss << attribute;\par
4848             {\cf19 return} writeAttribute( name, rss.str() );\par
4849         \}\par
4850 \par
4851         XmlWriter& writeText( std::string {\cf17 const}& text, {\cf18 bool} indent = {\cf17 true} );\par
4852 \par
4853         {\cf20 //XmlWriter& writeComment( std::string const& text );}\par
4854 \par
4855         {\cf20 //void writeStylesheetRef( std::string const& url );}\par
4856 \par
4857         {\cf20 //XmlWriter& writeBlankLine();}\par
4858 \par
4859         {\cf18 void} ensureTagClosed();\par
4860 \par
4861     {\cf17 private}:\par
4862 \par
4863         {\cf18 void} writeDeclaration();\par
4864 \par
4865         {\cf18 void} newlineIfNecessary();\par
4866 \par
4867         {\cf18 bool} m_tagIsOpen = {\cf17 false};\par
4868         {\cf18 bool} m_needsNewline = {\cf17 false};\par
4869         std::vector<std::string> m_tags;\par
4870         std::string m_indent;\par
4871         std::ostream& m_os;\par
4872     \};\par
4873 \par
4874 {\cf20 // =================================================================================================}\par
4875 {\cf20 // The following code has been taken verbatim from Catch2/include/internal/catch_xmlwriter.h/cpp}\par
4876 {\cf20 // This is done so cherry-picking bug fixes is trivial - even the style/formatting is untouched.}\par
4877 {\cf20 // =================================================================================================}\par
4878 \par
4879 {\cf17 using }uchar = {\cf18 unsigned} char;\par
4880 \par
4881 {\cf17 namespace }\{\par
4882 \par
4883     {\cf18 size_t} trailingBytes({\cf18 unsigned} {\cf18 char} c) \{\par
4884         {\cf19 if} ((c & 0xE0) == 0xC0) \{\par
4885             {\cf19 return} 2;\par
4886         \}\par
4887         {\cf19 if} ((c & 0xF0) == 0xE0) \{\par
4888             {\cf19 return} 3;\par
4889         \}\par
4890         {\cf19 if} ((c & 0xF8) == 0xF0) \{\par
4891             {\cf19 return} 4;\par
4892         \}\par
4893         DOCTEST_INTERNAL_ERROR({\cf22 "Invalid multibyte utf-8 start byte encountered"});\par
4894     \}\par
4895 \par
4896     uint32_t headerValue({\cf18 unsigned} {\cf18 char} c) \{\par
4897         {\cf19 if} ((c & 0xE0) == 0xC0) \{\par
4898             {\cf19 return} c & 0x1F;\par
4899         \}\par
4900         {\cf19 if} ((c & 0xF0) == 0xE0) \{\par
4901             {\cf19 return} c & 0x0F;\par
4902         \}\par
4903         {\cf19 if} ((c & 0xF8) == 0xF0) \{\par
4904             {\cf19 return} c & 0x07;\par
4905         \}\par
4906         DOCTEST_INTERNAL_ERROR({\cf22 "Invalid multibyte utf-8 start byte encountered"});\par
4907     \}\par
4908 \par
4909     {\cf18 void} hexEscapeChar(std::ostream& os, {\cf18 unsigned} {\cf18 char} c) \{\par
4910         std::ios_base::fmtflags f(os.flags());\par
4911         os << {\cf22 "\\\\x"}\par
4912             << std::uppercase << std::hex << std::setfill({\cf23 '0'}) << std::setw(2)\par
4913             << {\cf17 static_cast<}{\cf18 int}{\cf17 >}(c);\par
4914         os.flags(f);\par
4915     \}\par
4916 \par
4917 \} {\cf20 // anonymous namespace}\par
4918 \par
4919     XmlEncode::XmlEncode( std::string {\cf17 const}& str, ForWhat forWhat )\par
4920     :   m_str( str ),\par
4921         m_forWhat( forWhat )\par
4922     \{\}\par
4923 \par
4924     {\cf18 void} XmlEncode::encodeTo( std::ostream& os ){\cf17  const }\{\par
4925         {\cf20 // Apostrophe escaping not necessary if we always use " to write attributes}\par
4926         {\cf20 // (see: https://www.w3.org/TR/xml/#syntax)}\par
4927 \par
4928         {\cf19 for}( std::size_t idx = 0; idx < m_str.size(); ++ idx ) \{\par
4929             uchar c = m_str[idx];\par
4930             {\cf19 switch} (c) \{\par
4931             {\cf19 case} {\cf23 '<'}:   os << {\cf22 "&lt;"}; {\cf19 break};\par
4932             {\cf19 case} {\cf23 '&'}:   os << {\cf22 "&amp;"}; {\cf19 break};\par
4933 \par
4934             {\cf19 case} {\cf23 '>'}:\par
4935                 {\cf20 // See: https://www.w3.org/TR/xml/#syntax}\par
4936                 {\cf19 if} (idx > 2 && m_str[idx - 1] == {\cf23 ']'} && m_str[idx - 2] == {\cf23 ']'})\par
4937                     os << {\cf22 "&gt;"};\par
4938                 {\cf19 else}\par
4939                     os << c;\par
4940                 {\cf19 break};\par
4941 \par
4942             {\cf19 case} {\cf23 '\\"'}:\par
4943                 {\cf19 if} (m_forWhat == ForAttributes)\par
4944                     os << {\cf22 "&quot;"};\par
4945                 {\cf19 else}\par
4946                     os << c;\par
4947                 {\cf19 break};\par
4948 \par
4949             {\cf19 default}:\par
4950                 {\cf20 // Check for control characters and invalid utf-8}\par
4951 \par
4952                 {\cf20 // Escape control characters in standard ascii}\par
4953                 {\cf20 // see https://stackoverflow.com/questions/404107/why-are-control-characters-illegal-in-xml-1-0}\par
4954                 {\cf19 if} (c < 0x09 || (c > 0x0D && c < 0x20) || c == 0x7F) \{\par
4955                     hexEscapeChar(os, c);\par
4956                     {\cf19 break};\par
4957                 \}\par
4958 \par
4959                 {\cf20 // Plain ASCII: Write it to stream}\par
4960                 {\cf19 if} (c < 0x7F) \{\par
4961                     os << c;\par
4962                     {\cf19 break};\par
4963                 \}\par
4964 \par
4965                 {\cf20 // UTF-8 territory}\par
4966                 {\cf20 // Check if the encoding is valid and if it is not, hex escape bytes.}\par
4967                 {\cf20 // Important: We do not check the exact decoded values for validity, only the encoding format}\par
4968                 {\cf20 // First check that this bytes is a valid lead byte:}\par
4969                 {\cf20 // This means that it is not encoded as 1111 1XXX}\par
4970                 {\cf20 // Or as 10XX XXXX}\par
4971                 {\cf19 if} (c <  0xC0 ||\par
4972                     c >= 0xF8) \{\par
4973                     hexEscapeChar(os, c);\par
4974                     {\cf19 break};\par
4975                 \}\par
4976 \par
4977                 {\cf17 auto} encBytes = trailingBytes(c);\par
4978                 {\cf20 // Are there enough bytes left to avoid accessing out-of-bounds memory?}\par
4979                 {\cf19 if} (idx + encBytes - 1 >= m_str.size()) \{\par
4980                     hexEscapeChar(os, c);\par
4981                     {\cf19 break};\par
4982                 \}\par
4983                 {\cf20 // The header is valid, check data}\par
4984                 {\cf20 // The next encBytes bytes must together be a valid utf-8}\par
4985                 {\cf20 // This means: bitpattern 10XX XXXX and the extracted value is sane (ish)}\par
4986                 {\cf18 bool} valid = {\cf17 true};\par
4987                 uint32_t value = headerValue(c);\par
4988                 {\cf19 for} (std::size_t n = 1; n < encBytes; ++n) \{\par
4989                     uchar nc = m_str[idx + n];\par
4990                     valid &= ((nc & 0xC0) == 0x80);\par
4991                     value = (value << 6) | (nc & 0x3F);\par
4992                 \}\par
4993 \par
4994                 {\cf19 if} (\par
4995                     {\cf20 // Wrong bit pattern of following bytes}\par
4996                     (!valid) ||\par
4997                     {\cf20 // Overlong encodings}\par
4998                     (value < 0x80) ||\par
4999                     (                 value < 0x800   && encBytes > 2) || {\cf20 // removed "0x80 <= value &&" because redundant}\par
5000                     (0x800 < value && value < 0x10000 && encBytes > 3) ||\par
5001                     {\cf20 // Encoded value out of range}\par
5002                     (value >= 0x110000)\par
5003                     ) \{\par
5004                     hexEscapeChar(os, c);\par
5005                     {\cf19 break};\par
5006                 \}\par
5007 \par
5008                 {\cf20 // If we got here, this is in fact a valid(ish) utf-8 sequence}\par
5009                 {\cf19 for} (std::size_t n = 0; n < encBytes; ++n) \{\par
5010                     os << m_str[idx + n];\par
5011                 \}\par
5012                 idx += encBytes - 1;\par
5013                 {\cf19 break};\par
5014             \}\par
5015         \}\par
5016     \}\par
5017 \par
5018     std::ostream& operator << ( std::ostream& os, XmlEncode {\cf17 const}& xmlEncode ) \{\par
5019         xmlEncode.encodeTo( os );\par
5020         {\cf19 return} os;\par
5021     \}\par
5022 \par
5023     XmlWriter::ScopedElement::ScopedElement( XmlWriter* writer )\par
5024     :   m_writer( writer )\par
5025     \{\}\par
5026 \par
5027     XmlWriter::ScopedElement::ScopedElement( ScopedElement&& other ) DOCTEST_NOEXCEPT\par
5028     :   m_writer( other.m_writer )\{\par
5029         other.m_writer = {\cf17 nullptr};\par
5030     \}\par
5031     XmlWriter::ScopedElement& XmlWriter::ScopedElement::operator=( ScopedElement&& other ) DOCTEST_NOEXCEPT \{\par
5032         {\cf19 if} ( m_writer ) \{\par
5033             m_writer->endElement();\par
5034         \}\par
5035         m_writer = other.m_writer;\par
5036         other.m_writer = {\cf17 nullptr};\par
5037         {\cf19 return} *{\cf17 this};\par
5038     \}\par
5039 \par
5040 \par
5041     XmlWriter::ScopedElement::~ScopedElement() \{\par
5042         {\cf19 if}( m_writer )\par
5043             m_writer->endElement();\par
5044     \}\par
5045 \par
5046     XmlWriter::ScopedElement& XmlWriter::ScopedElement::writeText( std::string {\cf17 const}& text, {\cf18 bool} indent ) \{\par
5047         m_writer->writeText( text, indent );\par
5048         {\cf19 return} *{\cf17 this};\par
5049     \}\par
5050 \par
5051     XmlWriter::XmlWriter( std::ostream& os ) : m_os( os )\par
5052     \{\par
5053         writeDeclaration();\par
5054     \}\par
5055 \par
5056     XmlWriter::~XmlWriter() \{\par
5057         {\cf19 while}( !m_tags.empty() )\par
5058             endElement();\par
5059     \}\par
5060 \par
5061     XmlWriter& XmlWriter::startElement( std::string {\cf17 const}& name ) \{\par
5062         ensureTagClosed();\par
5063         newlineIfNecessary();\par
5064         m_os << m_indent << {\cf23 '<'} << name;\par
5065         m_tags.push_back( name );\par
5066         m_indent += {\cf22 "  "};\par
5067         m_tagIsOpen = {\cf17 true};\par
5068         {\cf19 return} *{\cf17 this};\par
5069     \}\par
5070 \par
5071     XmlWriter::ScopedElement XmlWriter::scopedElement( std::string {\cf17 const}& name ) \{\par
5072         ScopedElement scoped( {\cf17 this} );\par
5073         startElement( name );\par
5074         {\cf19 return} scoped;\par
5075     \}\par
5076 \par
5077     XmlWriter& XmlWriter::endElement() \{\par
5078         newlineIfNecessary();\par
5079         m_indent = m_indent.substr( 0, m_indent.size()-2 );\par
5080         {\cf19 if}( m_tagIsOpen ) \{\par
5081             m_os << {\cf22 "/>"};\par
5082             m_tagIsOpen = {\cf17 false};\par
5083         \}\par
5084         {\cf19 else} \{\par
5085             m_os << m_indent << {\cf22 "</"} << m_tags.back() << {\cf22 ">"};\par
5086         \}\par
5087         m_os << std::endl;\par
5088         m_tags.pop_back();\par
5089         {\cf19 return} *{\cf17 this};\par
5090     \}\par
5091 \par
5092     XmlWriter& XmlWriter::writeAttribute( std::string {\cf17 const}& name, std::string {\cf17 const}& attribute ) \{\par
5093         {\cf19 if}( !name.empty() && !attribute.empty() )\par
5094             m_os << {\cf23 ' '} << name << {\cf22 "=\\""} << XmlEncode( attribute, XmlEncode::ForAttributes ) << {\cf23 '"'};\par
5095         {\cf19 return} *{\cf17 this};\par
5096     \}\par
5097 \par
5098     XmlWriter& XmlWriter::writeAttribute( std::string {\cf17 const}& name, {\cf17 const} {\cf18 char}* attribute ) \{\par
5099         {\cf19 if}( !name.empty() && attribute && attribute[0] != {\cf23 '\\0'} )\par
5100             m_os << {\cf23 ' '} << name << {\cf22 "=\\""} << XmlEncode( attribute, XmlEncode::ForAttributes ) << {\cf23 '"'};\par
5101         {\cf19 return} *{\cf17 this};\par
5102     \}\par
5103 \par
5104     XmlWriter& XmlWriter::writeAttribute( std::string {\cf17 const}& name, {\cf18 bool} attribute ) \{\par
5105         m_os << {\cf23 ' '} << name << {\cf22 "=\\""} << ( attribute ? {\cf22 "true"} : {\cf22 "false"} ) << {\cf23 '"'};\par
5106         {\cf19 return} *{\cf17 this};\par
5107     \}\par
5108 \par
5109     XmlWriter& XmlWriter::writeText( std::string {\cf17 const}& text, {\cf18 bool} indent ) \{\par
5110         {\cf19 if}( !text.empty() )\{\par
5111             {\cf18 bool} tagWasOpen = m_tagIsOpen;\par
5112             ensureTagClosed();\par
5113             {\cf19 if}( tagWasOpen && indent )\par
5114                 m_os << m_indent;\par
5115             m_os << XmlEncode( text );\par
5116             m_needsNewline = {\cf17 true};\par
5117         \}\par
5118         {\cf19 return} *{\cf17 this};\par
5119     \}\par
5120 \par
5121     {\cf20 //XmlWriter& XmlWriter::writeComment( std::string const& text ) \{}\par
5122     {\cf20 //    ensureTagClosed();}\par
5123     {\cf20 //    m_os << m_indent << "<!--" << text << "-->";}\par
5124     {\cf20 //    m_needsNewline = true;}\par
5125     {\cf20 //    return *this;}\par
5126     {\cf20 //\}}\par
5127 \par
5128     {\cf20 //void XmlWriter::writeStylesheetRef( std::string const& url ) \{}\par
5129     {\cf20 //    m_os << "<?xml-stylesheet type=\\"text/xsl\\" href=\\"" << url << "\\"?>\\n";}\par
5130     {\cf20 //\}}\par
5131 \par
5132     {\cf20 //XmlWriter& XmlWriter::writeBlankLine() \{}\par
5133     {\cf20 //    ensureTagClosed();}\par
5134     {\cf20 //    m_os << '\\n';}\par
5135     {\cf20 //    return *this;}\par
5136     {\cf20 //\}}\par
5137 \par
5138     {\cf18 void} XmlWriter::ensureTagClosed() \{\par
5139         {\cf19 if}( m_tagIsOpen ) \{\par
5140             m_os << {\cf22 ">"} << std::endl;\par
5141             m_tagIsOpen = {\cf17 false};\par
5142         \}\par
5143     \}\par
5144 \par
5145     {\cf18 void} XmlWriter::writeDeclaration() \{\par
5146         m_os << {\cf22 "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n"};\par
5147     \}\par
5148 \par
5149     {\cf18 void} XmlWriter::newlineIfNecessary() \{\par
5150         {\cf19 if}( m_needsNewline ) \{\par
5151             m_os << std::endl;\par
5152             m_needsNewline = {\cf17 false};\par
5153         \}\par
5154     \}\par
5155 \par
5156 {\cf20 // =================================================================================================}\par
5157 {\cf20 // End of copy-pasted code from Catch}\par
5158 {\cf20 // =================================================================================================}\par
5159 \par
5160     {\cf20 // clang-format on}\par
5161 \par
5162     {\cf17 struct }XmlReporter : {\cf17 public} IReporter\par
5163     \{\par
5164         XmlWriter  xml;\par
5165         std::mutex mutex;\par
5166 \par
5167         {\cf20 // caching pointers/references to objects of these types - safe to do}\par
5168         {\cf17 const} ContextOptions& opt;\par
5169         {\cf17 const} TestCaseData*   tc = {\cf17 nullptr};\par
5170 \par
5171         XmlReporter({\cf17 const} ContextOptions& co)\par
5172                 : xml(*co.cout)\par
5173                 , opt(co) \{\}\par
5174 \par
5175         {\cf18 void} log_contexts() \{\par
5176             {\cf18 int} num_contexts = get_num_active_contexts();\par
5177             {\cf19 if}(num_contexts) \{\par
5178                 {\cf17 auto}              contexts = get_active_contexts();\par
5179                 std::stringstream ss;\par
5180                 {\cf19 for}({\cf18 int} i = 0; i < num_contexts; ++i) \{\par
5181                     contexts[i]->stringify(&ss);\par
5182                     xml.scopedElement({\cf22 "Info"}).writeText(ss.str());\par
5183                     ss.str({\cf22 ""});\par
5184                 \}\par
5185             \}\par
5186         \}\par
5187 \par
5188         {\cf18 unsigned} line({\cf18 unsigned} l){\cf17  const }\{ {\cf19 return} opt.no_line_numbers ? 0 : l; \}\par
5189 \par
5190         {\cf18 void} test_case_start_impl({\cf17 const} TestCaseData& in) \{\par
5191             {\cf18 bool} open_ts_tag = {\cf17 false};\par
5192             {\cf19 if}(tc != {\cf17 nullptr}) \{ {\cf20 // we have already opened a test suite}\par
5193                 {\cf19 if}(std::strcmp(tc->m_test_suite, in.m_test_suite) != 0) \{\par
5194                     xml.endElement();\par
5195                     open_ts_tag = {\cf17 true};\par
5196                 \}\par
5197             \}\par
5198             {\cf19 else} \{\par
5199                 open_ts_tag = {\cf17 true}; {\cf20 // first test case ==> first test suite}\par
5200             \}\par
5201 \par
5202             {\cf19 if}(open_ts_tag) \{\par
5203                 xml.startElement({\cf22 "TestSuite"});\par
5204                 xml.writeAttribute({\cf22 "name"}, in.m_test_suite);\par
5205             \}\par
5206 \par
5207             tc = &in;\par
5208             xml.startElement({\cf22 "TestCase"})\par
5209                     .writeAttribute({\cf22 "name"}, in.m_name)\par
5210                     .writeAttribute({\cf22 "filename"}, skipPathFromFilename(in.m_file.c_str()))\par
5211                     .writeAttribute({\cf22 "line"}, line(in.m_line))\par
5212                     .writeAttribute({\cf22 "description"}, in.m_description);\par
5213 \par
5214             {\cf19 if}(Approx(in.m_timeout) != 0)\par
5215                 xml.writeAttribute({\cf22 "timeout"}, in.m_timeout);\par
5216             {\cf19 if}(in.m_may_fail)\par
5217                 xml.writeAttribute({\cf22 "may_fail"}, {\cf17 true});\par
5218             {\cf19 if}(in.m_should_fail)\par
5219                 xml.writeAttribute({\cf22 "should_fail"}, {\cf17 true});\par
5220         \}\par
5221 \par
5222         {\cf20 // =========================================================================================}\par
5223         {\cf20 // WHAT FOLLOWS ARE OVERRIDES OF THE VIRTUAL METHODS OF THE REPORTER INTERFACE}\par
5224         {\cf20 // =========================================================================================}\par
5225 \par
5226         {\cf18 void} report_query({\cf17 const} QueryData& in){\cf17  override }\{\par
5227             test_run_start();\par
5228             {\cf19 if}(opt.list_reporters) \{\par
5229                 {\cf19 for}({\cf17 auto}& curr : getListeners())\par
5230                     xml.scopedElement({\cf22 "Listener"})\par
5231                             .writeAttribute({\cf22 "priority"}, curr.first.first)\par
5232                             .writeAttribute({\cf22 "name"}, curr.first.second);\par
5233                 {\cf19 for}({\cf17 auto}& curr : getReporters())\par
5234                     xml.scopedElement({\cf22 "Reporter"})\par
5235                             .writeAttribute({\cf22 "priority"}, curr.first.first)\par
5236                             .writeAttribute({\cf22 "name"}, curr.first.second);\par
5237             \} {\cf19 else} {\cf19 if}(opt.count || opt.list_test_cases) \{\par
5238                 {\cf19 for}({\cf18 unsigned} i = 0; i < in.num_data; ++i) \{\par
5239                     xml.scopedElement({\cf22 "TestCase"}).writeAttribute({\cf22 "name"}, in.data[i]->m_name)\par
5240                         .writeAttribute({\cf22 "testsuite"}, in.data[i]->m_test_suite)\par
5241                         .writeAttribute({\cf22 "filename"}, skipPathFromFilename(in.data[i]->m_file.c_str()))\par
5242                         .writeAttribute({\cf22 "line"}, line(in.data[i]->m_line))\par
5243                         .writeAttribute({\cf22 "skipped"}, in.data[i]->m_skip);\par
5244                 \}\par
5245                 xml.scopedElement({\cf22 "OverallResultsTestCases"})\par
5246                         .writeAttribute({\cf22 "unskipped"}, in.run_stats->numTestCasesPassingFilters);\par
5247             \} {\cf19 else} {\cf19 if}(opt.list_test_suites) \{\par
5248                 {\cf19 for}({\cf18 unsigned} i = 0; i < in.num_data; ++i)\par
5249                     xml.scopedElement({\cf22 "TestSuite"}).writeAttribute({\cf22 "name"}, in.data[i]->m_test_suite);\par
5250                 xml.scopedElement({\cf22 "OverallResultsTestCases"})\par
5251                         .writeAttribute({\cf22 "unskipped"}, in.run_stats->numTestCasesPassingFilters);\par
5252                 xml.scopedElement({\cf22 "OverallResultsTestSuites"})\par
5253                         .writeAttribute({\cf22 "unskipped"}, in.run_stats->numTestSuitesPassingFilters);\par
5254             \}\par
5255             xml.endElement();\par
5256         \}\par
5257 \par
5258         {\cf18 void} test_run_start(){\cf17  override }\{\par
5259             {\cf20 // remove .exe extension - mainly to have the same output on UNIX and Windows}\par
5260             std::string binary_name = skipPathFromFilename(opt.binary_name.c_str());\par
5261 {\cf21 #ifdef DOCTEST_PLATFORM_WINDOWS}\par
5262             {\cf19 if}(binary_name.rfind({\cf22 ".exe"}) != std::string::npos)\par
5263                 binary_name = binary_name.substr(0, binary_name.length() - 4);\par
5264 {\cf21 #endif }{\cf20 // DOCTEST_PLATFORM_WINDOWS}\par
5265 \par
5266             xml.startElement({\cf22 "doctest"}).writeAttribute({\cf22 "binary"}, binary_name);\par
5267             {\cf19 if}(opt.no_version == {\cf17 false})\par
5268                 xml.writeAttribute({\cf22 "version"}, DOCTEST_VERSION_STR);\par
5269 \par
5270             {\cf20 // only the consequential ones (TODO: filters)}\par
5271             xml.scopedElement({\cf22 "Options"})\par
5272                     .writeAttribute({\cf22 "order_by"}, opt.order_by.c_str())\par
5273                     .writeAttribute({\cf22 "rand_seed"}, opt.rand_seed)\par
5274                     .writeAttribute({\cf22 "first"}, opt.first)\par
5275                     .writeAttribute({\cf22 "last"}, opt.last)\par
5276                     .writeAttribute({\cf22 "abort_after"}, opt.abort_after)\par
5277                     .writeAttribute({\cf22 "subcase_filter_levels"}, opt.subcase_filter_levels)\par
5278                     .writeAttribute({\cf22 "case_sensitive"}, opt.case_sensitive)\par
5279                     .writeAttribute({\cf22 "no_throw"}, opt.no_throw)\par
5280                     .writeAttribute({\cf22 "no_skip"}, opt.no_skip);\par
5281         \}\par
5282 \par
5283         {\cf18 void} test_run_end({\cf17 const} TestRunStats& p){\cf17  override }\{\par
5284             {\cf19 if}(tc) {\cf20 // the TestSuite tag - only if there has been at least 1 test case}\par
5285                 xml.endElement();\par
5286 \par
5287             xml.scopedElement({\cf22 "OverallResultsAsserts"})\par
5288                     .writeAttribute({\cf22 "successes"}, p.numAsserts - p.numAssertsFailed)\par
5289                     .writeAttribute({\cf22 "failures"}, p.numAssertsFailed);\par
5290 \par
5291             xml.startElement({\cf22 "OverallResultsTestCases"})\par
5292                     .writeAttribute({\cf22 "successes"},\par
5293                                     p.numTestCasesPassingFilters - p.numTestCasesFailed)\par
5294                     .writeAttribute({\cf22 "failures"}, p.numTestCasesFailed);\par
5295             {\cf19 if}(opt.no_skipped_summary == {\cf17 false})\par
5296                 xml.writeAttribute({\cf22 "skipped"}, p.numTestCases - p.numTestCasesPassingFilters);\par
5297             xml.endElement();\par
5298 \par
5299             xml.endElement();\par
5300         \}\par
5301 \par
5302         {\cf18 void} test_case_start({\cf17 const} TestCaseData& in){\cf17  override }\{\par
5303             test_case_start_impl(in);\par
5304             xml.ensureTagClosed();\par
5305         \}\par
5306         \par
5307         {\cf18 void} test_case_reenter({\cf17 const} TestCaseData&){\cf17  override }\{\}\par
5308 \par
5309         {\cf18 void} test_case_end({\cf17 const} CurrentTestCaseStats& st){\cf17  override }\{\par
5310             xml.startElement({\cf22 "OverallResultsAsserts"})\par
5311                     .writeAttribute({\cf22 "successes"},\par
5312                                     st.numAssertsCurrentTest - st.numAssertsFailedCurrentTest)\par
5313                     .writeAttribute({\cf22 "failures"}, st.numAssertsFailedCurrentTest)\par
5314                     .writeAttribute({\cf22 "test_case_success"}, st.testCaseSuccess);\par
5315             {\cf19 if}(opt.duration)\par
5316                 xml.writeAttribute({\cf22 "duration"}, st.seconds);\par
5317             {\cf19 if}(tc->m_expected_failures)\par
5318                 xml.writeAttribute({\cf22 "expected_failures"}, tc->m_expected_failures);\par
5319             xml.endElement();\par
5320 \par
5321             xml.endElement();\par
5322         \}\par
5323 \par
5324         {\cf18 void} test_case_exception({\cf17 const} TestCaseException& e){\cf17  override }\{\par
5325             std::lock_guard<std::mutex> lock(mutex);\par
5326 \par
5327             xml.scopedElement({\cf22 "Exception"})\par
5328                     .writeAttribute({\cf22 "crash"}, e.is_crash)\par
5329                     .writeText(e.error_string.c_str());\par
5330         \}\par
5331 \par
5332         {\cf18 void} subcase_start({\cf17 const} SubcaseSignature& in){\cf17  override }\{\par
5333             xml.startElement({\cf22 "SubCase"})\par
5334                     .writeAttribute({\cf22 "name"}, in.m_name)\par
5335                     .writeAttribute({\cf22 "filename"}, skipPathFromFilename(in.m_file))\par
5336                     .writeAttribute({\cf22 "line"}, line(in.m_line));\par
5337             xml.ensureTagClosed();\par
5338         \}\par
5339 \par
5340         {\cf18 void} subcase_end(){\cf17  override }\{ xml.endElement(); \}\par
5341 \par
5342         {\cf18 void} log_assert({\cf17 const} AssertData& rb){\cf17  override }\{\par
5343             {\cf19 if}(!rb.m_failed && !opt.success)\par
5344                 {\cf19 return};\par
5345 \par
5346             std::lock_guard<std::mutex> lock(mutex);\par
5347 \par
5348             xml.startElement({\cf22 "Expression"})\par
5349                     .writeAttribute({\cf22 "success"}, !rb.m_failed)\par
5350                     .writeAttribute({\cf22 "type"}, assertString(rb.m_at))\par
5351                     .writeAttribute({\cf22 "filename"}, skipPathFromFilename(rb.m_file))\par
5352                     .writeAttribute({\cf22 "line"}, line(rb.m_line));\par
5353 \par
5354             xml.scopedElement({\cf22 "Original"}).writeText(rb.m_expr);\par
5355 \par
5356             {\cf19 if}(rb.m_threw)\par
5357                 xml.scopedElement({\cf22 "Exception"}).writeText(rb.m_exception.c_str());\par
5358 \par
5359             {\cf19 if}(rb.m_at & assertType::is_throws_as)\par
5360                 xml.scopedElement({\cf22 "ExpectedException"}).writeText(rb.m_exception_type);\par
5361             {\cf19 if}(rb.m_at & assertType::is_throws_with)\par
5362                 xml.scopedElement({\cf22 "ExpectedExceptionString"}).writeText(rb.m_exception_string);\par
5363             {\cf19 if}((rb.m_at & assertType::is_normal) && !rb.m_threw)\par
5364                 xml.scopedElement({\cf22 "Expanded"}).writeText(rb.m_decomp.c_str());\par
5365 \par
5366             log_contexts();\par
5367 \par
5368             xml.endElement();\par
5369         \}\par
5370 \par
5371         {\cf18 void} log_message({\cf17 const} MessageData& mb){\cf17  override }\{\par
5372             std::lock_guard<std::mutex> lock(mutex);\par
5373 \par
5374             xml.startElement({\cf22 "Message"})\par
5375                     .writeAttribute({\cf22 "type"}, failureString(mb.m_severity))\par
5376                     .writeAttribute({\cf22 "filename"}, skipPathFromFilename(mb.m_file))\par
5377                     .writeAttribute({\cf22 "line"}, line(mb.m_line));\par
5378 \par
5379             xml.scopedElement({\cf22 "Text"}).writeText(mb.m_string.c_str());\par
5380 \par
5381             log_contexts();\par
5382 \par
5383             xml.endElement();\par
5384         \}\par
5385 \par
5386         {\cf18 void} test_case_skipped({\cf17 const} TestCaseData& in){\cf17  override }\{\par
5387             {\cf19 if}(opt.no_skipped_summary == {\cf17 false}) \{\par
5388                 test_case_start_impl(in);\par
5389                 xml.writeAttribute({\cf22 "skipped"}, {\cf22 "true"});\par
5390                 xml.endElement();\par
5391             \}\par
5392         \}\par
5393     \};\par
5394 \par
5395     DOCTEST_REGISTER_REPORTER({\cf22 "xml"}, 0, XmlReporter);\par
5396 \par
5397     {\cf18 void} fulltext_log_assert_to_stream(std::ostream& s, {\cf17 const} AssertData& rb) \{\par
5398         {\cf19 if}((rb.m_at & (assertType::is_throws_as | assertType::is_throws_with)) ==\par
5399             0) \par
5400             s << Color::Cyan << assertString(rb.m_at) << {\cf22 "( "} << rb.m_expr << {\cf22 " ) "}\par
5401                 << Color::None;\par
5402 \par
5403         {\cf19 if}(rb.m_at & assertType::is_throws) \{ \par
5404             s << (rb.m_threw ? {\cf22 "threw as expected!"} : {\cf22 "did NOT throw at all!"}) << {\cf22 "\\n"};\par
5405         \} {\cf19 else} {\cf19 if}((rb.m_at & assertType::is_throws_as) &&\par
5406                     (rb.m_at & assertType::is_throws_with)) \{ \par
5407             s << Color::Cyan << assertString(rb.m_at) << {\cf22 "( "} << rb.m_expr << {\cf22 ", \\""}\par
5408                 << rb.m_exception_string << {\cf22 "\\", "} << rb.m_exception_type << {\cf22 " ) "} << Color::None;\par
5409             {\cf19 if}(rb.m_threw) \{\par
5410                 {\cf19 if}(!rb.m_failed) \{\par
5411                     s << {\cf22 "threw as expected!\\n"};\par
5412                 \} {\cf19 else} \{\par
5413                     s << {\cf22 "threw a DIFFERENT exception! (contents: "} << rb.m_exception << {\cf22 ")\\n"};\par
5414                 \}\par
5415             \} {\cf19 else} \{\par
5416                 s << {\cf22 "did NOT throw at all!\\n"};\par
5417             \}\par
5418         \} {\cf19 else} {\cf19 if}(rb.m_at &\par
5419                     assertType::is_throws_as) \{ \par
5420             s << Color::Cyan << assertString(rb.m_at) << {\cf22 "( "} << rb.m_expr << {\cf22 ", "}\par
5421                 << rb.m_exception_type << {\cf22 " ) "} << Color::None\par
5422                 << (rb.m_threw ? (rb.m_threw_as ? {\cf22 "threw as expected!"} :\par
5423                                                 {\cf22 "threw a DIFFERENT exception: "}) :\par
5424                                 {\cf22 "did NOT throw at all!"})\par
5425                 << Color::Cyan << rb.m_exception << {\cf22 "\\n"};\par
5426         \} {\cf19 else} {\cf19 if}(rb.m_at &\par
5427                     assertType::is_throws_with) \{ \par
5428             s << Color::Cyan << assertString(rb.m_at) << {\cf22 "( "} << rb.m_expr << {\cf22 ", \\""}\par
5429                 << rb.m_exception_string << {\cf22 "\\" ) "} << Color::None\par
5430                 << (rb.m_threw ? (!rb.m_failed ? {\cf22 "threw as expected!"} :\par
5431                                                 {\cf22 "threw a DIFFERENT exception: "}) :\par
5432                                 {\cf22 "did NOT throw at all!"})\par
5433                 << Color::Cyan << rb.m_exception << {\cf22 "\\n"};\par
5434         \} {\cf19 else} {\cf19 if}(rb.m_at & assertType::is_nothrow) \{ \par
5435             s << (rb.m_threw ? {\cf22 "THREW exception: "} : {\cf22 "didn't throw!"}) << Color::Cyan\par
5436                 << rb.m_exception << {\cf22 "\\n"};\par
5437         \} {\cf19 else} \{\par
5438             s << (rb.m_threw ? {\cf22 "THREW exception: "} :\par
5439                                 (!rb.m_failed ? {\cf22 "is correct!\\n"} : {\cf22 "is NOT correct!\\n"}));\par
5440             {\cf19 if}(rb.m_threw)\par
5441                 s << rb.m_exception << {\cf22 "\\n"};\par
5442             {\cf19 else}\par
5443                 s << {\cf22 "  values: "} << assertString(rb.m_at) << {\cf22 "( "} << rb.m_decomp << {\cf22 " )\\n"};\par
5444         \}\par
5445     \}\par
5446 \par
5447     {\cf20 // TODO:}\par
5448     {\cf20 // - log_message()}\par
5449     {\cf20 // - respond to queries}\par
5450     {\cf20 // - honor remaining options}\par
5451     {\cf20 // - more attributes in tags}\par
5452     {\cf17 struct }JUnitReporter : {\cf17 public} IReporter\par
5453     \{\par
5454         XmlWriter  xml;\par
5455         std::mutex mutex;\par
5456         Timer timer;\par
5457         std::vector<String> deepestSubcaseStackNames;\par
5458 \par
5459         {\cf17 struct }JUnitTestCaseData\par
5460         \{\par
5461             {\cf17 static} std::string getCurrentTimestamp() \{\par
5462                 {\cf20 // Beware, this is not reentrant because of backward compatibility issues}\par
5463                 {\cf20 // Also, UTC only, again because of backward compatibility (%z is C++11)}\par
5464                 time_t rawtime;\par
5465                 std::time(&rawtime);\par
5466                 {\cf17 auto} {\cf17 const} timeStampSize = {\cf17 sizeof}({\cf22 "2017-01-16T17:06:45Z"});\par
5467 \par
5468                 std::tm timeInfo;\par
5469 {\cf21 #ifdef DOCTEST_PLATFORM_WINDOWS}\par
5470                 gmtime_s(&timeInfo, &rawtime);\par
5471 {\cf21 #else }{\cf20 // DOCTEST_PLATFORM_WINDOWS}\par
5472                 gmtime_r(&rawtime, &timeInfo);\par
5473 {\cf21 #endif }{\cf20 // DOCTEST_PLATFORM_WINDOWS}\par
5474 \par
5475                 {\cf18 char} timeStamp[timeStampSize];\par
5476                 {\cf17 const} {\cf18 char}* {\cf17 const} fmt = {\cf22 "%Y-%m-%dT%H:%M:%SZ"};\par
5477 \par
5478                 std::strftime(timeStamp, timeStampSize, fmt, &timeInfo);\par
5479                 {\cf19 return} std::string(timeStamp);\par
5480             \}\par
5481 \par
5482             {\cf17 struct }JUnitTestMessage\par
5483             \{\par
5484                 JUnitTestMessage({\cf17 const} std::string& _message, {\cf17 const} std::string& _type, {\cf17 const} std::string& _details)\par
5485                     : message(_message), type(_type), details(_details) \{\}\par
5486 \par
5487                 JUnitTestMessage({\cf17 const} std::string& _message, {\cf17 const} std::string& _details)\par
5488                     : message(_message), type(), details(_details) \{\}\par
5489 \par
5490                 std::string message, type, details;\par
5491             \};\par
5492 \par
5493             {\cf17 struct }JUnitTestCase\par
5494             \{\par
5495                 JUnitTestCase({\cf17 const} std::string& _classname, {\cf17 const} std::string& _name)\par
5496                     : classname(_classname), name(_name), time(0), failures() \{\}\par
5497 \par
5498                 std::string classname, name;\par
5499                 {\cf18 double} time;\par
5500                 std::vector<JUnitTestMessage> failures, errors;\par
5501             \};\par
5502 \par
5503             {\cf18 void} add({\cf17 const} std::string& classname, {\cf17 const} std::string& name) \{\par
5504                 testcases.emplace_back(classname, name);\par
5505             \}\par
5506 \par
5507             {\cf18 void} appendSubcaseNamesToLastTestcase(std::vector<String> nameStack) \{\par
5508                 {\cf19 for}({\cf17 auto}& curr: nameStack)\par
5509                     if(curr.size())\par
5510                         testcases.back().name += std::string({\cf22 "/"}) + curr.c_str();\par
5511             \}\par
5512 \par
5513             {\cf18 void} addTime({\cf18 double} time) \{\par
5514                 {\cf19 if}(time < 1e-4)\par
5515                     time = 0;\par
5516                 testcases.back().time = time;\par
5517                 totalSeconds += time;\par
5518             \}\par
5519 \par
5520             {\cf18 void} addFailure({\cf17 const} std::string& message, {\cf17 const} std::string& type, {\cf17 const} std::string& details) \{\par
5521                 testcases.back().failures.emplace_back(message, type, details);\par
5522                 ++totalFailures;\par
5523             \}\par
5524 \par
5525             {\cf18 void} addError({\cf17 const} std::string& message, {\cf17 const} std::string& details) \{\par
5526                 testcases.back().errors.emplace_back(message, details);\par
5527                 ++totalErrors;\par
5528             \}\par
5529 \par
5530             std::vector<JUnitTestCase> testcases;\par
5531             {\cf18 double} totalSeconds = 0;\par
5532             {\cf18 int} totalErrors = 0, totalFailures = 0;\par
5533         \};\par
5534 \par
5535         JUnitTestCaseData testCaseData;\par
5536 \par
5537         {\cf20 // caching pointers/references to objects of these types - safe to do}\par
5538         {\cf17 const} ContextOptions& opt;\par
5539         {\cf17 const} TestCaseData*   tc = {\cf17 nullptr};\par
5540 \par
5541         JUnitReporter({\cf17 const} ContextOptions& co)\par
5542                 : xml(*co.cout)\par
5543                 , opt(co) \{\}\par
5544 \par
5545         {\cf18 unsigned} line({\cf18 unsigned} l){\cf17  const }\{ {\cf19 return} opt.no_line_numbers ? 0 : l; \}\par
5546 \par
5547         {\cf20 // =========================================================================================}\par
5548         {\cf20 // WHAT FOLLOWS ARE OVERRIDES OF THE VIRTUAL METHODS OF THE REPORTER INTERFACE}\par
5549         {\cf20 // =========================================================================================}\par
5550 \par
5551         {\cf18 void} report_query({\cf17 const} QueryData&){\cf17  override }\{\}\par
5552 \par
5553         {\cf18 void} test_run_start(){\cf17  override }\{\}\par
5554 \par
5555         {\cf18 void} test_run_end({\cf17 const} TestRunStats& p){\cf17  override }\{\par
5556             {\cf20 // remove .exe extension - mainly to have the same output on UNIX and Windows}\par
5557             std::string binary_name = skipPathFromFilename(opt.binary_name.c_str());\par
5558 {\cf21 #ifdef DOCTEST_PLATFORM_WINDOWS}\par
5559             {\cf19 if}(binary_name.rfind({\cf22 ".exe"}) != std::string::npos)\par
5560                 binary_name = binary_name.substr(0, binary_name.length() - 4);\par
5561 {\cf21 #endif }{\cf20 // DOCTEST_PLATFORM_WINDOWS}\par
5562             xml.startElement({\cf22 "testsuites"});\par
5563             xml.startElement({\cf22 "testsuite"}).writeAttribute({\cf22 "name"}, binary_name)\par
5564                     .writeAttribute({\cf22 "errors"}, testCaseData.totalErrors)\par
5565                     .writeAttribute({\cf22 "failures"}, testCaseData.totalFailures)\par
5566                     .writeAttribute({\cf22 "tests"}, p.numAsserts);\par
5567             {\cf19 if}(opt.no_time_in_output == {\cf17 false}) \{\par
5568                 xml.writeAttribute({\cf22 "time"}, testCaseData.totalSeconds);\par
5569                 xml.writeAttribute({\cf22 "timestamp"}, JUnitTestCaseData::getCurrentTimestamp());\par
5570             \}\par
5571             {\cf19 if}(opt.no_version == {\cf17 false})\par
5572                 xml.writeAttribute({\cf22 "doctest_version"}, DOCTEST_VERSION_STR);\par
5573 \par
5574             {\cf19 for}({\cf17 const} {\cf17 auto}& testCase : testCaseData.testcases) \{\par
5575                 xml.startElement({\cf22 "testcase"})\par
5576                     .writeAttribute({\cf22 "classname"}, testCase.classname)\par
5577                     .writeAttribute({\cf22 "name"}, testCase.name);\par
5578                 {\cf19 if}(opt.no_time_in_output == {\cf17 false})\par
5579                     xml.writeAttribute({\cf22 "time"}, testCase.time);\par
5580                 {\cf20 // This is not ideal, but it should be enough to mimic gtest's junit output.}\par
5581                 xml.writeAttribute({\cf22 "status"}, {\cf22 "run"});\par
5582 \par
5583                 {\cf19 for}({\cf17 const} {\cf17 auto}& failure : testCase.failures) \{\par
5584                     xml.scopedElement({\cf22 "failure"})\par
5585                         .writeAttribute({\cf22 "message"}, failure.message)\par
5586                         .writeAttribute({\cf22 "type"}, failure.type)\par
5587                         .writeText(failure.details, {\cf17 false});\par
5588                 \}\par
5589 \par
5590                 {\cf19 for}({\cf17 const} {\cf17 auto}& error : testCase.errors) \{\par
5591                     xml.scopedElement({\cf22 "error"})\par
5592                         .writeAttribute({\cf22 "message"}, error.message)\par
5593                         .writeText(error.details);\par
5594                 \}\par
5595 \par
5596                 xml.endElement();\par
5597             \}\par
5598             xml.endElement();\par
5599             xml.endElement();\par
5600         \}\par
5601 \par
5602         {\cf18 void} test_case_start({\cf17 const} TestCaseData& in){\cf17  override }\{\par
5603             testCaseData.add(skipPathFromFilename(in.m_file.c_str()), in.m_name);\par
5604             timer.start();\par
5605         \}\par
5606 \par
5607         {\cf18 void} test_case_reenter({\cf17 const} TestCaseData& in){\cf17  override }\{\par
5608             testCaseData.addTime(timer.getElapsedSeconds());\par
5609             testCaseData.appendSubcaseNamesToLastTestcase(deepestSubcaseStackNames);\par
5610             deepestSubcaseStackNames.clear();\par
5611 \par
5612             timer.start();\par
5613             testCaseData.add(skipPathFromFilename(in.m_file.c_str()), in.m_name);\par
5614         \}\par
5615 \par
5616         {\cf18 void} test_case_end({\cf17 const} CurrentTestCaseStats&){\cf17  override }\{\par
5617             testCaseData.addTime(timer.getElapsedSeconds());\par
5618             testCaseData.appendSubcaseNamesToLastTestcase(deepestSubcaseStackNames);\par
5619             deepestSubcaseStackNames.clear();\par
5620         \}\par
5621 \par
5622         {\cf18 void} test_case_exception({\cf17 const} TestCaseException& e){\cf17  override }\{\par
5623             std::lock_guard<std::mutex> lock(mutex);\par
5624             testCaseData.addError({\cf22 "exception"}, e.error_string.c_str());\par
5625         \}\par
5626 \par
5627         {\cf18 void} subcase_start({\cf17 const} SubcaseSignature& in){\cf17  override }\{\par
5628             deepestSubcaseStackNames.push_back(in.m_name);\par
5629         \}\par
5630 \par
5631         {\cf18 void} subcase_end(){\cf17  override }\{\}\par
5632 \par
5633         {\cf18 void} log_assert({\cf17 const} AssertData& rb){\cf17  override }\{\par
5634             {\cf19 if}(!rb.m_failed) {\cf20 // report only failures & ignore the `success` option}\par
5635                 {\cf19 return};\par
5636 \par
5637             std::lock_guard<std::mutex> lock(mutex);\par
5638 \par
5639             std::ostringstream os;\par
5640             os << skipPathFromFilename(rb.m_file) << (opt.gnu_file_line ? {\cf22 ":"} : {\cf22 "("})\par
5641               << line(rb.m_line) << (opt.gnu_file_line ? {\cf22 ":"} : {\cf22 "):"}) << std::endl;\par
5642 \par
5643             fulltext_log_assert_to_stream(os, rb);\par
5644             log_contexts(os);\par
5645             testCaseData.addFailure(rb.m_decomp.c_str(), assertString(rb.m_at), os.str());\par
5646         \}\par
5647 \par
5648         {\cf18 void} log_message({\cf17 const} MessageData&){\cf17  override }\{\}\par
5649 \par
5650         {\cf18 void} test_case_skipped({\cf17 const} TestCaseData&){\cf17  override }\{\}\par
5651 \par
5652         {\cf18 void} log_contexts(std::ostringstream& s) \{\par
5653             {\cf18 int} num_contexts = get_num_active_contexts();\par
5654             {\cf19 if}(num_contexts) \{\par
5655                 {\cf17 auto} contexts = get_active_contexts();\par
5656 \par
5657                 s << {\cf22 "  logged: "};\par
5658                 {\cf19 for}({\cf18 int} i = 0; i < num_contexts; ++i) \{\par
5659                     s << (i == 0 ? {\cf22 ""} : {\cf22 "          "});\par
5660                     contexts[i]->stringify(&s);\par
5661                     s << std::endl;\par
5662                 \}\par
5663             \}\par
5664         \}\par
5665     \};\par
5666 \par
5667     DOCTEST_REGISTER_REPORTER({\cf22 "junit"}, 0, JUnitReporter);\par
5668 \par
5669     {\cf17 struct }Whitespace\par
5670     \{\par
5671         {\cf18 int} nrSpaces;\par
5672         {\cf17 explicit} Whitespace({\cf18 int} nr)\par
5673                 : nrSpaces(nr) \{\}\par
5674     \};\par
5675 \par
5676     std::ostream& operator<<(std::ostream& out, {\cf17 const} Whitespace& ws) \{\par
5677         {\cf19 if}(ws.nrSpaces != 0)\par
5678             out << std::setw(ws.nrSpaces) << {\cf23 ' '};\par
5679         {\cf19 return} out;\par
5680     \}\par
5681 \par
5682     {\cf17 struct }ConsoleReporter : {\cf17 public} IReporter\par
5683     \{\par
5684         std::ostream&                 s;\par
5685         {\cf18 bool}                          hasLoggedCurrentTestStart;\par
5686         std::vector<SubcaseSignature> subcasesStack;\par
5687         {\cf18 size_t}                        currentSubcaseLevel;\par
5688         std::mutex                    mutex;\par
5689 \par
5690         {\cf20 // caching pointers/references to objects of these types - safe to do}\par
5691         {\cf17 const} ContextOptions& opt;\par
5692         {\cf17 const} TestCaseData*   tc;\par
5693 \par
5694         ConsoleReporter({\cf17 const} ContextOptions& co)\par
5695                 : s(*co.cout)\par
5696                 , opt(co) \{\}\par
5697 \par
5698         ConsoleReporter({\cf17 const} ContextOptions& co, std::ostream& ostr)\par
5699                 : s(ostr)\par
5700                 , opt(co) \{\}\par
5701 \par
5702         {\cf20 // =========================================================================================}\par
5703         {\cf20 // WHAT FOLLOWS ARE HELPERS USED BY THE OVERRIDES OF THE VIRTUAL METHODS OF THE INTERFACE}\par
5704         {\cf20 // =========================================================================================}\par
5705 \par
5706         {\cf18 void} separator_to_stream() \{\par
5707             s << Color::Yellow\par
5708               << {\cf22 "==============================================================================="}\par
5709                  {\cf22 "\\n"};\par
5710         \}\par
5711 \par
5712         {\cf17 const} {\cf18 char}* getSuccessOrFailString({\cf18 bool} success, assertType::Enum at,\par
5713                                            {\cf17 const} {\cf18 char}* success_str) \{\par
5714             {\cf19 if}(success)\par
5715                 {\cf19 return} success_str;\par
5716             {\cf19 return} failureString(at);\par
5717         \}\par
5718 \par
5719         Color::Enum getSuccessOrFailColor({\cf18 bool} success, assertType::Enum at) \{\par
5720             {\cf19 return} success ? Color::BrightGreen :\par
5721                              (at & assertType::is_warn) ? Color::Yellow : Color::Red;\par
5722         \}\par
5723 \par
5724         {\cf18 void} successOrFailColoredStringToStream({\cf18 bool} success, assertType::Enum at,\par
5725                                                 {\cf17 const} {\cf18 char}* success_str = {\cf22 "SUCCESS"}) \{\par
5726             s << getSuccessOrFailColor(success, at)\par
5727               << getSuccessOrFailString(success, at, success_str) << {\cf22 ": "};\par
5728         \}\par
5729 \par
5730         {\cf18 void} log_contexts() \{\par
5731             {\cf18 int} num_contexts = get_num_active_contexts();\par
5732             {\cf19 if}(num_contexts) \{\par
5733                 {\cf17 auto} contexts = get_active_contexts();\par
5734 \par
5735                 s << Color::None << {\cf22 "  logged: "};\par
5736                 {\cf19 for}({\cf18 int} i = 0; i < num_contexts; ++i) \{\par
5737                     s << (i == 0 ? {\cf22 ""} : {\cf22 "          "});\par
5738                     contexts[i]->stringify(&s);\par
5739                     s << {\cf22 "\\n"};\par
5740                 \}\par
5741             \}\par
5742 \par
5743             s << {\cf22 "\\n"};\par
5744         \}\par
5745 \par
5746         {\cf20 // this was requested to be made virtual so users could override it}\par
5747         {\cf17 virtual} {\cf18 void} file_line_to_stream({\cf17 const} {\cf18 char}* file, {\cf18 int} line,\par
5748                                         {\cf17 const} {\cf18 char}* tail = {\cf22 ""}) \{\par
5749             s << Color::LightGrey << skipPathFromFilename(file) << (opt.gnu_file_line ? {\cf22 ":"} : {\cf22 "("})\par
5750             << (opt.no_line_numbers ? 0 : line) {\cf20 // 0 or the real num depending on the option}\par
5751             << (opt.gnu_file_line ? {\cf22 ":"} : {\cf22 "):"}) << tail;\par
5752         \}\par
5753 \par
5754         {\cf18 void} logTestStart() \{\par
5755             {\cf19 if}(hasLoggedCurrentTestStart)\par
5756                 {\cf19 return};\par
5757 \par
5758             separator_to_stream();\par
5759             file_line_to_stream(tc->m_file.c_str(), tc->m_line, {\cf22 "\\n"});\par
5760             {\cf19 if}(tc->m_description)\par
5761                 s << Color::Yellow << {\cf22 "DESCRIPTION: "} << Color::None << tc->m_description << {\cf22 "\\n"};\par
5762             {\cf19 if}(tc->m_test_suite && tc->m_test_suite[0] != {\cf23 '\\0'})\par
5763                 s << Color::Yellow << {\cf22 "TEST SUITE: "} << Color::None << tc->m_test_suite << {\cf22 "\\n"};\par
5764             {\cf19 if}(strncmp(tc->m_name, {\cf22 "  Scenario:"}, 11) != 0)\par
5765                 s << Color::Yellow << {\cf22 "TEST CASE:  "};\par
5766             s << Color::None << tc->m_name << {\cf22 "\\n"};\par
5767 \par
5768             {\cf19 for}({\cf18 size_t} i = 0; i < currentSubcaseLevel; ++i) \{\par
5769                 {\cf19 if}(subcasesStack[i].m_name[0] != {\cf23 '\\0'})\par
5770                     s << {\cf22 "  "} << subcasesStack[i].m_name << {\cf22 "\\n"};\par
5771             \}\par
5772 \par
5773             {\cf19 if}(currentSubcaseLevel != subcasesStack.size()) \{\par
5774                 s << Color::Yellow << {\cf22 "\\nDEEPEST SUBCASE STACK REACHED (DIFFERENT FROM THE CURRENT ONE):\\n"} << Color::None;\par
5775                 {\cf19 for}({\cf18 size_t} i = 0; i < subcasesStack.size(); ++i) \{\par
5776                     {\cf19 if}(subcasesStack[i].m_name[0] != {\cf23 '\\0'})\par
5777                         s << {\cf22 "  "} << subcasesStack[i].m_name << {\cf22 "\\n"};\par
5778                 \}\par
5779             \}\par
5780 \par
5781             s << {\cf22 "\\n"};\par
5782 \par
5783             hasLoggedCurrentTestStart = {\cf17 true};\par
5784         \}\par
5785 \par
5786         {\cf18 void} printVersion() \{\par
5787             {\cf19 if}(opt.no_version == {\cf17 false})\par
5788                 s << Color::Cyan << {\cf22 "[doctest] "} << Color::None << {\cf22 "doctest version is \\""}\par
5789                   << DOCTEST_VERSION_STR << {\cf22 "\\"\\n"};\par
5790         \}\par
5791 \par
5792         {\cf18 void} printIntro() \{\par
5793             {\cf19 if}(opt.no_intro == {\cf17 false}) \{\par
5794                 printVersion();\par
5795                 s << Color::Cyan << {\cf22 "[doctest] "} << Color::None\par
5796                   << {\cf22 "run with \\"--"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "help\\" for options\\n"};\par
5797             \}\par
5798         \}\par
5799 \par
5800         {\cf18 void} printHelp() \{\par
5801             {\cf18 int} sizePrefixDisplay = {\cf17 static_cast<}{\cf18 int}{\cf17 >}(strlen(DOCTEST_OPTIONS_PREFIX_DISPLAY));\par
5802             printVersion();\par
5803             {\cf20 // clang-format off}\par
5804             s << Color::Cyan << {\cf22 "[doctest]\\n"} << Color::None;\par
5805             s << Color::Cyan << {\cf22 "[doctest] "} << Color::None;\par
5806             s << {\cf22 "boolean values: \\"1/on/yes/true\\" or \\"0/off/no/false\\"\\n"};\par
5807             s << Color::Cyan << {\cf22 "[doctest] "} << Color::None;\par
5808             s << {\cf22 "filter  values: \\"str1,str2,str3\\" (comma separated strings)\\n"};\par
5809             s << Color::Cyan << {\cf22 "[doctest]\\n"} << Color::None;\par
5810             s << Color::Cyan << {\cf22 "[doctest] "} << Color::None;\par
5811             s << {\cf22 "filters use wildcards for matching strings\\n"};\par
5812             s << Color::Cyan << {\cf22 "[doctest] "} << Color::None;\par
5813             s << {\cf22 "something passes a filter if any of the strings in a filter matches\\n"};\par
5814 {\cf21 #ifndef DOCTEST_CONFIG_NO_UNPREFIXED_OPTIONS}\par
5815             s << Color::Cyan << {\cf22 "[doctest]\\n"} << Color::None;\par
5816             s << Color::Cyan << {\cf22 "[doctest] "} << Color::None;\par
5817             s << {\cf22 "ALL FLAGS, OPTIONS AND FILTERS ALSO AVAILABLE WITH A \\""} DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "\\" PREFIX!!!\\n"};\par
5818 {\cf21 #endif}\par
5819             s << Color::Cyan << {\cf22 "[doctest]\\n"} << Color::None;\par
5820             s << Color::Cyan << {\cf22 "[doctest] "} << Color::None;\par
5821             s << {\cf22 "Query flags - the program quits after them. Available:\\n\\n"};\par
5822             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "?,   --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "help, -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "h                      "}\par
5823               << Whitespace(sizePrefixDisplay*0) <<  {\cf22 "prints this message\\n"};\par
5824             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "v,   --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "version                       "}\par
5825               << Whitespace(sizePrefixDisplay*1) << {\cf22 "prints the version\\n"};\par
5826             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "c,   --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "count                         "}\par
5827               << Whitespace(sizePrefixDisplay*1) << {\cf22 "prints the number of matching tests\\n"};\par
5828             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "ltc, --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "list-test-cases               "}\par
5829               << Whitespace(sizePrefixDisplay*1) << {\cf22 "lists all matching tests by name\\n"};\par
5830             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "lts, --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "list-test-suites              "}\par
5831               << Whitespace(sizePrefixDisplay*1) << {\cf22 "lists all matching test suites\\n"};\par
5832             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "lr,  --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "list-reporters                "}\par
5833               << Whitespace(sizePrefixDisplay*1) << {\cf22 "lists all registered reporters\\n\\n"};\par
5834             {\cf20 // ================================================================================== << 79}\par
5835             s << Color::Cyan << {\cf22 "[doctest] "} << Color::None;\par
5836             s << {\cf22 "The available <int>/<string> options/filters are:\\n\\n"};\par
5837             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "tc,  --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "test-case=<filters>           "}\par
5838               << Whitespace(sizePrefixDisplay*1) << {\cf22 "filters     tests by their name\\n"};\par
5839             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "tce, --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "test-case-exclude=<filters>   "}\par
5840               << Whitespace(sizePrefixDisplay*1) << {\cf22 "filters OUT tests by their name\\n"};\par
5841             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "sf,  --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "source-file=<filters>         "}\par
5842               << Whitespace(sizePrefixDisplay*1) << {\cf22 "filters     tests by their file\\n"};\par
5843             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "sfe, --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "source-file-exclude=<filters> "}\par
5844               << Whitespace(sizePrefixDisplay*1) << {\cf22 "filters OUT tests by their file\\n"};\par
5845             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "ts,  --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "test-suite=<filters>          "}\par
5846               << Whitespace(sizePrefixDisplay*1) << {\cf22 "filters     tests by their test suite\\n"};\par
5847             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "tse, --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "test-suite-exclude=<filters>  "}\par
5848               << Whitespace(sizePrefixDisplay*1) << {\cf22 "filters OUT tests by their test suite\\n"};\par
5849             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "sc,  --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "subcase=<filters>             "}\par
5850               << Whitespace(sizePrefixDisplay*1) << {\cf22 "filters     subcases by their name\\n"};\par
5851             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "sce, --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "subcase-exclude=<filters>     "}\par
5852               << Whitespace(sizePrefixDisplay*1) << {\cf22 "filters OUT subcases by their name\\n"};\par
5853             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "r,   --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "reporters=<filters>           "}\par
5854               << Whitespace(sizePrefixDisplay*1) << {\cf22 "reporters to use (console is default)\\n"};\par
5855             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "o,   --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "out=<string>                  "}\par
5856               << Whitespace(sizePrefixDisplay*1) << {\cf22 "output filename\\n"};\par
5857             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "ob,  --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "order-by=<string>             "}\par
5858               << Whitespace(sizePrefixDisplay*1) << {\cf22 "how the tests should be ordered\\n"};\par
5859             s << Whitespace(sizePrefixDisplay*3) << {\cf22 "                                       <string> - [file/suite/name/rand/none]\\n"};\par
5860             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "rs,  --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "rand-seed=<int>               "}\par
5861               << Whitespace(sizePrefixDisplay*1) << {\cf22 "seed for random ordering\\n"};\par
5862             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "f,   --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "first=<int>                   "}\par
5863               << Whitespace(sizePrefixDisplay*1) << {\cf22 "the first test passing the filters to\\n"};\par
5864             s << Whitespace(sizePrefixDisplay*3) << {\cf22 "                                       execute - for range-based execution\\n"};\par
5865             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "l,   --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "last=<int>                    "}\par
5866               << Whitespace(sizePrefixDisplay*1) << {\cf22 "the last test passing the filters to\\n"};\par
5867             s << Whitespace(sizePrefixDisplay*3) << {\cf22 "                                       execute - for range-based execution\\n"};\par
5868             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "aa,  --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "abort-after=<int>             "}\par
5869               << Whitespace(sizePrefixDisplay*1) << {\cf22 "stop after <int> failed assertions\\n"};\par
5870             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "scfl,--"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "subcase-filter-levels=<int>   "}\par
5871               << Whitespace(sizePrefixDisplay*1) << {\cf22 "apply filters for the first <int> levels\\n"};\par
5872             s << Color::Cyan << {\cf22 "\\n[doctest] "} << Color::None;\par
5873             s << {\cf22 "Bool options - can be used like flags and true is assumed. Available:\\n\\n"};\par
5874             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "s,   --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "success=<bool>                "}\par
5875               << Whitespace(sizePrefixDisplay*1) << {\cf22 "include successful assertions in output\\n"};\par
5876             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "cs,  --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "case-sensitive=<bool>         "}\par
5877               << Whitespace(sizePrefixDisplay*1) << {\cf22 "filters being treated as case sensitive\\n"};\par
5878             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "e,   --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "exit=<bool>                   "}\par
5879               << Whitespace(sizePrefixDisplay*1) << {\cf22 "exits after the tests finish\\n"};\par
5880             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "d,   --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "duration=<bool>               "}\par
5881               << Whitespace(sizePrefixDisplay*1) << {\cf22 "prints the time duration of each test\\n"};\par
5882             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "m,   --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "minimal=<bool>                "}\par
5883               << Whitespace(sizePrefixDisplay*1) << {\cf22 "minimal console output (only failures)\\n"};\par
5884             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "q,   --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "quiet=<bool>                  "}\par
5885               << Whitespace(sizePrefixDisplay*1) << {\cf22 "no console output\\n"};\par
5886             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "nt,  --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "no-throw=<bool>               "}\par
5887               << Whitespace(sizePrefixDisplay*1) << {\cf22 "skips exceptions-related assert checks\\n"};\par
5888             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "ne,  --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "no-exitcode=<bool>            "}\par
5889               << Whitespace(sizePrefixDisplay*1) << {\cf22 "returns (or exits) always with success\\n"};\par
5890             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "nr,  --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "no-run=<bool>                 "}\par
5891               << Whitespace(sizePrefixDisplay*1) << {\cf22 "skips all runtime doctest operations\\n"};\par
5892             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "ni,  --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "no-intro=<bool>               "}\par
5893               << Whitespace(sizePrefixDisplay*1) << {\cf22 "omit the framework intro in the output\\n"};\par
5894             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "nv,  --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "no-version=<bool>             "}\par
5895               << Whitespace(sizePrefixDisplay*1) << {\cf22 "omit the framework version in the output\\n"};\par
5896             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "nc,  --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "no-colors=<bool>              "}\par
5897               << Whitespace(sizePrefixDisplay*1) << {\cf22 "disables colors in output\\n"};\par
5898             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "fc,  --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "force-colors=<bool>           "}\par
5899               << Whitespace(sizePrefixDisplay*1) << {\cf22 "use colors even when not in a tty\\n"};\par
5900             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "nb,  --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "no-breaks=<bool>              "}\par
5901               << Whitespace(sizePrefixDisplay*1) << {\cf22 "disables breakpoints in debuggers\\n"};\par
5902             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "ns,  --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "no-skip=<bool>                "}\par
5903               << Whitespace(sizePrefixDisplay*1) << {\cf22 "don't skip test cases marked as skip\\n"};\par
5904             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "gfl, --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "gnu-file-line=<bool>          "}\par
5905               << Whitespace(sizePrefixDisplay*1) << {\cf22 ":n: vs (n): for line numbers in output\\n"};\par
5906             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "npf, --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "no-path-filenames=<bool>      "}\par
5907               << Whitespace(sizePrefixDisplay*1) << {\cf22 "only filenames and no paths in output\\n"};\par
5908             s << {\cf22 " -"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "nln, --"} DOCTEST_OPTIONS_PREFIX_DISPLAY {\cf22 "no-line-numbers=<bool>        "}\par
5909               << Whitespace(sizePrefixDisplay*1) << {\cf22 "0 instead of real line numbers in output\\n"};\par
5910             {\cf20 // ================================================================================== << 79}\par
5911             {\cf20 // clang-format on}\par
5912 \par
5913             s << Color::Cyan << {\cf22 "\\n[doctest] "} << Color::None;\par
5914             s << {\cf22 "for more information visit the project documentation\\n\\n"};\par
5915         \}\par
5916 \par
5917         {\cf18 void} printRegisteredReporters() \{\par
5918             printVersion();\par
5919             {\cf17 auto} printReporters = [{\cf17 this}] ({\cf17 const} reporterMap& reporters, {\cf17 const} {\cf18 char}* type) \{\par
5920                 {\cf19 if}(reporters.size()) \{\par
5921                     s << Color::Cyan << {\cf22 "[doctest] "} << Color::None << {\cf22 "listing all registered "} << type << {\cf22 "\\n"};\par
5922                     {\cf19 for}({\cf17 auto}& curr : reporters)\par
5923                         s << {\cf22 "priority: "} << std::setw(5) << curr.first.first\par
5924                           << {\cf22 " name: "} << curr.first.second << {\cf22 "\\n"};\par
5925                 \}\par
5926             \};\par
5927             printReporters(getListeners(), {\cf22 "listeners"});\par
5928             printReporters(getReporters(), {\cf22 "reporters"});\par
5929         \}\par
5930 \par
5931         {\cf20 // =========================================================================================}\par
5932         {\cf20 // WHAT FOLLOWS ARE OVERRIDES OF THE VIRTUAL METHODS OF THE REPORTER INTERFACE}\par
5933         {\cf20 // =========================================================================================}\par
5934 \par
5935         {\cf18 void} report_query({\cf17 const} QueryData& in){\cf17  override }\{\par
5936             {\cf19 if}(opt.version) \{\par
5937                 printVersion();\par
5938             \} {\cf19 else} {\cf19 if}(opt.help) \{\par
5939                 printHelp();\par
5940             \} {\cf19 else} {\cf19 if}(opt.list_reporters) \{\par
5941                 printRegisteredReporters();\par
5942             \} {\cf19 else} {\cf19 if}(opt.count || opt.list_test_cases) \{\par
5943                 {\cf19 if}(opt.list_test_cases) \{\par
5944                     s << Color::Cyan << {\cf22 "[doctest] "} << Color::None\par
5945                       << {\cf22 "listing all test case names\\n"};\par
5946                     separator_to_stream();\par
5947                 \}\par
5948 \par
5949                 {\cf19 for}({\cf18 unsigned} i = 0; i < in.num_data; ++i)\par
5950                     s << Color::None << in.data[i]->m_name << {\cf22 "\\n"};\par
5951 \par
5952                 separator_to_stream();\par
5953 \par
5954                 s << Color::Cyan << {\cf22 "[doctest] "} << Color::None\par
5955                   << {\cf22 "unskipped test cases passing the current filters: "}\par
5956                   << g_cs->numTestCasesPassingFilters << {\cf22 "\\n"};\par
5957 \par
5958             \} {\cf19 else} {\cf19 if}(opt.list_test_suites) \{\par
5959                 s << Color::Cyan << {\cf22 "[doctest] "} << Color::None << {\cf22 "listing all test suites\\n"};\par
5960                 separator_to_stream();\par
5961 \par
5962                 {\cf19 for}({\cf18 unsigned} i = 0; i < in.num_data; ++i)\par
5963                     s << Color::None << in.data[i]->m_test_suite << {\cf22 "\\n"};\par
5964 \par
5965                 separator_to_stream();\par
5966 \par
5967                 s << Color::Cyan << {\cf22 "[doctest] "} << Color::None\par
5968                   << {\cf22 "unskipped test cases passing the current filters: "}\par
5969                   << g_cs->numTestCasesPassingFilters << {\cf22 "\\n"};\par
5970                 s << Color::Cyan << {\cf22 "[doctest] "} << Color::None\par
5971                   << {\cf22 "test suites with unskipped test cases passing the current filters: "}\par
5972                   << g_cs->numTestSuitesPassingFilters << {\cf22 "\\n"};\par
5973             \}\par
5974         \}\par
5975 \par
5976         {\cf18 void} test_run_start(){\cf17  override }\{\par
5977             {\cf19 if}(!opt.minimal)\par
5978                 printIntro();\par
5979         \}\par
5980 \par
5981         {\cf18 void} test_run_end({\cf17 const} TestRunStats& p){\cf17  override }\{\par
5982             {\cf19 if}(opt.minimal && p.numTestCasesFailed == 0)\par
5983                 {\cf19 return};\par
5984 \par
5985             separator_to_stream();\par
5986             s << std::dec;\par
5987 \par
5988             {\cf17 auto} totwidth = int(std::ceil(log10((std::max(p.numTestCasesPassingFilters, {\cf17 static_cast<}{\cf18 unsigned}{\cf17 >}(p.numAsserts))) + 1)));\par
5989             {\cf17 auto} passwidth = int(std::ceil(log10((std::max(p.numTestCasesPassingFilters - p.numTestCasesFailed, {\cf17 static_cast<}{\cf18 unsigned}{\cf17 >}(p.numAsserts - p.numAssertsFailed))) + 1)));\par
5990             {\cf17 auto} failwidth = int(std::ceil(log10((std::max(p.numTestCasesFailed, {\cf17 static_cast<}{\cf18 unsigned}{\cf17 >}(p.numAssertsFailed))) + 1)));\par
5991             {\cf17 const} {\cf18 bool} anythingFailed = p.numTestCasesFailed > 0 || p.numAssertsFailed > 0;\par
5992             s << Color::Cyan << {\cf22 "[doctest] "} << Color::None << {\cf22 "test cases: "} << std::setw(totwidth)\par
5993               << p.numTestCasesPassingFilters << {\cf22 " | "}\par
5994               << ((p.numTestCasesPassingFilters == 0 || anythingFailed) ? Color::None :\par
5995                                                                           Color::Green)\par
5996               << std::setw(passwidth) << p.numTestCasesPassingFilters - p.numTestCasesFailed << {\cf22 " passed"}\par
5997               << Color::None << {\cf22 " | "} << (p.numTestCasesFailed > 0 ? Color::Red : Color::None)\par
5998               << std::setw(failwidth) << p.numTestCasesFailed << {\cf22 " failed"} << Color::None << {\cf22 " |"};\par
5999             {\cf19 if}(opt.no_skipped_summary == {\cf17 false}) \{\par
6000                 {\cf17 const} {\cf18 int} numSkipped = p.numTestCases - p.numTestCasesPassingFilters;\par
6001                 s << {\cf22 " "} << (numSkipped == 0 ? Color::None : Color::Yellow) << numSkipped\par
6002                   << {\cf22 " skipped"} << Color::None;\par
6003             \}\par
6004             s << {\cf22 "\\n"};\par
6005             s << Color::Cyan << {\cf22 "[doctest] "} << Color::None << {\cf22 "assertions: "} << std::setw(totwidth)\par
6006               << p.numAsserts << {\cf22 " | "}\par
6007               << ((p.numAsserts == 0 || anythingFailed) ? Color::None : Color::Green)\par
6008               << std::setw(passwidth) << (p.numAsserts - p.numAssertsFailed) << {\cf22 " passed"} << Color::None\par
6009               << {\cf22 " | "} << (p.numAssertsFailed > 0 ? Color::Red : Color::None) << std::setw(failwidth)\par
6010               << p.numAssertsFailed << {\cf22 " failed"} << Color::None << {\cf22 " |\\n"};\par
6011             s << Color::Cyan << {\cf22 "[doctest] "} << Color::None\par
6012               << {\cf22 "Status: "} << (p.numTestCasesFailed > 0 ? Color::Red : Color::Green)\par
6013               << ((p.numTestCasesFailed > 0) ? {\cf22 "FAILURE!"} : {\cf22 "SUCCESS!"}) << Color::None << std::endl;\par
6014         \}\par
6015 \par
6016         {\cf18 void} test_case_start({\cf17 const} TestCaseData& in){\cf17  override }\{\par
6017             hasLoggedCurrentTestStart = {\cf17 false};\par
6018             tc                        = &in;\par
6019             subcasesStack.clear();\par
6020             currentSubcaseLevel = 0;\par
6021         \}\par
6022         \par
6023         {\cf18 void} test_case_reenter({\cf17 const} TestCaseData&){\cf17  override }\{\par
6024             subcasesStack.clear();\par
6025         \}\par
6026 \par
6027         {\cf18 void} test_case_end({\cf17 const} CurrentTestCaseStats& st){\cf17  override }\{\par
6028             {\cf19 if}(tc->m_no_output)\par
6029                 {\cf19 return};\par
6030 \par
6031             {\cf20 // log the preamble of the test case only if there is something}\par
6032             {\cf20 // else to print - something other than that an assert has failed}\par
6033             {\cf19 if}(opt.duration ||\par
6034                (st.failure_flags && st.failure_flags != TestCaseFailureReason::AssertFailure))\par
6035                 logTestStart();\par
6036 \par
6037             {\cf19 if}(opt.duration)\par
6038                 s << Color::None << std::setprecision(6) << std::fixed << st.seconds\par
6039                   << {\cf22 " s: "} << tc->m_name << {\cf22 "\\n"};\par
6040 \par
6041             {\cf19 if}(st.failure_flags & TestCaseFailureReason::Timeout)\par
6042                 s << Color::Red << {\cf22 "Test case exceeded time limit of "} << std::setprecision(6)\par
6043                   << std::fixed << tc->m_timeout << {\cf22 "!\\n"};\par
6044 \par
6045             {\cf19 if}(st.failure_flags & TestCaseFailureReason::ShouldHaveFailedButDidnt) \{\par
6046                 s << Color::Red << {\cf22 "Should have failed but didn't! Marking it as failed!\\n"};\par
6047             \} {\cf19 else} {\cf19 if}(st.failure_flags & TestCaseFailureReason::ShouldHaveFailedAndDid) \{\par
6048                 s << Color::Yellow << {\cf22 "Failed as expected so marking it as not failed\\n"};\par
6049             \} {\cf19 else} {\cf19 if}(st.failure_flags & TestCaseFailureReason::CouldHaveFailedAndDid) \{\par
6050                 s << Color::Yellow << {\cf22 "Allowed to fail so marking it as not failed\\n"};\par
6051             \} {\cf19 else} {\cf19 if}(st.failure_flags & TestCaseFailureReason::DidntFailExactlyNumTimes) \{\par
6052                 s << Color::Red << {\cf22 "Didn't fail exactly "} << tc->m_expected_failures\par
6053                   << {\cf22 " times so marking it as failed!\\n"};\par
6054             \} {\cf19 else} {\cf19 if}(st.failure_flags & TestCaseFailureReason::FailedExactlyNumTimes) \{\par
6055                 s << Color::Yellow << {\cf22 "Failed exactly "} << tc->m_expected_failures\par
6056                   << {\cf22 " times as expected so marking it as not failed!\\n"};\par
6057             \}\par
6058             {\cf19 if}(st.failure_flags & TestCaseFailureReason::TooManyFailedAsserts) \{\par
6059                 s << Color::Red << {\cf22 "Aborting - too many failed asserts!\\n"};\par
6060             \}\par
6061             s << Color::None; {\cf20 // lgtm [cpp/useless-expression]}\par
6062         \}\par
6063 \par
6064         {\cf18 void} test_case_exception({\cf17 const} TestCaseException& e){\cf17  override }\{\par
6065             std::lock_guard<std::mutex> lock(mutex);\par
6066             {\cf19 if}(tc->m_no_output)\par
6067                 {\cf19 return};\par
6068 \par
6069             logTestStart();\par
6070 \par
6071             file_line_to_stream(tc->m_file.c_str(), tc->m_line, {\cf22 " "});\par
6072             successOrFailColoredStringToStream({\cf17 false}, e.is_crash ? assertType::is_require :\par
6073                                                                    assertType::is_check);\par
6074             s << Color::Red << (e.is_crash ? {\cf22 "test case CRASHED: "} : {\cf22 "test case THREW exception: "})\par
6075               << Color::Cyan << e.error_string << {\cf22 "\\n"};\par
6076 \par
6077             {\cf18 int} num_stringified_contexts = get_num_stringified_contexts();\par
6078             {\cf19 if}(num_stringified_contexts) \{\par
6079                 {\cf17 auto} stringified_contexts = get_stringified_contexts();\par
6080                 s << Color::None << {\cf22 "  logged: "};\par
6081                 {\cf19 for}({\cf18 int} i = num_stringified_contexts; i > 0; --i) \{\par
6082                     s << (i == num_stringified_contexts ? {\cf22 ""} : {\cf22 "          "})\par
6083                       << stringified_contexts[i - 1] << {\cf22 "\\n"};\par
6084                 \}\par
6085             \}\par
6086             s << {\cf22 "\\n"} << Color::None;\par
6087         \}\par
6088 \par
6089         {\cf18 void} subcase_start({\cf17 const} SubcaseSignature& subc){\cf17  override }\{\par
6090             subcasesStack.push_back(subc);\par
6091             ++currentSubcaseLevel;\par
6092             hasLoggedCurrentTestStart = {\cf17 false};\par
6093         \}\par
6094 \par
6095         {\cf18 void} subcase_end(){\cf17  override }\{\par
6096             --currentSubcaseLevel;\par
6097             hasLoggedCurrentTestStart = {\cf17 false};\par
6098         \}\par
6099 \par
6100         {\cf18 void} log_assert({\cf17 const} AssertData& rb){\cf17  override }\{\par
6101             {\cf19 if}((!rb.m_failed && !opt.success) || tc->m_no_output)\par
6102                 {\cf19 return};\par
6103 \par
6104             std::lock_guard<std::mutex> lock(mutex);\par
6105 \par
6106             logTestStart();\par
6107 \par
6108             file_line_to_stream(rb.m_file, rb.m_line, {\cf22 " "});\par
6109             successOrFailColoredStringToStream(!rb.m_failed, rb.m_at);\par
6110 \par
6111             fulltext_log_assert_to_stream(s, rb);\par
6112 \par
6113             log_contexts();\par
6114         \}\par
6115 \par
6116         {\cf18 void} log_message({\cf17 const} MessageData& mb){\cf17  override }\{\par
6117             {\cf19 if}(tc->m_no_output)\par
6118                 {\cf19 return};\par
6119 \par
6120             std::lock_guard<std::mutex> lock(mutex);\par
6121 \par
6122             logTestStart();\par
6123 \par
6124             file_line_to_stream(mb.m_file, mb.m_line, {\cf22 " "});\par
6125             s << getSuccessOrFailColor({\cf17 false}, mb.m_severity)\par
6126               << getSuccessOrFailString(mb.m_severity & assertType::is_warn, mb.m_severity,\par
6127                                         {\cf22 "MESSAGE"}) << {\cf22 ": "};\par
6128             s << Color::None << mb.m_string << {\cf22 "\\n"};\par
6129             log_contexts();\par
6130         \}\par
6131 \par
6132         {\cf18 void} test_case_skipped({\cf17 const} TestCaseData&){\cf17  override }\{\}\par
6133     \};\par
6134 \par
6135     DOCTEST_REGISTER_REPORTER({\cf22 "console"}, 0, ConsoleReporter);\par
6136 \par
6137 {\cf21 #ifdef DOCTEST_PLATFORM_WINDOWS}\par
6138     {\cf17 struct }DebugOutputWindowReporter : {\cf17 public} ConsoleReporter\par
6139     \{\par
6140         DOCTEST_THREAD_LOCAL {\cf17 static} std::ostringstream oss;\par
6141 \par
6142         DebugOutputWindowReporter({\cf17 const} ContextOptions& co)\par
6143                 : ConsoleReporter(co, oss) \{\}\par
6144 \par
6145 {\cf21 #define DOCTEST_DEBUG_OUTPUT_REPORTER_OVERRIDE(func, type, arg)                                    \\}\par
6146 {\cf21     void func(type arg) override \{                                                                 \\}\par
6147 {\cf21         bool with_col = g_no_colors;                                                               \\}\par
6148 {\cf21         g_no_colors   = false;                                                                     \\}\par
6149 {\cf21         ConsoleReporter::func(arg);                                                                \\}\par
6150 {\cf21         if(oss.tellp() != std::streampos\{\}) \{                                                      \\}\par
6151 {\cf21             DOCTEST_OUTPUT_DEBUG_STRING(oss.str().c_str());                                        \\}\par
6152 {\cf21             oss.str(""});                                                                           \\\par
6153         \}                                                                                          \\\par
6154         g_no_colors = with_col;                                                                    \\\par
6155     \}\par
6156 \par
6157         DOCTEST_DEBUG_OUTPUT_REPORTER_OVERRIDE(test_run_start, DOCTEST_EMPTY, DOCTEST_EMPTY)\par
6158         DOCTEST_DEBUG_OUTPUT_REPORTER_OVERRIDE(test_run_end, {\cf17 const} TestRunStats&, in)\par
6159         DOCTEST_DEBUG_OUTPUT_REPORTER_OVERRIDE(test_case_start, {\cf17 const} TestCaseData&, in)\par
6160         DOCTEST_DEBUG_OUTPUT_REPORTER_OVERRIDE(test_case_reenter, {\cf17 const} TestCaseData&, in)\par
6161         DOCTEST_DEBUG_OUTPUT_REPORTER_OVERRIDE(test_case_end, {\cf17 const} CurrentTestCaseStats&, in)\par
6162         DOCTEST_DEBUG_OUTPUT_REPORTER_OVERRIDE(test_case_exception, {\cf17 const} TestCaseException&, in)\par
6163         DOCTEST_DEBUG_OUTPUT_REPORTER_OVERRIDE(subcase_start, {\cf17 const} SubcaseSignature&, in)\par
6164         DOCTEST_DEBUG_OUTPUT_REPORTER_OVERRIDE(subcase_end, DOCTEST_EMPTY, DOCTEST_EMPTY)\par
6165         DOCTEST_DEBUG_OUTPUT_REPORTER_OVERRIDE(log_assert, {\cf17 const} AssertData&, in)\par
6166         DOCTEST_DEBUG_OUTPUT_REPORTER_OVERRIDE(log_message, {\cf17 const} MessageData&, in)\par
6167         DOCTEST_DEBUG_OUTPUT_REPORTER_OVERRIDE(test_case_skipped, {\cf17 const} TestCaseData&, in)\par
6168     \};\par
6169 \par
6170     DOCTEST_THREAD_LOCAL std::ostringstream DebugOutputWindowReporter::oss;\par
6171 {\cf21 #endif }{\cf20 // DOCTEST_PLATFORM_WINDOWS}\par
6172 \par
6173     {\cf20 // the implementation of parseOption()}\par
6174     {\cf18 bool} parseOptionImpl({\cf18 int} argc, {\cf17 const} {\cf18 char}* {\cf17 const}* argv, {\cf17 const} {\cf18 char}* pattern, String* value) \{\par
6175         {\cf20 // going from the end to the beginning and stopping on the first occurrence from the end}\par
6176         {\cf19 for}({\cf18 int} i = argc; i > 0; --i) \{\par
6177             {\cf17 auto} index = i - 1;\par
6178             {\cf17 auto} temp = std::strstr(argv[index], pattern);\par
6179             {\cf19 if}(temp && (value || strlen(temp) == strlen(pattern))) \{ \par
6180                 {\cf20 // eliminate matches in which the chars before the option are not '-'}\par
6181                 {\cf18 bool} noBadCharsFound = {\cf17 true};\par
6182                 {\cf17 auto} curr            = argv[index];\par
6183                 {\cf19 while}(curr != temp) \{\par
6184                     {\cf19 if}(*curr++ != {\cf23 '-'}) \{\par
6185                         noBadCharsFound = {\cf17 false};\par
6186                         {\cf19 break};\par
6187                     \}\par
6188                 \}\par
6189                 {\cf19 if}(noBadCharsFound && argv[index][0] == {\cf23 '-'}) \{\par
6190                     {\cf19 if}(value) \{\par
6191                         {\cf20 // parsing the value of an option}\par
6192                         temp += strlen(pattern);\par
6193                         {\cf17 const} {\cf18 unsigned} len = strlen(temp);\par
6194                         {\cf19 if}(len) \{\par
6195                             *value = temp;\par
6196                             {\cf19 return} {\cf17 true};\par
6197                         \}\par
6198                     \} {\cf19 else} \{\par
6199                         {\cf20 // just a flag - no value}\par
6200                         {\cf19 return} {\cf17 true};\par
6201                     \}\par
6202                 \}\par
6203             \}\par
6204         \}\par
6205         {\cf19 return} {\cf17 false};\par
6206     \}\par
6207 \par
6208     {\cf20 // parses an option and returns the string after the '=' character}\par
6209     {\cf18 bool} parseOption({\cf18 int} argc, {\cf17 const} {\cf18 char}* {\cf17 const}* argv, {\cf17 const} {\cf18 char}* pattern, String* value = {\cf17 nullptr},\par
6210                      {\cf17 const} String& defaultVal = String()) \{\par
6211         {\cf19 if}(value)\par
6212             *value = defaultVal;\par
6213 {\cf21 #ifndef DOCTEST_CONFIG_NO_UNPREFIXED_OPTIONS}\par
6214         {\cf20 // offset (normally 3 for "dt-") to skip prefix}\par
6215         {\cf19 if}(parseOptionImpl(argc, argv, pattern + strlen(DOCTEST_CONFIG_OPTIONS_PREFIX), value))\par
6216             {\cf19 return} {\cf17 true};\par
6217 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_NO_UNPREFIXED_OPTIONS}\par
6218         {\cf19 return} parseOptionImpl(argc, argv, pattern, value);\par
6219     \}\par
6220 \par
6221     {\cf20 // locates a flag on the command line}\par
6222     {\cf18 bool} parseFlag({\cf18 int} argc, {\cf17 const} {\cf18 char}* {\cf17 const}* argv, {\cf17 const} {\cf18 char}* pattern) \{\par
6223         {\cf19 return} parseOption(argc, argv, pattern);\par
6224     \}\par
6225 \par
6226     {\cf20 // parses a comma separated list of words after a pattern in one of the arguments in argv}\par
6227     {\cf18 bool} parseCommaSepArgs({\cf18 int} argc, {\cf17 const} {\cf18 char}* {\cf17 const}* argv, {\cf17 const} {\cf18 char}* pattern,\par
6228                            std::vector<String>& res) \{\par
6229         String filtersString;\par
6230         {\cf19 if}(parseOption(argc, argv, pattern, &filtersString)) \{\par
6231             {\cf20 // tokenize with "," as a separator, unless escaped with backslash}\par
6232             std::ostringstream s;\par
6233             {\cf17 auto} flush = [&s, &res]() \{\par
6234                 {\cf17 auto} {\cf18 string} = s.str();\par
6235                 {\cf19 if}({\cf18 string}.size() > 0) \{\par
6236                     res.push_back({\cf18 string}.c_str());\par
6237                 \}\par
6238                 s.str({\cf22 ""});\par
6239             \};\par
6240 \par
6241             {\cf18 bool} seenBackslash = {\cf17 false};\par
6242             {\cf17 const} {\cf18 char}* current = filtersString.c_str();\par
6243             {\cf17 const} {\cf18 char}* end = current + strlen(current);\par
6244             {\cf19 while}(current != end) \{\par
6245                 {\cf18 char} character = *current++;\par
6246                 {\cf19 if}(seenBackslash) \{\par
6247                     seenBackslash = {\cf17 false};\par
6248                     {\cf19 if}(character == {\cf23 ','}) \{\par
6249                         s.put({\cf23 ','});\par
6250                         {\cf19 continue};\par
6251                     \}\par
6252                     s.put({\cf23 '\\\\'});\par
6253                 \}\par
6254                 {\cf19 if}(character == {\cf23 '\\\\'}) \{\par
6255                     seenBackslash = {\cf17 true};\par
6256                 \} {\cf19 else} {\cf19 if}(character == {\cf23 ','}) \{\par
6257                     flush();\par
6258                 \} {\cf19 else} \{\par
6259                     s.put(character);\par
6260                 \}\par
6261             \}\par
6262 \par
6263             {\cf19 if}(seenBackslash) \{\par
6264                 s.put({\cf23 '\\\\'});\par
6265             \}\par
6266             flush();\par
6267             {\cf19 return} {\cf17 true};\par
6268         \}\par
6269         {\cf19 return} {\cf17 false};\par
6270     \}\par
6271 \par
6272     {\cf17 enum} optionType\par
6273     \{\par
6274         option_bool,\par
6275         option_int\par
6276     \};\par
6277 \par
6278     {\cf20 // parses an int/bool option from the command line}\par
6279     {\cf18 bool} parseIntOption({\cf18 int} argc, {\cf17 const} {\cf18 char}* {\cf17 const}* argv, {\cf17 const} {\cf18 char}* pattern, optionType type,\par
6280                         {\cf18 int}& res) \{\par
6281         String parsedValue;\par
6282         {\cf19 if}(!parseOption(argc, argv, pattern, &parsedValue))\par
6283             {\cf19 return} {\cf17 false};\par
6284 \par
6285         {\cf19 if}(type == 0) \{\par
6286             {\cf20 // boolean}\par
6287             {\cf17 const} {\cf18 char} positive[][5] = \{{\cf22 "1"}, {\cf22 "true"}, {\cf22 "on"}, {\cf22 "yes"}\};  {\cf20 // 5 - strlen("true") + 1}\par
6288             {\cf17 const} {\cf18 char} negative[][6] = \{{\cf22 "0"}, {\cf22 "false"}, {\cf22 "off"}, {\cf22 "no"}\}; {\cf20 // 6 - strlen("false") + 1}\par
6289 \par
6290             {\cf20 // if the value matches any of the positive/negative possibilities}\par
6291             {\cf19 for}({\cf18 unsigned} i = 0; i < 4; i++) \{\par
6292                 {\cf19 if}(parsedValue.compare(positive[i], {\cf17 true}) == 0) \{\par
6293                     res = 1; \par
6294                     {\cf19 return} {\cf17 true};\par
6295                 \}\par
6296                 {\cf19 if}(parsedValue.compare(negative[i], {\cf17 true}) == 0) \{\par
6297                     res = 0; \par
6298                     {\cf19 return} {\cf17 true};\par
6299                 \}\par
6300             \}\par
6301         \} {\cf19 else} \{\par
6302             {\cf20 // integer}\par
6303             {\cf20 // TODO: change this to use std::stoi or something else! currently it uses undefined behavior - assumes '0' on failed parse...}\par
6304             {\cf18 int} theInt = std::atoi(parsedValue.c_str()); {\cf20 // NOLINT}\par
6305             {\cf19 if}(theInt != 0) \{\par
6306                 res = theInt; \par
6307                 {\cf19 return} {\cf17 true};\par
6308             \}\par
6309         \}\par
6310         {\cf19 return} {\cf17 false};\par
6311     \}\par
6312 \} {\cf20 // namespace}\par
6313 \par
6314 Context::Context({\cf18 int} argc, {\cf17 const} {\cf18 char}* {\cf17 const}* argv)\par
6315         : p(new detail::ContextState) \{\par
6316     parseArgs(argc, argv, {\cf17 true});\par
6317     {\cf19 if}(argc)\par
6318         p->binary_name = argv[0];\par
6319 \}\par
6320 \par
6321 Context::~Context() \{\par
6322     {\cf19 if}(g_cs == p)\par
6323         g_cs = {\cf17 nullptr};\par
6324     {\cf17 delete} p;\par
6325 \}\par
6326 \par
6327 {\cf18 void} Context::applyCommandLine({\cf18 int} argc, {\cf17 const} {\cf18 char}* {\cf17 const}* argv) \{\par
6328     parseArgs(argc, argv);\par
6329     {\cf19 if}(argc)\par
6330         p->binary_name = argv[0];\par
6331 \}\par
6332 \par
6333 {\cf20 // parses args}\par
6334 {\cf18 void} Context::parseArgs({\cf18 int} argc, {\cf17 const} {\cf18 char}* {\cf17 const}* argv, {\cf18 bool} withDefaults) \{\par
6335     {\cf17 using namespace }detail;\par
6336 \par
6337     {\cf20 // clang-format off}\par
6338     parseCommaSepArgs(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "source-file="},        p->filters[0]);\par
6339     parseCommaSepArgs(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "sf="},                 p->filters[0]);\par
6340     parseCommaSepArgs(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "source-file-exclude="},p->filters[1]);\par
6341     parseCommaSepArgs(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "sfe="},                p->filters[1]);\par
6342     parseCommaSepArgs(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "test-suite="},         p->filters[2]);\par
6343     parseCommaSepArgs(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "ts="},                 p->filters[2]);\par
6344     parseCommaSepArgs(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "test-suite-exclude="}, p->filters[3]);\par
6345     parseCommaSepArgs(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "tse="},                p->filters[3]);\par
6346     parseCommaSepArgs(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "test-case="},          p->filters[4]);\par
6347     parseCommaSepArgs(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "tc="},                 p->filters[4]);\par
6348     parseCommaSepArgs(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "test-case-exclude="},  p->filters[5]);\par
6349     parseCommaSepArgs(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "tce="},                p->filters[5]);\par
6350     parseCommaSepArgs(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "subcase="},            p->filters[6]);\par
6351     parseCommaSepArgs(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "sc="},                 p->filters[6]);\par
6352     parseCommaSepArgs(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "subcase-exclude="},    p->filters[7]);\par
6353     parseCommaSepArgs(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "sce="},                p->filters[7]);\par
6354     parseCommaSepArgs(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "reporters="},          p->filters[8]);\par
6355     parseCommaSepArgs(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "r="},                  p->filters[8]);\par
6356     {\cf20 // clang-format on}\par
6357 \par
6358     {\cf18 int}    intRes = 0;\par
6359     String strRes;\par
6360 \par
6361 {\cf21 #define DOCTEST_PARSE_AS_BOOL_OR_FLAG(name, sname, var, default)                                   \\}\par
6362 {\cf21     if(parseIntOption(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX name "="}, option_bool, intRes) ||  \\\par
6363        parseIntOption(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX sname "=", option_bool, intRes))   \\\par
6364         p->var = static_cast<bool>(intRes);                                                        \\\par
6365     else if(parseFlag(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX name) ||                           \\\par
6366             parseFlag(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX sname))                            \\\par
6367         p->var = true;                                                                             \\\par
6368     else if(withDefaults)                                                                          \\\par
6369     p->var = default\par
6370 \par
6371 {\cf21 #define DOCTEST_PARSE_INT_OPTION(name, sname, var, default)                                        \\}\par
6372 {\cf21     if(parseIntOption(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX name "="}, option_int, intRes) ||   \\\par
6373        parseIntOption(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX sname "=", option_int, intRes))    \\\par
6374         p->var = intRes;                                                                           \\\par
6375     else if(withDefaults)                                                                          \\\par
6376     p->var = default\par
6377 \par
6378 {\cf21 #define DOCTEST_PARSE_STR_OPTION(name, sname, var, default)                                        \\}\par
6379 {\cf21     if(parseOption(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX name "="}, &strRes, default) ||        \\\par
6380        parseOption(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX sname "=", &strRes, default) ||       \\\par
6381        withDefaults)                                                                               \\\par
6382     p->var = strRes\par
6383 \par
6384     {\cf20 // clang-format off}\par
6385     DOCTEST_PARSE_STR_OPTION({\cf22 "out"}, {\cf22 "o"}, out, {\cf22 ""});\par
6386     DOCTEST_PARSE_STR_OPTION({\cf22 "order-by"}, {\cf22 "ob"}, order_by, {\cf22 "file"});\par
6387     DOCTEST_PARSE_INT_OPTION({\cf22 "rand-seed"}, {\cf22 "rs"}, rand_seed, 0);\par
6388 \par
6389     DOCTEST_PARSE_INT_OPTION({\cf22 "first"}, {\cf22 "f"}, first, 0);\par
6390     DOCTEST_PARSE_INT_OPTION({\cf22 "last"}, {\cf22 "l"}, last, UINT_MAX);\par
6391 \par
6392     DOCTEST_PARSE_INT_OPTION({\cf22 "abort-after"}, {\cf22 "aa"}, abort_after, 0);\par
6393     DOCTEST_PARSE_INT_OPTION({\cf22 "subcase-filter-levels"}, {\cf22 "scfl"}, subcase_filter_levels, INT_MAX);\par
6394 \par
6395     DOCTEST_PARSE_AS_BOOL_OR_FLAG({\cf22 "success"}, {\cf22 "s"}, success, {\cf17 false});\par
6396     DOCTEST_PARSE_AS_BOOL_OR_FLAG({\cf22 "case-sensitive"}, {\cf22 "cs"}, case_sensitive, {\cf17 false});\par
6397     DOCTEST_PARSE_AS_BOOL_OR_FLAG({\cf22 "exit"}, {\cf22 "e"}, exit, {\cf17 false});\par
6398     DOCTEST_PARSE_AS_BOOL_OR_FLAG({\cf22 "duration"}, {\cf22 "d"}, duration, {\cf17 false});\par
6399     DOCTEST_PARSE_AS_BOOL_OR_FLAG({\cf22 "minimal"}, {\cf22 "m"}, minimal, {\cf17 false});\par
6400     DOCTEST_PARSE_AS_BOOL_OR_FLAG({\cf22 "quiet"}, {\cf22 "q"}, quiet, {\cf17 false});\par
6401     DOCTEST_PARSE_AS_BOOL_OR_FLAG({\cf22 "no-throw"}, {\cf22 "nt"}, no_throw, {\cf17 false});\par
6402     DOCTEST_PARSE_AS_BOOL_OR_FLAG({\cf22 "no-exitcode"}, {\cf22 "ne"}, no_exitcode, {\cf17 false});\par
6403     DOCTEST_PARSE_AS_BOOL_OR_FLAG({\cf22 "no-run"}, {\cf22 "nr"}, no_run, {\cf17 false});\par
6404     DOCTEST_PARSE_AS_BOOL_OR_FLAG({\cf22 "no-intro"}, {\cf22 "ni"}, no_intro, {\cf17 false});\par
6405     DOCTEST_PARSE_AS_BOOL_OR_FLAG({\cf22 "no-version"}, {\cf22 "nv"}, no_version, {\cf17 false});\par
6406     DOCTEST_PARSE_AS_BOOL_OR_FLAG({\cf22 "no-colors"}, {\cf22 "nc"}, no_colors, {\cf17 false});\par
6407     DOCTEST_PARSE_AS_BOOL_OR_FLAG({\cf22 "force-colors"}, {\cf22 "fc"}, force_colors, {\cf17 false});\par
6408     DOCTEST_PARSE_AS_BOOL_OR_FLAG({\cf22 "no-breaks"}, {\cf22 "nb"}, no_breaks, {\cf17 false});\par
6409     DOCTEST_PARSE_AS_BOOL_OR_FLAG({\cf22 "no-skip"}, {\cf22 "ns"}, no_skip, {\cf17 false});\par
6410     DOCTEST_PARSE_AS_BOOL_OR_FLAG({\cf22 "gnu-file-line"}, {\cf22 "gfl"}, gnu_file_line, !{\cf18 bool}(DOCTEST_MSVC));\par
6411     DOCTEST_PARSE_AS_BOOL_OR_FLAG({\cf22 "no-path-filenames"}, {\cf22 "npf"}, no_path_in_filenames, {\cf17 false});\par
6412     DOCTEST_PARSE_AS_BOOL_OR_FLAG({\cf22 "no-line-numbers"}, {\cf22 "nln"}, no_line_numbers, {\cf17 false});\par
6413     DOCTEST_PARSE_AS_BOOL_OR_FLAG({\cf22 "no-debug-output"}, {\cf22 "ndo"}, no_debug_output, {\cf17 false});\par
6414     DOCTEST_PARSE_AS_BOOL_OR_FLAG({\cf22 "no-skipped-summary"}, {\cf22 "nss"}, no_skipped_summary, {\cf17 false});\par
6415     DOCTEST_PARSE_AS_BOOL_OR_FLAG({\cf22 "no-time-in-output"}, {\cf22 "ntio"}, no_time_in_output, {\cf17 false});\par
6416     {\cf20 // clang-format on}\par
6417 \par
6418     {\cf19 if}(withDefaults) \{\par
6419         p->help             = {\cf17 false};\par
6420         p->version          = {\cf17 false};\par
6421         p->count            = {\cf17 false};\par
6422         p->list_test_cases  = {\cf17 false};\par
6423         p->list_test_suites = {\cf17 false};\par
6424         p->list_reporters   = {\cf17 false};\par
6425     \}\par
6426     {\cf19 if}(parseFlag(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "help"}) ||\par
6427        parseFlag(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "h"}) ||\par
6428        parseFlag(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "?"})) \{\par
6429         p->help = {\cf17 true};\par
6430         p->exit = {\cf17 true};\par
6431     \}\par
6432     {\cf19 if}(parseFlag(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "version"}) ||\par
6433        parseFlag(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "v"})) \{\par
6434         p->version = {\cf17 true};\par
6435         p->exit    = {\cf17 true};\par
6436     \}\par
6437     {\cf19 if}(parseFlag(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "count"}) ||\par
6438        parseFlag(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "c"})) \{\par
6439         p->count = {\cf17 true};\par
6440         p->exit  = {\cf17 true};\par
6441     \}\par
6442     {\cf19 if}(parseFlag(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "list-test-cases"}) ||\par
6443        parseFlag(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "ltc"})) \{\par
6444         p->list_test_cases = {\cf17 true};\par
6445         p->exit            = {\cf17 true};\par
6446     \}\par
6447     {\cf19 if}(parseFlag(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "list-test-suites"}) ||\par
6448        parseFlag(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "lts"})) \{\par
6449         p->list_test_suites = {\cf17 true};\par
6450         p->exit             = {\cf17 true};\par
6451     \}\par
6452     {\cf19 if}(parseFlag(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "list-reporters"}) ||\par
6453        parseFlag(argc, argv, DOCTEST_CONFIG_OPTIONS_PREFIX {\cf22 "lr"})) \{\par
6454         p->list_reporters = {\cf17 true};\par
6455         p->exit           = {\cf17 true};\par
6456     \}\par
6457 \}\par
6458 \par
6459 {\cf20 // allows the user to add procedurally to the filters from the command line}\par
6460 {\cf18 void} Context::addFilter({\cf17 const} {\cf18 char}* filter, {\cf17 const} {\cf18 char}* value) \{ setOption(filter, value); \}\par
6461 \par
6462 {\cf20 // allows the user to clear all filters from the command line}\par
6463 {\cf18 void} Context::clearFilters() \{\par
6464     {\cf19 for}({\cf17 auto}& curr : p->filters)\par
6465         curr.clear();\par
6466 \}\par
6467 \par
6468 {\cf20 // allows the user to override procedurally the bool options from the command line}\par
6469 {\cf18 void} Context::setOption({\cf17 const} {\cf18 char}* option, {\cf18 bool} value) \{\par
6470     setOption(option, value ? {\cf22 "true"} : {\cf22 "false"});\par
6471 \}\par
6472 \par
6473 {\cf20 // allows the user to override procedurally the int options from the command line}\par
6474 {\cf18 void} Context::setOption({\cf17 const} {\cf18 char}* option, {\cf18 int} value) \{\par
6475     setOption(option, toString(value).c_str());\par
6476     {\cf20 // NOLINTNEXTLINE(clang-analyzer-cplusplus.NewDeleteLeaks)}\par
6477 \}\par
6478 \par
6479 {\cf20 // allows the user to override procedurally the string options from the command line}\par
6480 {\cf18 void} Context::setOption({\cf17 const} {\cf18 char}* option, {\cf17 const} {\cf18 char}* value) \{\par
6481     {\cf17 auto} argv   = String({\cf22 "-"}) + option + {\cf22 "="} + value;\par
6482     {\cf17 auto} lvalue = argv.c_str();\par
6483     parseArgs(1, &lvalue);\par
6484 \}\par
6485 \par
6486 {\cf20 // users should query this in their main() and exit the program if true}\par
6487 {\cf18 bool} Context::shouldExit() \{ {\cf19 return} p->exit; \}\par
6488 \par
6489 {\cf18 void} Context::setAsDefaultForAssertsOutOfTestCases() \{ g_cs = p; \}\par
6490 \par
6491 {\cf18 void} Context::setAssertHandler(detail::assert_handler ah) \{ p->ah = ah; \}\par
6492 \par
6493 {\cf18 void} Context::setCout(std::ostream* out) \{ p->cout = out; \}\par
6494 \par
6495 {\cf17 static} {\cf17 class }DiscardOStream : {\cf17 public} std::ostream\par
6496 \{\par
6497 {\cf17 private}:\par
6498     class : {\cf17 public} std::streambuf\par
6499     \{\par
6500     {\cf17 private}:\par
6501         {\cf20 // allowing some buffering decreases the amount of calls to overflow}\par
6502         {\cf18 char} buf[1024];\par
6503 \par
6504     {\cf17 protected}:\par
6505         std::streamsize xsputn({\cf17 const} char_type*, std::streamsize count){\cf17  override }\{ {\cf19 return} count; \}\par
6506 \par
6507         int_type overflow(int_type ch){\cf17  override }\{\par
6508             setp(std::begin(buf), std::end(buf));\par
6509             {\cf19 return} traits_type::not_eof(ch);\par
6510         \}\par
6511     \} discardBuf;\par
6512 \par
6513 {\cf17 public}:\par
6514     DiscardOStream()\par
6515             : std::ostream(&discardBuf) \{\}\par
6516 \} discardOut;\par
6517 \par
6518 {\cf20 // the main function that does all the filtering and test running}\par
6519 {\cf18 int} Context::run() \{\par
6520     {\cf17 using namespace }detail;\par
6521 \par
6522     {\cf20 // save the old context state in case such was setup - for using asserts out of a testing context}\par
6523     {\cf17 auto} old_cs = g_cs;\par
6524     {\cf20 // this is the current contest}\par
6525     g_cs               = p;\par
6526     is_running_in_test = {\cf17 true};\par
6527 \par
6528     g_no_colors = p->no_colors;\par
6529     p->resetRunData();\par
6530 \par
6531     std::fstream fstr;\par
6532     {\cf19 if}(p->cout == {\cf17 nullptr}) \{\par
6533         {\cf19 if}(p->quiet) \{\par
6534             p->cout = &discardOut;\par
6535         \} {\cf19 else} {\cf19 if}(p->out.size()) \{\par
6536             {\cf20 // to a file if specified}\par
6537             fstr.open(p->out.c_str(), std::fstream::out);\par
6538             p->cout = &fstr;\par
6539         \} {\cf19 else} \{\par
6540             {\cf20 // stdout by default}\par
6541             p->cout = &std::cout;\par
6542         \}\par
6543     \}\par
6544 \par
6545     FatalConditionHandler::allocateAltStackMem();\par
6546 \par
6547     {\cf17 auto} cleanup_and_return = [&]() \{\par
6548         FatalConditionHandler::freeAltStackMem();\par
6549 \par
6550         {\cf19 if}(fstr.is_open())\par
6551             fstr.close();\par
6552 \par
6553         {\cf20 // restore context}\par
6554         g_cs               = old_cs;\par
6555         is_running_in_test = {\cf17 false};\par
6556 \par
6557         {\cf20 // we have to free the reporters which were allocated when the run started}\par
6558         {\cf19 for}({\cf17 auto}& curr : p->reporters_currently_used)\par
6559             delete curr;\par
6560         p->reporters_currently_used.clear();\par
6561 \par
6562         {\cf19 if}(p->numTestCasesFailed && !p->no_exitcode)\par
6563             {\cf19 return} EXIT_FAILURE;\par
6564         {\cf19 return} EXIT_SUCCESS;\par
6565     \};\par
6566 \par
6567     {\cf20 // setup default reporter if none is given through the command line}\par
6568     {\cf19 if}(p->filters[8].empty())\par
6569         p->filters[8].push_back({\cf22 "console"});\par
6570 \par
6571     {\cf20 // check to see if any of the registered reporters has been selected}\par
6572     {\cf19 for}({\cf17 auto}& curr : getReporters()) \{\par
6573         {\cf19 if}(matchesAny(curr.first.second.c_str(), p->filters[8], {\cf17 false}, p->case_sensitive))\par
6574             p->reporters_currently_used.push_back(curr.second(*g_cs));\par
6575     \}\par
6576 \par
6577     {\cf20 // TODO: check if there is nothing in reporters_currently_used}\par
6578 \par
6579     {\cf20 // prepend all listeners}\par
6580     {\cf19 for}({\cf17 auto}& curr : getListeners())\par
6581         p->reporters_currently_used.insert(p->reporters_currently_used.begin(), curr.second(*g_cs));\par
6582 \par
6583 {\cf21 #ifdef DOCTEST_PLATFORM_WINDOWS}\par
6584     {\cf19 if}(isDebuggerActive() && p->no_debug_output == {\cf17 false})\par
6585         p->reporters_currently_used.push_back({\cf17 new} DebugOutputWindowReporter(*g_cs));\par
6586 {\cf21 #endif }{\cf20 // DOCTEST_PLATFORM_WINDOWS}\par
6587 \par
6588     {\cf20 // handle version, help and no_run}\par
6589     {\cf19 if}(p->no_run || p->version || p->help || p->list_reporters) \{\par
6590         DOCTEST_ITERATE_THROUGH_REPORTERS(report_query, QueryData());\par
6591 \par
6592         {\cf19 return} cleanup_and_return();\par
6593     \}\par
6594 \par
6595     std::vector<const TestCase*> testArray;\par
6596     {\cf19 for}({\cf17 auto}& curr : getRegisteredTests())\par
6597         testArray.push_back(&curr);\par
6598     p->numTestCases = testArray.size();\par
6599 \par
6600     {\cf20 // sort the collected records}\par
6601     {\cf19 if}(!testArray.empty()) \{\par
6602         {\cf19 if}(p->order_by.compare({\cf22 "file"}, {\cf17 true}) == 0) \{\par
6603             std::sort(testArray.begin(), testArray.end(), fileOrderComparator);\par
6604         \} {\cf19 else} {\cf19 if}(p->order_by.compare({\cf22 "suite"}, {\cf17 true}) == 0) \{\par
6605             std::sort(testArray.begin(), testArray.end(), suiteOrderComparator);\par
6606         \} {\cf19 else} {\cf19 if}(p->order_by.compare({\cf22 "name"}, {\cf17 true}) == 0) \{\par
6607             std::sort(testArray.begin(), testArray.end(), nameOrderComparator);\par
6608         \} {\cf19 else} {\cf19 if}(p->order_by.compare({\cf22 "rand"}, {\cf17 true}) == 0) \{\par
6609             std::srand(p->rand_seed);\par
6610 \par
6611             {\cf20 // random_shuffle implementation}\par
6612             {\cf17 const} {\cf17 auto} first = &testArray[0];\par
6613             {\cf19 for}({\cf18 size_t} i = testArray.size() - 1; i > 0; --i) \{\par
6614                 {\cf18 int} idxToSwap = std::rand() % (i + 1); {\cf20 // NOLINT}\par
6615 \par
6616                 {\cf17 const} {\cf17 auto} temp = first[i];\par
6617 \par
6618                 first[i]         = first[idxToSwap];\par
6619                 first[idxToSwap] = temp;\par
6620             \}\par
6621         \} {\cf19 else} {\cf19 if}(p->order_by.compare({\cf22 "none"}, {\cf17 true}) == 0) \{\par
6622             {\cf20 // means no sorting - beneficial for death tests which call into the executable}\par
6623             {\cf20 // with a specific test case in mind - we don't want to slow down the startup times}\par
6624         \}\par
6625     \}\par
6626 \par
6627     std::set<String> testSuitesPassingFilt;\par
6628 \par
6629     {\cf18 bool}                             query_mode = p->count || p->list_test_cases || p->list_test_suites;\par
6630     std::vector<const TestCaseData*> queryResults;\par
6631 \par
6632     {\cf19 if}(!query_mode)\par
6633         DOCTEST_ITERATE_THROUGH_REPORTERS(test_run_start, DOCTEST_EMPTY);\par
6634 \par
6635     {\cf20 // invoke the registered functions if they match the filter criteria (or just count them)}\par
6636     {\cf19 for}({\cf17 auto}& curr : testArray) \{\par
6637         {\cf17 const} {\cf17 auto}& tc = *curr;\par
6638 \par
6639         {\cf18 bool} skip_me = {\cf17 false};\par
6640         {\cf19 if}(tc.m_skip && !p->no_skip)\par
6641             skip_me = {\cf17 true};\par
6642 \par
6643         {\cf19 if}(!matchesAny(tc.m_file.c_str(), p->filters[0], {\cf17 true}, p->case_sensitive))\par
6644             skip_me = {\cf17 true};\par
6645         {\cf19 if}(matchesAny(tc.m_file.c_str(), p->filters[1], {\cf17 false}, p->case_sensitive))\par
6646             skip_me = {\cf17 true};\par
6647         {\cf19 if}(!matchesAny(tc.m_test_suite, p->filters[2], {\cf17 true}, p->case_sensitive))\par
6648             skip_me = {\cf17 true};\par
6649         {\cf19 if}(matchesAny(tc.m_test_suite, p->filters[3], {\cf17 false}, p->case_sensitive))\par
6650             skip_me = {\cf17 true};\par
6651         {\cf19 if}(!matchesAny(tc.m_name, p->filters[4], {\cf17 true}, p->case_sensitive))\par
6652             skip_me = {\cf17 true};\par
6653         {\cf19 if}(matchesAny(tc.m_name, p->filters[5], {\cf17 false}, p->case_sensitive))\par
6654             skip_me = {\cf17 true};\par
6655 \par
6656         {\cf19 if}(!skip_me)\par
6657             p->numTestCasesPassingFilters++;\par
6658 \par
6659         {\cf20 // skip the test if it is not in the execution range}\par
6660         {\cf19 if}((p->last < p->numTestCasesPassingFilters && p->first <= p->last) ||\par
6661            (p->first > p->numTestCasesPassingFilters))\par
6662             skip_me = {\cf17 true};\par
6663 \par
6664         {\cf19 if}(skip_me) \{\par
6665             {\cf19 if}(!query_mode)\par
6666                 DOCTEST_ITERATE_THROUGH_REPORTERS(test_case_skipped, tc);\par
6667             {\cf19 continue};\par
6668         \}\par
6669 \par
6670         {\cf20 // do not execute the test if we are to only count the number of filter passing tests}\par
6671         {\cf19 if}(p->count)\par
6672             {\cf19 continue};\par
6673 \par
6674         {\cf20 // print the name of the test and don't execute it}\par
6675         {\cf19 if}(p->list_test_cases) \{\par
6676             queryResults.push_back(&tc);\par
6677             {\cf19 continue};\par
6678         \}\par
6679 \par
6680         {\cf20 // print the name of the test suite if not done already and don't execute it}\par
6681         {\cf19 if}(p->list_test_suites) \{\par
6682             {\cf19 if}((testSuitesPassingFilt.count(tc.m_test_suite) == 0) && tc.m_test_suite[0] != {\cf23 '\\0'}) \{\par
6683                 queryResults.push_back(&tc);\par
6684                 testSuitesPassingFilt.insert(tc.m_test_suite);\par
6685                 p->numTestSuitesPassingFilters++;\par
6686             \}\par
6687             {\cf19 continue};\par
6688         \}\par
6689 \par
6690         {\cf20 // execute the test if it passes all the filtering}\par
6691         \{\par
6692             p->currentTest = &tc;\par
6693 \par
6694             p->failure_flags = TestCaseFailureReason::None;\par
6695             p->seconds       = 0;\par
6696 \par
6697             {\cf20 // reset atomic counters}\par
6698             p->numAssertsFailedCurrentTest_atomic = 0;\par
6699             p->numAssertsCurrentTest_atomic       = 0;\par
6700 \par
6701             p->subcasesPassed.clear();\par
6702 \par
6703             DOCTEST_ITERATE_THROUGH_REPORTERS(test_case_start, tc);\par
6704 \par
6705             p->timer.start();\par
6706             \par
6707             {\cf18 bool} run_test = {\cf17 true};\par
6708 \par
6709             {\cf19 do} \{\par
6710                 {\cf20 // reset some of the fields for subcases (except for the set of fully passed ones)}\par
6711                 p->should_reenter          = {\cf17 false};\par
6712                 p->subcasesCurrentMaxLevel = 0;\par
6713                 p->subcasesStack.clear();\par
6714 \par
6715                 p->shouldLogCurrentException = {\cf17 true};\par
6716 \par
6717                 {\cf20 // reset stuff for logging with INFO()}\par
6718                 p->stringifiedContexts.clear();\par
6719 \par
6720 {\cf21 #ifndef DOCTEST_CONFIG_NO_EXCEPTIONS}\par
6721                 {\cf19 try} \{\par
6722 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_NO_EXCEPTIONS}\par
6723 {\cf20 // MSVC 2015 diagnoses fatalConditionHandler as unused (because reset() is a static method)}\par
6724 DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH(4101) {\cf20 // unreferenced local variable}\par
6725                     FatalConditionHandler fatalConditionHandler; {\cf20 // Handle signals}\par
6726                     {\cf20 // execute the test}\par
6727                     tc.m_test();\par
6728                     fatalConditionHandler.reset();\par
6729 DOCTEST_MSVC_SUPPRESS_WARNING_POP\par
6730 {\cf21 #ifndef DOCTEST_CONFIG_NO_EXCEPTIONS}\par
6731                 \} {\cf19 catch}({\cf17 const} TestFailureException&) \{\par
6732                     p->failure_flags |= TestCaseFailureReason::AssertFailure;\par
6733                 \} {\cf19 catch}(...) \{\par
6734                     DOCTEST_ITERATE_THROUGH_REPORTERS(test_case_exception,\par
6735                                                       \{translateActiveException(), {\cf17 false}\});\par
6736                     p->failure_flags |= TestCaseFailureReason::Exception;\par
6737                 \}\par
6738 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_NO_EXCEPTIONS}\par
6739 \par
6740                 {\cf20 // exit this loop if enough assertions have failed - even if there are more subcases}\par
6741                 {\cf19 if}(p->abort_after > 0 &&\par
6742                    p->numAssertsFailed + p->numAssertsFailedCurrentTest_atomic >= p->abort_after) \{\par
6743                     run_test = {\cf17 false};\par
6744                     p->failure_flags |= TestCaseFailureReason::TooManyFailedAsserts;\par
6745                 \}\par
6746                 \par
6747                 {\cf19 if}(p->should_reenter && run_test)\par
6748                     DOCTEST_ITERATE_THROUGH_REPORTERS(test_case_reenter, tc);\par
6749                 {\cf19 if}(!p->should_reenter)\par
6750                     run_test = {\cf17 false};\par
6751             \} {\cf19 while}(run_test);\par
6752 \par
6753             p->finalizeTestCaseData();\par
6754 \par
6755             DOCTEST_ITERATE_THROUGH_REPORTERS(test_case_end, *g_cs);\par
6756 \par
6757             p->currentTest = {\cf17 nullptr};\par
6758 \par
6759             {\cf20 // stop executing tests if enough assertions have failed}\par
6760             {\cf19 if}(p->abort_after > 0 && p->numAssertsFailed >= p->abort_after)\par
6761                 {\cf19 break};\par
6762         \}\par
6763     \}\par
6764 \par
6765     {\cf19 if}(!query_mode) \{\par
6766         DOCTEST_ITERATE_THROUGH_REPORTERS(test_run_end, *g_cs);\par
6767     \} {\cf19 else} \{\par
6768         QueryData qdata;\par
6769         qdata.run_stats = g_cs;\par
6770         qdata.data      = queryResults.data();\par
6771         qdata.num_data  = unsigned(queryResults.size());\par
6772         DOCTEST_ITERATE_THROUGH_REPORTERS(report_query, qdata);\par
6773     \}\par
6774 \par
6775     {\cf19 return} cleanup_and_return();\par
6776 \}\par
6777 \par
6778 IReporter::~IReporter() = {\cf19 default};\par
6779 \par
6780 {\cf18 int} IReporter::get_num_active_contexts() \{ {\cf19 return} detail::g_infoContexts.size(); \}\par
6781 {\cf17 const} IContextScope* {\cf17 const}* IReporter::get_active_contexts() \{\par
6782     {\cf19 return} get_num_active_contexts() ? &detail::g_infoContexts[0] : {\cf17 nullptr};\par
6783 \}\par
6784 \par
6785 {\cf18 int} IReporter::get_num_stringified_contexts() \{ {\cf19 return} detail::g_cs->stringifiedContexts.size(); \}\par
6786 {\cf17 const} String* IReporter::get_stringified_contexts() \{\par
6787     {\cf19 return} get_num_stringified_contexts() ? &detail::g_cs->stringifiedContexts[0] : {\cf17 nullptr};\par
6788 \}\par
6789 \par
6790 {\cf17 namespace }detail \{\par
6791     {\cf18 void} registerReporterImpl({\cf17 const} {\cf18 char}* name, {\cf18 int} priority, reporterCreatorFunc c, {\cf18 bool} isReporter) \{\par
6792         {\cf19 if}(isReporter)\par
6793             getReporters().insert(reporterMap::value_type(reporterMap::key_type(priority, name), c));\par
6794         {\cf19 else}\par
6795             getListeners().insert(reporterMap::value_type(reporterMap::key_type(priority, name), c));\par
6796     \}\par
6797 \} {\cf20 // namespace detail}\par
6798 \par
6799 \} {\cf20 // namespace doctest}\par
6800 \par
6801 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_DISABLE}\par
6802 \par
6803 {\cf21 #ifdef DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN}\par
6804 DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH(4007) {\cf20 // 'function' : must be 'attribute' - see issue #182}\par
6805 int main({\cf18 int} argc, {\cf18 char}** argv) \{ {\cf19 return} doctest::Context(argc, argv).run(); \}\par
6806 DOCTEST_MSVC_SUPPRESS_WARNING_POP\par
6807 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN}\par
6808 \par
6809 DOCTEST_CLANG_SUPPRESS_WARNING_POP\par
6810 DOCTEST_MSVC_SUPPRESS_WARNING_POP\par
6811 DOCTEST_GCC_SUPPRESS_WARNING_POP\par
6812 \par
6813 DOCTEST_SUPPRESS_COMMON_WARNINGS_POP\par
6814 \par
6815 {\cf21 #endif }{\cf20 // DOCTEST_LIBRARY_IMPLEMENTATION}\par
6816 {\cf21 #endif }{\cf20 // DOCTEST_CONFIG_IMPLEMENT}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/gui_textbox_extended.h\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/gui_textbox_extended.h}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/gui_textbox_extended.h}
{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b GuiTextBoxState}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es de Tipos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b GuiTextBoxState} {\b GuiTextBoxState}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiTextBoxSetActive} ({\b Rectangle} bounds)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b Rectangle} {\b GuiTextBoxGetActive} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiTextBoxSetCursor} (int cursor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} int {\b GuiTextBoxGetCursor} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiTextBoxSetSelection} (int start, int length)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b Vector2} {\b GuiTextBoxGetSelection} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b bool} {\b GuiTextBoxIsActive} ({\b Rectangle} bounds)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b GuiTextBoxState} {\b GuiTextBoxGetState} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiTextBoxSetState} ({\b GuiTextBoxState} state)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiTextBoxSelectAll} (const char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiTextBoxCopy} (const char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiTextBoxPaste} (char *text, int textSize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiTextBoxCut} (char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} int {\b GuiTextBoxDelete} (char *text, int length, {\b bool} before)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} int {\b GuiTextBoxGetByteIndex} (const char *text, int start, int from, int to)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b bool} {\b GuiTextBoxEx} ({\b Rectangle} bounds, char *text, int textSize, {\b bool} editMode)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es dos tipos\par
\pard\plain 
{\xe \v GuiTextBoxState\:gui_textbox_extended.h}
{\xe \v gui_textbox_extended.h\:GuiTextBoxState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b GuiTextBoxState} {\b GuiTextBoxState}}}
\par
{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v GuiTextBoxCopy\:gui_textbox_extended.h}
{\xe \v gui_textbox_extended.h\:GuiTextBoxCopy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiTextBoxCopy (const char *  {\i text})}}
\par
{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiTextBoxCut\:gui_textbox_extended.h}
{\xe \v gui_textbox_extended.h\:GuiTextBoxCut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiTextBoxCut (char *  {\i text})}}
\par
{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiTextBoxDelete\:gui_textbox_extended.h}
{\xe \v gui_textbox_extended.h\:GuiTextBoxDelete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} int GuiTextBoxDelete (char *  {\i text}, int  {\i length}, {\b bool}  {\i before})}}
\par
{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiTextBoxEx\:gui_textbox_extended.h}
{\xe \v gui_textbox_extended.h\:GuiTextBoxEx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b bool} GuiTextBoxEx ({\b Rectangle}  {\i bounds}, char *  {\i text}, int  {\i textSize}, {\b bool}  {\i editMode})}}
\par
{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiTextBoxGetActive\:gui_textbox_extended.h}
{\xe \v gui_textbox_extended.h\:GuiTextBoxGetActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b Rectangle} GuiTextBoxGetActive (void )}}
\par
{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiTextBoxGetByteIndex\:gui_textbox_extended.h}
{\xe \v gui_textbox_extended.h\:GuiTextBoxGetByteIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} int GuiTextBoxGetByteIndex (const char *  {\i text}, int  {\i start}, int  {\i from}, int  {\i to})}}
\par
{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiTextBoxGetCursor\:gui_textbox_extended.h}
{\xe \v gui_textbox_extended.h\:GuiTextBoxGetCursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} int GuiTextBoxGetCursor (void )}}
\par
{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiTextBoxGetSelection\:gui_textbox_extended.h}
{\xe \v gui_textbox_extended.h\:GuiTextBoxGetSelection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b Vector2} GuiTextBoxGetSelection (void )}}
\par
{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiTextBoxGetState\:gui_textbox_extended.h}
{\xe \v gui_textbox_extended.h\:GuiTextBoxGetState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b GuiTextBoxState} GuiTextBoxGetState (void )}}
\par
{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiTextBoxIsActive\:gui_textbox_extended.h}
{\xe \v gui_textbox_extended.h\:GuiTextBoxIsActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b bool} GuiTextBoxIsActive ({\b Rectangle}  {\i bounds})}}
\par
{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiTextBoxPaste\:gui_textbox_extended.h}
{\xe \v gui_textbox_extended.h\:GuiTextBoxPaste}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiTextBoxPaste (char *  {\i text}, int  {\i textSize})}}
\par
{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiTextBoxSelectAll\:gui_textbox_extended.h}
{\xe \v gui_textbox_extended.h\:GuiTextBoxSelectAll}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiTextBoxSelectAll (const char *  {\i text})}}
\par
{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiTextBoxSetActive\:gui_textbox_extended.h}
{\xe \v gui_textbox_extended.h\:GuiTextBoxSetActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiTextBoxSetActive ({\b Rectangle}  {\i bounds})}}
\par
{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiTextBoxSetCursor\:gui_textbox_extended.h}
{\xe \v gui_textbox_extended.h\:GuiTextBoxSetCursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiTextBoxSetCursor (int  {\i cursor})}}
\par
{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiTextBoxSetSelection\:gui_textbox_extended.h}
{\xe \v gui_textbox_extended.h\:GuiTextBoxSetSelection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiTextBoxSetSelection (int  {\i start}, int  {\i length})}}
\par
{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiTextBoxSetState\:gui_textbox_extended.h}
{\xe \v gui_textbox_extended.h\:GuiTextBoxSetState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiTextBoxSetState ({\b GuiTextBoxState}  {\i state})}}
\par
{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gui_textbox_extended.h\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/gui_textbox_extended.h}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/gui_textbox_extended.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*******************************************************************************************}\par
2 {\cf20 *}\par
3 {\cf20 *   Text box extended (cursor positioning and editing)}\par
4 {\cf20 *}\par
5 {\cf20 *   MODULE USAGE:}\par
6 {\cf20 *       #define GUI_TEXTBOX_EXTENDED_IMPLEMENTATION}\par
7 {\cf20 *       #include "gui_textbox_extended.h"}\par
8 {\cf20 *}\par
9 {\cf20 *   On game draw call:  GuiTextBoxEx(...);}\par
10 {\cf20 *}\par
11 {\cf20 *   LICENSE: zlib/libpng}\par
12 {\cf20 *}\par
13 {\cf20 *   Copyright (c) 2019 Vlad Adrian (@Demizdor) and Ramon Santamaria (@raysan5)}\par
14 {\cf20 *}\par
15 {\cf20 *   This software is provided "as-is", without any express or implied warranty. In no event}\par
16 {\cf20 *   will the authors be held liable for any damages arising from the use of this software.}\par
17 {\cf20 *}\par
18 {\cf20 *   Permission is granted to anyone to use this software for any purpose, including commercial}\par
19 {\cf20 *   applications, and to alter it and redistribute it freely, subject to the following restrictions:}\par
20 {\cf20 *}\par
21 {\cf20 *     1. The origin of this software must not be misrepresented; you must not claim that you}\par
22 {\cf20 *     wrote the original software. If you use this software in a product, an acknowledgment}\par
23 {\cf20 *     in the product documentation would be appreciated but is not required.}\par
24 {\cf20 *}\par
25 {\cf20 *     2. Altered source versions must be plainly marked as such, and must not be misrepresented}\par
26 {\cf20 *     as being the original software.}\par
27 {\cf20 *}\par
28 {\cf20 *     3. This notice may not be removed or altered from any source distribution.}\par
29 {\cf20 *}\par
30 {\cf20 **********************************************************************************************/}\par
31 \par
32 {\cf21 #ifndef GUI_TEXTBOX_EXTENDED_H}\par
33 {\cf21 #define GUI_TEXTBOX_EXTENDED_H}\par
34 {\cf20 //----------------------------------------------------------------------------------}\par
35 {\cf20 // Defines and Macros}\par
36 {\cf20 //----------------------------------------------------------------------------------}\par
37 {\cf20 //...}\par
38 \par
39 {\cf20 //----------------------------------------------------------------------------------}\par
40 {\cf20 // Types and Structures Definition}\par
41 {\cf20 //----------------------------------------------------------------------------------}\par
42 \par
43 {\cf20 // Text box state data}\par
44 {\cf17 typedef} {\cf17 struct }GuiTextBoxState \{\par
45     {\cf18 int} cursor;      {\cf20 // Cursor position in text}\par
46     {\cf18 int} start;       {\cf20 // Text start position (from where we begin drawing the text)}\par
47     {\cf18 int} index;       {\cf20 // Text start index (index inside the text of `start` always in sync)}\par
48     {\cf18 int} select;      {\cf20 // Marks position of cursor when selection has started}\par
49 \} GuiTextBoxState;\par
50 \par
51 {\cf21 #ifdef __cplusplus}\par
52 {\cf17 extern} {\cf22 "C"} \{            {\cf20 // Prevents name mangling of functions}\par
53 {\cf21 #endif}\par
54 \par
55 {\cf20 //----------------------------------------------------------------------------------}\par
56 {\cf20 // Module Functions Declaration}\par
57 {\cf20 //----------------------------------------------------------------------------------}\par
58 RAYGUIAPI {\cf18 void} GuiTextBoxSetActive(Rectangle bounds);                   {\cf20 // Sets the active textbox}\par
59 RAYGUIAPI Rectangle GuiTextBoxGetActive({\cf18 void});                          {\cf20 // Get bounds of active textbox}\par
60 \par
61 RAYGUIAPI {\cf18 void} GuiTextBoxSetCursor({\cf18 int} cursor);                         {\cf20 // Set cursor position of active textbox}\par
62 RAYGUIAPI {\cf18 int} GuiTextBoxGetCursor({\cf18 void});                                {\cf20 // Get cursor position of active textbox}\par
63 \par
64 RAYGUIAPI {\cf18 void} GuiTextBoxSetSelection({\cf18 int} start, {\cf18 int} length);           {\cf20 // Set selection of active textbox}\par
65 RAYGUIAPI Vector2 GuiTextBoxGetSelection({\cf18 void});                         {\cf20 // Get selection of active textbox (x - selection start  y - selection length)}\par
66 \par
67 RAYGUIAPI {\cf18 bool} GuiTextBoxIsActive(Rectangle bounds);                    {\cf20 // Returns true if a textbox control with specified `bounds` is the active textbox}\par
68 RAYGUIAPI GuiTextBoxState GuiTextBoxGetState({\cf18 void});                     {\cf20 // Get state for the active textbox}\par
69 RAYGUIAPI {\cf18 void} GuiTextBoxSetState(GuiTextBoxState state);               {\cf20 // Set state for the active textbox (state must be valid else things will break)}\par
70 \par
71 RAYGUIAPI {\cf18 void} GuiTextBoxSelectAll({\cf17 const} {\cf18 char} *text);                   {\cf20 // Select all characters in the active textbox (same as pressing `CTRL` + `A`)}\par
72 RAYGUIAPI {\cf18 void} GuiTextBoxCopy({\cf17 const} {\cf18 char} *text);                        {\cf20 // Copy selected text to clipboard from the active textbox (same as pressing `CTRL` + `C`)}\par
73 RAYGUIAPI {\cf18 void} GuiTextBoxPaste({\cf18 char} *text, {\cf18 int} textSize);               {\cf20 // Paste text from clipboard into the textbox (same as pressing `CTRL` + `V`)}\par
74 RAYGUIAPI {\cf18 void} GuiTextBoxCut({\cf18 char} *text);                               {\cf20 // Cut selected text in the active textbox and copy it to clipboard (same as pressing `CTRL` + `X`)}\par
75 RAYGUIAPI {\cf18 int} GuiTextBoxDelete({\cf18 char} *text, {\cf18 int} length, {\cf18 bool} before);    {\cf20 // Deletes a character or selection before from the active textbox (depending on `before`). Returns bytes deleted.}\par
76 RAYGUIAPI {\cf18 int} GuiTextBoxGetByteIndex({\cf17 const} {\cf18 char} *text, {\cf18 int} start, {\cf18 int} from, {\cf18 int} to); {\cf20 // Get the byte index for a character starting at position `from` with index `start` until position `to`.}\par
77 \par
78 RAYGUIAPI {\cf18 bool} GuiTextBoxEx(Rectangle bounds, {\cf18 char} *text, {\cf18 int} textSize, {\cf18 bool} editMode);\par
79 \par
80 RAYGUIAPI {\cf17 static} {\cf18 void} DrawTextRec(Font font, {\cf17 const} {\cf18 char} *text, Rectangle rec, {\cf18 float} fontSize, {\cf18 float} spacing, {\cf18 bool} wordWrap, Color tint);    {\cf20 // Draw text using font inside rectangle limits}\par
81 RAYGUIAPI {\cf17 static} {\cf18 void} DrawTextRecEx(Font font, {\cf17 const} {\cf18 char} *text, Rectangle rec, {\cf18 float} fontSize, {\cf18 float} spacing, {\cf18 bool} wordWrap, Color tint, {\cf18 int} selectStart, {\cf18 int} selectLength, Color selectTint, Color selectBackTint);    {\cf20 // Draw text using font inside rectangle limits with support for text selection}\par
82 RAYGUIAPI {\cf17 static} {\cf18 void} DrawTextBoxedSelectable(Font font, {\cf17 const} {\cf18 char} *text, Rectangle rec, {\cf18 float} fontSize, {\cf18 float} spacing, {\cf18 bool} wordWrap, Color tint, {\cf18 int} selectStart, {\cf18 int} selectLength, Color selectTint, Color selectBackTint);    {\cf20 // Alias for above}\par
83 \par
84 {\cf21 #ifdef __cplusplus}\par
85 \}\par
86 {\cf21 #endif}\par
87 \par
88 {\cf21 #endif }{\cf20 // GUI_TEXTBOX_EXTENDED_H}\par
89 \par
90 {\cf20 /***********************************************************************************}\par
91 {\cf20 *}\par
92 {\cf20 *   GUI TEXTBOX EXTENDED IMPLEMENTATION}\par
93 {\cf20 *}\par
94 {\cf20 ************************************************************************************/}\par
95 \par
96 {\cf21 #if defined(GUI_TEXTBOX_EXTENDED_IMPLEMENTATION)}\par
97 \par
98 {\cf21 #ifndef RAYGUI_H}\par
99 {\cf21 #include "raygui.h"}\par
100 {\cf21 #endif}\par
101 \par
102 {\cf20 // Draw text using font inside rectangle limits}\par
103 {\cf17 static} {\cf18 void} DrawTextRec(Font font, {\cf17 const} {\cf18 char} *text, Rectangle rec, {\cf18 float} fontSize, {\cf18 float} spacing, {\cf18 bool} wordWrap, Color tint)\par
104 \{\par
105     DrawTextRecEx(font, text, rec, fontSize, spacing, wordWrap, tint, 0, 0, WHITE, WHITE);\par
106 \}\par
107 \par
108 {\cf20 // Draw text using font inside rectangle limits with support for text selection}\par
109 {\cf17 static} {\cf18 void} DrawTextRecEx(Font font, {\cf17 const} {\cf18 char} *text, Rectangle rec, {\cf18 float} fontSize, {\cf18 float} spacing, {\cf18 bool} wordWrap, Color tint, {\cf18 int} selectStart, {\cf18 int} selectLength, Color selectTint, Color selectBackTint)\par
110 \{\par
111     {\cf18 int} length = TextLength(text);  {\cf20 // Total length in bytes of the text, scanned by codepoints in loop}\par
112 \par
113     {\cf18 float} textOffsetY = 0;          {\cf20 // Offset between lines (on line break '\\n')}\par
114     {\cf18 float} textOffsetX = 0.0f;       {\cf20 // Offset X to next character to draw}\par
115 \par
116     {\cf18 float} scaleFactor = fontSize/(float)font.baseSize;     {\cf20 // Character rectangle scaling factor}\par
117 \par
118     {\cf20 // Word/character wrapping mechanism variables}\par
119     {\cf17 enum} \{ MEASURE_STATE = 0, DRAW_STATE = 1 \};\par
120     {\cf18 int} state = wordWrap? MEASURE_STATE : DRAW_STATE;\par
121 \par
122     {\cf18 int} startLine = -1;         {\cf20 // Index where to begin drawing (where a line begins)}\par
123     {\cf18 int} endLine = -1;           {\cf20 // Index where to stop drawing (where a line ends)}\par
124     {\cf18 int} lastk = -1;             {\cf20 // Holds last value of the character position}\par
125 \par
126     {\cf19 for} ({\cf18 int} i = 0, k = 0; i < length; i++, k++)\par
127     \{\par
128         {\cf20 // Get next codepoint from byte string and glyph index in font}\par
129         {\cf18 int} codepointByteCount = 0;\par
130         {\cf18 int} codepoint = GetCodepoint(&text[i], &codepointByteCount);\par
131         {\cf18 int} index = GetGlyphIndex(font, codepoint);\par
132 \par
133         {\cf20 // NOTE: Normally we exit the decoding sequence as soon as a bad byte is found (and return 0x3f)}\par
134         {\cf20 // but we need to draw all of the bad bytes using the '?' symbol moving one byte}\par
135         {\cf19 if} (codepoint == 0x3f) codepointByteCount = 1;\par
136         i += (codepointByteCount - 1);\par
137 \par
138         {\cf18 float} glyphWidth = 0;\par
139         {\cf19 if} (codepoint != {\cf23 '\\n'})\par
140         \{\par
141             glyphWidth = (font.glyphs[index].advanceX == 0) ? font.recs[index].width*scaleFactor : font.glyphs[index].advanceX*scaleFactor;\par
142 \par
143             {\cf19 if} (i + 1 < length) glyphWidth = glyphWidth + spacing;\par
144         \}\par
145 \par
146         {\cf20 // NOTE: When wordWrap is ON we first measure how much of the text we can draw before going outside of the rec container}\par
147         {\cf20 // We store this info in startLine and endLine, then we change states, draw the text between those two variables}\par
148         {\cf20 // and change states again and again recursively until the end of the text (or until we get outside of the container).}\par
149         {\cf20 // When wordWrap is OFF we don't need the measure state so we go to the drawing state immediately}\par
150         {\cf20 // and begin drawing on the next line before we can get outside the container.}\par
151         {\cf19 if} (state == MEASURE_STATE)\par
152         \{\par
153             {\cf20 // TODO: There are multiple types of spaces in UNICODE, maybe it's a good idea to add support for more}\par
154             {\cf20 // Ref: http://jkorpela.fi/chars/spaces.html}\par
155             {\cf19 if} ((codepoint == {\cf23 ' '}) || (codepoint == {\cf23 '\\t'}) || (codepoint == {\cf23 '\\n'})) endLine = i;\par
156 \par
157             {\cf19 if} ((textOffsetX + glyphWidth) > rec.width)\par
158             \{\par
159                 endLine = (endLine < 1)? i : endLine;\par
160                 {\cf19 if} (i == endLine) endLine -= codepointByteCount;\par
161                 {\cf19 if} ((startLine + codepointByteCount) == endLine) endLine = (i - codepointByteCount);\par
162 \par
163                 state = !state;\par
164             \}\par
165             {\cf19 else} {\cf19 if} ((i + 1) == length)\par
166             \{\par
167                 endLine = i;\par
168                 state = !state;\par
169             \}\par
170             {\cf19 else} {\cf19 if} (codepoint == {\cf23 '\\n'}) state = !state;\par
171 \par
172             {\cf19 if} (state == DRAW_STATE)\par
173             \{\par
174                 textOffsetX = 0;\par
175                 i = startLine;\par
176                 glyphWidth = 0;\par
177 \par
178                 {\cf20 // Save character position when we switch states}\par
179                 {\cf18 int} tmp = lastk;\par
180                 lastk = k - 1;\par
181                 k = tmp;\par
182             \}\par
183         \}\par
184         {\cf19 else}\par
185         \{\par
186             {\cf19 if} (codepoint == {\cf23 '\\n'})\par
187             \{\par
188                 {\cf19 if} (!wordWrap)\par
189                 \{\par
190                     textOffsetY += (font.baseSize + font.baseSize/2)*scaleFactor;\par
191                     textOffsetX = 0;\par
192                 \}\par
193             \}\par
194             {\cf19 else}\par
195             \{\par
196                 {\cf19 if} (!wordWrap && ((textOffsetX + glyphWidth) > rec.width))\par
197                 \{\par
198                     textOffsetY += (font.baseSize + font.baseSize/2)*scaleFactor;\par
199                     textOffsetX = 0;\par
200                 \}\par
201 \par
202                 {\cf20 // When text overflows rectangle height limit, just stop drawing}\par
203                 {\cf19 if} ((textOffsetY + font.baseSize*scaleFactor) > rec.height) {\cf19 break};\par
204 \par
205                 {\cf20 // Draw selection background}\par
206                 {\cf18 bool} isGlyphSelected = {\cf17 false};\par
207                 {\cf19 if} ((selectStart >= 0) && (k >= selectStart) && (k < (selectStart + selectLength)))\par
208                 \{\par
209                     DrawRectangleRec((Rectangle)\{ rec.x + textOffsetX - 1, rec.y + textOffsetY, glyphWidth, (float)font.baseSize*scaleFactor \}, selectBackTint);\par
210                     isGlyphSelected = {\cf17 true};\par
211                 \}\par
212 \par
213                 {\cf20 // Draw current character glyph}\par
214                 {\cf19 if} ((codepoint != {\cf23 ' '}) && (codepoint != {\cf23 '\\t'}))\par
215                 \{\par
216                     DrawTextCodepoint(font, codepoint, (Vector2)\{ rec.x + textOffsetX, rec.y + textOffsetY \}, fontSize, isGlyphSelected? selectTint : tint);\par
217                 \}\par
218             \}\par
219 \par
220             {\cf19 if} (wordWrap && (i == endLine))\par
221             \{\par
222                 textOffsetY += (font.baseSize + font.baseSize/2)*scaleFactor;\par
223                 textOffsetX = 0;\par
224                 startLine = endLine;\par
225                 endLine = -1;\par
226                 glyphWidth = 0;\par
227                 selectStart += lastk - k;\par
228                 k = lastk;\par
229 \par
230                 state = !state;\par
231             \}\par
232         \}\par
233 \par
234         textOffsetX += glyphWidth;\par
235     \}\par
236 \} \par
237 \par
238 {\cf17 static} {\cf18 void} DrawTextBoxedSelectable(Font font, {\cf17 const} {\cf18 char} *text, Rectangle rec, {\cf18 float} fontSize, {\cf18 float} spacing, {\cf18 bool} wordWrap, Color tint, {\cf18 int} selectStart, {\cf18 int} selectLength, Color selectTint, Color selectBackTint) \{\par
239     DrawTextRecEx(font, text, rec, fontSize, spacing, wordWrap, tint, selectStart, selectLength, selectTint, selectBackTint);\par
240 \}\par
241 \par
242 {\cf20 //----------------------------------------------------------------------------------}\par
243 {\cf20 // Defines and Macros}\par
244 {\cf20 //----------------------------------------------------------------------------------}\par
245 {\cf20 //...}\par
246 \par
247 {\cf20 //----------------------------------------------------------------------------------}\par
248 {\cf20 // Types and Structures Definition}\par
249 {\cf20 //----------------------------------------------------------------------------------}\par
250 {\cf20 // Cursor measure mode}\par
251 {\cf17 typedef} {\cf17 enum} \{\par
252     GUI_MEASURE_MODE_CURSOR_END = 0xA,\par
253     GUI_MEASURE_MODE_CURSOR_POS,\par
254     GUI_MEASURE_MODE_CURSOR_COORDS\par
255 \} GuiMeasureMode;\par
256 \par
257 {\cf20 //----------------------------------------------------------------------------------}\par
258 {\cf20 // Global Variables Definition}\par
259 {\cf20 //----------------------------------------------------------------------------------}\par
260 {\cf17 static} Rectangle guiTextBoxActive = \{ 0 \};      {\cf20 // Area of the currently active textbox}\par
261 \par
262 {\cf17 static} GuiTextBoxState guiTextBoxState = \{      {\cf20 // Keeps state of the active textbox}\par
263     .cursor = -1,\par
264     .start = 0,\par
265     .index = 0,\par
266     .select = -1 \par
267 \};\par
268 \par
269 {\cf20 //----------------------------------------------------------------------------------}\par
270 {\cf20 // Module Internal Functions Declaration}\par
271 {\cf20 //----------------------------------------------------------------------------------}\par
272 {\cf17 static} {\cf18 int} GetPrevCodepoint({\cf17 const} {\cf18 char} *text, {\cf17 const} {\cf18 char} *start, {\cf18 int} *prev);\par
273 {\cf17 static} {\cf18 int} GuiMeasureTextBox({\cf17 const} {\cf18 char} *text, {\cf18 int} length, Rectangle rec, {\cf18 int} *pos, {\cf18 int} mode);\par
274 {\cf17 static} {\cf18 int} GuiMeasureTextBoxRev({\cf17 const} {\cf18 char} *text, {\cf18 int} length, Rectangle rec, {\cf18 int} *pos);                 {\cf20 // Highly synchronized with calculations in DrawTextBoxedSelectable()}\par
275 \par
276 {\cf17 static} {\cf17 inline} {\cf18 int} GuiTextBoxGetCursorCoordinates({\cf17 const} {\cf18 char} *text, {\cf18 int} length, Rectangle rec, {\cf18 int} pos); {\cf20 // Calculate cursor coordinates based on the cursor position `pos` inside the `text`.}\par
277 {\cf17 static} {\cf17 inline} {\cf18 int} GuiTextBoxGetCursorFromMouse({\cf17 const} {\cf18 char} *text, {\cf18 int} length, Rectangle rec, {\cf18 int} *pos);  {\cf20 // Calculate cursor position in textbox based on mouse coordinates.}\par
278 {\cf17 static} {\cf17 inline} {\cf18 int} GuiTextBoxMaxCharacters({\cf17 const} {\cf18 char} *text, {\cf18 int} length, Rectangle rec);                 {\cf20 // Calculates how many characters is the textbox able to draw inside rec}\par
279 {\cf17 static} {\cf17 inline} {\cf18 unsigned} {\cf18 int} GuiCountCodepointsUntilNewline({\cf17 const} {\cf18 char} *text);    {\cf20 // Returns total number of characters(codepoints) in a UTF8 encoded `text` until `\\0` or a `\\n` is found.}\par
280 \par
281 {\cf17 static} {\cf17 inline} {\cf18 void} MoveTextBoxCursorRight({\cf17 const} {\cf18 char} *text, {\cf18 int} length, Rectangle textRec);\par
282 {\cf17 static} {\cf17 inline} {\cf18 void} MoveTextBoxCursorLeft({\cf17 const} {\cf18 char} *text);\par
283 \par
284 {\cf17 static} {\cf18 int} EncodeCodepoint({\cf18 unsigned} {\cf18 int} c, {\cf18 char} out[5]);\par
285 \par
286 {\cf20 //----------------------------------------------------------------------------------}\par
287 {\cf20 // Module Functions Definition}\par
288 {\cf20 //----------------------------------------------------------------------------------}\par
289 \par
290 {\cf20 // Sets the active textbox (reseting state of the previous active textbox)}\par
291 RAYGUIAPI {\cf18 void} GuiTextBoxSetActive(Rectangle bounds)\par
292 \{\par
293     guiTextBoxActive = bounds;\par
294     guiTextBoxState = (GuiTextBoxState)\{ .cursor = -1, .start = 0, .index = 0, .select = -1 \};\par
295 \}\par
296 \par
297 {\cf20 // Gets bounds of active textbox}\par
298 RAYGUIAPI Rectangle GuiTextBoxGetActive({\cf18 void}) \{ {\cf19 return} guiTextBoxActive; \}\par
299 \par
300 {\cf20 // Set cursor position of active textbox}\par
301 RAYGUIAPI {\cf18 void} GuiTextBoxSetCursor({\cf18 int} cursor)\par
302 \{\par
303     guiTextBoxState.cursor = (cursor < 0) ? -1 : cursor;\par
304     guiTextBoxState.start = -1; {\cf20 // Mark this to be recalculated}\par
305 \}\par
306 \par
307 {\cf20 // Get cursor position of active textbox}\par
308 RAYGUIAPI {\cf18 int} GuiTextBoxGetCursor({\cf18 void}) \{ {\cf19 return} guiTextBoxState.cursor; \}\par
309 \par
310 {\cf20 // Set selection of active textbox}\par
311 RAYGUIAPI {\cf18 void} GuiTextBoxSetSelection({\cf18 int} start, {\cf18 int} length)\par
312 \{\par
313     {\cf19 if} (start < 0) start = 0;\par
314     {\cf19 if} (length < 0) length = 0;\par
315 \par
316     GuiTextBoxSetCursor(start + length);\par
317     guiTextBoxState.select = start;\par
318 \}\par
319 \par
320 {\cf20 // Get selection of active textbox}\par
321 RAYGUIAPI Vector2 GuiTextBoxGetSelection({\cf18 void})\par
322 \{\par
323     {\cf19 if} (guiTextBoxState.select == -1 || guiTextBoxState.select == guiTextBoxState.cursor) {\cf19 return} RAYGUI_CLITERAL(Vector2)\{ 0 \};\par
324     {\cf19 else} {\cf19 if} (guiTextBoxState.cursor > guiTextBoxState.select) {\cf19 return} RAYGUI_CLITERAL(Vector2)\{ (float)guiTextBoxState.select, ({\cf18 float})guiTextBoxState.cursor - guiTextBoxState.select \};\par
325 \par
326     {\cf19 return} RAYGUI_CLITERAL(Vector2)\{ (float)guiTextBoxState.cursor, ({\cf18 float})guiTextBoxState.select - guiTextBoxState.cursor \};\par
327 \}\par
328 \par
329 {\cf20 // Returns true if a textbox control with specified `bounds` is the active textbox}\par
330 RAYGUIAPI {\cf18 bool} GuiTextBoxIsActive(Rectangle bounds)\par
331 \{\par
332     {\cf19 return} (bounds.x == guiTextBoxActive.x && bounds.y == guiTextBoxActive.y &&\par
333             bounds.width == guiTextBoxActive.width && bounds.height == guiTextBoxActive.height);\par
334 \}\par
335 \par
336 RAYGUIAPI GuiTextBoxState GuiTextBoxGetState({\cf18 void}) \{ {\cf19 return} guiTextBoxState; \}\par
337 RAYGUIAPI {\cf18 void} GuiTextBoxSetState(GuiTextBoxState state)\par
338 \{\par
339     {\cf20 // NOTE: should we check if state values are valid ?!?}\par
340     guiTextBoxState = state;\par
341 \}\par
342 \par
343 RAYGUIAPI {\cf18 int} GuiTextBoxGetByteIndex({\cf17 const} {\cf18 char} *text, {\cf18 int} start, {\cf18 int} from, {\cf18 int} to)\par
344 \{\par
345     {\cf18 int} i = start, k = from;\par
346 \par
347     {\cf19 while} ((text[i] != {\cf23 '\\0'}) && (k < to))\par
348     \{\par
349         {\cf18 int} j = 0;\par
350         {\cf18 int} letter = GetCodepoint(&text[i], &j);\par
351 \par
352         {\cf19 if} (letter == 0x3f) j = 1;\par
353         i += j;\par
354         ++k;\par
355     \}\par
356 \par
357     {\cf19 return} i;\par
358 \}\par
359 \par
360 RAYGUIAPI {\cf18 int} GuiTextBoxDelete({\cf18 char} *text, {\cf18 int} length, {\cf18 bool} before)\par
361 \{\par
362     {\cf19 if} ((guiTextBoxState.cursor != -1) && (text != NULL))\par
363     \{\par
364         {\cf18 int} startIdx = 0, endIdx = 0;\par
365         {\cf19 if} ((guiTextBoxState.select != -1) && (guiTextBoxState.select != guiTextBoxState.cursor))\par
366         \{\par
367             {\cf20 // Delete selection}\par
368             {\cf18 int} start = guiTextBoxState.cursor;\par
369             {\cf18 int} end = guiTextBoxState.select;\par
370 \par
371             {\cf19 if} (guiTextBoxState.cursor > guiTextBoxState.select)\par
372             \{\par
373                 start = guiTextBoxState.select;\par
374                 end = guiTextBoxState.cursor;\par
375             \}\par
376 \par
377             {\cf20 // Convert to byte indexes}\par
378             startIdx = GuiTextBoxGetByteIndex(text, 0, 0, start);\par
379             endIdx = GuiTextBoxGetByteIndex(text, 0, 0, end);\par
380 \par
381             {\cf20 // Adjust text box state}\par
382             guiTextBoxState.cursor = start; {\cf20 // Always set cursor to start of selection}\par
383             {\cf19 if} (guiTextBoxState.select < guiTextBoxState.start) guiTextBoxState.start = -1; {\cf20 // Force to recalculate on the next frame}\par
384         \}\par
385         {\cf19 else}\par
386         \{\par
387             {\cf19 if} (before)\par
388             \{\par
389                 {\cf20 // Delete character before cursor}\par
390                 {\cf19 if} (guiTextBoxState.cursor != 0)\par
391                 \{\par
392                     endIdx = GuiTextBoxGetByteIndex(text, 0, 0, guiTextBoxState.cursor);\par
393                     guiTextBoxState.cursor--;\par
394                     startIdx = GuiTextBoxGetByteIndex(text, 0, 0, guiTextBoxState.cursor);\par
395 \par
396                     {\cf19 if} (guiTextBoxState.cursor < guiTextBoxState.start) guiTextBoxState.start = -1; {\cf20 // Force to recalculate on the next frame}\par
397                 \}\par
398             \}\par
399             {\cf19 else}\par
400             \{\par
401                 {\cf20 // Delete character after cursor}\par
402                 {\cf19 if} (guiTextBoxState.cursor + 1 <= GuiCountCodepointsUntilNewline(text))\par
403                 \{\par
404                     startIdx = GuiTextBoxGetByteIndex(text, 0, 0, guiTextBoxState.cursor);\par
405                     endIdx = GuiTextBoxGetByteIndex(text, 0, 0, guiTextBoxState.cursor+1);\par
406                 \}\par
407             \}\par
408         \}\par
409 \par
410         memmove(&text[startIdx], &text[endIdx], length - endIdx);\par
411         text[length - (endIdx - startIdx)] = {\cf23 '\\0'};\par
412         guiTextBoxState.select = -1; {\cf20 // Always deselect}\par
413 \par
414         {\cf19 return} (endIdx - startIdx);\par
415     \}\par
416 \par
417     {\cf19 return} 0;\par
418 \}\par
419 \par
420 RAYGUIAPI {\cf18 void} GuiTextBoxSelectAll({\cf17 const} {\cf18 char} *text)\par
421 \{\par
422     guiTextBoxState.cursor = GuiCountCodepointsUntilNewline(text);\par
423 \par
424     {\cf19 if} (guiTextBoxState.cursor > 0)\par
425     \{\par
426         guiTextBoxState.select = 0;\par
427         guiTextBoxState.start = -1; {\cf20 // Force recalculate on the next frame}\par
428     \}\par
429     {\cf19 else} guiTextBoxState.select = -1;\par
430 \}\par
431 \par
432 RAYGUIAPI {\cf18 void} GuiTextBoxCopy({\cf17 const} {\cf18 char} *text)\par
433 \{\par
434     {\cf19 if} ((text != NULL) &&\par
435         (guiTextBoxState.select != -1) &&\par
436         (guiTextBoxState.cursor != -1) &&\par
437         (guiTextBoxState.select != guiTextBoxState.cursor))\par
438     \{\par
439         {\cf18 int} start = guiTextBoxState.cursor;\par
440         {\cf18 int} end = guiTextBoxState.select;\par
441 \par
442         {\cf19 if} (guiTextBoxState.cursor > guiTextBoxState.select)\par
443         \{\par
444             start = guiTextBoxState.select;\par
445             end = guiTextBoxState.cursor;\par
446         \}\par
447 \par
448         {\cf20 // Convert to byte indexes}\par
449         start = GuiTextBoxGetByteIndex(text, 0, 0, start);\par
450         end = GuiTextBoxGetByteIndex(text, 0, 0, end);\par
451 \par
452         {\cf20 // FIXME: `TextSubtext()` only lets use copy TEXTSPLIT_MAX_TEXT_LENGTH (1024) bytes}\par
453         {\cf20 // maybe modify `SetClipboardText()` so we can use it only on part of a string}\par
454         {\cf17 const} {\cf18 char} *clipText = TextSubtext(text, start, end - start);\par
455 \par
456         SetClipboardText(clipText);\par
457     \}\par
458 \}\par
459 \par
460 {\cf20 // Paste text from clipboard into the active textbox.}\par
461 {\cf20 // `text` is the pointer to the buffer used by the textbox while `textSize` is the text buffer max size}\par
462 RAYGUIAPI {\cf18 void} GuiTextBoxPaste({\cf18 char} *text, {\cf18 int} textSize)\par
463 \{\par
464     {\cf17 const} {\cf18 char} *clipText = GetClipboardText(); {\cf20 // GLFW guaratees this should be UTF8 encoded!}\par
465     {\cf18 int} length = strlen(text);\par
466 \par
467     {\cf19 if} ((text != NULL) && (clipText != NULL) && (guiTextBoxState.cursor != -1))\par
468     \{\par
469         {\cf19 if} ((guiTextBoxState.select != -1) && (guiTextBoxState.select != guiTextBoxState.cursor))\par
470         \{\par
471             {\cf20 // If there's a selection we'll have to delete it first}\par
472             length -= GuiTextBoxDelete(text, length, {\cf17 true});\par
473         \}\par
474 \par
475         {\cf18 int} clipLen = strlen(clipText); {\cf20 // We want the length in bytes}\par
476 \par
477         {\cf20 // Calculate how many bytes can we copy from clipboard text before we run out of space}\par
478         {\cf18 int} size = ((length + clipLen) <= textSize) ? clipLen : textSize - length;\par
479 \par
480         {\cf20 // Make room by shifting to right the bytes after cursor}\par
481         {\cf18 int} startIdx = GuiTextBoxGetByteIndex(text, 0, 0, guiTextBoxState.cursor);\par
482         {\cf18 int} endIdx = startIdx + size;\par
483         memmove(&text[endIdx], &text[startIdx], length - startIdx);\par
484         text[length + size] = {\cf23 '\\0'}; {\cf20 // Set the NULL char}\par
485 \par
486         {\cf20 // At long last copy the clipboard text}\par
487         memcpy(&text[startIdx], clipText, size);\par
488 \par
489         {\cf20 // Set cursor position at the end of the pasted text}\par
490         guiTextBoxState.cursor = 0;\par
491 \par
492         {\cf19 for} ({\cf18 int} i = 0; i < (startIdx + size); guiTextBoxState.cursor++)\par
493         \{\par
494             {\cf18 int} next = 0;\par
495             {\cf18 int} letter = GetCodepoint(&text[i], &next);\par
496             {\cf19 if} (letter != 0x3f) i += next;\par
497             {\cf19 else} i += 1;\par
498         \}\par
499 \par
500         guiTextBoxState.start = -1; {\cf20 // Force to recalculate on the next frame}\par
501     \}\par
502 \}\par
503 \par
504 RAYGUIAPI {\cf18 void} GuiTextBoxCut({\cf18 char}* text)\par
505 \{\par
506     {\cf19 if} ((text != NULL) &&\par
507         (guiTextBoxState.select != -1) &&\par
508         (guiTextBoxState.cursor != -1) &&\par
509         (guiTextBoxState.select != guiTextBoxState.cursor))\par
510     \{\par
511         {\cf20 // First copy selection to clipboard;}\par
512         {\cf18 int} start = guiTextBoxState.cursor, end = guiTextBoxState.select;\par
513 \par
514         {\cf19 if} (guiTextBoxState.cursor > guiTextBoxState.select)\par
515         \{\par
516             start = guiTextBoxState.select;\par
517             end = guiTextBoxState.cursor;\par
518         \}\par
519 \par
520         {\cf20 // Convert to byte indexes}\par
521         {\cf18 int} startIdx = GuiTextBoxGetByteIndex(text, 0, 0, start);\par
522         {\cf18 int} endIdx = GuiTextBoxGetByteIndex(text, 0, 0, end);\par
523 \par
524         {\cf20 // FIXME: `TextSubtext()` only lets use copy TEXTSPLIT_MAX_TEXT_LENGTH (1024) bytes}\par
525         {\cf20 // maybe modify `SetClipboardText()` so we can use it only on parts of a string}\par
526         {\cf17 const} {\cf18 char} *clipText = TextSubtext(text, startIdx, endIdx - startIdx);\par
527         SetClipboardText(clipText);\par
528 \par
529         {\cf20 // Now delete selection (copy data over it)}\par
530         {\cf18 int} len = strlen(text);\par
531         memmove(&text[startIdx], &text[endIdx], len - endIdx);\par
532         text[len - (endIdx - startIdx)] = {\cf23 '\\0'};\par
533 \par
534         {\cf20 // Adjust text box state}\par
535         guiTextBoxState.cursor = start; {\cf20 // Always set cursor to start of selection}\par
536         {\cf19 if} (guiTextBoxState.select < guiTextBoxState.start) guiTextBoxState.start = -1; {\cf20 // Force to recalculate}\par
537         guiTextBoxState.select = -1;    {\cf20 // Deselect}\par
538     \}\par
539 \}\par
540 \par
541 {\cf20 // A text box control supporting text selection, cursor positioning and commonly used keyboard shortcuts.}\par
542 {\cf20 // NOTE 1: Requires static variables: framesCounter}\par
543 {\cf20 // NOTE 2: Returns if KEY_ENTER pressed (useful for data validation)}\par
544 RAYGUIAPI {\cf18 bool} GuiTextBoxEx(Rectangle bounds, {\cf18 char} *text, {\cf18 int} textSize, {\cf18 bool} editMode)\par
545 \{\par
546     {\cf20 // Define the cursor movement/selection speed when movement keys are held/pressed}\par
547 {\cf21     #define TEXTBOX_CURSOR_COOLDOWN   5}\par
548 \par
549     {\cf17 static} {\cf18 int} framesCounter = 0;           {\cf20 // Required for blinking cursor}\par
550 \par
551     GuiState state = guiState;\par
552     {\cf18 bool} pressed = {\cf17 false};\par
553 \par
554     {\cf20 // Make sure length doesn't exceed `textSize`. `textSize` is actually the max amount of characters the textbox can handle.}\par
555     {\cf18 int} length = strlen(text);\par
556     {\cf19 if} (length > textSize)\par
557     \{\par
558         text[textSize] = {\cf23 '\\0'};\par
559         length = textSize;\par
560     \}\par
561 \par
562     {\cf20 // Make sure we have enough room to draw at least 1 character}\par
563     {\cf19 if} ((bounds.width - 2*GuiGetStyle(TEXTBOX, TEXT_INNER_PADDING)) < GuiGetStyle(DEFAULT, TEXT_SIZE))\par
564     \{\par
565         bounds.width = GuiGetStyle(DEFAULT, TEXT_SIZE) + 2*GuiGetStyle(TEXTBOX, TEXT_INNER_PADDING);\par
566     \}\par
567 \par
568     {\cf20 // Center the text vertically}\par
569     {\cf18 int} verticalPadding = (bounds.height - 2*GuiGetStyle(TEXTBOX, BORDER_WIDTH) - GuiGetStyle(DEFAULT, TEXT_SIZE))/2;\par
570 \par
571     {\cf19 if} (verticalPadding < 0)\par
572     \{\par
573         {\cf20 // Make sure the height is sufficient}\par
574         bounds.height = 2*GuiGetStyle(TEXTBOX, BORDER_WIDTH) + GuiGetStyle(DEFAULT, TEXT_SIZE);\par
575         verticalPadding = 0;\par
576     \}\par
577 \par
578     {\cf20 // Calculate the drawing area for the text inside the control `bounds`}\par
579     Rectangle textRec = \{ bounds.x + GuiGetStyle(TEXTBOX, BORDER_WIDTH) + GuiGetStyle(TEXTBOX, TEXT_INNER_PADDING),\par
580                           bounds.y + verticalPadding + GuiGetStyle(TEXTBOX, BORDER_WIDTH),\par
581                           bounds.width - 2*(GuiGetStyle(TEXTBOX, TEXT_INNER_PADDING) + GuiGetStyle(TEXTBOX, BORDER_WIDTH)),\par
582                           ({\cf18 float})GuiGetStyle(DEFAULT, TEXT_SIZE) \};\par
583 \par
584     Vector2 cursorPos = \{ textRec.x, textRec.y \};   {\cf20 // This holds the coordinates inside textRec of the cursor at current position and will be recalculated later}\par
585     {\cf18 bool} active = GuiTextBoxIsActive(bounds);       {\cf20 // Check if this textbox is the global active textbox}\par
586 \par
587     {\cf18 int} selStart = 0, selLength = 0, textStartIndex = 0;\par
588 \par
589     {\cf20 // Update control}\par
590     {\cf20 //--------------------------------------------------------------------}\par
591     {\cf19 if} ((state != STATE_DISABLED) && !guiLocked)\par
592     \{\par
593         Vector2 mousePoint = GetMousePosition();\par
594 \par
595         {\cf19 if} (editMode)\par
596         \{\par
597             {\cf20 // Check if we are the global active textbox}\par
598             {\cf20 // A textbox becomes active when the user clicks it :)}\par
599             {\cf19 if} (!active)\par
600             \{\par
601                 {\cf19 if} (CheckCollisionPointRec(mousePoint, bounds) && (IsMouseButtonPressed(MOUSE_LEFT_BUTTON) || IsMouseButtonPressed(MOUSE_RIGHT_BUTTON)))\par
602                 \{\par
603                     {\cf20 // Hurray!!! we just became the active textbox}\par
604                     active = {\cf17 true};\par
605                     GuiTextBoxSetActive(bounds);\par
606                 \}\par
607             \}\par
608             {\cf19 else} {\cf19 if} (!CheckCollisionPointRec(mousePoint, bounds) && IsMouseButtonPressed(MOUSE_RIGHT_BUTTON))\par
609             \{\par
610                 {\cf20 // When active and the right mouse is clicked outside the textbox we should deactivate it}\par
611                 {\cf20 // NOTE: We set a dummy rect as the active textbox bounds}\par
612                 GuiTextBoxSetActive(RAYGUI_CLITERAL(Rectangle)\{ 0, 0, -1, -1 \});\par
613                 active = {\cf17 false};\par
614             \}\par
615 \par
616             {\cf19 if} (active)\par
617             \{\par
618                 state = STATE_PRESSED;\par
619                 framesCounter++;\par
620 \par
621                 {\cf20 // Make sure state doesn't have invalid values}\par
622                 {\cf19 if} (guiTextBoxState.cursor > length) guiTextBoxState.cursor = -1;\par
623                 {\cf19 if} (guiTextBoxState.select > length) guiTextBoxState.select = -1;\par
624                 {\cf19 if} (guiTextBoxState.start > length) guiTextBoxState.start = -1;\par
625 \par
626 \par
627                 {\cf20 // Check textbox state for changes and recalculate if necesary}\par
628                 {\cf19 if} (guiTextBoxState.cursor == -1)\par
629                 \{\par
630                     {\cf20 // Set cursor to last visible character in textbox}\par
631                     guiTextBoxState.cursor = GuiTextBoxMaxCharacters(text, length, textRec);\par
632                 \}\par
633 \par
634                 {\cf19 if} (guiTextBoxState.start == -1)\par
635                 \{\par
636                     {\cf20 // Force recalculate text start position and text start index}\par
637 \par
638                     {\cf20 // NOTE: start and index are always in sync}\par
639                     {\cf20 // start will hold the starting character position from where the text will be drawn}\par
640                     {\cf20 // while index will hold the byte index inside the text for that character}\par
641 \par
642                     {\cf19 if} (guiTextBoxState.cursor == 0)\par
643                     \{\par
644                         guiTextBoxState.start = guiTextBoxState.index = 0; {\cf20 // No need to recalculate}\par
645                     \}\par
646                     {\cf19 else}\par
647                     \{\par
648                         {\cf18 int} pos = 0;\par
649                         {\cf18 int} len =  GuiTextBoxGetByteIndex(text, 0, 0, guiTextBoxState.cursor);\par
650                         guiTextBoxState.index = GuiMeasureTextBoxRev(text, len, textRec, &pos);\par
651                         guiTextBoxState.start = guiTextBoxState.cursor - pos + 1;\par
652                     \}\par
653                 \}\par
654 \par
655                 {\cf20 // -----------------}\par
656                 {\cf20 // HANDLE KEY INPUT}\par
657                 {\cf20 // -----------------}\par
658                 {\cf20 // * -> | LSHIFT + -> move cursor to the right | increase selection by one}\par
659                 {\cf20 // * <- | LSHIFT + <- move cursor to the left | decrease selection by one}\par
660                 {\cf20 // * HOME | LSHIFT + HOME moves cursor to start of text | selects text from cursor to start of text}\par
661                 {\cf20 // * END | LSHIFT + END move cursor to end of text | selects text from cursor until end of text}\par
662                 {\cf20 // * CTRL + A select all characters in text}\par
663                 {\cf20 // * CTRL + C copy selected text}\par
664                 {\cf20 // * CTRL + X cut selected text}\par
665                 {\cf20 // * CTRL + V remove selected text, if any, then paste clipboard data}\par
666                 {\cf20 // * DEL delete character or selection after cursor}\par
667                 {\cf20 // * BACKSPACE delete character or selection before cursor}\par
668                 {\cf20 // TODO: Add more shortcuts (insert mode, select word, moveto/select prev/next word ...)}\par
669                 {\cf19 if} (IsKeyPressed(KEY_RIGHT) || (IsKeyDown(KEY_RIGHT) && (framesCounter%TEXTBOX_CURSOR_COOLDOWN == 0)))\par
670                 \{\par
671                     {\cf19 if} (IsKeyDown(KEY_LEFT_SHIFT))\par
672                     \{\par
673                         {\cf20 // Selecting}\par
674                         {\cf19 if} (guiTextBoxState.select == -1) guiTextBoxState.select = guiTextBoxState.cursor; {\cf20 // Mark selection start}\par
675 \par
676                         MoveTextBoxCursorRight(text, length, textRec);\par
677                     \}\par
678                     {\cf19 else}\par
679                     \{\par
680                         {\cf19 if} (guiTextBoxState.select != -1 && guiTextBoxState.select != guiTextBoxState.cursor)\par
681                         \{\par
682                             {\cf20 // Deselect and move cursor to end of selection}\par
683                             {\cf19 if} (guiTextBoxState.cursor < guiTextBoxState.select)\par
684                             \{\par
685                                 guiTextBoxState.cursor = guiTextBoxState.select - 1;\par
686                                 MoveTextBoxCursorRight(text, length, textRec);\par
687                             \}\par
688                         \}\par
689                         {\cf19 else}\par
690                         \{\par
691                             {\cf20 // Move cursor to the right}\par
692                             MoveTextBoxCursorRight(text, length, textRec);\par
693                         \}\par
694 \par
695                         guiTextBoxState.select = -1;\par
696                     \}\par
697 \par
698                     framesCounter = 0;\par
699                 \}\par
700                 {\cf19 else} {\cf19 if} (IsKeyPressed(KEY_LEFT) || (IsKeyDown(KEY_LEFT) && (framesCounter%TEXTBOX_CURSOR_COOLDOWN == 0)))\par
701                 \{\par
702                     {\cf19 if} (IsKeyDown(KEY_LEFT_SHIFT))\par
703                     \{\par
704                         {\cf20 // Selecting}\par
705                         {\cf19 if} (guiTextBoxState.select == -1) guiTextBoxState.select = guiTextBoxState.cursor; {\cf20 // Mark selection start}\par
706 \par
707                         MoveTextBoxCursorLeft(text);\par
708                     \}\par
709                     {\cf19 else}\par
710                     \{\par
711                         {\cf19 if} ((guiTextBoxState.select != -1) && (guiTextBoxState.select != guiTextBoxState.cursor))\par
712                         \{\par
713                             {\cf20 // Deselect and move cursor to start of selection}\par
714                             {\cf19 if} (guiTextBoxState.cursor > guiTextBoxState.select)\par
715                             \{\par
716                                 guiTextBoxState.cursor = guiTextBoxState.select;\par
717 \par
718                                 {\cf19 if} (guiTextBoxState.start > guiTextBoxState.cursor)\par
719                                 \{\par
720                                     guiTextBoxState.start = guiTextBoxState.cursor;\par
721                                     guiTextBoxState.index = GuiTextBoxGetByteIndex(text, 0, 0, guiTextBoxState.start); {\cf20 // Recalculate byte index}\par
722                                 \}\par
723                             \}\par
724                         \}\par
725                         {\cf19 else}\par
726                         \{\par
727                             {\cf20 // Move cursor to the left}\par
728                             MoveTextBoxCursorLeft(text);\par
729                         \}\par
730 \par
731                         guiTextBoxState.select = -1;\par
732                     \}\par
733 \par
734                     framesCounter = 0;\par
735                 \}\par
736                 {\cf19 else} {\cf19 if} (IsKeyPressed(KEY_BACKSPACE) || (IsKeyDown(KEY_BACKSPACE) && (framesCounter%TEXTBOX_CURSOR_COOLDOWN) == 0))\par
737                 \{\par
738                     GuiTextBoxDelete(text, length, {\cf17 true});\par
739                 \}\par
740                 {\cf19 else} {\cf19 if} (IsKeyPressed(KEY_DELETE) || (IsKeyDown(KEY_DELETE) && (framesCounter%TEXTBOX_CURSOR_COOLDOWN) == 0))\par
741                 \{\par
742                     GuiTextBoxDelete(text, length, {\cf17 false});\par
743                 \}\par
744                 {\cf19 else} {\cf19 if} (IsKeyPressed(KEY_HOME))\par
745                 \{\par
746                     {\cf19 if} (IsKeyDown(KEY_LEFT_SHIFT))\par
747                     \{\par
748                         {\cf20 // Select from start of text to cursor}\par
749                         {\cf19 if} ((guiTextBoxState.select > guiTextBoxState.cursor) || ((guiTextBoxState.select == -1) && (guiTextBoxState.cursor != 0)))\par
750                         \{\par
751                             guiTextBoxState.select = guiTextBoxState.cursor;\par
752                         \}\par
753                     \}\par
754                     {\cf19 else} guiTextBoxState.select = -1; {\cf20 // Deselect everything}\par
755 \par
756                     {\cf20 // Move cursor to start of text}\par
757                     guiTextBoxState.cursor = guiTextBoxState.start = guiTextBoxState.index = 0;\par
758                     framesCounter = 0;\par
759                 \}\par
760                 {\cf19 else} {\cf19 if} (IsKeyPressed(KEY_END))\par
761                 \{\par
762                     {\cf18 int} max = GuiCountCodepointsUntilNewline(text);\par
763 \par
764                     {\cf19 if} (IsKeyDown(KEY_LEFT_SHIFT))\par
765                     \{\par
766                         {\cf19 if} ((guiTextBoxState.select == -1) && (guiTextBoxState.cursor != max))\par
767                         \{\par
768                             guiTextBoxState.select = guiTextBoxState.cursor;\par
769                         \}\par
770                     \}\par
771                     {\cf19 else} guiTextBoxState.select = -1; {\cf20 // Deselect everything}\par
772 \par
773                     {\cf18 int} pos = 0;\par
774                     guiTextBoxState.cursor = max;\par
775                     {\cf18 int} len = GuiTextBoxGetByteIndex(text, 0, 0, guiTextBoxState.cursor);\par
776                     guiTextBoxState.index = GuiMeasureTextBoxRev(text, len, textRec, &pos);\par
777                     guiTextBoxState.start = guiTextBoxState.cursor - pos + 1;\par
778                 \}\par
779                 {\cf19 else} {\cf19 if} (IsKeyDown(KEY_LEFT_CONTROL) && IsKeyPressed(KEY_A)) GuiTextBoxSelectAll(text); {\cf20 // CTRL + A > Select all}\par
780                 {\cf19 else} {\cf19 if} (IsKeyDown(KEY_LEFT_CONTROL) && IsKeyPressed(KEY_C)) GuiTextBoxCopy(text);      {\cf20 // CTRL + C > Copy selected text to clipboard}\par
781                 {\cf19 else} {\cf19 if} (IsKeyDown(KEY_LEFT_CONTROL) && IsKeyPressed(KEY_X)) GuiTextBoxCut(text);       {\cf20 // CTRL + X > Cut selected text}\par
782                 {\cf19 else} {\cf19 if} (IsKeyDown(KEY_LEFT_CONTROL) && IsKeyPressed(KEY_V)) GuiTextBoxPaste(text, textSize); {\cf20 // CTRL + V > Paste clipboard text}\par
783                 {\cf19 else} {\cf19 if} (IsKeyPressed(KEY_ENTER)) pressed = {\cf17 true};\par
784                 {\cf19 else}\par
785                 \{\par
786                     {\cf18 int} key = GetKeyPressed();\par
787                     {\cf19 if} ((key >= 32) && ((guiTextBoxState.cursor + 1) < textSize))\par
788                     \{\par
789                         {\cf19 if} ((guiTextBoxState.select != -1) && (guiTextBoxState.select != guiTextBoxState.cursor))\par
790                         \{\par
791                             {\cf20 // Delete selection}\par
792                             GuiTextBoxDelete(text, length, {\cf17 true});\par
793                         \}\par
794 \par
795                         {\cf20 // Decode codepoint}\par
796                         {\cf18 char} out[5] = \{0\};\par
797                         {\cf18 int} sz = EncodeCodepoint(key, &out[0]);\par
798 \par
799                         {\cf19 if} (sz != 0)\par
800                         \{\par
801                             {\cf18 int} startIdx = GuiTextBoxGetByteIndex(text, 0, 0, guiTextBoxState.cursor);\par
802                             {\cf18 int} endIdx = startIdx + sz;\par
803 \par
804                             {\cf19 if} (endIdx <= textSize && length < textSize - 1)\par
805                             \{\par
806                                 guiTextBoxState.cursor++;\par
807                                 guiTextBoxState.select = -1;\par
808                                 memmove(&text[endIdx], &text[startIdx], length - startIdx);\par
809                                 memcpy(&text[startIdx], &out[0], sz);\par
810                                 length += sz;\par
811                                 text[length] = {\cf23 '\\0'};\par
812 \par
813                                 {\cf19 if} (guiTextBoxState.start != -1)\par
814                                 \{\par
815                                     {\cf17 const} {\cf18 int} max = GuiTextBoxMaxCharacters(&text[guiTextBoxState.index], length - guiTextBoxState.index, textRec);\par
816 \par
817                                     {\cf19 if} ((guiTextBoxState.cursor - guiTextBoxState.start) > max) guiTextBoxState.start = -1;\par
818                                 \}\par
819                             \}\par
820                         \}\par
821                     \}\par
822                 \}\par
823 \par
824                 {\cf20 // -------------}\par
825                 {\cf20 // HANDLE MOUSE}\par
826                 {\cf20 // -------------}\par
827                 {\cf19 if} (CheckCollisionPointRec(mousePoint, bounds))\par
828                 \{\par
829                     {\cf19 if} (IsMouseButtonPressed(MOUSE_LEFT_BUTTON))\par
830                     \{\par
831                         {\cf19 if} (CheckCollisionPointRec(mousePoint, textRec))\par
832                         \{\par
833                             GuiTextBoxGetCursorFromMouse(&text[guiTextBoxState.index], length - guiTextBoxState.index, textRec, &guiTextBoxState.cursor);\par
834                             guiTextBoxState.cursor += guiTextBoxState.start;\par
835                             guiTextBoxState.select = -1;\par
836                         \}\par
837                         {\cf19 else}\par
838                         \{\par
839                             {\cf20 // Clicked outside the `textRec` but still inside bounds}\par
840                             {\cf19 if} (mousePoint.x <= bounds.x+bounds.width/2) guiTextBoxState.cursor = 0 + guiTextBoxState.start;\par
841                             {\cf19 else} guiTextBoxState.cursor = guiTextBoxState.start + GuiTextBoxMaxCharacters(&text[guiTextBoxState.index], length - guiTextBoxState.index, textRec);\par
842                             guiTextBoxState.select = -1;\par
843                         \}\par
844                     \}\par
845                     {\cf19 else} {\cf19 if} (IsMouseButtonDown(MOUSE_LEFT_BUTTON))\par
846                     \{\par
847                         {\cf18 int} cursor = guiTextBoxState.cursor - guiTextBoxState.start;\par
848                         {\cf18 bool} move = {\cf17 false};\par
849                         {\cf19 if} (CheckCollisionPointRec(mousePoint, textRec))\par
850                         \{\par
851                             GuiTextBoxGetCursorFromMouse(&text[guiTextBoxState.index], length - guiTextBoxState.index, textRec, &cursor);\par
852                         \}\par
853                         {\cf19 else}\par
854                         \{\par
855                             {\cf20 // Clicked outside the `textRec` but still inside bounds, this means that we must move the text}\par
856                             move = {\cf17 true};\par
857                             {\cf19 if} (mousePoint.x > bounds.x+bounds.width/2)\par
858                             \{\par
859                                 cursor = GuiTextBoxMaxCharacters(&text[guiTextBoxState.index], length - guiTextBoxState.index, textRec);\par
860                             \}\par
861                         \}\par
862 \par
863                         guiTextBoxState.cursor = cursor + guiTextBoxState.start;\par
864 \par
865                         {\cf19 if} (guiTextBoxState.select == -1)\par
866                         \{\par
867                             {\cf20 // Mark start of selection}\par
868                             guiTextBoxState.select = guiTextBoxState.cursor;\par
869                         \}\par
870 \par
871                         {\cf20 // Move the text when cursor is positioned before or after the text}\par
872                         {\cf19 if} ((framesCounter%TEXTBOX_CURSOR_COOLDOWN) == 0 && move)\par
873                         \{\par
874                             {\cf19 if} (cursor == 0) MoveTextBoxCursorLeft(text);\par
875                             {\cf19 else} {\cf19 if} (cursor == GuiTextBoxMaxCharacters(&text[guiTextBoxState.index], length - guiTextBoxState.index, textRec))\par
876                             \{\par
877                                 MoveTextBoxCursorRight(text, length, textRec);\par
878                             \}\par
879                         \}\par
880                     \}\par
881                 \}\par
882 \par
883                 {\cf20 // Calculate X coordinate of the blinking cursor}\par
884                 cursorPos.x = GuiTextBoxGetCursorCoordinates(&text[guiTextBoxState.index], length - guiTextBoxState.index, textRec, guiTextBoxState.cursor - guiTextBoxState.start);\par
885 \par
886                 {\cf20 // Update variables}\par
887                 textStartIndex = guiTextBoxState.index;\par
888 \par
889                 {\cf19 if} (guiTextBoxState.select == -1)\par
890                 \{\par
891                     selStart = guiTextBoxState.cursor;\par
892                     selLength = 0;\par
893                 \}\par
894                 {\cf19 else} {\cf19 if} (guiTextBoxState.cursor > guiTextBoxState.select)\par
895                 \{\par
896                     selStart = guiTextBoxState.select;\par
897                     selLength = guiTextBoxState.cursor - guiTextBoxState.select;\par
898                 \}\par
899                 {\cf19 else}\par
900                 \{\par
901                     selStart = guiTextBoxState.cursor;\par
902                     selLength = guiTextBoxState.select - guiTextBoxState.cursor;\par
903                 \}\par
904 \par
905                 {\cf20 // We aren't drawing all of the text so make sure `DrawTextBoxedSelectable()` is selecting things correctly}\par
906                 {\cf19 if} (guiTextBoxState.start > selStart)\par
907                 \{\par
908                     selLength -= guiTextBoxState.start - selStart;\par
909                     selStart = 0;\par
910                 \}\par
911                 {\cf19 else} selStart = selStart - guiTextBoxState.start;\par
912             \}\par
913             {\cf19 else} state = STATE_FOCUSED;\par
914             \par
915             {\cf19 if} (IsKeyPressed(KEY_ENTER) || (!CheckCollisionPointRec(mousePoint, bounds) && IsMouseButtonPressed(0))) pressed = {\cf17 true};\par
916         \}\par
917         {\cf19 else}\par
918         \{\par
919             {\cf19 if} (active && IsKeyDown(KEY_LEFT_CONTROL) && IsKeyPressed(KEY_C))\par
920             \{\par
921                 {\cf20 // If active copy all text to clipboard even when disabled}\par
922 \par
923                 {\cf20 // Backup textbox state}\par
924                 {\cf18 int} select = guiTextBoxState.select;\par
925                 {\cf18 int} cursor = guiTextBoxState.cursor;\par
926                 {\cf18 int} start = guiTextBoxState.start;\par
927 \par
928                 {\cf19 if} ((guiTextBoxState.select == -1) || (guiTextBoxState.select == guiTextBoxState.cursor))\par
929                 \{\par
930                     {\cf20 // If no selection then mark all text to be copied to clipboard}\par
931                     GuiTextBoxSelectAll(text);\par
932                 \}\par
933 \par
934                 GuiTextBoxCopy(text);\par
935 \par
936                 {\cf20 // Restore textbox state}\par
937                 guiTextBoxState.select = select;\par
938                 guiTextBoxState.cursor = cursor;\par
939                 guiTextBoxState.start = start;\par
940             \}\par
941             \par
942             {\cf19 if} (CheckCollisionPointRec(mousePoint, bounds))\par
943             \{\par
944                 state = STATE_FOCUSED;\par
945                 {\cf19 if} (IsMouseButtonPressed(0)) pressed = {\cf17 true};\par
946             \}\par
947 \par
948         \}\par
949         \par
950         {\cf19 if} (pressed) framesCounter = 0;\par
951     \}\par
952     \par
953     {\cf20 // Draw control}\par
954     {\cf20 //--------------------------------------------------------------------}\par
955     DrawRectangleLinesEx(bounds, GuiGetStyle(TEXTBOX, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(TEXTBOX, BORDER + (state*3))), guiAlpha));\par
956 \par
957     {\cf19 if} (state == STATE_PRESSED)\par
958     \{\par
959         DrawRectangle(bounds.x + GuiGetStyle(TEXTBOX, BORDER_WIDTH), bounds.y + GuiGetStyle(TEXTBOX, BORDER_WIDTH), bounds.width - 2*GuiGetStyle(TEXTBOX, BORDER_WIDTH), bounds.height - 2*GuiGetStyle(TEXTBOX, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(TEXTBOX, BASE_COLOR_FOCUSED)), guiAlpha));\par
960 \par
961         {\cf20 // Draw blinking cursor}\par
962         {\cf19 if} (editMode && active && ((framesCounter/30)%2 == 0) && selLength == 0)\par
963         \{\par
964             DrawRectangle(cursorPos.x, cursorPos.y-1, 1, GuiGetStyle(DEFAULT, TEXT_SIZE)+2, Fade(GetColor(GuiGetStyle(TEXTBOX, BORDER_COLOR_PRESSED)), guiAlpha));\par
965         \}\par
966     \}\par
967     {\cf19 else} {\cf19 if} (state == STATE_DISABLED)\par
968     \{\par
969         DrawRectangle(bounds.x + GuiGetStyle(TEXTBOX, BORDER_WIDTH), bounds.y + GuiGetStyle(TEXTBOX, BORDER_WIDTH), bounds.width - 2*GuiGetStyle(TEXTBOX, BORDER_WIDTH), bounds.height - 2*GuiGetStyle(TEXTBOX, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(TEXTBOX, BASE_COLOR_DISABLED)), guiAlpha));\par
970     \}\par
971 \par
972     {\cf20 // Finally draw the text and selection}\par
973     DrawTextRecEx(guiFont, &text[textStartIndex], textRec, GuiGetStyle(DEFAULT, TEXT_SIZE), GuiGetStyle(DEFAULT, TEXT_SPACING), {\cf17 false}, Fade(GetColor(GuiGetStyle(TEXTBOX, TEXT + (state*3))), guiAlpha), selStart, selLength, GetColor(GuiGetStyle(TEXTBOX, TEXT_COLOR_FOCUSED)), GetColor(GuiGetStyle(TEXTBOX, BASE_COLOR_FOCUSED)));\par
974     \par
975     {\cf19 return} pressed;\par
976 \}\par
977 \par
978 {\cf20 //----------------------------------------------------------------------------------}\par
979 {\cf20 // Module Internal Functions Definition}\par
980 {\cf20 //----------------------------------------------------------------------------------}\par
981 \par
982 {\cf17 static} {\cf18 int} GetPrevCodepoint({\cf17 const} {\cf18 char} *text, {\cf17 const} {\cf18 char} *start, {\cf18 int} *prev)\par
983 \{\par
984     {\cf18 int} c = 0x3f;\par
985     {\cf18 char} *p = ({\cf18 char} *)text;\par
986     *prev = 1;\par
987 \par
988     {\cf19 for} ({\cf18 int} i = 0; (p >= start) && (i < 4); p--, i++)\par
989     \{\par
990         {\cf19 if} (((({\cf18 unsigned} {\cf18 char})*p) >> 6) != 2)\par
991         \{\par
992             c = GetCodepoint(p, prev);\par
993             {\cf19 break};\par
994         \}\par
995     \}\par
996 \par
997     {\cf19 return} c;\par
998 \}\par
999 \par
1000 {\cf20 // Returns total number of characters(codepoints) in a UTF8 encoded `text` until `\\0` or a `\\n` is found.}\par
1001 {\cf20 // NOTE: If a invalid UTF8 sequence is encountered a `?`(0x3f) codepoint is counted instead.}\par
1002 {\cf17 static} {\cf17 inline} {\cf18 unsigned} {\cf18 int} GuiCountCodepointsUntilNewline({\cf17 const} {\cf18 char} *text)\par
1003 \{\par
1004     {\cf18 unsigned} {\cf18 int} len = 0;\par
1005     {\cf18 char} *ptr = ({\cf18 char}*)&text[0];\par
1006 \par
1007     {\cf19 while} ((*ptr != {\cf23 '\\0'}) && (*ptr != {\cf23 '\\n'}))\par
1008     \{\par
1009         {\cf18 int} next = 0;\par
1010         {\cf18 int} letter = GetCodepoint(ptr, &next);\par
1011 \par
1012         {\cf19 if} (letter == 0x3f) ptr += 1;\par
1013         {\cf19 else} ptr += next;\par
1014         ++len;\par
1015     \}\par
1016 \par
1017     {\cf19 return} len;\par
1018 \}\par
1019 \par
1020 {\cf20 // Highly synchronized with calculations in DrawTextBoxedSelectable()}\par
1021 {\cf17 static} {\cf18 int} GuiMeasureTextBox({\cf17 const} {\cf18 char} *text, {\cf18 int} length, Rectangle rec, {\cf18 int} *pos, {\cf18 int} mode)\par
1022 \{\par
1023     {\cf20 // Get gui font properties}\par
1024     {\cf17 const} Font font = guiFont;\par
1025     {\cf17 const} {\cf18 float} fontSize = GuiGetStyle(DEFAULT, TEXT_SIZE);\par
1026     {\cf17 const} {\cf18 float} spacing = GuiGetStyle(DEFAULT, TEXT_SPACING);\par
1027 \par
1028     {\cf18 int} textOffsetX = 0;        {\cf20 // Offset between characters}\par
1029     {\cf18 float} scaleFactor = 0.0f;\par
1030 \par
1031     {\cf18 int} letter = 0;   {\cf20 // Current character}\par
1032     {\cf18 int} index = 0;    {\cf20 // Index position in sprite font}\par
1033 \par
1034     scaleFactor = fontSize/font.baseSize;\par
1035 \par
1036     {\cf18 int} i = 0, k = 0;\par
1037     {\cf18 int} glyphWidth = 0;\par
1038 \par
1039     {\cf19 for} (i = 0; i < length; i++, k++)\par
1040     \{\par
1041         glyphWidth = 0;\par
1042         {\cf18 int} next = 1;\par
1043         letter = GetCodepoint(&text[i], &next);\par
1044         {\cf19 if} (letter == 0x3f) next = 1;\par
1045         index = GetGlyphIndex(font, letter);\par
1046         i += next - 1;\par
1047 \par
1048         {\cf19 if} (letter != {\cf23 '\\n'})\par
1049         \{\par
1050             glyphWidth = (font.glyphs[index].advanceX == 0)?\par
1051                          ({\cf18 int})(font.recs[index].width*scaleFactor + spacing):\par
1052                          (int)(font.glyphs[index].advanceX*scaleFactor + spacing);\par
1053 \par
1054             {\cf19 if} ((textOffsetX + glyphWidth + 1) >= rec.width) {\cf19 break};\par
1055 \par
1056             {\cf19 if} ((mode == GUI_MEASURE_MODE_CURSOR_POS) && (*pos == k)) {\cf19 break};\par
1057             {\cf19 else} {\cf19 if} (mode == GUI_MEASURE_MODE_CURSOR_COORDS)\par
1058             \{\par
1059                 {\cf20 // Check if the mouse pointer is inside the glyph rect}\par
1060                 Rectangle grec = \{rec.x + textOffsetX - 1, rec.y, (float)glyphWidth, (font.baseSize + font.baseSize/2)*scaleFactor - 1 \};\par
1061                 Vector2 mouse = GetMousePosition();\par
1062 \par
1063                 {\cf19 if} (CheckCollisionPointRec(mouse, grec))\par
1064                 \{\par
1065                     {\cf20 // Smooth selection by dividing the glyph rectangle into 2 equal parts and checking where the mouse resides}\par
1066                     {\cf19 if} (mouse.x > (grec.x + glyphWidth/2))\par
1067                     \{\par
1068                         textOffsetX += glyphWidth;\par
1069                         k++;\par
1070                     \}\par
1071 \par
1072                     {\cf19 break};\par
1073                 \}\par
1074             \}\par
1075         \}\par
1076         {\cf19 else} {\cf19 break};\par
1077 \par
1078         textOffsetX += glyphWidth;\par
1079     \}\par
1080 \par
1081     *pos = k;\par
1082 \par
1083     {\cf19 return} (rec.x + textOffsetX - 1);\par
1084 \}\par
1085 \par
1086 {\cf20 // Required by GuiTextBoxEx()}\par
1087 {\cf20 // Highly synchronized with calculations in DrawTextBoxedSelectable()}\par
1088 {\cf17 static} {\cf18 int} GuiMeasureTextBoxRev({\cf17 const} {\cf18 char} *text, {\cf18 int} length, Rectangle rec, {\cf18 int} *pos)\par
1089 \{\par
1090     {\cf20 // Get gui font properties}\par
1091     {\cf17 const} Font font = guiFont;\par
1092     {\cf17 const} {\cf18 float} fontSize = GuiGetStyle(DEFAULT, TEXT_SIZE);\par
1093     {\cf17 const} {\cf18 float} spacing = GuiGetStyle(DEFAULT, TEXT_SPACING);\par
1094 \par
1095     {\cf18 int} textOffsetX = 0;        {\cf20 // Offset between characters}\par
1096     {\cf18 float} scaleFactor = 0.0f;\par
1097 \par
1098     {\cf18 int} letter = 0;   {\cf20 // Current character}\par
1099     {\cf18 int} index = 0;    {\cf20 // Index position in sprite font}\par
1100 \par
1101     scaleFactor = fontSize/font.baseSize;\par
1102 \par
1103     {\cf18 int} i = 0, k = 0;\par
1104     {\cf18 int} glyphWidth = 0, prev = 1;\par
1105     {\cf19 for} (i = length; i >= 0; i--, k++)\par
1106     \{\par
1107         glyphWidth = 0;\par
1108         letter = GetPrevCodepoint(&text[i], &text[0], &prev);\par
1109 \par
1110         {\cf19 if} (letter == 0x3f) prev = 1;\par
1111         index = GetGlyphIndex(font, letter);\par
1112         i -= prev - 1;\par
1113 \par
1114         {\cf19 if} (letter != {\cf23 '\\n'})\par
1115         \{\par
1116             glyphWidth = (font.glyphs[index].advanceX == 0)?\par
1117                          ({\cf18 int})(font.recs[index].width*scaleFactor + spacing):\par
1118                          (int)(font.glyphs[index].advanceX*scaleFactor + spacing);\par
1119 \par
1120             {\cf19 if} ((textOffsetX + glyphWidth + 1) >= rec.width) {\cf19 break};\par
1121         \}\par
1122         {\cf19 else} {\cf19 break};\par
1123 \par
1124         textOffsetX += glyphWidth;\par
1125     \}\par
1126 \par
1127     *pos = k;\par
1128 \par
1129     {\cf19 return} (i + prev);\par
1130 \}\par
1131 \par
1132 {\cf20 // Calculate cursor coordinates based on the cursor position `pos` inside the `text`.}\par
1133 {\cf17 static} {\cf17 inline} {\cf18 int} GuiTextBoxGetCursorCoordinates({\cf17 const} {\cf18 char} *text, {\cf18 int} length, Rectangle rec, {\cf18 int} pos)\par
1134 \{\par
1135     {\cf19 return} GuiMeasureTextBox(text, length, rec, &pos, GUI_MEASURE_MODE_CURSOR_POS);\par
1136 \}\par
1137 \par
1138 {\cf20 // Calculate cursor position in textbox based on mouse coordinates.}\par
1139 {\cf17 static} {\cf17 inline} {\cf18 int} GuiTextBoxGetCursorFromMouse({\cf17 const} {\cf18 char} *text, {\cf18 int} length, Rectangle rec, {\cf18 int}* pos)\par
1140 \{\par
1141     {\cf19 return} GuiMeasureTextBox(text, length, rec, pos, GUI_MEASURE_MODE_CURSOR_COORDS);\par
1142 \}\par
1143 \par
1144 {\cf20 // Calculates how many characters is the textbox able to draw inside rec}\par
1145 {\cf17 static} {\cf17 inline} {\cf18 int} GuiTextBoxMaxCharacters({\cf17 const} {\cf18 char} *text, {\cf18 int} length, Rectangle rec)\par
1146 \{\par
1147     {\cf18 int} pos = -1;\par
1148     GuiMeasureTextBox(text, length, rec, &pos, GUI_MEASURE_MODE_CURSOR_END);\par
1149     {\cf19 return} pos;\par
1150 \}\par
1151 \par
1152 {\cf17 static} {\cf17 inline} {\cf18 void} MoveTextBoxCursorRight({\cf17 const} {\cf18 char}* text, {\cf18 int} length, Rectangle textRec)\par
1153 \{\par
1154     {\cf20 // FIXME: Counting codepoints each time we press the key is expensive, find another way}\par
1155     {\cf18 int} count = GuiCountCodepointsUntilNewline(text);\par
1156     {\cf19 if} (guiTextBoxState.cursor < count ) guiTextBoxState.cursor++;\par
1157 \par
1158     {\cf17 const} {\cf18 int} max = GuiTextBoxMaxCharacters(&text[guiTextBoxState.index], length - guiTextBoxState.index, textRec);\par
1159 \par
1160     {\cf19 if} ((guiTextBoxState.cursor - guiTextBoxState.start) > max)\par
1161     \{\par
1162         {\cf17 const} {\cf18 int} cidx = GuiTextBoxGetByteIndex(text, guiTextBoxState.index, guiTextBoxState.start, guiTextBoxState.cursor);\par
1163         {\cf18 int} pos = 0;\par
1164         guiTextBoxState.index = GuiMeasureTextBoxRev(text, cidx - 1, textRec, &pos);\par
1165         guiTextBoxState.start = guiTextBoxState.cursor - pos;\par
1166     \}\par
1167 \}\par
1168 \par
1169 {\cf17 static} {\cf17 inline} {\cf18 void} MoveTextBoxCursorLeft({\cf17 const} {\cf18 char}* text)\par
1170 \{\par
1171     {\cf19 if} (guiTextBoxState.cursor > 0) guiTextBoxState.cursor--;\par
1172 \par
1173     {\cf19 if} (guiTextBoxState.cursor < guiTextBoxState.start)\par
1174     \{\par
1175         {\cf18 int} prev = 0;\par
1176         {\cf18 int} letter = GetPrevCodepoint(&text[guiTextBoxState.index - 1], text, &prev);\par
1177         {\cf19 if} (letter == 0x3f) prev = 1;\par
1178         guiTextBoxState.start--;\par
1179         guiTextBoxState.index -= prev;\par
1180     \}\par
1181 \}\par
1182 \par
1183 {\cf17 static} {\cf18 int} EncodeCodepoint({\cf18 unsigned} {\cf18 int} c, {\cf18 char} out[5])\par
1184 \{\par
1185     {\cf18 int} len = 0;\par
1186     {\cf19 if} (c <= 0x7f)\par
1187     \{\par
1188         out[0] = (char)c;\par
1189         len = 1;\par
1190     \}\par
1191     {\cf19 else} {\cf19 if} (c <= 0x7ff)\par
1192     \{\par
1193         out[0] = (char)(((c >> 6) & 0x1f) | 0xc0);\par
1194         out[1] = (char)((c & 0x3f) | 0x80);\par
1195         len = 2;\par
1196     \}\par
1197     {\cf19 else} {\cf19 if} (c <= 0xffff)\par
1198     \{\par
1199         out[0] = (char)(((c >> 12) & 0x0f) | 0xe0);\par
1200         out[1] = (char)(((c >>  6) & 0x3f) | 0x80);\par
1201         out[2] = (char)((c & 0x3f) | 0x80);\par
1202         len = 3;\par
1203     \}\par
1204     {\cf19 else} {\cf19 if} (c <= 0x10ffff)\par
1205     \{\par
1206         out[0] = (char)(((c >> 18) & 0x07) | 0xf0);\par
1207         out[1] = (char)(((c >> 12) & 0x3f) | 0x80);\par
1208         out[2] = (char)(((c >>  6) & 0x3f) | 0x80);\par
1209         out[3] = (char)((c & 0x3f) | 0x80);\par
1210         len = 4;\par
1211     \}\par
1212 \par
1213     out[len] = 0;\par
1214     {\cf19 return} len;\par
1215 \}\par
1216 \par
1217 {\cf21 #endif }{\cf20 // GUI_TEXTBOX_EXTENDED_IMPLEMENTATION}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/raygui.h\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/raygui.h}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/raygui.h}
{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "raylib.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b GuiStyleProp}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RAYGUI_VERSION}\~ "3.2"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RAYGUIAPI}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RAYGUI_MALLOC}(sz)\~ malloc(sz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RAYGUI_CALLOC}(n,  sz)\~ calloc(n,sz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RAYGUI_FREE}(p)\~ free(p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RAYGUI_SUPPORT_LOG_INFO}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RAYGUI_LOG}(...)\~ printf(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SCROLLBAR_LEFT_SIDE}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SCROLLBAR_RIGHT_SIDE}\~ 1\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es de Tipos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b GuiStyleProp} {\b GuiStyleProp}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiState} \{ {\b STATE_NORMAL} = 0
, {\b STATE_FOCUSED}
, {\b STATE_PRESSED}
, {\b STATE_DISABLED}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiTextAlignment} \{ {\b TEXT_ALIGN_LEFT} = 0
, {\b TEXT_ALIGN_CENTER}
, {\b TEXT_ALIGN_RIGHT}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiControl} \{ {\b DEFAULT} = 0
, {\b LABEL}
, {\b BUTTON}
, {\b TOGGLE}
, {\b SLIDER}
, {\b PROGRESSBAR}
, {\b CHECKBOX}
, {\b COMBOBOX}
, {\b DROPDOWNBOX}
, {\b TEXTBOX}
, {\b VALUEBOX}
, {\b SPINNER}
, {\b LISTVIEW}
, {\b COLORPICKER}
, {\b SCROLLBAR}
, {\b STATUSBAR}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiControlProperty} \{ {\b BORDER_COLOR_NORMAL} = 0
, {\b BASE_COLOR_NORMAL}
, {\b TEXT_COLOR_NORMAL}
, {\b BORDER_COLOR_FOCUSED}
, {\b BASE_COLOR_FOCUSED}
, {\b TEXT_COLOR_FOCUSED}
, {\b BORDER_COLOR_PRESSED}
, {\b BASE_COLOR_PRESSED}
, {\b TEXT_COLOR_PRESSED}
, {\b BORDER_COLOR_DISABLED}
, {\b BASE_COLOR_DISABLED}
, {\b TEXT_COLOR_DISABLED}
, {\b BORDER_WIDTH}
, {\b TEXT_PADDING}
, {\b TEXT_ALIGNMENT}
, {\b RESERVED}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiDefaultProperty} \{ {\b TEXT_SIZE} = 16
, {\b TEXT_SPACING}
, {\b LINE_COLOR}
, {\b BACKGROUND_COLOR}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiToggleProperty} \{ {\b GROUP_PADDING} = 16
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiSliderProperty} \{ {\b SLIDER_WIDTH} = 16
, {\b SLIDER_PADDING}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiProgressBarProperty} \{ {\b PROGRESS_PADDING} = 16
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiScrollBarProperty} \{ {\b ARROWS_SIZE} = 16
, {\b ARROWS_VISIBLE}
, {\b SCROLL_SLIDER_PADDING}
, {\b SCROLL_SLIDER_SIZE}
, {\b SCROLL_PADDING}
, {\b SCROLL_SPEED}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiCheckBoxProperty} \{ {\b CHECK_PADDING} = 16
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiComboBoxProperty} \{ {\b COMBO_BUTTON_WIDTH} = 16
, {\b COMBO_BUTTON_SPACING}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiDropdownBoxProperty} \{ {\b ARROW_PADDING} = 16
, {\b DROPDOWN_ITEMS_SPACING}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiTextBoxProperty} \{ {\b TEXT_INNER_PADDING} = 16
, {\b TEXT_LINES_SPACING}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiSpinnerProperty} \{ {\b SPIN_BUTTON_WIDTH} = 16
, {\b SPIN_BUTTON_SPACING}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiListViewProperty} \{ {\b LIST_ITEMS_HEIGHT} = 16
, {\b LIST_ITEMS_SPACING}
, {\b SCROLLBAR_WIDTH}
, {\b SCROLLBAR_SIDE}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiColorPickerProperty} \{ {\b COLOR_SELECTOR_SIZE} = 16
, {\b HUEBAR_WIDTH}
, {\b HUEBAR_PADDING}
, {\b HUEBAR_SELECTOR_HEIGHT}
, {\b HUEBAR_SELECTOR_OVERFLOW}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiIconName} \{ {\b ICON_NONE} = 0
, {\b ICON_FOLDER_FILE_OPEN} = 1
, {\b ICON_FILE_SAVE_CLASSIC} = 2
, {\b ICON_FOLDER_OPEN} = 3
, {\b ICON_FOLDER_SAVE} = 4
, {\b ICON_FILE_OPEN} = 5
, {\b ICON_FILE_SAVE} = 6
, {\b ICON_FILE_EXPORT} = 7
, {\b ICON_FILE_ADD} = 8
, {\b ICON_FILE_DELETE} = 9
, {\b ICON_FILETYPE_TEXT} = 10
, {\b ICON_FILETYPE_AUDIO} = 11
, {\b ICON_FILETYPE_IMAGE} = 12
, {\b ICON_FILETYPE_PLAY} = 13
, {\b ICON_FILETYPE_VIDEO} = 14
, {\b ICON_FILETYPE_INFO} = 15
, {\b ICON_FILE_COPY} = 16
, {\b ICON_FILE_CUT} = 17
, {\b ICON_FILE_PASTE} = 18
, {\b ICON_CURSOR_HAND} = 19
, {\b ICON_CURSOR_POINTER} = 20
, {\b ICON_CURSOR_CLASSIC} = 21
, {\b ICON_PENCIL} = 22
, {\b ICON_PENCIL_BIG} = 23
, {\b ICON_BRUSH_CLASSIC} = 24
, {\b ICON_BRUSH_PAINTER} = 25
, {\b ICON_WATER_DROP} = 26
, {\b ICON_COLOR_PICKER} = 27
, {\b ICON_RUBBER} = 28
, {\b ICON_COLOR_BUCKET} = 29
, {\b ICON_TEXT_T} = 30
, {\b ICON_TEXT_A} = 31
, {\b ICON_SCALE} = 32
, {\b ICON_RESIZE} = 33
, {\b ICON_FILTER_POINT} = 34
, {\b ICON_FILTER_BILINEAR} = 35
, {\b ICON_CROP} = 36
, {\b ICON_CROP_ALPHA} = 37
, {\b ICON_SQUARE_TOGGLE} = 38
, {\b ICON_SYMMETRY} = 39
, {\b ICON_SYMMETRY_HORIZONTAL} = 40
, {\b ICON_SYMMETRY_VERTICAL} = 41
, {\b ICON_LENS} = 42
, {\b ICON_LENS_BIG} = 43
, {\b ICON_EYE_ON} = 44
, {\b ICON_EYE_OFF} = 45
, {\b ICON_FILTER_TOP} = 46
, {\b ICON_FILTER} = 47
, {\b ICON_TARGET_POINT} = 48
, {\b ICON_TARGET_SMALL} = 49
, {\b ICON_TARGET_BIG} = 50
, {\b ICON_TARGET_MOVE} = 51
, {\b ICON_CURSOR_MOVE} = 52
, {\b ICON_CURSOR_SCALE} = 53
, {\b ICON_CURSOR_SCALE_RIGHT} = 54
, {\b ICON_CURSOR_SCALE_LEFT} = 55
, {\b ICON_UNDO} = 56
, {\b ICON_REDO} = 57
, {\b ICON_REREDO} = 58
, {\b ICON_MUTATE} = 59
, {\b ICON_ROTATE} = 60
, {\b ICON_REPEAT} = 61
, {\b ICON_SHUFFLE} = 62
, {\b ICON_EMPTYBOX} = 63
, {\b ICON_TARGET} = 64
, {\b ICON_TARGET_SMALL_FILL} = 65
, {\b ICON_TARGET_BIG_FILL} = 66
, {\b ICON_TARGET_MOVE_FILL} = 67
, {\b ICON_CURSOR_MOVE_FILL} = 68
, {\b ICON_CURSOR_SCALE_FILL} = 69
, {\b ICON_CURSOR_SCALE_RIGHT_FILL} = 70
, {\b ICON_CURSOR_SCALE_LEFT_FILL} = 71
, {\b ICON_UNDO_FILL} = 72
, {\b ICON_REDO_FILL} = 73
, {\b ICON_REREDO_FILL} = 74
, {\b ICON_MUTATE_FILL} = 75
, {\b ICON_ROTATE_FILL} = 76
, {\b ICON_REPEAT_FILL} = 77
, {\b ICON_SHUFFLE_FILL} = 78
, {\b ICON_EMPTYBOX_SMALL} = 79
, {\b ICON_BOX} = 80
, {\b ICON_BOX_TOP} = 81
, {\b ICON_BOX_TOP_RIGHT} = 82
, {\b ICON_BOX_RIGHT} = 83
, {\b ICON_BOX_BOTTOM_RIGHT} = 84
, {\b ICON_BOX_BOTTOM} = 85
, {\b ICON_BOX_BOTTOM_LEFT} = 86
, {\b ICON_BOX_LEFT} = 87
, {\b ICON_BOX_TOP_LEFT} = 88
, {\b ICON_BOX_CENTER} = 89
, {\b ICON_BOX_CIRCLE_MASK} = 90
, {\b ICON_POT} = 91
, {\b ICON_ALPHA_MULTIPLY} = 92
, {\b ICON_ALPHA_CLEAR} = 93
, {\b ICON_DITHERING} = 94
, {\b ICON_MIPMAPS} = 95
, {\b ICON_BOX_GRID} = 96
, {\b ICON_GRID} = 97
, {\b ICON_BOX_CORNERS_SMALL} = 98
, {\b ICON_BOX_CORNERS_BIG} = 99
, {\b ICON_FOUR_BOXES} = 100
, {\b ICON_GRID_FILL} = 101
, {\b ICON_BOX_MULTISIZE} = 102
, {\b ICON_ZOOM_SMALL} = 103
, {\b ICON_ZOOM_MEDIUM} = 104
, {\b ICON_ZOOM_BIG} = 105
, {\b ICON_ZOOM_ALL} = 106
, {\b ICON_ZOOM_CENTER} = 107
, {\b ICON_BOX_DOTS_SMALL} = 108
, {\b ICON_BOX_DOTS_BIG} = 109
, {\b ICON_BOX_CONCENTRIC} = 110
, {\b ICON_BOX_GRID_BIG} = 111
, {\b ICON_OK_TICK} = 112
, {\b ICON_CROSS} = 113
, {\b ICON_ARROW_LEFT} = 114
, {\b ICON_ARROW_RIGHT} = 115
, {\b ICON_ARROW_DOWN} = 116
, {\b ICON_ARROW_UP} = 117
, {\b ICON_ARROW_LEFT_FILL} = 118
, {\b ICON_ARROW_RIGHT_FILL} = 119
, {\b ICON_ARROW_DOWN_FILL} = 120
, {\b ICON_ARROW_UP_FILL} = 121
, {\b ICON_AUDIO} = 122
, {\b ICON_FX} = 123
, {\b ICON_WAVE} = 124
, {\b ICON_WAVE_SINUS} = 125
, {\b ICON_WAVE_SQUARE} = 126
, {\b ICON_WAVE_TRIANGULAR} = 127
, {\b ICON_CROSS_SMALL} = 128
, {\b ICON_PLAYER_PREVIOUS} = 129
, {\b ICON_PLAYER_PLAY_BACK} = 130
, {\b ICON_PLAYER_PLAY} = 131
, {\b ICON_PLAYER_PAUSE} = 132
, {\b ICON_PLAYER_STOP} = 133
, {\b ICON_PLAYER_NEXT} = 134
, {\b ICON_PLAYER_RECORD} = 135
, {\b ICON_MAGNET} = 136
, {\b ICON_LOCK_CLOSE} = 137
, {\b ICON_LOCK_OPEN} = 138
, {\b ICON_CLOCK} = 139
, {\b ICON_TOOLS} = 140
, {\b ICON_GEAR} = 141
, {\b ICON_GEAR_BIG} = 142
, {\b ICON_BIN} = 143
, {\b ICON_HAND_POINTER} = 144
, {\b ICON_LASER} = 145
, {\b ICON_COIN} = 146
, {\b ICON_EXPLOSION} = 147
, {\b ICON_1UP} = 148
, {\b ICON_PLAYER} = 149
, {\b ICON_PLAYER_JUMP} = 150
, {\b ICON_KEY} = 151
, {\b ICON_DEMON} = 152
, {\b ICON_TEXT_POPUP} = 153
, {\b ICON_GEAR_EX} = 154
, {\b ICON_CRACK} = 155
, {\b ICON_CRACK_POINTS} = 156
, {\b ICON_STAR} = 157
, {\b ICON_DOOR} = 158
, {\b ICON_EXIT} = 159
, {\b ICON_MODE_2D} = 160
, {\b ICON_MODE_3D} = 161
, {\b ICON_CUBE} = 162
, {\b ICON_CUBE_FACE_TOP} = 163
, {\b ICON_CUBE_FACE_LEFT} = 164
, {\b ICON_CUBE_FACE_FRONT} = 165
, {\b ICON_CUBE_FACE_BOTTOM} = 166
, {\b ICON_CUBE_FACE_RIGHT} = 167
, {\b ICON_CUBE_FACE_BACK} = 168
, {\b ICON_CAMERA} = 169
, {\b ICON_SPECIAL} = 170
, {\b ICON_LINK_NET} = 171
, {\b ICON_LINK_BOXES} = 172
, {\b ICON_LINK_MULTI} = 173
, {\b ICON_LINK} = 174
, {\b ICON_LINK_BROKE} = 175
, {\b ICON_TEXT_NOTES} = 176
, {\b ICON_NOTEBOOK} = 177
, {\b ICON_SUITCASE} = 178
, {\b ICON_SUITCASE_ZIP} = 179
, {\b ICON_MAILBOX} = 180
, {\b ICON_MONITOR} = 181
, {\b ICON_PRINTER} = 182
, {\b ICON_PHOTO_CAMERA} = 183
, {\b ICON_PHOTO_CAMERA_FLASH} = 184
, {\b ICON_HOUSE} = 185
, {\b ICON_HEART} = 186
, {\b ICON_CORNER} = 187
, {\b ICON_VERTICAL_BARS} = 188
, {\b ICON_VERTICAL_BARS_FILL} = 189
, {\b ICON_LIFE_BARS} = 190
, {\b ICON_INFO} = 191
, {\b ICON_CROSSLINE} = 192
, {\b ICON_HELP} = 193
, {\b ICON_FILETYPE_ALPHA} = 194
, {\b ICON_FILETYPE_HOME} = 195
, {\b ICON_LAYERS_VISIBLE} = 196
, {\b ICON_LAYERS} = 197
, {\b ICON_WINDOW} = 198
, {\b ICON_HIDPI} = 199
, {\b ICON_FILETYPE_BINARY} = 200
, {\b ICON_HEX} = 201
, {\b ICON_SHIELD} = 202
, {\b ICON_FILE_NEW} = 203
, {\b ICON_FOLDER_ADD} = 204
, {\b ICON_ALARM} = 205
, {\b ICON_206} = 206
, {\b ICON_207} = 207
, {\b ICON_208} = 208
, {\b ICON_209} = 209
, {\b ICON_210} = 210
, {\b ICON_211} = 211
, {\b ICON_212} = 212
, {\b ICON_213} = 213
, {\b ICON_214} = 214
, {\b ICON_215} = 215
, {\b ICON_216} = 216
, {\b ICON_217} = 217
, {\b ICON_218} = 218
, {\b ICON_219} = 219
, {\b ICON_220} = 220
, {\b ICON_221} = 221
, {\b ICON_222} = 222
, {\b ICON_223} = 223
, {\b ICON_224} = 224
, {\b ICON_225} = 225
, {\b ICON_226} = 226
, {\b ICON_227} = 227
, {\b ICON_228} = 228
, {\b ICON_229} = 229
, {\b ICON_230} = 230
, {\b ICON_231} = 231
, {\b ICON_232} = 232
, {\b ICON_233} = 233
, {\b ICON_234} = 234
, {\b ICON_235} = 235
, {\b ICON_236} = 236
, {\b ICON_237} = 237
, {\b ICON_238} = 238
, {\b ICON_239} = 239
, {\b ICON_240} = 240
, {\b ICON_241} = 241
, {\b ICON_242} = 242
, {\b ICON_243} = 243
, {\b ICON_244} = 244
, {\b ICON_245} = 245
, {\b ICON_246} = 246
, {\b ICON_247} = 247
, {\b ICON_248} = 248
, {\b ICON_249} = 249
, {\b ICON_250} = 250
, {\b ICON_251} = 251
, {\b ICON_252} = 252
, {\b ICON_253} = 253
, {\b ICON_254} = 254
, {\b ICON_255} = 255
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiEnable} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiDisable} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiLock} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiUnlock} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b bool} {\b GuiIsLocked} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiFade} (float alpha)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiSetState} (int state)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} int {\b GuiGetState} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiSetFont} ({\b Font} font)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b Font} {\b GuiGetFont} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiSetStyle} (int control, int property, int value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} int {\b GuiGetStyle} (int control, int property)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b bool} {\b GuiWindowBox} ({\b Rectangle} bounds, const char *title)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiGroupBox} ({\b Rectangle} bounds, const char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiLine} ({\b Rectangle} bounds, const char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiPanel} ({\b Rectangle} bounds, const char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b Rectangle} {\b GuiScrollPanel} ({\b Rectangle} bounds, const char *text, {\b Rectangle} content, {\b Vector2} *scroll)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiLabel} ({\b Rectangle} bounds, const char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b bool} {\b GuiButton} ({\b Rectangle} bounds, const char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b bool} {\b GuiLabelButton} ({\b Rectangle} bounds, const char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b bool} {\b GuiToggle} ({\b Rectangle} bounds, const char *text, {\b bool} active)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} int {\b GuiToggleGroup} ({\b Rectangle} bounds, const char *text, int active)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b bool} {\b GuiCheckBox} ({\b Rectangle} bounds, const char *text, {\b bool} checked)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} int {\b GuiComboBox} ({\b Rectangle} bounds, const char *text, int active)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b bool} {\b GuiDropdownBox} ({\b Rectangle} bounds, const char *text, int *active, {\b bool} editMode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b bool} {\b GuiSpinner} ({\b Rectangle} bounds, const char *text, int *value, int minValue, int maxValue, {\b bool} editMode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b bool} {\b GuiValueBox} ({\b Rectangle} bounds, const char *text, int *value, int minValue, int maxValue, {\b bool} editMode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b bool} {\b GuiTextBox} ({\b Rectangle} bounds, char *text, int textSize, {\b bool} editMode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b bool} {\b GuiTextBoxMulti} ({\b Rectangle} bounds, char *text, int textSize, {\b bool} editMode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} float {\b GuiSlider} ({\b Rectangle} bounds, const char *textLeft, const char *textRight, float value, float minValue, float maxValue)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} float {\b GuiSliderBar} ({\b Rectangle} bounds, const char *textLeft, const char *textRight, float value, float minValue, float maxValue)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} float {\b GuiProgressBar} ({\b Rectangle} bounds, const char *textLeft, const char *textRight, float value, float minValue, float maxValue)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiStatusBar} ({\b Rectangle} bounds, const char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiDummyRec} ({\b Rectangle} bounds, const char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b Vector2} {\b GuiGrid} ({\b Rectangle} bounds, const char *text, float spacing, int subdivs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} int {\b GuiListView} ({\b Rectangle} bounds, const char *text, int *scrollIndex, int active)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} int {\b GuiListViewEx} ({\b Rectangle} bounds, const char **text, int count, int *focus, int *scrollIndex, int active)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} int {\b GuiMessageBox} ({\b Rectangle} bounds, const char *title, const char *message, const char *buttons)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} int {\b GuiTextInputBox} ({\b Rectangle} bounds, const char *title, const char *message, const char *buttons, char *text, int textMaxSize, int *secretViewActive)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b Color} {\b GuiColorPicker} ({\b Rectangle} bounds, const char *text, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b Color} {\b GuiColorPanel} ({\b Rectangle} bounds, const char *text, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} float {\b GuiColorBarAlpha} ({\b Rectangle} bounds, const char *text, float alpha)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} float {\b GuiColorBarHue} ({\b Rectangle} bounds, const char *text, float value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiLoadStyle} (const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiLoadStyleDefault} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} const char * {\b GuiIconText} (int iconId, const char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiDrawIcon} (int iconId, int posX, int posY, int pixelSize, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} unsigned int * {\b GuiGetIcons} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} unsigned int * {\b GuiGetIconData} (int iconId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiSetIconData} (int iconId, unsigned int *data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiSetIconScale} (unsigned int scale)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiSetIconPixel} (int iconId, int x, int y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiClearIconPixel} (int iconId, int x, int y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b bool} {\b GuiCheckIconPixel} (int iconId, int x, int y)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v RAYGUI_CALLOC\:raygui.h}
{\xe \v raygui.h\:RAYGUI_CALLOC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RAYGUI_CALLOC( n,  sz)\~ calloc(n,sz)}}
\par
{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RAYGUI_FREE\:raygui.h}
{\xe \v raygui.h\:RAYGUI_FREE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RAYGUI_FREE( p)\~ free(p)}}
\par
{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RAYGUI_LOG\:raygui.h}
{\xe \v raygui.h\:RAYGUI_LOG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RAYGUI_LOG(  {\i ...})\~ printf(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RAYGUI_MALLOC\:raygui.h}
{\xe \v raygui.h\:RAYGUI_MALLOC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RAYGUI_MALLOC( sz)\~ malloc(sz)}}
\par
{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RAYGUI_SUPPORT_LOG_INFO\:raygui.h}
{\xe \v raygui.h\:RAYGUI_SUPPORT_LOG_INFO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RAYGUI_SUPPORT_LOG_INFO}}
\par
{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RAYGUI_VERSION\:raygui.h}
{\xe \v raygui.h\:RAYGUI_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RAYGUI_VERSION\~ "3.2"}}
\par
{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RAYGUIAPI\:raygui.h}
{\xe \v raygui.h\:RAYGUIAPI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RAYGUIAPI}}
\par
{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SCROLLBAR_LEFT_SIDE\:raygui.h}
{\xe \v raygui.h\:SCROLLBAR_LEFT_SIDE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SCROLLBAR_LEFT_SIDE\~ 0}}
\par
{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SCROLLBAR_RIGHT_SIDE\:raygui.h}
{\xe \v raygui.h\:SCROLLBAR_RIGHT_SIDE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SCROLLBAR_RIGHT_SIDE\~ 1}}
\par
{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es dos tipos\par
\pard\plain 
{\xe \v GuiStyleProp\:raygui.h}
{\xe \v raygui.h\:GuiStyleProp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b GuiStyleProp} {\b GuiStyleProp}}}
\par
{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 
{\xe \v GuiCheckBoxProperty\:raygui.h}
{\xe \v raygui.h\:GuiCheckBoxProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiCheckBoxProperty}}}
\par
{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v CHECK_PADDING\:raygui.h}
{\xe \v raygui.h\:CHECK_PADDING}
{\qr CHECK_PADDING{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 425              \{\par
426     CHECK_PADDING = 16          {\cf20 // CheckBox internal check padding}\par
427 \} GuiCheckBoxProperty;\par
}
}
{\xe \v GuiColorPickerProperty\:raygui.h}
{\xe \v raygui.h\:GuiColorPickerProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiColorPickerProperty}}}
\par
{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v COLOR_SELECTOR_SIZE\:raygui.h}
{\xe \v raygui.h\:COLOR_SELECTOR_SIZE}
{\qr COLOR_SELECTOR_SIZE{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
\cell }{\cell }{\row }
{\xe \v HUEBAR_WIDTH\:raygui.h}
{\xe \v raygui.h\:HUEBAR_WIDTH}
{\qr HUEBAR_WIDTH{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
\cell }{\cell }{\row }
{\xe \v HUEBAR_PADDING\:raygui.h}
{\xe \v raygui.h\:HUEBAR_PADDING}
{\qr HUEBAR_PADDING{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
\cell }{\cell }{\row }
{\xe \v HUEBAR_SELECTOR_HEIGHT\:raygui.h}
{\xe \v raygui.h\:HUEBAR_SELECTOR_HEIGHT}
{\qr HUEBAR_SELECTOR_HEIGHT{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
\cell }{\cell }{\row }
{\xe \v HUEBAR_SELECTOR_OVERFLOW\:raygui.h}
{\xe \v raygui.h\:HUEBAR_SELECTOR_OVERFLOW}
{\qr HUEBAR_SELECTOR_OVERFLOW{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 462              \{\par
463     COLOR_SELECTOR_SIZE = 16,\par
464     HUEBAR_WIDTH,               {\cf20 // ColorPicker right hue bar width}\par
465     HUEBAR_PADDING,             {\cf20 // ColorPicker right hue bar separation from panel}\par
466     HUEBAR_SELECTOR_HEIGHT,     {\cf20 // ColorPicker right hue bar selector height}\par
467     HUEBAR_SELECTOR_OVERFLOW    {\cf20 // ColorPicker right hue bar selector overflow}\par
468 \} GuiColorPickerProperty;\par
}
}
{\xe \v GuiComboBoxProperty\:raygui.h}
{\xe \v raygui.h\:GuiComboBoxProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiComboBoxProperty}}}
\par
{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v COMBO_BUTTON_WIDTH\:raygui.h}
{\xe \v raygui.h\:COMBO_BUTTON_WIDTH}
{\qr COMBO_BUTTON_WIDTH{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
\cell }{\cell }{\row }
{\xe \v COMBO_BUTTON_SPACING\:raygui.h}
{\xe \v raygui.h\:COMBO_BUTTON_SPACING}
{\qr COMBO_BUTTON_SPACING{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 430              \{\par
431     COMBO_BUTTON_WIDTH = 16,    {\cf20 // ComboBox right button width}\par
432     COMBO_BUTTON_SPACING        {\cf20 // ComboBox button separation}\par
433 \} GuiComboBoxProperty;\par
}
}
{\xe \v GuiControl\:raygui.h}
{\xe \v raygui.h\:GuiControl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiControl}}}
\par
{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v DEFAULT\:raygui.h}
{\xe \v raygui.h\:DEFAULT}
{\qr DEFAULT{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
\cell }{\cell }{\row }
{\xe \v LABEL\:raygui.h}
{\xe \v raygui.h\:LABEL}
{\qr LABEL{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
\cell }{\cell }{\row }
{\xe \v BUTTON\:raygui.h}
{\xe \v raygui.h\:BUTTON}
{\qr BUTTON{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
\cell }{\cell }{\row }
{\xe \v TOGGLE\:raygui.h}
{\xe \v raygui.h\:TOGGLE}
{\qr TOGGLE{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
\cell }{\cell }{\row }
{\xe \v SLIDER\:raygui.h}
{\xe \v raygui.h\:SLIDER}
{\qr SLIDER{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
\cell }{\cell }{\row }
{\xe \v PROGRESSBAR\:raygui.h}
{\xe \v raygui.h\:PROGRESSBAR}
{\qr PROGRESSBAR{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
\cell }{\cell }{\row }
{\xe \v CHECKBOX\:raygui.h}
{\xe \v raygui.h\:CHECKBOX}
{\qr CHECKBOX{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
\cell }{\cell }{\row }
{\xe \v COMBOBOX\:raygui.h}
{\xe \v raygui.h\:COMBOBOX}
{\qr COMBOBOX{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
\cell }{\cell }{\row }
{\xe \v DROPDOWNBOX\:raygui.h}
{\xe \v raygui.h\:DROPDOWNBOX}
{\qr DROPDOWNBOX{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
\cell }{\cell }{\row }
{\xe \v TEXTBOX\:raygui.h}
{\xe \v raygui.h\:TEXTBOX}
{\qr TEXTBOX{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
\cell }{\cell }{\row }
{\xe \v VALUEBOX\:raygui.h}
{\xe \v raygui.h\:VALUEBOX}
{\qr VALUEBOX{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
\cell }{\cell }{\row }
{\xe \v SPINNER\:raygui.h}
{\xe \v raygui.h\:SPINNER}
{\qr SPINNER{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
\cell }{\cell }{\row }
{\xe \v LISTVIEW\:raygui.h}
{\xe \v raygui.h\:LISTVIEW}
{\qr LISTVIEW{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
\cell }{\cell }{\row }
{\xe \v COLORPICKER\:raygui.h}
{\xe \v raygui.h\:COLORPICKER}
{\qr COLORPICKER{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
\cell }{\cell }{\row }
{\xe \v SCROLLBAR\:raygui.h}
{\xe \v raygui.h\:SCROLLBAR}
{\qr SCROLLBAR{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
\cell }{\cell }{\row }
{\xe \v STATUSBAR\:raygui.h}
{\xe \v raygui.h\:STATUSBAR}
{\qr STATUSBAR{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 337              \{\par
338     {\cf20 // Default -> populates to all controls when set}\par
339     DEFAULT = 0,\par
340     {\cf20 // Basic controls}\par
341     LABEL,          {\cf20 // Used also for: LABELBUTTON}\par
342     BUTTON,\par
343     TOGGLE,         {\cf20 // Used also for: TOGGLEGROUP}\par
344     SLIDER,         {\cf20 // Used also for: SLIDERBAR}\par
345     PROGRESSBAR,\par
346     CHECKBOX,\par
347     COMBOBOX,\par
348     DROPDOWNBOX,\par
349     TEXTBOX,        {\cf20 // Used also for: TEXTBOXMULTI}\par
350     VALUEBOX,\par
351     SPINNER,        {\cf20 // Uses: BUTTON, VALUEBOX}\par
352     LISTVIEW,\par
353     COLORPICKER,\par
354     SCROLLBAR,\par
355     STATUSBAR\par
356 \} GuiControl;\par
}
}
{\xe \v GuiControlProperty\:raygui.h}
{\xe \v raygui.h\:GuiControlProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiControlProperty}}}
\par
{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v BORDER_COLOR_NORMAL\:raygui.h}
{\xe \v raygui.h\:BORDER_COLOR_NORMAL}
{\qr BORDER_COLOR_NORMAL{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
\cell }{\cell }{\row }
{\xe \v BASE_COLOR_NORMAL\:raygui.h}
{\xe \v raygui.h\:BASE_COLOR_NORMAL}
{\qr BASE_COLOR_NORMAL{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
\cell }{\cell }{\row }
{\xe \v TEXT_COLOR_NORMAL\:raygui.h}
{\xe \v raygui.h\:TEXT_COLOR_NORMAL}
{\qr TEXT_COLOR_NORMAL{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
\cell }{\cell }{\row }
{\xe \v BORDER_COLOR_FOCUSED\:raygui.h}
{\xe \v raygui.h\:BORDER_COLOR_FOCUSED}
{\qr BORDER_COLOR_FOCUSED{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
\cell }{\cell }{\row }
{\xe \v BASE_COLOR_FOCUSED\:raygui.h}
{\xe \v raygui.h\:BASE_COLOR_FOCUSED}
{\qr BASE_COLOR_FOCUSED{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
\cell }{\cell }{\row }
{\xe \v TEXT_COLOR_FOCUSED\:raygui.h}
{\xe \v raygui.h\:TEXT_COLOR_FOCUSED}
{\qr TEXT_COLOR_FOCUSED{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
\cell }{\cell }{\row }
{\xe \v BORDER_COLOR_PRESSED\:raygui.h}
{\xe \v raygui.h\:BORDER_COLOR_PRESSED}
{\qr BORDER_COLOR_PRESSED{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
\cell }{\cell }{\row }
{\xe \v BASE_COLOR_PRESSED\:raygui.h}
{\xe \v raygui.h\:BASE_COLOR_PRESSED}
{\qr BASE_COLOR_PRESSED{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
\cell }{\cell }{\row }
{\xe \v TEXT_COLOR_PRESSED\:raygui.h}
{\xe \v raygui.h\:TEXT_COLOR_PRESSED}
{\qr TEXT_COLOR_PRESSED{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
\cell }{\cell }{\row }
{\xe \v BORDER_COLOR_DISABLED\:raygui.h}
{\xe \v raygui.h\:BORDER_COLOR_DISABLED}
{\qr BORDER_COLOR_DISABLED{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
\cell }{\cell }{\row }
{\xe \v BASE_COLOR_DISABLED\:raygui.h}
{\xe \v raygui.h\:BASE_COLOR_DISABLED}
{\qr BASE_COLOR_DISABLED{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
\cell }{\cell }{\row }
{\xe \v TEXT_COLOR_DISABLED\:raygui.h}
{\xe \v raygui.h\:TEXT_COLOR_DISABLED}
{\qr TEXT_COLOR_DISABLED{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
\cell }{\cell }{\row }
{\xe \v BORDER_WIDTH\:raygui.h}
{\xe \v raygui.h\:BORDER_WIDTH}
{\qr BORDER_WIDTH{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
\cell }{\cell }{\row }
{\xe \v TEXT_PADDING\:raygui.h}
{\xe \v raygui.h\:TEXT_PADDING}
{\qr TEXT_PADDING{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
\cell }{\cell }{\row }
{\xe \v TEXT_ALIGNMENT\:raygui.h}
{\xe \v raygui.h\:TEXT_ALIGNMENT}
{\qr TEXT_ALIGNMENT{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
\cell }{\cell }{\row }
{\xe \v RESERVED\:raygui.h}
{\xe \v raygui.h\:RESERVED}
{\qr RESERVED{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 360              \{\par
361     BORDER_COLOR_NORMAL = 0,\par
362     BASE_COLOR_NORMAL,\par
363     TEXT_COLOR_NORMAL,\par
364     BORDER_COLOR_FOCUSED,\par
365     BASE_COLOR_FOCUSED,\par
366     TEXT_COLOR_FOCUSED,\par
367     BORDER_COLOR_PRESSED,\par
368     BASE_COLOR_PRESSED,\par
369     TEXT_COLOR_PRESSED,\par
370     BORDER_COLOR_DISABLED,\par
371     BASE_COLOR_DISABLED,\par
372     TEXT_COLOR_DISABLED,\par
373     BORDER_WIDTH,\par
374     TEXT_PADDING,\par
375     TEXT_ALIGNMENT,\par
376     RESERVED\par
377 \} GuiControlProperty;\par
}
}
{\xe \v GuiDefaultProperty\:raygui.h}
{\xe \v raygui.h\:GuiDefaultProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiDefaultProperty}}}
\par
{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v TEXT_SIZE\:raygui.h}
{\xe \v raygui.h\:TEXT_SIZE}
{\qr TEXT_SIZE{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
\cell }{\cell }{\row }
{\xe \v TEXT_SPACING\:raygui.h}
{\xe \v raygui.h\:TEXT_SPACING}
{\qr TEXT_SPACING{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
\cell }{\cell }{\row }
{\xe \v LINE_COLOR\:raygui.h}
{\xe \v raygui.h\:LINE_COLOR}
{\qr LINE_COLOR{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
\cell }{\cell }{\row }
{\xe \v BACKGROUND_COLOR\:raygui.h}
{\xe \v raygui.h\:BACKGROUND_COLOR}
{\qr BACKGROUND_COLOR{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 385              \{\par
386     TEXT_SIZE = 16,             {\cf20 // Text size (glyphs max height)}\par
387     TEXT_SPACING,               {\cf20 // Text spacing between glyphs}\par
388     LINE_COLOR,                 {\cf20 // Line control color}\par
389     BACKGROUND_COLOR,           {\cf20 // Background color}\par
390 \} GuiDefaultProperty;\par
}
}
{\xe \v GuiDropdownBoxProperty\:raygui.h}
{\xe \v raygui.h\:GuiDropdownBoxProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiDropdownBoxProperty}}}
\par
{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ARROW_PADDING\:raygui.h}
{\xe \v raygui.h\:ARROW_PADDING}
{\qr ARROW_PADDING{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
\cell }{\cell }{\row }
{\xe \v DROPDOWN_ITEMS_SPACING\:raygui.h}
{\xe \v raygui.h\:DROPDOWN_ITEMS_SPACING}
{\qr DROPDOWN_ITEMS_SPACING{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 436              \{\par
437     ARROW_PADDING = 16,         {\cf20 // DropdownBox arrow separation from border and items}\par
438     DROPDOWN_ITEMS_SPACING      {\cf20 // DropdownBox items separation}\par
439 \} GuiDropdownBoxProperty;\par
}
}
{\xe \v GuiIconName\:raygui.h}
{\xe \v raygui.h\:GuiIconName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiIconName}}}
\par
{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ICON_NONE\:raygui.h}
{\xe \v raygui.h\:ICON_NONE}
{\qr ICON_NONE{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
\cell }{\cell }{\row }
{\xe \v ICON_FOLDER_FILE_OPEN\:raygui.h}
{\xe \v raygui.h\:ICON_FOLDER_FILE_OPEN}
{\qr ICON_FOLDER_FILE_OPEN{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
\cell }{\cell }{\row }
{\xe \v ICON_FILE_SAVE_CLASSIC\:raygui.h}
{\xe \v raygui.h\:ICON_FILE_SAVE_CLASSIC}
{\qr ICON_FILE_SAVE_CLASSIC{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
\cell }{\cell }{\row }
{\xe \v ICON_FOLDER_OPEN\:raygui.h}
{\xe \v raygui.h\:ICON_FOLDER_OPEN}
{\qr ICON_FOLDER_OPEN{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
\cell }{\cell }{\row }
{\xe \v ICON_FOLDER_SAVE\:raygui.h}
{\xe \v raygui.h\:ICON_FOLDER_SAVE}
{\qr ICON_FOLDER_SAVE{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
\cell }{\cell }{\row }
{\xe \v ICON_FILE_OPEN\:raygui.h}
{\xe \v raygui.h\:ICON_FILE_OPEN}
{\qr ICON_FILE_OPEN{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
\cell }{\cell }{\row }
{\xe \v ICON_FILE_SAVE\:raygui.h}
{\xe \v raygui.h\:ICON_FILE_SAVE}
{\qr ICON_FILE_SAVE{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
\cell }{\cell }{\row }
{\xe \v ICON_FILE_EXPORT\:raygui.h}
{\xe \v raygui.h\:ICON_FILE_EXPORT}
{\qr ICON_FILE_EXPORT{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
\cell }{\cell }{\row }
{\xe \v ICON_FILE_ADD\:raygui.h}
{\xe \v raygui.h\:ICON_FILE_ADD}
{\qr ICON_FILE_ADD{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
\cell }{\cell }{\row }
{\xe \v ICON_FILE_DELETE\:raygui.h}
{\xe \v raygui.h\:ICON_FILE_DELETE}
{\qr ICON_FILE_DELETE{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
\cell }{\cell }{\row }
{\xe \v ICON_FILETYPE_TEXT\:raygui.h}
{\xe \v raygui.h\:ICON_FILETYPE_TEXT}
{\qr ICON_FILETYPE_TEXT{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
\cell }{\cell }{\row }
{\xe \v ICON_FILETYPE_AUDIO\:raygui.h}
{\xe \v raygui.h\:ICON_FILETYPE_AUDIO}
{\qr ICON_FILETYPE_AUDIO{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
\cell }{\cell }{\row }
{\xe \v ICON_FILETYPE_IMAGE\:raygui.h}
{\xe \v raygui.h\:ICON_FILETYPE_IMAGE}
{\qr ICON_FILETYPE_IMAGE{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
\cell }{\cell }{\row }
{\xe \v ICON_FILETYPE_PLAY\:raygui.h}
{\xe \v raygui.h\:ICON_FILETYPE_PLAY}
{\qr ICON_FILETYPE_PLAY{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
\cell }{\cell }{\row }
{\xe \v ICON_FILETYPE_VIDEO\:raygui.h}
{\xe \v raygui.h\:ICON_FILETYPE_VIDEO}
{\qr ICON_FILETYPE_VIDEO{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
\cell }{\cell }{\row }
{\xe \v ICON_FILETYPE_INFO\:raygui.h}
{\xe \v raygui.h\:ICON_FILETYPE_INFO}
{\qr ICON_FILETYPE_INFO{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
\cell }{\cell }{\row }
{\xe \v ICON_FILE_COPY\:raygui.h}
{\xe \v raygui.h\:ICON_FILE_COPY}
{\qr ICON_FILE_COPY{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
\cell }{\cell }{\row }
{\xe \v ICON_FILE_CUT\:raygui.h}
{\xe \v raygui.h\:ICON_FILE_CUT}
{\qr ICON_FILE_CUT{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
\cell }{\cell }{\row }
{\xe \v ICON_FILE_PASTE\:raygui.h}
{\xe \v raygui.h\:ICON_FILE_PASTE}
{\qr ICON_FILE_PASTE{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
\cell }{\cell }{\row }
{\xe \v ICON_CURSOR_HAND\:raygui.h}
{\xe \v raygui.h\:ICON_CURSOR_HAND}
{\qr ICON_CURSOR_HAND{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
\cell }{\cell }{\row }
{\xe \v ICON_CURSOR_POINTER\:raygui.h}
{\xe \v raygui.h\:ICON_CURSOR_POINTER}
{\qr ICON_CURSOR_POINTER{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
\cell }{\cell }{\row }
{\xe \v ICON_CURSOR_CLASSIC\:raygui.h}
{\xe \v raygui.h\:ICON_CURSOR_CLASSIC}
{\qr ICON_CURSOR_CLASSIC{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
\cell }{\cell }{\row }
{\xe \v ICON_PENCIL\:raygui.h}
{\xe \v raygui.h\:ICON_PENCIL}
{\qr ICON_PENCIL{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
\cell }{\cell }{\row }
{\xe \v ICON_PENCIL_BIG\:raygui.h}
{\xe \v raygui.h\:ICON_PENCIL_BIG}
{\qr ICON_PENCIL_BIG{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
\cell }{\cell }{\row }
{\xe \v ICON_BRUSH_CLASSIC\:raygui.h}
{\xe \v raygui.h\:ICON_BRUSH_CLASSIC}
{\qr ICON_BRUSH_CLASSIC{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
\cell }{\cell }{\row }
{\xe \v ICON_BRUSH_PAINTER\:raygui.h}
{\xe \v raygui.h\:ICON_BRUSH_PAINTER}
{\qr ICON_BRUSH_PAINTER{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
\cell }{\cell }{\row }
{\xe \v ICON_WATER_DROP\:raygui.h}
{\xe \v raygui.h\:ICON_WATER_DROP}
{\qr ICON_WATER_DROP{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
\cell }{\cell }{\row }
{\xe \v ICON_COLOR_PICKER\:raygui.h}
{\xe \v raygui.h\:ICON_COLOR_PICKER}
{\qr ICON_COLOR_PICKER{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
\cell }{\cell }{\row }
{\xe \v ICON_RUBBER\:raygui.h}
{\xe \v raygui.h\:ICON_RUBBER}
{\qr ICON_RUBBER{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
\cell }{\cell }{\row }
{\xe \v ICON_COLOR_BUCKET\:raygui.h}
{\xe \v raygui.h\:ICON_COLOR_BUCKET}
{\qr ICON_COLOR_BUCKET{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
\cell }{\cell }{\row }
{\xe \v ICON_TEXT_T\:raygui.h}
{\xe \v raygui.h\:ICON_TEXT_T}
{\qr ICON_TEXT_T{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
\cell }{\cell }{\row }
{\xe \v ICON_TEXT_A\:raygui.h}
{\xe \v raygui.h\:ICON_TEXT_A}
{\qr ICON_TEXT_A{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
\cell }{\cell }{\row }
{\xe \v ICON_SCALE\:raygui.h}
{\xe \v raygui.h\:ICON_SCALE}
{\qr ICON_SCALE{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
\cell }{\cell }{\row }
{\xe \v ICON_RESIZE\:raygui.h}
{\xe \v raygui.h\:ICON_RESIZE}
{\qr ICON_RESIZE{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
\cell }{\cell }{\row }
{\xe \v ICON_FILTER_POINT\:raygui.h}
{\xe \v raygui.h\:ICON_FILTER_POINT}
{\qr ICON_FILTER_POINT{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
\cell }{\cell }{\row }
{\xe \v ICON_FILTER_BILINEAR\:raygui.h}
{\xe \v raygui.h\:ICON_FILTER_BILINEAR}
{\qr ICON_FILTER_BILINEAR{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
\cell }{\cell }{\row }
{\xe \v ICON_CROP\:raygui.h}
{\xe \v raygui.h\:ICON_CROP}
{\qr ICON_CROP{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
\cell }{\cell }{\row }
{\xe \v ICON_CROP_ALPHA\:raygui.h}
{\xe \v raygui.h\:ICON_CROP_ALPHA}
{\qr ICON_CROP_ALPHA{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
\cell }{\cell }{\row }
{\xe \v ICON_SQUARE_TOGGLE\:raygui.h}
{\xe \v raygui.h\:ICON_SQUARE_TOGGLE}
{\qr ICON_SQUARE_TOGGLE{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
\cell }{\cell }{\row }
{\xe \v ICON_SYMMETRY\:raygui.h}
{\xe \v raygui.h\:ICON_SYMMETRY}
{\qr ICON_SYMMETRY{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
\cell }{\cell }{\row }
{\xe \v ICON_SYMMETRY_HORIZONTAL\:raygui.h}
{\xe \v raygui.h\:ICON_SYMMETRY_HORIZONTAL}
{\qr ICON_SYMMETRY_HORIZONTAL{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
\cell }{\cell }{\row }
{\xe \v ICON_SYMMETRY_VERTICAL\:raygui.h}
{\xe \v raygui.h\:ICON_SYMMETRY_VERTICAL}
{\qr ICON_SYMMETRY_VERTICAL{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
\cell }{\cell }{\row }
{\xe \v ICON_LENS\:raygui.h}
{\xe \v raygui.h\:ICON_LENS}
{\qr ICON_LENS{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
\cell }{\cell }{\row }
{\xe \v ICON_LENS_BIG\:raygui.h}
{\xe \v raygui.h\:ICON_LENS_BIG}
{\qr ICON_LENS_BIG{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
\cell }{\cell }{\row }
{\xe \v ICON_EYE_ON\:raygui.h}
{\xe \v raygui.h\:ICON_EYE_ON}
{\qr ICON_EYE_ON{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
\cell }{\cell }{\row }
{\xe \v ICON_EYE_OFF\:raygui.h}
{\xe \v raygui.h\:ICON_EYE_OFF}
{\qr ICON_EYE_OFF{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
\cell }{\cell }{\row }
{\xe \v ICON_FILTER_TOP\:raygui.h}
{\xe \v raygui.h\:ICON_FILTER_TOP}
{\qr ICON_FILTER_TOP{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
\cell }{\cell }{\row }
{\xe \v ICON_FILTER\:raygui.h}
{\xe \v raygui.h\:ICON_FILTER}
{\qr ICON_FILTER{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
\cell }{\cell }{\row }
{\xe \v ICON_TARGET_POINT\:raygui.h}
{\xe \v raygui.h\:ICON_TARGET_POINT}
{\qr ICON_TARGET_POINT{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
\cell }{\cell }{\row }
{\xe \v ICON_TARGET_SMALL\:raygui.h}
{\xe \v raygui.h\:ICON_TARGET_SMALL}
{\qr ICON_TARGET_SMALL{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
\cell }{\cell }{\row }
{\xe \v ICON_TARGET_BIG\:raygui.h}
{\xe \v raygui.h\:ICON_TARGET_BIG}
{\qr ICON_TARGET_BIG{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
\cell }{\cell }{\row }
{\xe \v ICON_TARGET_MOVE\:raygui.h}
{\xe \v raygui.h\:ICON_TARGET_MOVE}
{\qr ICON_TARGET_MOVE{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
\cell }{\cell }{\row }
{\xe \v ICON_CURSOR_MOVE\:raygui.h}
{\xe \v raygui.h\:ICON_CURSOR_MOVE}
{\qr ICON_CURSOR_MOVE{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
\cell }{\cell }{\row }
{\xe \v ICON_CURSOR_SCALE\:raygui.h}
{\xe \v raygui.h\:ICON_CURSOR_SCALE}
{\qr ICON_CURSOR_SCALE{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
\cell }{\cell }{\row }
{\xe \v ICON_CURSOR_SCALE_RIGHT\:raygui.h}
{\xe \v raygui.h\:ICON_CURSOR_SCALE_RIGHT}
{\qr ICON_CURSOR_SCALE_RIGHT{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
\cell }{\cell }{\row }
{\xe \v ICON_CURSOR_SCALE_LEFT\:raygui.h}
{\xe \v raygui.h\:ICON_CURSOR_SCALE_LEFT}
{\qr ICON_CURSOR_SCALE_LEFT{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
\cell }{\cell }{\row }
{\xe \v ICON_UNDO\:raygui.h}
{\xe \v raygui.h\:ICON_UNDO}
{\qr ICON_UNDO{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
\cell }{\cell }{\row }
{\xe \v ICON_REDO\:raygui.h}
{\xe \v raygui.h\:ICON_REDO}
{\qr ICON_REDO{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
\cell }{\cell }{\row }
{\xe \v ICON_REREDO\:raygui.h}
{\xe \v raygui.h\:ICON_REREDO}
{\qr ICON_REREDO{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
\cell }{\cell }{\row }
{\xe \v ICON_MUTATE\:raygui.h}
{\xe \v raygui.h\:ICON_MUTATE}
{\qr ICON_MUTATE{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
\cell }{\cell }{\row }
{\xe \v ICON_ROTATE\:raygui.h}
{\xe \v raygui.h\:ICON_ROTATE}
{\qr ICON_ROTATE{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
\cell }{\cell }{\row }
{\xe \v ICON_REPEAT\:raygui.h}
{\xe \v raygui.h\:ICON_REPEAT}
{\qr ICON_REPEAT{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
\cell }{\cell }{\row }
{\xe \v ICON_SHUFFLE\:raygui.h}
{\xe \v raygui.h\:ICON_SHUFFLE}
{\qr ICON_SHUFFLE{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
\cell }{\cell }{\row }
{\xe \v ICON_EMPTYBOX\:raygui.h}
{\xe \v raygui.h\:ICON_EMPTYBOX}
{\qr ICON_EMPTYBOX{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
\cell }{\cell }{\row }
{\xe \v ICON_TARGET\:raygui.h}
{\xe \v raygui.h\:ICON_TARGET}
{\qr ICON_TARGET{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
\cell }{\cell }{\row }
{\xe \v ICON_TARGET_SMALL_FILL\:raygui.h}
{\xe \v raygui.h\:ICON_TARGET_SMALL_FILL}
{\qr ICON_TARGET_SMALL_FILL{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
\cell }{\cell }{\row }
{\xe \v ICON_TARGET_BIG_FILL\:raygui.h}
{\xe \v raygui.h\:ICON_TARGET_BIG_FILL}
{\qr ICON_TARGET_BIG_FILL{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
\cell }{\cell }{\row }
{\xe \v ICON_TARGET_MOVE_FILL\:raygui.h}
{\xe \v raygui.h\:ICON_TARGET_MOVE_FILL}
{\qr ICON_TARGET_MOVE_FILL{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
\cell }{\cell }{\row }
{\xe \v ICON_CURSOR_MOVE_FILL\:raygui.h}
{\xe \v raygui.h\:ICON_CURSOR_MOVE_FILL}
{\qr ICON_CURSOR_MOVE_FILL{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
\cell }{\cell }{\row }
{\xe \v ICON_CURSOR_SCALE_FILL\:raygui.h}
{\xe \v raygui.h\:ICON_CURSOR_SCALE_FILL}
{\qr ICON_CURSOR_SCALE_FILL{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
\cell }{\cell }{\row }
{\xe \v ICON_CURSOR_SCALE_RIGHT_FILL\:raygui.h}
{\xe \v raygui.h\:ICON_CURSOR_SCALE_RIGHT_FILL}
{\qr ICON_CURSOR_SCALE_RIGHT_FILL{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
\cell }{\cell }{\row }
{\xe \v ICON_CURSOR_SCALE_LEFT_FILL\:raygui.h}
{\xe \v raygui.h\:ICON_CURSOR_SCALE_LEFT_FILL}
{\qr ICON_CURSOR_SCALE_LEFT_FILL{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
\cell }{\cell }{\row }
{\xe \v ICON_UNDO_FILL\:raygui.h}
{\xe \v raygui.h\:ICON_UNDO_FILL}
{\qr ICON_UNDO_FILL{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
\cell }{\cell }{\row }
{\xe \v ICON_REDO_FILL\:raygui.h}
{\xe \v raygui.h\:ICON_REDO_FILL}
{\qr ICON_REDO_FILL{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
\cell }{\cell }{\row }
{\xe \v ICON_REREDO_FILL\:raygui.h}
{\xe \v raygui.h\:ICON_REREDO_FILL}
{\qr ICON_REREDO_FILL{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
\cell }{\cell }{\row }
{\xe \v ICON_MUTATE_FILL\:raygui.h}
{\xe \v raygui.h\:ICON_MUTATE_FILL}
{\qr ICON_MUTATE_FILL{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
\cell }{\cell }{\row }
{\xe \v ICON_ROTATE_FILL\:raygui.h}
{\xe \v raygui.h\:ICON_ROTATE_FILL}
{\qr ICON_ROTATE_FILL{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
\cell }{\cell }{\row }
{\xe \v ICON_REPEAT_FILL\:raygui.h}
{\xe \v raygui.h\:ICON_REPEAT_FILL}
{\qr ICON_REPEAT_FILL{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
\cell }{\cell }{\row }
{\xe \v ICON_SHUFFLE_FILL\:raygui.h}
{\xe \v raygui.h\:ICON_SHUFFLE_FILL}
{\qr ICON_SHUFFLE_FILL{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
\cell }{\cell }{\row }
{\xe \v ICON_EMPTYBOX_SMALL\:raygui.h}
{\xe \v raygui.h\:ICON_EMPTYBOX_SMALL}
{\qr ICON_EMPTYBOX_SMALL{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
\cell }{\cell }{\row }
{\xe \v ICON_BOX\:raygui.h}
{\xe \v raygui.h\:ICON_BOX}
{\qr ICON_BOX{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_TOP\:raygui.h}
{\xe \v raygui.h\:ICON_BOX_TOP}
{\qr ICON_BOX_TOP{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_TOP_RIGHT\:raygui.h}
{\xe \v raygui.h\:ICON_BOX_TOP_RIGHT}
{\qr ICON_BOX_TOP_RIGHT{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_RIGHT\:raygui.h}
{\xe \v raygui.h\:ICON_BOX_RIGHT}
{\qr ICON_BOX_RIGHT{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_BOTTOM_RIGHT\:raygui.h}
{\xe \v raygui.h\:ICON_BOX_BOTTOM_RIGHT}
{\qr ICON_BOX_BOTTOM_RIGHT{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_BOTTOM\:raygui.h}
{\xe \v raygui.h\:ICON_BOX_BOTTOM}
{\qr ICON_BOX_BOTTOM{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_BOTTOM_LEFT\:raygui.h}
{\xe \v raygui.h\:ICON_BOX_BOTTOM_LEFT}
{\qr ICON_BOX_BOTTOM_LEFT{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_LEFT\:raygui.h}
{\xe \v raygui.h\:ICON_BOX_LEFT}
{\qr ICON_BOX_LEFT{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_TOP_LEFT\:raygui.h}
{\xe \v raygui.h\:ICON_BOX_TOP_LEFT}
{\qr ICON_BOX_TOP_LEFT{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_CENTER\:raygui.h}
{\xe \v raygui.h\:ICON_BOX_CENTER}
{\qr ICON_BOX_CENTER{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_CIRCLE_MASK\:raygui.h}
{\xe \v raygui.h\:ICON_BOX_CIRCLE_MASK}
{\qr ICON_BOX_CIRCLE_MASK{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
\cell }{\cell }{\row }
{\xe \v ICON_POT\:raygui.h}
{\xe \v raygui.h\:ICON_POT}
{\qr ICON_POT{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
\cell }{\cell }{\row }
{\xe \v ICON_ALPHA_MULTIPLY\:raygui.h}
{\xe \v raygui.h\:ICON_ALPHA_MULTIPLY}
{\qr ICON_ALPHA_MULTIPLY{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
\cell }{\cell }{\row }
{\xe \v ICON_ALPHA_CLEAR\:raygui.h}
{\xe \v raygui.h\:ICON_ALPHA_CLEAR}
{\qr ICON_ALPHA_CLEAR{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
\cell }{\cell }{\row }
{\xe \v ICON_DITHERING\:raygui.h}
{\xe \v raygui.h\:ICON_DITHERING}
{\qr ICON_DITHERING{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
\cell }{\cell }{\row }
{\xe \v ICON_MIPMAPS\:raygui.h}
{\xe \v raygui.h\:ICON_MIPMAPS}
{\qr ICON_MIPMAPS{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_GRID\:raygui.h}
{\xe \v raygui.h\:ICON_BOX_GRID}
{\qr ICON_BOX_GRID{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
\cell }{\cell }{\row }
{\xe \v ICON_GRID\:raygui.h}
{\xe \v raygui.h\:ICON_GRID}
{\qr ICON_GRID{\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_CORNERS_SMALL\:raygui.h}
{\xe \v raygui.h\:ICON_BOX_CORNERS_SMALL}
{\qr ICON_BOX_CORNERS_SMALL{\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_CORNERS_BIG\:raygui.h}
{\xe \v raygui.h\:ICON_BOX_CORNERS_BIG}
{\qr ICON_BOX_CORNERS_BIG{\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
\cell }{\cell }{\row }
{\xe \v ICON_FOUR_BOXES\:raygui.h}
{\xe \v raygui.h\:ICON_FOUR_BOXES}
{\qr ICON_FOUR_BOXES{\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
\cell }{\cell }{\row }
{\xe \v ICON_GRID_FILL\:raygui.h}
{\xe \v raygui.h\:ICON_GRID_FILL}
{\qr ICON_GRID_FILL{\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_MULTISIZE\:raygui.h}
{\xe \v raygui.h\:ICON_BOX_MULTISIZE}
{\qr ICON_BOX_MULTISIZE{\bkmkstart AAAAAAAAWN}
{\bkmkend AAAAAAAAWN}
\cell }{\cell }{\row }
{\xe \v ICON_ZOOM_SMALL\:raygui.h}
{\xe \v raygui.h\:ICON_ZOOM_SMALL}
{\qr ICON_ZOOM_SMALL{\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
\cell }{\cell }{\row }
{\xe \v ICON_ZOOM_MEDIUM\:raygui.h}
{\xe \v raygui.h\:ICON_ZOOM_MEDIUM}
{\qr ICON_ZOOM_MEDIUM{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
\cell }{\cell }{\row }
{\xe \v ICON_ZOOM_BIG\:raygui.h}
{\xe \v raygui.h\:ICON_ZOOM_BIG}
{\qr ICON_ZOOM_BIG{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
\cell }{\cell }{\row }
{\xe \v ICON_ZOOM_ALL\:raygui.h}
{\xe \v raygui.h\:ICON_ZOOM_ALL}
{\qr ICON_ZOOM_ALL{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
\cell }{\cell }{\row }
{\xe \v ICON_ZOOM_CENTER\:raygui.h}
{\xe \v raygui.h\:ICON_ZOOM_CENTER}
{\qr ICON_ZOOM_CENTER{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_DOTS_SMALL\:raygui.h}
{\xe \v raygui.h\:ICON_BOX_DOTS_SMALL}
{\qr ICON_BOX_DOTS_SMALL{\bkmkstart AAAAAAAAWT}
{\bkmkend AAAAAAAAWT}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_DOTS_BIG\:raygui.h}
{\xe \v raygui.h\:ICON_BOX_DOTS_BIG}
{\qr ICON_BOX_DOTS_BIG{\bkmkstart AAAAAAAAWU}
{\bkmkend AAAAAAAAWU}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_CONCENTRIC\:raygui.h}
{\xe \v raygui.h\:ICON_BOX_CONCENTRIC}
{\qr ICON_BOX_CONCENTRIC{\bkmkstart AAAAAAAAWV}
{\bkmkend AAAAAAAAWV}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_GRID_BIG\:raygui.h}
{\xe \v raygui.h\:ICON_BOX_GRID_BIG}
{\qr ICON_BOX_GRID_BIG{\bkmkstart AAAAAAAAWW}
{\bkmkend AAAAAAAAWW}
\cell }{\cell }{\row }
{\xe \v ICON_OK_TICK\:raygui.h}
{\xe \v raygui.h\:ICON_OK_TICK}
{\qr ICON_OK_TICK{\bkmkstart AAAAAAAAWX}
{\bkmkend AAAAAAAAWX}
\cell }{\cell }{\row }
{\xe \v ICON_CROSS\:raygui.h}
{\xe \v raygui.h\:ICON_CROSS}
{\qr ICON_CROSS{\bkmkstart AAAAAAAAWY}
{\bkmkend AAAAAAAAWY}
\cell }{\cell }{\row }
{\xe \v ICON_ARROW_LEFT\:raygui.h}
{\xe \v raygui.h\:ICON_ARROW_LEFT}
{\qr ICON_ARROW_LEFT{\bkmkstart AAAAAAAAWZ}
{\bkmkend AAAAAAAAWZ}
\cell }{\cell }{\row }
{\xe \v ICON_ARROW_RIGHT\:raygui.h}
{\xe \v raygui.h\:ICON_ARROW_RIGHT}
{\qr ICON_ARROW_RIGHT{\bkmkstart AAAAAAAAXA}
{\bkmkend AAAAAAAAXA}
\cell }{\cell }{\row }
{\xe \v ICON_ARROW_DOWN\:raygui.h}
{\xe \v raygui.h\:ICON_ARROW_DOWN}
{\qr ICON_ARROW_DOWN{\bkmkstart AAAAAAAAXB}
{\bkmkend AAAAAAAAXB}
\cell }{\cell }{\row }
{\xe \v ICON_ARROW_UP\:raygui.h}
{\xe \v raygui.h\:ICON_ARROW_UP}
{\qr ICON_ARROW_UP{\bkmkstart AAAAAAAAXC}
{\bkmkend AAAAAAAAXC}
\cell }{\cell }{\row }
{\xe \v ICON_ARROW_LEFT_FILL\:raygui.h}
{\xe \v raygui.h\:ICON_ARROW_LEFT_FILL}
{\qr ICON_ARROW_LEFT_FILL{\bkmkstart AAAAAAAAXD}
{\bkmkend AAAAAAAAXD}
\cell }{\cell }{\row }
{\xe \v ICON_ARROW_RIGHT_FILL\:raygui.h}
{\xe \v raygui.h\:ICON_ARROW_RIGHT_FILL}
{\qr ICON_ARROW_RIGHT_FILL{\bkmkstart AAAAAAAAXE}
{\bkmkend AAAAAAAAXE}
\cell }{\cell }{\row }
{\xe \v ICON_ARROW_DOWN_FILL\:raygui.h}
{\xe \v raygui.h\:ICON_ARROW_DOWN_FILL}
{\qr ICON_ARROW_DOWN_FILL{\bkmkstart AAAAAAAAXF}
{\bkmkend AAAAAAAAXF}
\cell }{\cell }{\row }
{\xe \v ICON_ARROW_UP_FILL\:raygui.h}
{\xe \v raygui.h\:ICON_ARROW_UP_FILL}
{\qr ICON_ARROW_UP_FILL{\bkmkstart AAAAAAAAXG}
{\bkmkend AAAAAAAAXG}
\cell }{\cell }{\row }
{\xe \v ICON_AUDIO\:raygui.h}
{\xe \v raygui.h\:ICON_AUDIO}
{\qr ICON_AUDIO{\bkmkstart AAAAAAAAXH}
{\bkmkend AAAAAAAAXH}
\cell }{\cell }{\row }
{\xe \v ICON_FX\:raygui.h}
{\xe \v raygui.h\:ICON_FX}
{\qr ICON_FX{\bkmkstart AAAAAAAAXI}
{\bkmkend AAAAAAAAXI}
\cell }{\cell }{\row }
{\xe \v ICON_WAVE\:raygui.h}
{\xe \v raygui.h\:ICON_WAVE}
{\qr ICON_WAVE{\bkmkstart AAAAAAAAXJ}
{\bkmkend AAAAAAAAXJ}
\cell }{\cell }{\row }
{\xe \v ICON_WAVE_SINUS\:raygui.h}
{\xe \v raygui.h\:ICON_WAVE_SINUS}
{\qr ICON_WAVE_SINUS{\bkmkstart AAAAAAAAXK}
{\bkmkend AAAAAAAAXK}
\cell }{\cell }{\row }
{\xe \v ICON_WAVE_SQUARE\:raygui.h}
{\xe \v raygui.h\:ICON_WAVE_SQUARE}
{\qr ICON_WAVE_SQUARE{\bkmkstart AAAAAAAAXL}
{\bkmkend AAAAAAAAXL}
\cell }{\cell }{\row }
{\xe \v ICON_WAVE_TRIANGULAR\:raygui.h}
{\xe \v raygui.h\:ICON_WAVE_TRIANGULAR}
{\qr ICON_WAVE_TRIANGULAR{\bkmkstart AAAAAAAAXM}
{\bkmkend AAAAAAAAXM}
\cell }{\cell }{\row }
{\xe \v ICON_CROSS_SMALL\:raygui.h}
{\xe \v raygui.h\:ICON_CROSS_SMALL}
{\qr ICON_CROSS_SMALL{\bkmkstart AAAAAAAAXN}
{\bkmkend AAAAAAAAXN}
\cell }{\cell }{\row }
{\xe \v ICON_PLAYER_PREVIOUS\:raygui.h}
{\xe \v raygui.h\:ICON_PLAYER_PREVIOUS}
{\qr ICON_PLAYER_PREVIOUS{\bkmkstart AAAAAAAAXO}
{\bkmkend AAAAAAAAXO}
\cell }{\cell }{\row }
{\xe \v ICON_PLAYER_PLAY_BACK\:raygui.h}
{\xe \v raygui.h\:ICON_PLAYER_PLAY_BACK}
{\qr ICON_PLAYER_PLAY_BACK{\bkmkstart AAAAAAAAXP}
{\bkmkend AAAAAAAAXP}
\cell }{\cell }{\row }
{\xe \v ICON_PLAYER_PLAY\:raygui.h}
{\xe \v raygui.h\:ICON_PLAYER_PLAY}
{\qr ICON_PLAYER_PLAY{\bkmkstart AAAAAAAAXQ}
{\bkmkend AAAAAAAAXQ}
\cell }{\cell }{\row }
{\xe \v ICON_PLAYER_PAUSE\:raygui.h}
{\xe \v raygui.h\:ICON_PLAYER_PAUSE}
{\qr ICON_PLAYER_PAUSE{\bkmkstart AAAAAAAAXR}
{\bkmkend AAAAAAAAXR}
\cell }{\cell }{\row }
{\xe \v ICON_PLAYER_STOP\:raygui.h}
{\xe \v raygui.h\:ICON_PLAYER_STOP}
{\qr ICON_PLAYER_STOP{\bkmkstart AAAAAAAAXS}
{\bkmkend AAAAAAAAXS}
\cell }{\cell }{\row }
{\xe \v ICON_PLAYER_NEXT\:raygui.h}
{\xe \v raygui.h\:ICON_PLAYER_NEXT}
{\qr ICON_PLAYER_NEXT{\bkmkstart AAAAAAAAXT}
{\bkmkend AAAAAAAAXT}
\cell }{\cell }{\row }
{\xe \v ICON_PLAYER_RECORD\:raygui.h}
{\xe \v raygui.h\:ICON_PLAYER_RECORD}
{\qr ICON_PLAYER_RECORD{\bkmkstart AAAAAAAAXU}
{\bkmkend AAAAAAAAXU}
\cell }{\cell }{\row }
{\xe \v ICON_MAGNET\:raygui.h}
{\xe \v raygui.h\:ICON_MAGNET}
{\qr ICON_MAGNET{\bkmkstart AAAAAAAAXV}
{\bkmkend AAAAAAAAXV}
\cell }{\cell }{\row }
{\xe \v ICON_LOCK_CLOSE\:raygui.h}
{\xe \v raygui.h\:ICON_LOCK_CLOSE}
{\qr ICON_LOCK_CLOSE{\bkmkstart AAAAAAAAXW}
{\bkmkend AAAAAAAAXW}
\cell }{\cell }{\row }
{\xe \v ICON_LOCK_OPEN\:raygui.h}
{\xe \v raygui.h\:ICON_LOCK_OPEN}
{\qr ICON_LOCK_OPEN{\bkmkstart AAAAAAAAXX}
{\bkmkend AAAAAAAAXX}
\cell }{\cell }{\row }
{\xe \v ICON_CLOCK\:raygui.h}
{\xe \v raygui.h\:ICON_CLOCK}
{\qr ICON_CLOCK{\bkmkstart AAAAAAAAXY}
{\bkmkend AAAAAAAAXY}
\cell }{\cell }{\row }
{\xe \v ICON_TOOLS\:raygui.h}
{\xe \v raygui.h\:ICON_TOOLS}
{\qr ICON_TOOLS{\bkmkstart AAAAAAAAXZ}
{\bkmkend AAAAAAAAXZ}
\cell }{\cell }{\row }
{\xe \v ICON_GEAR\:raygui.h}
{\xe \v raygui.h\:ICON_GEAR}
{\qr ICON_GEAR{\bkmkstart AAAAAAAAYA}
{\bkmkend AAAAAAAAYA}
\cell }{\cell }{\row }
{\xe \v ICON_GEAR_BIG\:raygui.h}
{\xe \v raygui.h\:ICON_GEAR_BIG}
{\qr ICON_GEAR_BIG{\bkmkstart AAAAAAAAYB}
{\bkmkend AAAAAAAAYB}
\cell }{\cell }{\row }
{\xe \v ICON_BIN\:raygui.h}
{\xe \v raygui.h\:ICON_BIN}
{\qr ICON_BIN{\bkmkstart AAAAAAAAYC}
{\bkmkend AAAAAAAAYC}
\cell }{\cell }{\row }
{\xe \v ICON_HAND_POINTER\:raygui.h}
{\xe \v raygui.h\:ICON_HAND_POINTER}
{\qr ICON_HAND_POINTER{\bkmkstart AAAAAAAAYD}
{\bkmkend AAAAAAAAYD}
\cell }{\cell }{\row }
{\xe \v ICON_LASER\:raygui.h}
{\xe \v raygui.h\:ICON_LASER}
{\qr ICON_LASER{\bkmkstart AAAAAAAAYE}
{\bkmkend AAAAAAAAYE}
\cell }{\cell }{\row }
{\xe \v ICON_COIN\:raygui.h}
{\xe \v raygui.h\:ICON_COIN}
{\qr ICON_COIN{\bkmkstart AAAAAAAAYF}
{\bkmkend AAAAAAAAYF}
\cell }{\cell }{\row }
{\xe \v ICON_EXPLOSION\:raygui.h}
{\xe \v raygui.h\:ICON_EXPLOSION}
{\qr ICON_EXPLOSION{\bkmkstart AAAAAAAAYG}
{\bkmkend AAAAAAAAYG}
\cell }{\cell }{\row }
{\xe \v ICON_1UP\:raygui.h}
{\xe \v raygui.h\:ICON_1UP}
{\qr ICON_1UP{\bkmkstart AAAAAAAAYH}
{\bkmkend AAAAAAAAYH}
\cell }{\cell }{\row }
{\xe \v ICON_PLAYER\:raygui.h}
{\xe \v raygui.h\:ICON_PLAYER}
{\qr ICON_PLAYER{\bkmkstart AAAAAAAAYI}
{\bkmkend AAAAAAAAYI}
\cell }{\cell }{\row }
{\xe \v ICON_PLAYER_JUMP\:raygui.h}
{\xe \v raygui.h\:ICON_PLAYER_JUMP}
{\qr ICON_PLAYER_JUMP{\bkmkstart AAAAAAAAYJ}
{\bkmkend AAAAAAAAYJ}
\cell }{\cell }{\row }
{\xe \v ICON_KEY\:raygui.h}
{\xe \v raygui.h\:ICON_KEY}
{\qr ICON_KEY{\bkmkstart AAAAAAAAYK}
{\bkmkend AAAAAAAAYK}
\cell }{\cell }{\row }
{\xe \v ICON_DEMON\:raygui.h}
{\xe \v raygui.h\:ICON_DEMON}
{\qr ICON_DEMON{\bkmkstart AAAAAAAAYL}
{\bkmkend AAAAAAAAYL}
\cell }{\cell }{\row }
{\xe \v ICON_TEXT_POPUP\:raygui.h}
{\xe \v raygui.h\:ICON_TEXT_POPUP}
{\qr ICON_TEXT_POPUP{\bkmkstart AAAAAAAAYM}
{\bkmkend AAAAAAAAYM}
\cell }{\cell }{\row }
{\xe \v ICON_GEAR_EX\:raygui.h}
{\xe \v raygui.h\:ICON_GEAR_EX}
{\qr ICON_GEAR_EX{\bkmkstart AAAAAAAAYN}
{\bkmkend AAAAAAAAYN}
\cell }{\cell }{\row }
{\xe \v ICON_CRACK\:raygui.h}
{\xe \v raygui.h\:ICON_CRACK}
{\qr ICON_CRACK{\bkmkstart AAAAAAAAYO}
{\bkmkend AAAAAAAAYO}
\cell }{\cell }{\row }
{\xe \v ICON_CRACK_POINTS\:raygui.h}
{\xe \v raygui.h\:ICON_CRACK_POINTS}
{\qr ICON_CRACK_POINTS{\bkmkstart AAAAAAAAYP}
{\bkmkend AAAAAAAAYP}
\cell }{\cell }{\row }
{\xe \v ICON_STAR\:raygui.h}
{\xe \v raygui.h\:ICON_STAR}
{\qr ICON_STAR{\bkmkstart AAAAAAAAYQ}
{\bkmkend AAAAAAAAYQ}
\cell }{\cell }{\row }
{\xe \v ICON_DOOR\:raygui.h}
{\xe \v raygui.h\:ICON_DOOR}
{\qr ICON_DOOR{\bkmkstart AAAAAAAAYR}
{\bkmkend AAAAAAAAYR}
\cell }{\cell }{\row }
{\xe \v ICON_EXIT\:raygui.h}
{\xe \v raygui.h\:ICON_EXIT}
{\qr ICON_EXIT{\bkmkstart AAAAAAAAYS}
{\bkmkend AAAAAAAAYS}
\cell }{\cell }{\row }
{\xe \v ICON_MODE_2D\:raygui.h}
{\xe \v raygui.h\:ICON_MODE_2D}
{\qr ICON_MODE_2D{\bkmkstart AAAAAAAAYT}
{\bkmkend AAAAAAAAYT}
\cell }{\cell }{\row }
{\xe \v ICON_MODE_3D\:raygui.h}
{\xe \v raygui.h\:ICON_MODE_3D}
{\qr ICON_MODE_3D{\bkmkstart AAAAAAAAYU}
{\bkmkend AAAAAAAAYU}
\cell }{\cell }{\row }
{\xe \v ICON_CUBE\:raygui.h}
{\xe \v raygui.h\:ICON_CUBE}
{\qr ICON_CUBE{\bkmkstart AAAAAAAAYV}
{\bkmkend AAAAAAAAYV}
\cell }{\cell }{\row }
{\xe \v ICON_CUBE_FACE_TOP\:raygui.h}
{\xe \v raygui.h\:ICON_CUBE_FACE_TOP}
{\qr ICON_CUBE_FACE_TOP{\bkmkstart AAAAAAAAYW}
{\bkmkend AAAAAAAAYW}
\cell }{\cell }{\row }
{\xe \v ICON_CUBE_FACE_LEFT\:raygui.h}
{\xe \v raygui.h\:ICON_CUBE_FACE_LEFT}
{\qr ICON_CUBE_FACE_LEFT{\bkmkstart AAAAAAAAYX}
{\bkmkend AAAAAAAAYX}
\cell }{\cell }{\row }
{\xe \v ICON_CUBE_FACE_FRONT\:raygui.h}
{\xe \v raygui.h\:ICON_CUBE_FACE_FRONT}
{\qr ICON_CUBE_FACE_FRONT{\bkmkstart AAAAAAAAYY}
{\bkmkend AAAAAAAAYY}
\cell }{\cell }{\row }
{\xe \v ICON_CUBE_FACE_BOTTOM\:raygui.h}
{\xe \v raygui.h\:ICON_CUBE_FACE_BOTTOM}
{\qr ICON_CUBE_FACE_BOTTOM{\bkmkstart AAAAAAAAYZ}
{\bkmkend AAAAAAAAYZ}
\cell }{\cell }{\row }
{\xe \v ICON_CUBE_FACE_RIGHT\:raygui.h}
{\xe \v raygui.h\:ICON_CUBE_FACE_RIGHT}
{\qr ICON_CUBE_FACE_RIGHT{\bkmkstart AAAAAAAAZA}
{\bkmkend AAAAAAAAZA}
\cell }{\cell }{\row }
{\xe \v ICON_CUBE_FACE_BACK\:raygui.h}
{\xe \v raygui.h\:ICON_CUBE_FACE_BACK}
{\qr ICON_CUBE_FACE_BACK{\bkmkstart AAAAAAAAZB}
{\bkmkend AAAAAAAAZB}
\cell }{\cell }{\row }
{\xe \v ICON_CAMERA\:raygui.h}
{\xe \v raygui.h\:ICON_CAMERA}
{\qr ICON_CAMERA{\bkmkstart AAAAAAAAZC}
{\bkmkend AAAAAAAAZC}
\cell }{\cell }{\row }
{\xe \v ICON_SPECIAL\:raygui.h}
{\xe \v raygui.h\:ICON_SPECIAL}
{\qr ICON_SPECIAL{\bkmkstart AAAAAAAAZD}
{\bkmkend AAAAAAAAZD}
\cell }{\cell }{\row }
{\xe \v ICON_LINK_NET\:raygui.h}
{\xe \v raygui.h\:ICON_LINK_NET}
{\qr ICON_LINK_NET{\bkmkstart AAAAAAAAZE}
{\bkmkend AAAAAAAAZE}
\cell }{\cell }{\row }
{\xe \v ICON_LINK_BOXES\:raygui.h}
{\xe \v raygui.h\:ICON_LINK_BOXES}
{\qr ICON_LINK_BOXES{\bkmkstart AAAAAAAAZF}
{\bkmkend AAAAAAAAZF}
\cell }{\cell }{\row }
{\xe \v ICON_LINK_MULTI\:raygui.h}
{\xe \v raygui.h\:ICON_LINK_MULTI}
{\qr ICON_LINK_MULTI{\bkmkstart AAAAAAAAZG}
{\bkmkend AAAAAAAAZG}
\cell }{\cell }{\row }
{\xe \v ICON_LINK\:raygui.h}
{\xe \v raygui.h\:ICON_LINK}
{\qr ICON_LINK{\bkmkstart AAAAAAAAZH}
{\bkmkend AAAAAAAAZH}
\cell }{\cell }{\row }
{\xe \v ICON_LINK_BROKE\:raygui.h}
{\xe \v raygui.h\:ICON_LINK_BROKE}
{\qr ICON_LINK_BROKE{\bkmkstart AAAAAAAAZI}
{\bkmkend AAAAAAAAZI}
\cell }{\cell }{\row }
{\xe \v ICON_TEXT_NOTES\:raygui.h}
{\xe \v raygui.h\:ICON_TEXT_NOTES}
{\qr ICON_TEXT_NOTES{\bkmkstart AAAAAAAAZJ}
{\bkmkend AAAAAAAAZJ}
\cell }{\cell }{\row }
{\xe \v ICON_NOTEBOOK\:raygui.h}
{\xe \v raygui.h\:ICON_NOTEBOOK}
{\qr ICON_NOTEBOOK{\bkmkstart AAAAAAAAZK}
{\bkmkend AAAAAAAAZK}
\cell }{\cell }{\row }
{\xe \v ICON_SUITCASE\:raygui.h}
{\xe \v raygui.h\:ICON_SUITCASE}
{\qr ICON_SUITCASE{\bkmkstart AAAAAAAAZL}
{\bkmkend AAAAAAAAZL}
\cell }{\cell }{\row }
{\xe \v ICON_SUITCASE_ZIP\:raygui.h}
{\xe \v raygui.h\:ICON_SUITCASE_ZIP}
{\qr ICON_SUITCASE_ZIP{\bkmkstart AAAAAAAAZM}
{\bkmkend AAAAAAAAZM}
\cell }{\cell }{\row }
{\xe \v ICON_MAILBOX\:raygui.h}
{\xe \v raygui.h\:ICON_MAILBOX}
{\qr ICON_MAILBOX{\bkmkstart AAAAAAAAZN}
{\bkmkend AAAAAAAAZN}
\cell }{\cell }{\row }
{\xe \v ICON_MONITOR\:raygui.h}
{\xe \v raygui.h\:ICON_MONITOR}
{\qr ICON_MONITOR{\bkmkstart AAAAAAAAZO}
{\bkmkend AAAAAAAAZO}
\cell }{\cell }{\row }
{\xe \v ICON_PRINTER\:raygui.h}
{\xe \v raygui.h\:ICON_PRINTER}
{\qr ICON_PRINTER{\bkmkstart AAAAAAAAZP}
{\bkmkend AAAAAAAAZP}
\cell }{\cell }{\row }
{\xe \v ICON_PHOTO_CAMERA\:raygui.h}
{\xe \v raygui.h\:ICON_PHOTO_CAMERA}
{\qr ICON_PHOTO_CAMERA{\bkmkstart AAAAAAAAZQ}
{\bkmkend AAAAAAAAZQ}
\cell }{\cell }{\row }
{\xe \v ICON_PHOTO_CAMERA_FLASH\:raygui.h}
{\xe \v raygui.h\:ICON_PHOTO_CAMERA_FLASH}
{\qr ICON_PHOTO_CAMERA_FLASH{\bkmkstart AAAAAAAAZR}
{\bkmkend AAAAAAAAZR}
\cell }{\cell }{\row }
{\xe \v ICON_HOUSE\:raygui.h}
{\xe \v raygui.h\:ICON_HOUSE}
{\qr ICON_HOUSE{\bkmkstart AAAAAAAAZS}
{\bkmkend AAAAAAAAZS}
\cell }{\cell }{\row }
{\xe \v ICON_HEART\:raygui.h}
{\xe \v raygui.h\:ICON_HEART}
{\qr ICON_HEART{\bkmkstart AAAAAAAAZT}
{\bkmkend AAAAAAAAZT}
\cell }{\cell }{\row }
{\xe \v ICON_CORNER\:raygui.h}
{\xe \v raygui.h\:ICON_CORNER}
{\qr ICON_CORNER{\bkmkstart AAAAAAAAZU}
{\bkmkend AAAAAAAAZU}
\cell }{\cell }{\row }
{\xe \v ICON_VERTICAL_BARS\:raygui.h}
{\xe \v raygui.h\:ICON_VERTICAL_BARS}
{\qr ICON_VERTICAL_BARS{\bkmkstart AAAAAAAAZV}
{\bkmkend AAAAAAAAZV}
\cell }{\cell }{\row }
{\xe \v ICON_VERTICAL_BARS_FILL\:raygui.h}
{\xe \v raygui.h\:ICON_VERTICAL_BARS_FILL}
{\qr ICON_VERTICAL_BARS_FILL{\bkmkstart AAAAAAAAZW}
{\bkmkend AAAAAAAAZW}
\cell }{\cell }{\row }
{\xe \v ICON_LIFE_BARS\:raygui.h}
{\xe \v raygui.h\:ICON_LIFE_BARS}
{\qr ICON_LIFE_BARS{\bkmkstart AAAAAAAAZX}
{\bkmkend AAAAAAAAZX}
\cell }{\cell }{\row }
{\xe \v ICON_INFO\:raygui.h}
{\xe \v raygui.h\:ICON_INFO}
{\qr ICON_INFO{\bkmkstart AAAAAAAAZY}
{\bkmkend AAAAAAAAZY}
\cell }{\cell }{\row }
{\xe \v ICON_CROSSLINE\:raygui.h}
{\xe \v raygui.h\:ICON_CROSSLINE}
{\qr ICON_CROSSLINE{\bkmkstart AAAAAAAAZZ}
{\bkmkend AAAAAAAAZZ}
\cell }{\cell }{\row }
{\xe \v ICON_HELP\:raygui.h}
{\xe \v raygui.h\:ICON_HELP}
{\qr ICON_HELP{\bkmkstart AAAAAAABAA}
{\bkmkend AAAAAAABAA}
\cell }{\cell }{\row }
{\xe \v ICON_FILETYPE_ALPHA\:raygui.h}
{\xe \v raygui.h\:ICON_FILETYPE_ALPHA}
{\qr ICON_FILETYPE_ALPHA{\bkmkstart AAAAAAABAB}
{\bkmkend AAAAAAABAB}
\cell }{\cell }{\row }
{\xe \v ICON_FILETYPE_HOME\:raygui.h}
{\xe \v raygui.h\:ICON_FILETYPE_HOME}
{\qr ICON_FILETYPE_HOME{\bkmkstart AAAAAAABAC}
{\bkmkend AAAAAAABAC}
\cell }{\cell }{\row }
{\xe \v ICON_LAYERS_VISIBLE\:raygui.h}
{\xe \v raygui.h\:ICON_LAYERS_VISIBLE}
{\qr ICON_LAYERS_VISIBLE{\bkmkstart AAAAAAABAD}
{\bkmkend AAAAAAABAD}
\cell }{\cell }{\row }
{\xe \v ICON_LAYERS\:raygui.h}
{\xe \v raygui.h\:ICON_LAYERS}
{\qr ICON_LAYERS{\bkmkstart AAAAAAABAE}
{\bkmkend AAAAAAABAE}
\cell }{\cell }{\row }
{\xe \v ICON_WINDOW\:raygui.h}
{\xe \v raygui.h\:ICON_WINDOW}
{\qr ICON_WINDOW{\bkmkstart AAAAAAABAF}
{\bkmkend AAAAAAABAF}
\cell }{\cell }{\row }
{\xe \v ICON_HIDPI\:raygui.h}
{\xe \v raygui.h\:ICON_HIDPI}
{\qr ICON_HIDPI{\bkmkstart AAAAAAABAG}
{\bkmkend AAAAAAABAG}
\cell }{\cell }{\row }
{\xe \v ICON_FILETYPE_BINARY\:raygui.h}
{\xe \v raygui.h\:ICON_FILETYPE_BINARY}
{\qr ICON_FILETYPE_BINARY{\bkmkstart AAAAAAABAH}
{\bkmkend AAAAAAABAH}
\cell }{\cell }{\row }
{\xe \v ICON_HEX\:raygui.h}
{\xe \v raygui.h\:ICON_HEX}
{\qr ICON_HEX{\bkmkstart AAAAAAABAI}
{\bkmkend AAAAAAABAI}
\cell }{\cell }{\row }
{\xe \v ICON_SHIELD\:raygui.h}
{\xe \v raygui.h\:ICON_SHIELD}
{\qr ICON_SHIELD{\bkmkstart AAAAAAABAJ}
{\bkmkend AAAAAAABAJ}
\cell }{\cell }{\row }
{\xe \v ICON_FILE_NEW\:raygui.h}
{\xe \v raygui.h\:ICON_FILE_NEW}
{\qr ICON_FILE_NEW{\bkmkstart AAAAAAABAK}
{\bkmkend AAAAAAABAK}
\cell }{\cell }{\row }
{\xe \v ICON_FOLDER_ADD\:raygui.h}
{\xe \v raygui.h\:ICON_FOLDER_ADD}
{\qr ICON_FOLDER_ADD{\bkmkstart AAAAAAABAL}
{\bkmkend AAAAAAABAL}
\cell }{\cell }{\row }
{\xe \v ICON_ALARM\:raygui.h}
{\xe \v raygui.h\:ICON_ALARM}
{\qr ICON_ALARM{\bkmkstart AAAAAAABAM}
{\bkmkend AAAAAAABAM}
\cell }{\cell }{\row }
{\xe \v ICON_206\:raygui.h}
{\xe \v raygui.h\:ICON_206}
{\qr ICON_206{\bkmkstart AAAAAAABAN}
{\bkmkend AAAAAAABAN}
\cell }{\cell }{\row }
{\xe \v ICON_207\:raygui.h}
{\xe \v raygui.h\:ICON_207}
{\qr ICON_207{\bkmkstart AAAAAAABAO}
{\bkmkend AAAAAAABAO}
\cell }{\cell }{\row }
{\xe \v ICON_208\:raygui.h}
{\xe \v raygui.h\:ICON_208}
{\qr ICON_208{\bkmkstart AAAAAAABAP}
{\bkmkend AAAAAAABAP}
\cell }{\cell }{\row }
{\xe \v ICON_209\:raygui.h}
{\xe \v raygui.h\:ICON_209}
{\qr ICON_209{\bkmkstart AAAAAAABAQ}
{\bkmkend AAAAAAABAQ}
\cell }{\cell }{\row }
{\xe \v ICON_210\:raygui.h}
{\xe \v raygui.h\:ICON_210}
{\qr ICON_210{\bkmkstart AAAAAAABAR}
{\bkmkend AAAAAAABAR}
\cell }{\cell }{\row }
{\xe \v ICON_211\:raygui.h}
{\xe \v raygui.h\:ICON_211}
{\qr ICON_211{\bkmkstart AAAAAAABAS}
{\bkmkend AAAAAAABAS}
\cell }{\cell }{\row }
{\xe \v ICON_212\:raygui.h}
{\xe \v raygui.h\:ICON_212}
{\qr ICON_212{\bkmkstart AAAAAAABAT}
{\bkmkend AAAAAAABAT}
\cell }{\cell }{\row }
{\xe \v ICON_213\:raygui.h}
{\xe \v raygui.h\:ICON_213}
{\qr ICON_213{\bkmkstart AAAAAAABAU}
{\bkmkend AAAAAAABAU}
\cell }{\cell }{\row }
{\xe \v ICON_214\:raygui.h}
{\xe \v raygui.h\:ICON_214}
{\qr ICON_214{\bkmkstart AAAAAAABAV}
{\bkmkend AAAAAAABAV}
\cell }{\cell }{\row }
{\xe \v ICON_215\:raygui.h}
{\xe \v raygui.h\:ICON_215}
{\qr ICON_215{\bkmkstart AAAAAAABAW}
{\bkmkend AAAAAAABAW}
\cell }{\cell }{\row }
{\xe \v ICON_216\:raygui.h}
{\xe \v raygui.h\:ICON_216}
{\qr ICON_216{\bkmkstart AAAAAAABAX}
{\bkmkend AAAAAAABAX}
\cell }{\cell }{\row }
{\xe \v ICON_217\:raygui.h}
{\xe \v raygui.h\:ICON_217}
{\qr ICON_217{\bkmkstart AAAAAAABAY}
{\bkmkend AAAAAAABAY}
\cell }{\cell }{\row }
{\xe \v ICON_218\:raygui.h}
{\xe \v raygui.h\:ICON_218}
{\qr ICON_218{\bkmkstart AAAAAAABAZ}
{\bkmkend AAAAAAABAZ}
\cell }{\cell }{\row }
{\xe \v ICON_219\:raygui.h}
{\xe \v raygui.h\:ICON_219}
{\qr ICON_219{\bkmkstart AAAAAAABBA}
{\bkmkend AAAAAAABBA}
\cell }{\cell }{\row }
{\xe \v ICON_220\:raygui.h}
{\xe \v raygui.h\:ICON_220}
{\qr ICON_220{\bkmkstart AAAAAAABBB}
{\bkmkend AAAAAAABBB}
\cell }{\cell }{\row }
{\xe \v ICON_221\:raygui.h}
{\xe \v raygui.h\:ICON_221}
{\qr ICON_221{\bkmkstart AAAAAAABBC}
{\bkmkend AAAAAAABBC}
\cell }{\cell }{\row }
{\xe \v ICON_222\:raygui.h}
{\xe \v raygui.h\:ICON_222}
{\qr ICON_222{\bkmkstart AAAAAAABBD}
{\bkmkend AAAAAAABBD}
\cell }{\cell }{\row }
{\xe \v ICON_223\:raygui.h}
{\xe \v raygui.h\:ICON_223}
{\qr ICON_223{\bkmkstart AAAAAAABBE}
{\bkmkend AAAAAAABBE}
\cell }{\cell }{\row }
{\xe \v ICON_224\:raygui.h}
{\xe \v raygui.h\:ICON_224}
{\qr ICON_224{\bkmkstart AAAAAAABBF}
{\bkmkend AAAAAAABBF}
\cell }{\cell }{\row }
{\xe \v ICON_225\:raygui.h}
{\xe \v raygui.h\:ICON_225}
{\qr ICON_225{\bkmkstart AAAAAAABBG}
{\bkmkend AAAAAAABBG}
\cell }{\cell }{\row }
{\xe \v ICON_226\:raygui.h}
{\xe \v raygui.h\:ICON_226}
{\qr ICON_226{\bkmkstart AAAAAAABBH}
{\bkmkend AAAAAAABBH}
\cell }{\cell }{\row }
{\xe \v ICON_227\:raygui.h}
{\xe \v raygui.h\:ICON_227}
{\qr ICON_227{\bkmkstart AAAAAAABBI}
{\bkmkend AAAAAAABBI}
\cell }{\cell }{\row }
{\xe \v ICON_228\:raygui.h}
{\xe \v raygui.h\:ICON_228}
{\qr ICON_228{\bkmkstart AAAAAAABBJ}
{\bkmkend AAAAAAABBJ}
\cell }{\cell }{\row }
{\xe \v ICON_229\:raygui.h}
{\xe \v raygui.h\:ICON_229}
{\qr ICON_229{\bkmkstart AAAAAAABBK}
{\bkmkend AAAAAAABBK}
\cell }{\cell }{\row }
{\xe \v ICON_230\:raygui.h}
{\xe \v raygui.h\:ICON_230}
{\qr ICON_230{\bkmkstart AAAAAAABBL}
{\bkmkend AAAAAAABBL}
\cell }{\cell }{\row }
{\xe \v ICON_231\:raygui.h}
{\xe \v raygui.h\:ICON_231}
{\qr ICON_231{\bkmkstart AAAAAAABBM}
{\bkmkend AAAAAAABBM}
\cell }{\cell }{\row }
{\xe \v ICON_232\:raygui.h}
{\xe \v raygui.h\:ICON_232}
{\qr ICON_232{\bkmkstart AAAAAAABBN}
{\bkmkend AAAAAAABBN}
\cell }{\cell }{\row }
{\xe \v ICON_233\:raygui.h}
{\xe \v raygui.h\:ICON_233}
{\qr ICON_233{\bkmkstart AAAAAAABBO}
{\bkmkend AAAAAAABBO}
\cell }{\cell }{\row }
{\xe \v ICON_234\:raygui.h}
{\xe \v raygui.h\:ICON_234}
{\qr ICON_234{\bkmkstart AAAAAAABBP}
{\bkmkend AAAAAAABBP}
\cell }{\cell }{\row }
{\xe \v ICON_235\:raygui.h}
{\xe \v raygui.h\:ICON_235}
{\qr ICON_235{\bkmkstart AAAAAAABBQ}
{\bkmkend AAAAAAABBQ}
\cell }{\cell }{\row }
{\xe \v ICON_236\:raygui.h}
{\xe \v raygui.h\:ICON_236}
{\qr ICON_236{\bkmkstart AAAAAAABBR}
{\bkmkend AAAAAAABBR}
\cell }{\cell }{\row }
{\xe \v ICON_237\:raygui.h}
{\xe \v raygui.h\:ICON_237}
{\qr ICON_237{\bkmkstart AAAAAAABBS}
{\bkmkend AAAAAAABBS}
\cell }{\cell }{\row }
{\xe \v ICON_238\:raygui.h}
{\xe \v raygui.h\:ICON_238}
{\qr ICON_238{\bkmkstart AAAAAAABBT}
{\bkmkend AAAAAAABBT}
\cell }{\cell }{\row }
{\xe \v ICON_239\:raygui.h}
{\xe \v raygui.h\:ICON_239}
{\qr ICON_239{\bkmkstart AAAAAAABBU}
{\bkmkend AAAAAAABBU}
\cell }{\cell }{\row }
{\xe \v ICON_240\:raygui.h}
{\xe \v raygui.h\:ICON_240}
{\qr ICON_240{\bkmkstart AAAAAAABBV}
{\bkmkend AAAAAAABBV}
\cell }{\cell }{\row }
{\xe \v ICON_241\:raygui.h}
{\xe \v raygui.h\:ICON_241}
{\qr ICON_241{\bkmkstart AAAAAAABBW}
{\bkmkend AAAAAAABBW}
\cell }{\cell }{\row }
{\xe \v ICON_242\:raygui.h}
{\xe \v raygui.h\:ICON_242}
{\qr ICON_242{\bkmkstart AAAAAAABBX}
{\bkmkend AAAAAAABBX}
\cell }{\cell }{\row }
{\xe \v ICON_243\:raygui.h}
{\xe \v raygui.h\:ICON_243}
{\qr ICON_243{\bkmkstart AAAAAAABBY}
{\bkmkend AAAAAAABBY}
\cell }{\cell }{\row }
{\xe \v ICON_244\:raygui.h}
{\xe \v raygui.h\:ICON_244}
{\qr ICON_244{\bkmkstart AAAAAAABBZ}
{\bkmkend AAAAAAABBZ}
\cell }{\cell }{\row }
{\xe \v ICON_245\:raygui.h}
{\xe \v raygui.h\:ICON_245}
{\qr ICON_245{\bkmkstart AAAAAAABCA}
{\bkmkend AAAAAAABCA}
\cell }{\cell }{\row }
{\xe \v ICON_246\:raygui.h}
{\xe \v raygui.h\:ICON_246}
{\qr ICON_246{\bkmkstart AAAAAAABCB}
{\bkmkend AAAAAAABCB}
\cell }{\cell }{\row }
{\xe \v ICON_247\:raygui.h}
{\xe \v raygui.h\:ICON_247}
{\qr ICON_247{\bkmkstart AAAAAAABCC}
{\bkmkend AAAAAAABCC}
\cell }{\cell }{\row }
{\xe \v ICON_248\:raygui.h}
{\xe \v raygui.h\:ICON_248}
{\qr ICON_248{\bkmkstart AAAAAAABCD}
{\bkmkend AAAAAAABCD}
\cell }{\cell }{\row }
{\xe \v ICON_249\:raygui.h}
{\xe \v raygui.h\:ICON_249}
{\qr ICON_249{\bkmkstart AAAAAAABCE}
{\bkmkend AAAAAAABCE}
\cell }{\cell }{\row }
{\xe \v ICON_250\:raygui.h}
{\xe \v raygui.h\:ICON_250}
{\qr ICON_250{\bkmkstart AAAAAAABCF}
{\bkmkend AAAAAAABCF}
\cell }{\cell }{\row }
{\xe \v ICON_251\:raygui.h}
{\xe \v raygui.h\:ICON_251}
{\qr ICON_251{\bkmkstart AAAAAAABCG}
{\bkmkend AAAAAAABCG}
\cell }{\cell }{\row }
{\xe \v ICON_252\:raygui.h}
{\xe \v raygui.h\:ICON_252}
{\qr ICON_252{\bkmkstart AAAAAAABCH}
{\bkmkend AAAAAAABCH}
\cell }{\cell }{\row }
{\xe \v ICON_253\:raygui.h}
{\xe \v raygui.h\:ICON_253}
{\qr ICON_253{\bkmkstart AAAAAAABCI}
{\bkmkend AAAAAAABCI}
\cell }{\cell }{\row }
{\xe \v ICON_254\:raygui.h}
{\xe \v raygui.h\:ICON_254}
{\qr ICON_254{\bkmkstart AAAAAAABCJ}
{\bkmkend AAAAAAABCJ}
\cell }{\cell }{\row }
{\xe \v ICON_255\:raygui.h}
{\xe \v raygui.h\:ICON_255}
{\qr ICON_255{\bkmkstart AAAAAAABCK}
{\bkmkend AAAAAAABCK}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 564              \{\par
565     ICON_NONE                     = 0,\par
566     ICON_FOLDER_FILE_OPEN         = 1,\par
567     ICON_FILE_SAVE_CLASSIC        = 2,\par
568     ICON_FOLDER_OPEN              = 3,\par
569     ICON_FOLDER_SAVE              = 4,\par
570     ICON_FILE_OPEN                = 5,\par
571     ICON_FILE_SAVE                = 6,\par
572     ICON_FILE_EXPORT              = 7,\par
573     ICON_FILE_ADD                 = 8,\par
574     ICON_FILE_DELETE              = 9,\par
575     ICON_FILETYPE_TEXT            = 10,\par
576     ICON_FILETYPE_AUDIO           = 11,\par
577     ICON_FILETYPE_IMAGE           = 12,\par
578     ICON_FILETYPE_PLAY            = 13,\par
579     ICON_FILETYPE_VIDEO           = 14,\par
580     ICON_FILETYPE_INFO            = 15,\par
581     ICON_FILE_COPY                = 16,\par
582     ICON_FILE_CUT                 = 17,\par
583     ICON_FILE_PASTE               = 18,\par
584     ICON_CURSOR_HAND              = 19,\par
585     ICON_CURSOR_POINTER           = 20,\par
586     ICON_CURSOR_CLASSIC           = 21,\par
587     ICON_PENCIL                   = 22,\par
588     ICON_PENCIL_BIG               = 23,\par
589     ICON_BRUSH_CLASSIC            = 24,\par
590     ICON_BRUSH_PAINTER            = 25,\par
591     ICON_WATER_DROP               = 26,\par
592     ICON_COLOR_PICKER             = 27,\par
593     ICON_RUBBER                   = 28,\par
594     ICON_COLOR_BUCKET             = 29,\par
595     ICON_TEXT_T                   = 30,\par
596     ICON_TEXT_A                   = 31,\par
597     ICON_SCALE                    = 32,\par
598     ICON_RESIZE                   = 33,\par
599     ICON_FILTER_POINT             = 34,\par
600     ICON_FILTER_BILINEAR          = 35,\par
601     ICON_CROP                     = 36,\par
602     ICON_CROP_ALPHA               = 37,\par
603     ICON_SQUARE_TOGGLE            = 38,\par
604     ICON_SYMMETRY                 = 39,\par
605     ICON_SYMMETRY_HORIZONTAL      = 40,\par
606     ICON_SYMMETRY_VERTICAL        = 41,\par
607     ICON_LENS                     = 42,\par
608     ICON_LENS_BIG                 = 43,\par
609     ICON_EYE_ON                   = 44,\par
610     ICON_EYE_OFF                  = 45,\par
611     ICON_FILTER_TOP               = 46,\par
612     ICON_FILTER                   = 47,\par
613     ICON_TARGET_POINT             = 48,\par
614     ICON_TARGET_SMALL             = 49,\par
615     ICON_TARGET_BIG               = 50,\par
616     ICON_TARGET_MOVE              = 51,\par
617     ICON_CURSOR_MOVE              = 52,\par
618     ICON_CURSOR_SCALE             = 53,\par
619     ICON_CURSOR_SCALE_RIGHT       = 54,\par
620     ICON_CURSOR_SCALE_LEFT        = 55,\par
621     ICON_UNDO                     = 56,\par
622     ICON_REDO                     = 57,\par
623     ICON_REREDO                   = 58,\par
624     ICON_MUTATE                   = 59,\par
625     ICON_ROTATE                   = 60,\par
626     ICON_REPEAT                   = 61,\par
627     ICON_SHUFFLE                  = 62,\par
628     ICON_EMPTYBOX                 = 63,\par
629     ICON_TARGET                   = 64,\par
630     ICON_TARGET_SMALL_FILL        = 65,\par
631     ICON_TARGET_BIG_FILL          = 66,\par
632     ICON_TARGET_MOVE_FILL         = 67,\par
633     ICON_CURSOR_MOVE_FILL         = 68,\par
634     ICON_CURSOR_SCALE_FILL        = 69,\par
635     ICON_CURSOR_SCALE_RIGHT_FILL  = 70,\par
636     ICON_CURSOR_SCALE_LEFT_FILL   = 71,\par
637     ICON_UNDO_FILL                = 72,\par
638     ICON_REDO_FILL                = 73,\par
639     ICON_REREDO_FILL              = 74,\par
640     ICON_MUTATE_FILL              = 75,\par
641     ICON_ROTATE_FILL              = 76,\par
642     ICON_REPEAT_FILL              = 77,\par
643     ICON_SHUFFLE_FILL             = 78,\par
644     ICON_EMPTYBOX_SMALL           = 79,\par
645     ICON_BOX                      = 80,\par
646     ICON_BOX_TOP                  = 81,\par
647     ICON_BOX_TOP_RIGHT            = 82,\par
648     ICON_BOX_RIGHT                = 83,\par
649     ICON_BOX_BOTTOM_RIGHT         = 84,\par
650     ICON_BOX_BOTTOM               = 85,\par
651     ICON_BOX_BOTTOM_LEFT          = 86,\par
652     ICON_BOX_LEFT                 = 87,\par
653     ICON_BOX_TOP_LEFT             = 88,\par
654     ICON_BOX_CENTER               = 89,\par
655     ICON_BOX_CIRCLE_MASK          = 90,\par
656     ICON_POT                      = 91,\par
657     ICON_ALPHA_MULTIPLY           = 92,\par
658     ICON_ALPHA_CLEAR              = 93,\par
659     ICON_DITHERING                = 94,\par
660     ICON_MIPMAPS                  = 95,\par
661     ICON_BOX_GRID                 = 96,\par
662     ICON_GRID                     = 97,\par
663     ICON_BOX_CORNERS_SMALL        = 98,\par
664     ICON_BOX_CORNERS_BIG          = 99,\par
665     ICON_FOUR_BOXES               = 100,\par
666     ICON_GRID_FILL                = 101,\par
667     ICON_BOX_MULTISIZE            = 102,\par
668     ICON_ZOOM_SMALL               = 103,\par
669     ICON_ZOOM_MEDIUM              = 104,\par
670     ICON_ZOOM_BIG                 = 105,\par
671     ICON_ZOOM_ALL                 = 106,\par
672     ICON_ZOOM_CENTER              = 107,\par
673     ICON_BOX_DOTS_SMALL           = 108,\par
674     ICON_BOX_DOTS_BIG             = 109,\par
675     ICON_BOX_CONCENTRIC           = 110,\par
676     ICON_BOX_GRID_BIG             = 111,\par
677     ICON_OK_TICK                  = 112,\par
678     ICON_CROSS                    = 113,\par
679     ICON_ARROW_LEFT               = 114,\par
680     ICON_ARROW_RIGHT              = 115,\par
681     ICON_ARROW_DOWN               = 116,\par
682     ICON_ARROW_UP                 = 117,\par
683     ICON_ARROW_LEFT_FILL          = 118,\par
684     ICON_ARROW_RIGHT_FILL         = 119,\par
685     ICON_ARROW_DOWN_FILL          = 120,\par
686     ICON_ARROW_UP_FILL            = 121,\par
687     ICON_AUDIO                    = 122,\par
688     ICON_FX                       = 123,\par
689     ICON_WAVE                     = 124,\par
690     ICON_WAVE_SINUS               = 125,\par
691     ICON_WAVE_SQUARE              = 126,\par
692     ICON_WAVE_TRIANGULAR          = 127,\par
693     ICON_CROSS_SMALL              = 128,\par
694     ICON_PLAYER_PREVIOUS          = 129,\par
695     ICON_PLAYER_PLAY_BACK         = 130,\par
696     ICON_PLAYER_PLAY              = 131,\par
697     ICON_PLAYER_PAUSE             = 132,\par
698     ICON_PLAYER_STOP              = 133,\par
699     ICON_PLAYER_NEXT              = 134,\par
700     ICON_PLAYER_RECORD            = 135,\par
701     ICON_MAGNET                   = 136,\par
702     ICON_LOCK_CLOSE               = 137,\par
703     ICON_LOCK_OPEN                = 138,\par
704     ICON_CLOCK                    = 139,\par
705     ICON_TOOLS                    = 140,\par
706     ICON_GEAR                     = 141,\par
707     ICON_GEAR_BIG                 = 142,\par
708     ICON_BIN                      = 143,\par
709     ICON_HAND_POINTER             = 144,\par
710     ICON_LASER                    = 145,\par
711     ICON_COIN                     = 146,\par
712     ICON_EXPLOSION                = 147,\par
713     ICON_1UP                      = 148,\par
714     ICON_PLAYER                   = 149,\par
715     ICON_PLAYER_JUMP              = 150,\par
716     ICON_KEY                      = 151,\par
717     ICON_DEMON                    = 152,\par
718     ICON_TEXT_POPUP               = 153,\par
719     ICON_GEAR_EX                  = 154,\par
720     ICON_CRACK                    = 155,\par
721     ICON_CRACK_POINTS             = 156,\par
722     ICON_STAR                     = 157,\par
723     ICON_DOOR                     = 158,\par
724     ICON_EXIT                     = 159,\par
725     ICON_MODE_2D                  = 160,\par
726     ICON_MODE_3D                  = 161,\par
727     ICON_CUBE                     = 162,\par
728     ICON_CUBE_FACE_TOP            = 163,\par
729     ICON_CUBE_FACE_LEFT           = 164,\par
730     ICON_CUBE_FACE_FRONT          = 165,\par
731     ICON_CUBE_FACE_BOTTOM         = 166,\par
732     ICON_CUBE_FACE_RIGHT          = 167,\par
733     ICON_CUBE_FACE_BACK           = 168,\par
734     ICON_CAMERA                   = 169,\par
735     ICON_SPECIAL                  = 170,\par
736     ICON_LINK_NET                 = 171,\par
737     ICON_LINK_BOXES               = 172,\par
738     ICON_LINK_MULTI               = 173,\par
739     ICON_LINK                     = 174,\par
740     ICON_LINK_BROKE               = 175,\par
741     ICON_TEXT_NOTES               = 176,\par
742     ICON_NOTEBOOK                 = 177,\par
743     ICON_SUITCASE                 = 178,\par
744     ICON_SUITCASE_ZIP             = 179,\par
745     ICON_MAILBOX                  = 180,\par
746     ICON_MONITOR                  = 181,\par
747     ICON_PRINTER                  = 182,\par
748     ICON_PHOTO_CAMERA             = 183,\par
749     ICON_PHOTO_CAMERA_FLASH       = 184,\par
750     ICON_HOUSE                    = 185,\par
751     ICON_HEART                    = 186,\par
752     ICON_CORNER                   = 187,\par
753     ICON_VERTICAL_BARS            = 188,\par
754     ICON_VERTICAL_BARS_FILL       = 189,\par
755     ICON_LIFE_BARS                = 190,\par
756     ICON_INFO                     = 191,\par
757     ICON_CROSSLINE                = 192,\par
758     ICON_HELP                     = 193,\par
759     ICON_FILETYPE_ALPHA           = 194,\par
760     ICON_FILETYPE_HOME            = 195,\par
761     ICON_LAYERS_VISIBLE           = 196,\par
762     ICON_LAYERS                   = 197,\par
763     ICON_WINDOW                   = 198,\par
764     ICON_HIDPI                    = 199,\par
765     ICON_FILETYPE_BINARY          = 200,\par
766     ICON_HEX                      = 201,\par
767     ICON_SHIELD                   = 202,\par
768     ICON_FILE_NEW                 = 203,\par
769     ICON_FOLDER_ADD               = 204,\par
770     ICON_ALARM                    = 205,\par
771     ICON_206                      = 206,\par
772     ICON_207                      = 207,\par
773     ICON_208                      = 208,\par
774     ICON_209                      = 209,\par
775     ICON_210                      = 210,\par
776     ICON_211                      = 211,\par
777     ICON_212                      = 212,\par
778     ICON_213                      = 213,\par
779     ICON_214                      = 214,\par
780     ICON_215                      = 215,\par
781     ICON_216                      = 216,\par
782     ICON_217                      = 217,\par
783     ICON_218                      = 218,\par
784     ICON_219                      = 219,\par
785     ICON_220                      = 220,\par
786     ICON_221                      = 221,\par
787     ICON_222                      = 222,\par
788     ICON_223                      = 223,\par
789     ICON_224                      = 224,\par
790     ICON_225                      = 225,\par
791     ICON_226                      = 226,\par
792     ICON_227                      = 227,\par
793     ICON_228                      = 228,\par
794     ICON_229                      = 229,\par
795     ICON_230                      = 230,\par
796     ICON_231                      = 231,\par
797     ICON_232                      = 232,\par
798     ICON_233                      = 233,\par
799     ICON_234                      = 234,\par
800     ICON_235                      = 235,\par
801     ICON_236                      = 236,\par
802     ICON_237                      = 237,\par
803     ICON_238                      = 238,\par
804     ICON_239                      = 239,\par
805     ICON_240                      = 240,\par
806     ICON_241                      = 241,\par
807     ICON_242                      = 242,\par
808     ICON_243                      = 243,\par
809     ICON_244                      = 244,\par
810     ICON_245                      = 245,\par
811     ICON_246                      = 246,\par
812     ICON_247                      = 247,\par
813     ICON_248                      = 248,\par
814     ICON_249                      = 249,\par
815     ICON_250                      = 250,\par
816     ICON_251                      = 251,\par
817     ICON_252                      = 252,\par
818     ICON_253                      = 253,\par
819     ICON_254                      = 254,\par
820     ICON_255                      = 255,\par
821 \} GuiIconName;\par
}
}
{\xe \v GuiListViewProperty\:raygui.h}
{\xe \v raygui.h\:GuiListViewProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiListViewProperty}}}
\par
{\bkmkstart AAAAAAABCL}
{\bkmkend AAAAAAABCL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v LIST_ITEMS_HEIGHT\:raygui.h}
{\xe \v raygui.h\:LIST_ITEMS_HEIGHT}
{\qr LIST_ITEMS_HEIGHT{\bkmkstart AAAAAAABCM}
{\bkmkend AAAAAAABCM}
\cell }{\cell }{\row }
{\xe \v LIST_ITEMS_SPACING\:raygui.h}
{\xe \v raygui.h\:LIST_ITEMS_SPACING}
{\qr LIST_ITEMS_SPACING{\bkmkstart AAAAAAABCN}
{\bkmkend AAAAAAABCN}
\cell }{\cell }{\row }
{\xe \v SCROLLBAR_WIDTH\:raygui.h}
{\xe \v raygui.h\:SCROLLBAR_WIDTH}
{\qr SCROLLBAR_WIDTH{\bkmkstart AAAAAAABCO}
{\bkmkend AAAAAAABCO}
\cell }{\cell }{\row }
{\xe \v SCROLLBAR_SIDE\:raygui.h}
{\xe \v raygui.h\:SCROLLBAR_SIDE}
{\qr SCROLLBAR_SIDE{\bkmkstart AAAAAAABCP}
{\bkmkend AAAAAAABCP}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 454              \{\par
455     LIST_ITEMS_HEIGHT = 16,     {\cf20 // ListView items height}\par
456     LIST_ITEMS_SPACING,         {\cf20 // ListView items separation}\par
457     SCROLLBAR_WIDTH,            {\cf20 // ListView scrollbar size (usually width)}\par
458     SCROLLBAR_SIDE,             {\cf20 // ListView scrollbar side (0-left, 1-right)}\par
459 \} GuiListViewProperty;\par
}
}
{\xe \v GuiProgressBarProperty\:raygui.h}
{\xe \v raygui.h\:GuiProgressBarProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiProgressBarProperty}}}
\par
{\bkmkstart AAAAAAABCQ}
{\bkmkend AAAAAAABCQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v PROGRESS_PADDING\:raygui.h}
{\xe \v raygui.h\:PROGRESS_PADDING}
{\qr PROGRESS_PADDING{\bkmkstart AAAAAAABCR}
{\bkmkend AAAAAAABCR}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 410              \{\par
411     PROGRESS_PADDING = 16,      {\cf20 // ProgressBar internal padding}\par
412 \} GuiProgressBarProperty;\par
}
}
{\xe \v GuiScrollBarProperty\:raygui.h}
{\xe \v raygui.h\:GuiScrollBarProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiScrollBarProperty}}}
\par
{\bkmkstart AAAAAAABCS}
{\bkmkend AAAAAAABCS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ARROWS_SIZE\:raygui.h}
{\xe \v raygui.h\:ARROWS_SIZE}
{\qr ARROWS_SIZE{\bkmkstart AAAAAAABCT}
{\bkmkend AAAAAAABCT}
\cell }{\cell }{\row }
{\xe \v ARROWS_VISIBLE\:raygui.h}
{\xe \v raygui.h\:ARROWS_VISIBLE}
{\qr ARROWS_VISIBLE{\bkmkstart AAAAAAABCU}
{\bkmkend AAAAAAABCU}
\cell }{\cell }{\row }
{\xe \v SCROLL_SLIDER_PADDING\:raygui.h}
{\xe \v raygui.h\:SCROLL_SLIDER_PADDING}
{\qr SCROLL_SLIDER_PADDING{\bkmkstart AAAAAAABCV}
{\bkmkend AAAAAAABCV}
\cell }{\cell }{\row }
{\xe \v SCROLL_SLIDER_SIZE\:raygui.h}
{\xe \v raygui.h\:SCROLL_SLIDER_SIZE}
{\qr SCROLL_SLIDER_SIZE{\bkmkstart AAAAAAABCW}
{\bkmkend AAAAAAABCW}
\cell }{\cell }{\row }
{\xe \v SCROLL_PADDING\:raygui.h}
{\xe \v raygui.h\:SCROLL_PADDING}
{\qr SCROLL_PADDING{\bkmkstart AAAAAAABCX}
{\bkmkend AAAAAAABCX}
\cell }{\cell }{\row }
{\xe \v SCROLL_SPEED\:raygui.h}
{\xe \v raygui.h\:SCROLL_SPEED}
{\qr SCROLL_SPEED{\bkmkstart AAAAAAABCY}
{\bkmkend AAAAAAABCY}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 415              \{\par
416     ARROWS_SIZE = 16,\par
417     ARROWS_VISIBLE,\par
418     SCROLL_SLIDER_PADDING,      {\cf20 // (SLIDERBAR, SLIDER_PADDING)}\par
419     SCROLL_SLIDER_SIZE,\par
420     SCROLL_PADDING,\par
421     SCROLL_SPEED,\par
422 \} GuiScrollBarProperty;\par
}
}
{\xe \v GuiSliderProperty\:raygui.h}
{\xe \v raygui.h\:GuiSliderProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiSliderProperty}}}
\par
{\bkmkstart AAAAAAABCZ}
{\bkmkend AAAAAAABCZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v SLIDER_WIDTH\:raygui.h}
{\xe \v raygui.h\:SLIDER_WIDTH}
{\qr SLIDER_WIDTH{\bkmkstart AAAAAAABDA}
{\bkmkend AAAAAAABDA}
\cell }{\cell }{\row }
{\xe \v SLIDER_PADDING\:raygui.h}
{\xe \v raygui.h\:SLIDER_PADDING}
{\qr SLIDER_PADDING{\bkmkstart AAAAAAABDB}
{\bkmkend AAAAAAABDB}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 404              \{\par
405     SLIDER_WIDTH = 16,          {\cf20 // Slider size of internal bar}\par
406     SLIDER_PADDING              {\cf20 // Slider/SliderBar internal bar padding}\par
407 \} GuiSliderProperty;\par
}
}
{\xe \v GuiSpinnerProperty\:raygui.h}
{\xe \v raygui.h\:GuiSpinnerProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiSpinnerProperty}}}
\par
{\bkmkstart AAAAAAABDC}
{\bkmkend AAAAAAABDC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v SPIN_BUTTON_WIDTH\:raygui.h}
{\xe \v raygui.h\:SPIN_BUTTON_WIDTH}
{\qr SPIN_BUTTON_WIDTH{\bkmkstart AAAAAAABDD}
{\bkmkend AAAAAAABDD}
\cell }{\cell }{\row }
{\xe \v SPIN_BUTTON_SPACING\:raygui.h}
{\xe \v raygui.h\:SPIN_BUTTON_SPACING}
{\qr SPIN_BUTTON_SPACING{\bkmkstart AAAAAAABDE}
{\bkmkend AAAAAAABDE}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 448              \{\par
449     SPIN_BUTTON_WIDTH = 16,     {\cf20 // Spinner left/right buttons width}\par
450     SPIN_BUTTON_SPACING,        {\cf20 // Spinner buttons separation}\par
451 \} GuiSpinnerProperty;\par
}
}
{\xe \v GuiState\:raygui.h}
{\xe \v raygui.h\:GuiState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiState}}}
\par
{\bkmkstart AAAAAAABDF}
{\bkmkend AAAAAAABDF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v STATE_NORMAL\:raygui.h}
{\xe \v raygui.h\:STATE_NORMAL}
{\qr STATE_NORMAL{\bkmkstart AAAAAAABDG}
{\bkmkend AAAAAAABDG}
\cell }{\cell }{\row }
{\xe \v STATE_FOCUSED\:raygui.h}
{\xe \v raygui.h\:STATE_FOCUSED}
{\qr STATE_FOCUSED{\bkmkstart AAAAAAABDH}
{\bkmkend AAAAAAABDH}
\cell }{\cell }{\row }
{\xe \v STATE_PRESSED\:raygui.h}
{\xe \v raygui.h\:STATE_PRESSED}
{\qr STATE_PRESSED{\bkmkstart AAAAAAABDI}
{\bkmkend AAAAAAABDI}
\cell }{\cell }{\row }
{\xe \v STATE_DISABLED\:raygui.h}
{\xe \v raygui.h\:STATE_DISABLED}
{\qr STATE_DISABLED{\bkmkstart AAAAAAABDJ}
{\bkmkend AAAAAAABDJ}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 322              \{\par
323     STATE_NORMAL = 0,\par
324     STATE_FOCUSED,\par
325     STATE_PRESSED,\par
326     STATE_DISABLED,\par
327 \} GuiState;\par
}
}
{\xe \v GuiTextAlignment\:raygui.h}
{\xe \v raygui.h\:GuiTextAlignment}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiTextAlignment}}}
\par
{\bkmkstart AAAAAAABDK}
{\bkmkend AAAAAAABDK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v TEXT_ALIGN_LEFT\:raygui.h}
{\xe \v raygui.h\:TEXT_ALIGN_LEFT}
{\qr TEXT_ALIGN_LEFT{\bkmkstart AAAAAAABDL}
{\bkmkend AAAAAAABDL}
\cell }{\cell }{\row }
{\xe \v TEXT_ALIGN_CENTER\:raygui.h}
{\xe \v raygui.h\:TEXT_ALIGN_CENTER}
{\qr TEXT_ALIGN_CENTER{\bkmkstart AAAAAAABDM}
{\bkmkend AAAAAAABDM}
\cell }{\cell }{\row }
{\xe \v TEXT_ALIGN_RIGHT\:raygui.h}
{\xe \v raygui.h\:TEXT_ALIGN_RIGHT}
{\qr TEXT_ALIGN_RIGHT{\bkmkstart AAAAAAABDN}
{\bkmkend AAAAAAABDN}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 330              \{\par
331     TEXT_ALIGN_LEFT = 0,\par
332     TEXT_ALIGN_CENTER,\par
333     TEXT_ALIGN_RIGHT,\par
334 \} GuiTextAlignment;\par
}
}
{\xe \v GuiTextBoxProperty\:raygui.h}
{\xe \v raygui.h\:GuiTextBoxProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiTextBoxProperty}}}
\par
{\bkmkstart AAAAAAABDO}
{\bkmkend AAAAAAABDO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v TEXT_INNER_PADDING\:raygui.h}
{\xe \v raygui.h\:TEXT_INNER_PADDING}
{\qr TEXT_INNER_PADDING{\bkmkstart AAAAAAABDP}
{\bkmkend AAAAAAABDP}
\cell }{\cell }{\row }
{\xe \v TEXT_LINES_SPACING\:raygui.h}
{\xe \v raygui.h\:TEXT_LINES_SPACING}
{\qr TEXT_LINES_SPACING{\bkmkstart AAAAAAABDQ}
{\bkmkend AAAAAAABDQ}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 442              \{\par
443     TEXT_INNER_PADDING = 16,    {\cf20 // TextBox/TextBoxMulti/ValueBox/Spinner inner text padding}\par
444     TEXT_LINES_SPACING,         {\cf20 // TextBoxMulti lines separation}\par
445 \} GuiTextBoxProperty;\par
}
}
{\xe \v GuiToggleProperty\:raygui.h}
{\xe \v raygui.h\:GuiToggleProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiToggleProperty}}}
\par
{\bkmkstart AAAAAAABDR}
{\bkmkend AAAAAAABDR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v GROUP_PADDING\:raygui.h}
{\xe \v raygui.h\:GROUP_PADDING}
{\qr GROUP_PADDING{\bkmkstart AAAAAAABDS}
{\bkmkend AAAAAAABDS}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 399              \{\par
400     GROUP_PADDING = 16,         {\cf20 // ToggleGroup separation between toggles}\par
401 \} GuiToggleProperty;\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v GuiButton\:raygui.h}
{\xe \v raygui.h\:GuiButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b bool} GuiButton ({\b Rectangle}  {\i bounds}, const char *  {\i text})}}
\par
{\bkmkstart AAAAAAABDT}
{\bkmkend AAAAAAABDT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiCheckBox\:raygui.h}
{\xe \v raygui.h\:GuiCheckBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b bool} GuiCheckBox ({\b Rectangle}  {\i bounds}, const char *  {\i text}, {\b bool}  {\i checked})}}
\par
{\bkmkstart AAAAAAABDU}
{\bkmkend AAAAAAABDU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiCheckIconPixel\:raygui.h}
{\xe \v raygui.h\:GuiCheckIconPixel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b bool} GuiCheckIconPixel (int  {\i iconId}, int  {\i x}, int  {\i y})}}
\par
{\bkmkstart AAAAAAABDV}
{\bkmkend AAAAAAABDV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiClearIconPixel\:raygui.h}
{\xe \v raygui.h\:GuiClearIconPixel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiClearIconPixel (int  {\i iconId}, int  {\i x}, int  {\i y})}}
\par
{\bkmkstart AAAAAAABDW}
{\bkmkend AAAAAAABDW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiColorBarAlpha\:raygui.h}
{\xe \v raygui.h\:GuiColorBarAlpha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} float GuiColorBarAlpha ({\b Rectangle}  {\i bounds}, const char *  {\i text}, float  {\i alpha})}}
\par
{\bkmkstart AAAAAAABDX}
{\bkmkend AAAAAAABDX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiColorBarHue\:raygui.h}
{\xe \v raygui.h\:GuiColorBarHue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} float GuiColorBarHue ({\b Rectangle}  {\i bounds}, const char *  {\i text}, float  {\i value})}}
\par
{\bkmkstart AAAAAAABDY}
{\bkmkend AAAAAAABDY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiColorPanel\:raygui.h}
{\xe \v raygui.h\:GuiColorPanel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b Color} GuiColorPanel ({\b Rectangle}  {\i bounds}, const char *  {\i text}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABDZ}
{\bkmkend AAAAAAABDZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiColorPicker\:raygui.h}
{\xe \v raygui.h\:GuiColorPicker}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b Color} GuiColorPicker ({\b Rectangle}  {\i bounds}, const char *  {\i text}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABEA}
{\bkmkend AAAAAAABEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiComboBox\:raygui.h}
{\xe \v raygui.h\:GuiComboBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} int GuiComboBox ({\b Rectangle}  {\i bounds}, const char *  {\i text}, int  {\i active})}}
\par
{\bkmkstart AAAAAAABEB}
{\bkmkend AAAAAAABEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiDisable\:raygui.h}
{\xe \v raygui.h\:GuiDisable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiDisable (void )}}
\par
{\bkmkstart AAAAAAABEC}
{\bkmkend AAAAAAABEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiDrawIcon\:raygui.h}
{\xe \v raygui.h\:GuiDrawIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiDrawIcon (int  {\i iconId}, int  {\i posX}, int  {\i posY}, int  {\i pixelSize}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABED}
{\bkmkend AAAAAAABED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiDropdownBox\:raygui.h}
{\xe \v raygui.h\:GuiDropdownBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b bool} GuiDropdownBox ({\b Rectangle}  {\i bounds}, const char *  {\i text}, int *  {\i active}, {\b bool}  {\i editMode})}}
\par
{\bkmkstart AAAAAAABEE}
{\bkmkend AAAAAAABEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiDummyRec\:raygui.h}
{\xe \v raygui.h\:GuiDummyRec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiDummyRec ({\b Rectangle}  {\i bounds}, const char *  {\i text})}}
\par
{\bkmkstart AAAAAAABEF}
{\bkmkend AAAAAAABEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiEnable\:raygui.h}
{\xe \v raygui.h\:GuiEnable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiEnable (void )}}
\par
{\bkmkstart AAAAAAABEG}
{\bkmkend AAAAAAABEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiFade\:raygui.h}
{\xe \v raygui.h\:GuiFade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiFade (float  {\i alpha})}}
\par
{\bkmkstart AAAAAAABEH}
{\bkmkend AAAAAAABEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiGetFont\:raygui.h}
{\xe \v raygui.h\:GuiGetFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b Font} GuiGetFont (void )}}
\par
{\bkmkstart AAAAAAABEI}
{\bkmkend AAAAAAABEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiGetIconData\:raygui.h}
{\xe \v raygui.h\:GuiGetIconData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} unsigned int * GuiGetIconData (int  {\i iconId})}}
\par
{\bkmkstart AAAAAAABEJ}
{\bkmkend AAAAAAABEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiGetIcons\:raygui.h}
{\xe \v raygui.h\:GuiGetIcons}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} unsigned int * GuiGetIcons (void )}}
\par
{\bkmkstart AAAAAAABEK}
{\bkmkend AAAAAAABEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiGetState\:raygui.h}
{\xe \v raygui.h\:GuiGetState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} int GuiGetState (void )}}
\par
{\bkmkstart AAAAAAABEL}
{\bkmkend AAAAAAABEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiGetStyle\:raygui.h}
{\xe \v raygui.h\:GuiGetStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} int GuiGetStyle (int  {\i control}, int  {\i property})}}
\par
{\bkmkstart AAAAAAABEM}
{\bkmkend AAAAAAABEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiGrid\:raygui.h}
{\xe \v raygui.h\:GuiGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b Vector2} GuiGrid ({\b Rectangle}  {\i bounds}, const char *  {\i text}, float  {\i spacing}, int  {\i subdivs})}}
\par
{\bkmkstart AAAAAAABEN}
{\bkmkend AAAAAAABEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiGroupBox\:raygui.h}
{\xe \v raygui.h\:GuiGroupBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiGroupBox ({\b Rectangle}  {\i bounds}, const char *  {\i text})}}
\par
{\bkmkstart AAAAAAABEO}
{\bkmkend AAAAAAABEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiIconText\:raygui.h}
{\xe \v raygui.h\:GuiIconText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} const char * GuiIconText (int  {\i iconId}, const char *  {\i text})}}
\par
{\bkmkstart AAAAAAABEP}
{\bkmkend AAAAAAABEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiIsLocked\:raygui.h}
{\xe \v raygui.h\:GuiIsLocked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b bool} GuiIsLocked (void )}}
\par
{\bkmkstart AAAAAAABEQ}
{\bkmkend AAAAAAABEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiLabel\:raygui.h}
{\xe \v raygui.h\:GuiLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiLabel ({\b Rectangle}  {\i bounds}, const char *  {\i text})}}
\par
{\bkmkstart AAAAAAABER}
{\bkmkend AAAAAAABER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiLabelButton\:raygui.h}
{\xe \v raygui.h\:GuiLabelButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b bool} GuiLabelButton ({\b Rectangle}  {\i bounds}, const char *  {\i text})}}
\par
{\bkmkstart AAAAAAABES}
{\bkmkend AAAAAAABES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiLine\:raygui.h}
{\xe \v raygui.h\:GuiLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiLine ({\b Rectangle}  {\i bounds}, const char *  {\i text})}}
\par
{\bkmkstart AAAAAAABET}
{\bkmkend AAAAAAABET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiListView\:raygui.h}
{\xe \v raygui.h\:GuiListView}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} int GuiListView ({\b Rectangle}  {\i bounds}, const char *  {\i text}, int *  {\i scrollIndex}, int  {\i active})}}
\par
{\bkmkstart AAAAAAABEU}
{\bkmkend AAAAAAABEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiListViewEx\:raygui.h}
{\xe \v raygui.h\:GuiListViewEx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} int GuiListViewEx ({\b Rectangle}  {\i bounds}, const char **  {\i text}, int  {\i count}, int *  {\i focus}, int *  {\i scrollIndex}, int  {\i active})}}
\par
{\bkmkstart AAAAAAABEV}
{\bkmkend AAAAAAABEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiLoadStyle\:raygui.h}
{\xe \v raygui.h\:GuiLoadStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiLoadStyle (const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAABEW}
{\bkmkend AAAAAAABEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiLoadStyleDefault\:raygui.h}
{\xe \v raygui.h\:GuiLoadStyleDefault}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiLoadStyleDefault (void )}}
\par
{\bkmkstart AAAAAAABEX}
{\bkmkend AAAAAAABEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiLock\:raygui.h}
{\xe \v raygui.h\:GuiLock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiLock (void )}}
\par
{\bkmkstart AAAAAAABEY}
{\bkmkend AAAAAAABEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiMessageBox\:raygui.h}
{\xe \v raygui.h\:GuiMessageBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} int GuiMessageBox ({\b Rectangle}  {\i bounds}, const char *  {\i title}, const char *  {\i message}, const char *  {\i buttons})}}
\par
{\bkmkstart AAAAAAABEZ}
{\bkmkend AAAAAAABEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiPanel\:raygui.h}
{\xe \v raygui.h\:GuiPanel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiPanel ({\b Rectangle}  {\i bounds}, const char *  {\i text})}}
\par
{\bkmkstart AAAAAAABFA}
{\bkmkend AAAAAAABFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiProgressBar\:raygui.h}
{\xe \v raygui.h\:GuiProgressBar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} float GuiProgressBar ({\b Rectangle}  {\i bounds}, const char *  {\i textLeft}, const char *  {\i textRight}, float  {\i value}, float  {\i minValue}, float  {\i maxValue})}}
\par
{\bkmkstart AAAAAAABFB}
{\bkmkend AAAAAAABFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiScrollPanel\:raygui.h}
{\xe \v raygui.h\:GuiScrollPanel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b Rectangle} GuiScrollPanel ({\b Rectangle}  {\i bounds}, const char *  {\i text}, {\b Rectangle}  {\i content}, {\b Vector2} *  {\i scroll})}}
\par
{\bkmkstart AAAAAAABFC}
{\bkmkend AAAAAAABFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiSetFont\:raygui.h}
{\xe \v raygui.h\:GuiSetFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiSetFont ({\b Font}  {\i font})}}
\par
{\bkmkstart AAAAAAABFD}
{\bkmkend AAAAAAABFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiSetIconData\:raygui.h}
{\xe \v raygui.h\:GuiSetIconData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiSetIconData (int  {\i iconId}, unsigned int *  {\i data})}}
\par
{\bkmkstart AAAAAAABFE}
{\bkmkend AAAAAAABFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiSetIconPixel\:raygui.h}
{\xe \v raygui.h\:GuiSetIconPixel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiSetIconPixel (int  {\i iconId}, int  {\i x}, int  {\i y})}}
\par
{\bkmkstart AAAAAAABFF}
{\bkmkend AAAAAAABFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiSetIconScale\:raygui.h}
{\xe \v raygui.h\:GuiSetIconScale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiSetIconScale (unsigned int  {\i scale})}}
\par
{\bkmkstart AAAAAAABFG}
{\bkmkend AAAAAAABFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiSetState\:raygui.h}
{\xe \v raygui.h\:GuiSetState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiSetState (int  {\i state})}}
\par
{\bkmkstart AAAAAAABFH}
{\bkmkend AAAAAAABFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiSetStyle\:raygui.h}
{\xe \v raygui.h\:GuiSetStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiSetStyle (int  {\i control}, int  {\i property}, int  {\i value})}}
\par
{\bkmkstart AAAAAAABFI}
{\bkmkend AAAAAAABFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiSlider\:raygui.h}
{\xe \v raygui.h\:GuiSlider}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} float GuiSlider ({\b Rectangle}  {\i bounds}, const char *  {\i textLeft}, const char *  {\i textRight}, float  {\i value}, float  {\i minValue}, float  {\i maxValue})}}
\par
{\bkmkstart AAAAAAABFJ}
{\bkmkend AAAAAAABFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiSliderBar\:raygui.h}
{\xe \v raygui.h\:GuiSliderBar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} float GuiSliderBar ({\b Rectangle}  {\i bounds}, const char *  {\i textLeft}, const char *  {\i textRight}, float  {\i value}, float  {\i minValue}, float  {\i maxValue})}}
\par
{\bkmkstart AAAAAAABFK}
{\bkmkend AAAAAAABFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiSpinner\:raygui.h}
{\xe \v raygui.h\:GuiSpinner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b bool} GuiSpinner ({\b Rectangle}  {\i bounds}, const char *  {\i text}, int *  {\i value}, int  {\i minValue}, int  {\i maxValue}, {\b bool}  {\i editMode})}}
\par
{\bkmkstart AAAAAAABFL}
{\bkmkend AAAAAAABFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiStatusBar\:raygui.h}
{\xe \v raygui.h\:GuiStatusBar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiStatusBar ({\b Rectangle}  {\i bounds}, const char *  {\i text})}}
\par
{\bkmkstart AAAAAAABFM}
{\bkmkend AAAAAAABFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiTextBox\:raygui.h}
{\xe \v raygui.h\:GuiTextBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b bool} GuiTextBox ({\b Rectangle}  {\i bounds}, char *  {\i text}, int  {\i textSize}, {\b bool}  {\i editMode})}}
\par
{\bkmkstart AAAAAAABFN}
{\bkmkend AAAAAAABFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiTextBoxMulti\:raygui.h}
{\xe \v raygui.h\:GuiTextBoxMulti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b bool} GuiTextBoxMulti ({\b Rectangle}  {\i bounds}, char *  {\i text}, int  {\i textSize}, {\b bool}  {\i editMode})}}
\par
{\bkmkstart AAAAAAABFO}
{\bkmkend AAAAAAABFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiTextInputBox\:raygui.h}
{\xe \v raygui.h\:GuiTextInputBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} int GuiTextInputBox ({\b Rectangle}  {\i bounds}, const char *  {\i title}, const char *  {\i message}, const char *  {\i buttons}, char *  {\i text}, int  {\i textMaxSize}, int *  {\i secretViewActive})}}
\par
{\bkmkstart AAAAAAABFP}
{\bkmkend AAAAAAABFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiToggle\:raygui.h}
{\xe \v raygui.h\:GuiToggle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b bool} GuiToggle ({\b Rectangle}  {\i bounds}, const char *  {\i text}, {\b bool}  {\i active})}}
\par
{\bkmkstart AAAAAAABFQ}
{\bkmkend AAAAAAABFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiToggleGroup\:raygui.h}
{\xe \v raygui.h\:GuiToggleGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} int GuiToggleGroup ({\b Rectangle}  {\i bounds}, const char *  {\i text}, int  {\i active})}}
\par
{\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiUnlock\:raygui.h}
{\xe \v raygui.h\:GuiUnlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiUnlock (void )}}
\par
{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiValueBox\:raygui.h}
{\xe \v raygui.h\:GuiValueBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b bool} GuiValueBox ({\b Rectangle}  {\i bounds}, const char *  {\i text}, int *  {\i value}, int  {\i minValue}, int  {\i maxValue}, {\b bool}  {\i editMode})}}
\par
{\bkmkstart AAAAAAABFT}
{\bkmkend AAAAAAABFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiWindowBox\:raygui.h}
{\xe \v raygui.h\:GuiWindowBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b bool} GuiWindowBox ({\b Rectangle}  {\i bounds}, const char *  {\i title})}}
\par
{\bkmkstart AAAAAAABFU}
{\bkmkend AAAAAAABFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
raygui.h\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/raygui.h}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/raygui.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*******************************************************************************************}\par
2 {\cf20 *}\par
3 {\cf20 *   raygui v3.2 - A simple and easy-to-use immediate-mode gui library}\par
4 {\cf20 *}\par
5 {\cf20 *   DESCRIPTION:}\par
6 {\cf20 *}\par
7 {\cf20 *   raygui is a tools-dev-focused immediate-mode-gui library based on raylib but also}\par
8 {\cf20 *   available as a standalone library, as long as input and drawing functions are provided.}\par
9 {\cf20 *}\par
10 {\cf20 *   Controls provided:}\par
11 {\cf20 *}\par
12 {\cf20 *   # Container/separators Controls}\par
13 {\cf20 *       - WindowBox     --> StatusBar, Panel}\par
14 {\cf20 *       - GroupBox      --> Line}\par
15 {\cf20 *       - Line}\par
16 {\cf20 *       - Panel         --> StatusBar}\par
17 {\cf20 *       - ScrollPanel   --> StatusBar}\par
18 {\cf20 *}\par
19 {\cf20 *   # Basic Controls}\par
20 {\cf20 *       - Label}\par
21 {\cf20 *       - Button}\par
22 {\cf20 *       - LabelButton   --> Label}\par
23 {\cf20 *       - Toggle}\par
24 {\cf20 *       - ToggleGroup   --> Toggle}\par
25 {\cf20 *       - CheckBox}\par
26 {\cf20 *       - ComboBox}\par
27 {\cf20 *       - DropdownBox}\par
28 {\cf20 *       - TextBox}\par
29 {\cf20 *       - TextBoxMulti}\par
30 {\cf20 *       - ValueBox      --> TextBox}\par
31 {\cf20 *       - Spinner       --> Button, ValueBox}\par
32 {\cf20 *       - Slider}\par
33 {\cf20 *       - SliderBar     --> Slider}\par
34 {\cf20 *       - ProgressBar}\par
35 {\cf20 *       - StatusBar}\par
36 {\cf20 *       - DummyRec}\par
37 {\cf20 *       - Grid}\par
38 {\cf20 *}\par
39 {\cf20 *   # Advance Controls}\par
40 {\cf20 *       - ListView}\par
41 {\cf20 *       - ColorPicker   --> ColorPanel, ColorBarHue}\par
42 {\cf20 *       - MessageBox    --> Window, Label, Button}\par
43 {\cf20 *       - TextInputBox  --> Window, Label, TextBox, Button}\par
44 {\cf20 *}\par
45 {\cf20 *   It also provides a set of functions for styling the controls based on its properties (size, color).}\par
46 {\cf20 *}\par
47 {\cf20 *}\par
48 {\cf20 *   RAYGUI STYLE (guiStyle):}\par
49 {\cf20 *}\par
50 {\cf20 *   raygui uses a global data array for all gui style properties (allocated on data segment by default),}\par
51 {\cf20 *   when a new style is loaded, it is loaded over the global style... but a default gui style could always be}\par
52 {\cf20 *   recovered with GuiLoadStyleDefault() function, that overwrites the current style to the default one}\par
53 {\cf20 *}\par
54 {\cf20 *   The global style array size is fixed and depends on the number of controls and properties:}\par
55 {\cf20 *}\par
56 {\cf20 *       static unsigned int guiStyle[RAYGUI_MAX_CONTROLS*(RAYGUI_MAX_PROPS_BASE + RAYGUI_MAX_PROPS_EXTENDED)];}\par
57 {\cf20 *}\par
58 {\cf20 *   guiStyle size is by default: 16*(16 + 8) = 384*4 = 1536 bytes = 1.5 KB}\par
59 {\cf20 *}\par
60 {\cf20 *   Note that the first set of BASE properties (by default guiStyle[0..15]) belong to the generic style}\par
61 {\cf20 *   used for all controls, when any of those base values is set, it is automatically populated to all}\par
62 {\cf20 *   controls, so, specific control values overwriting generic style should be set after base values.}\par
63 {\cf20 *}\par
64 {\cf20 *   After the first BASE set we have the EXTENDED properties (by default guiStyle[16..23]), those}\par
65 {\cf20 *   properties are actually common to all controls and can not be overwritten individually (like BASE ones)}\par
66 {\cf20 *   Some of those properties are: TEXT_SIZE, TEXT_SPACING, LINE_COLOR, BACKGROUND_COLOR}\par
67 {\cf20 *}\par
68 {\cf20 *   Custom control properties can be defined using the EXTENDED properties for each independent control.}\par
69 {\cf20 *}\par
70 {\cf20 *   TOOL: rGuiStyler is a visual tool to customize raygui style.}\par
71 {\cf20 *}\par
72 {\cf20 *}\par
73 {\cf20 *   RAYGUI ICONS (guiIcons):}\par
74 {\cf20 *}\par
75 {\cf20 *   raygui could use a global array containing icons data (allocated on data segment by default),}\par
76 {\cf20 *   a custom icons set could be loaded over this array using GuiLoadIcons(), but loaded icons set}\par
77 {\cf20 *   must be same RAYGUI_ICON_SIZE and no more than RAYGUI_ICON_MAX_ICONS will be loaded}\par
78 {\cf20 *}\par
79 {\cf20 *   Every icon is codified in binary form, using 1 bit per pixel, so, every 16x16 icon}\par
80 {\cf20 *   requires 8 integers (16*16/32) to be stored in memory.}\par
81 {\cf20 *}\par
82 {\cf20 *   When the icon is draw, actually one quad per pixel is drawn if the bit for that pixel is set.}\par
83 {\cf20 *}\par
84 {\cf20 *   The global icons array size is fixed and depends on the number of icons and size:}\par
85 {\cf20 *}\par
86 {\cf20 *       static unsigned int guiIcons[RAYGUI_ICON_MAX_ICONS*RAYGUI_ICON_DATA_ELEMENTS];}\par
87 {\cf20 *}\par
88 {\cf20 *   guiIcons size is by default: 256*(16*16/32) = 2048*4 = 8192 bytes = 8 KB}\par
89 {\cf20 *}\par
90 {\cf20 *   TOOL: rGuiIcons is a visual tool to customize raygui icons.}\par
91 {\cf20 *}\par
92 {\cf20 *}\par
93 {\cf20 *   CONFIGURATION:}\par
94 {\cf20 *}\par
95 {\cf20 *   #define RAYGUI_IMPLEMENTATION}\par
96 {\cf20 *       Generates the implementation of the library into the included file.}\par
97 {\cf20 *       If not defined, the library is in header only mode and can be included in other headers}\par
98 {\cf20 *       or source files without problems. But only ONE file should hold the implementation.}\par
99 {\cf20 *}\par
100 {\cf20 *   #define RAYGUI_STANDALONE}\par
101 {\cf20 *       Avoid raylib.h header inclusion in this file. Data types defined on raylib are defined}\par
102 {\cf20 *       internally in the library and input management and drawing functions must be provided by}\par
103 {\cf20 *       the user (check library implementation for further details).}\par
104 {\cf20 *}\par
105 {\cf20 *   #define RAYGUI_NO_ICONS}\par
106 {\cf20 *       Avoid including embedded ricons data (256 icons, 16x16 pixels, 1-bit per pixel, 2KB)}\par
107 {\cf20 *}\par
108 {\cf20 *   #define RAYGUI_CUSTOM_ICONS}\par
109 {\cf20 *       Includes custom ricons.h header defining a set of custom icons,}\par
110 {\cf20 *       this file can be generated using rGuiIcons tool}\par
111 {\cf20 *}\par
112 {\cf20 *}\par
113 {\cf20 *   VERSIONS HISTORY:}\par
114 {\cf20 *       3.2 (22-May-2022) RENAMED: Some enum values, for unification, avoiding prefixes}\par
115 {\cf20 *                         REMOVED: GuiScrollBar(), only internal}\par
116 {\cf20 *                         REDESIGNED: GuiPanel() to support text parameter}\par
117 {\cf20 *                         REDESIGNED: GuiScrollPanel() to support text parameter}\par
118 {\cf20 *                         REDESIGNED: GuiColorPicker() to support text parameter}\par
119 {\cf20 *                         REDESIGNED: GuiColorPanel() to support text parameter}\par
120 {\cf20 *                         REDESIGNED: GuiColorBarAlpha() to support text parameter}\par
121 {\cf20 *                         REDESIGNED: GuiColorBarHue() to support text parameter}\par
122 {\cf20 *                         REDESIGNED: GuiTextInputBox() to support password}\par
123 {\cf20 *       3.1 (12-Jan-2022) REVIEWED: Default style for consistency (aligned with rGuiLayout v2.5 tool)}\par
124 {\cf20 *                         REVIEWED: GuiLoadStyle() to support compressed font atlas image data and unload previous textures}\par
125 {\cf20 *                         REVIEWED: External icons usage logic}\par
126 {\cf20 *                         REVIEWED: GuiLine() for centered alignment when including text}\par
127 {\cf20 *                         RENAMED: Multiple controls properties definitions to prepend RAYGUI_}\par
128 {\cf20 *                         RENAMED: RICON_ references to RAYGUI_ICON_ for library consistency}\par
129 {\cf20 *                         Projects updated and multiple tweaks}\par
130 {\cf20 *       3.0 (04-Nov-2021) Integrated ricons data to avoid external file}\par
131 {\cf20 *                         REDESIGNED: GuiTextBoxMulti()}\par
132 {\cf20 *                         REMOVED: GuiImageButton*()}\par
133 {\cf20 *                         Multiple minor tweaks and bugs corrected}\par
134 {\cf20 *       2.9 (17-Mar-2021) REMOVED: Tooltip API}\par
135 {\cf20 *       2.8 (03-May-2020) Centralized rectangles drawing to GuiDrawRectangle()}\par
136 {\cf20 *       2.7 (20-Feb-2020) ADDED: Possible tooltips API}\par
137 {\cf20 *       2.6 (09-Sep-2019) ADDED: GuiTextInputBox()}\par
138 {\cf20 *                         REDESIGNED: GuiListView*(), GuiDropdownBox(), GuiSlider*(), GuiProgressBar(), GuiMessageBox()}\par
139 {\cf20 *                         REVIEWED: GuiTextBox(), GuiSpinner(), GuiValueBox(), GuiLoadStyle()}\par
140 {\cf20 *                         Replaced property INNER_PADDING by TEXT_PADDING, renamed some properties}\par
141 {\cf20 *                         ADDED: 8 new custom styles ready to use}\par
142 {\cf20 *                         Multiple minor tweaks and bugs corrected}\par
143 {\cf20 *       2.5 (28-May-2019) Implemented extended GuiTextBox(), GuiValueBox(), GuiSpinner()}\par
144 {\cf20 *       2.3 (29-Apr-2019) ADDED: rIcons auxiliar library and support for it, multiple controls reviewed}\par
145 {\cf20 *                         Refactor all controls drawing mechanism to use control state}\par
146 {\cf20 *       2.2 (05-Feb-2019) ADDED: GuiScrollBar(), GuiScrollPanel(), reviewed GuiListView(), removed Gui*Ex() controls}\par
147 {\cf20 *       2.1 (26-Dec-2018) REDESIGNED: GuiCheckBox(), GuiComboBox(), GuiDropdownBox(), GuiToggleGroup() > Use combined text string}\par
148 {\cf20 *                         REDESIGNED: Style system (breaking change)}\par
149 {\cf20 *       2.0 (08-Nov-2018) ADDED: Support controls guiLock and custom fonts}\par
150 {\cf20 *                         REVIEWED: GuiComboBox(), GuiListView()...}\par
151 {\cf20 *       1.9 (09-Oct-2018) REVIEWED: GuiGrid(), GuiTextBox(), GuiTextBoxMulti(), GuiValueBox()...}\par
152 {\cf20 *       1.8 (01-May-2018) Lot of rework and redesign to align with rGuiStyler and rGuiLayout}\par
153 {\cf20 *       1.5 (21-Jun-2017) Working in an improved styles system}\par
154 {\cf20 *       1.4 (15-Jun-2017) Rewritten all GUI functions (removed useless ones)}\par
155 {\cf20 *       1.3 (12-Jun-2017) Complete redesign of style system}\par
156 {\cf20 *       1.1 (01-Jun-2017) Complete review of the library}\par
157 {\cf20 *       1.0 (07-Jun-2016) Converted to header-only by Ramon Santamaria.}\par
158 {\cf20 *       0.9 (07-Mar-2016) Reviewed and tested by Albert Martos, Ian Eito, Sergio Martinez and Ramon Santamaria.}\par
159 {\cf20 *       0.8 (27-Aug-2015) Initial release. Implemented by Kevin Gato, Daniel Nicol\'E1s and Ramon Santamaria.}\par
160 {\cf20 *}\par
161 {\cf20 *}\par
162 {\cf20 *   CONTRIBUTORS:}\par
163 {\cf20 *}\par
164 {\cf20 *       Ramon Santamaria:   Supervision, review, redesign, update and maintenance}\par
165 {\cf20 *       Vlad Adrian:        Complete rewrite of GuiTextBox() to support extended features (2019)}\par
166 {\cf20 *       Sergio Martinez:    Review, testing (2015) and redesign of multiple controls (2018)}\par
167 {\cf20 *       Adria Arranz:       Testing and Implementation of additional controls (2018)}\par
168 {\cf20 *       Jordi Jorba:        Testing and Implementation of additional controls (2018)}\par
169 {\cf20 *       Albert Martos:      Review and testing of the library (2015)}\par
170 {\cf20 *       Ian Eito:           Review and testing of the library (2015)}\par
171 {\cf20 *       Kevin Gato:         Initial implementation of basic components (2014)}\par
172 {\cf20 *       Daniel Nicolas:     Initial implementation of basic components (2014)}\par
173 {\cf20 *}\par
174 {\cf20 *}\par
175 {\cf20 *   LICENSE: zlib/libpng}\par
176 {\cf20 *}\par
177 {\cf20 *   Copyright (c) 2014-2022 Ramon Santamaria (@raysan5)}\par
178 {\cf20 *}\par
179 {\cf20 *   This software is provided "as-is", without any express or implied warranty. In no event}\par
180 {\cf20 *   will the authors be held liable for any damages arising from the use of this software.}\par
181 {\cf20 *}\par
182 {\cf20 *   Permission is granted to anyone to use this software for any purpose, including commercial}\par
183 {\cf20 *   applications, and to alter it and redistribute it freely, subject to the following restrictions:}\par
184 {\cf20 *}\par
185 {\cf20 *     1. The origin of this software must not be misrepresented; you must not claim that you}\par
186 {\cf20 *     wrote the original software. If you use this software in a product, an acknowledgment}\par
187 {\cf20 *     in the product documentation would be appreciated but is not required.}\par
188 {\cf20 *}\par
189 {\cf20 *     2. Altered source versions must be plainly marked as such, and must not be misrepresented}\par
190 {\cf20 *     as being the original software.}\par
191 {\cf20 *}\par
192 {\cf20 *     3. This notice may not be removed or altered from any source distribution.}\par
193 {\cf20 *}\par
194 {\cf20 **********************************************************************************************/}\par
195 \par
196 {\cf21 #ifndef RAYGUI_H}\par
197 {\cf21 #define RAYGUI_H}\par
198 \par
199 {\cf21 #define RAYGUI_VERSION  "3.2"}\par
200 \par
201 {\cf21 #if !defined(RAYGUI_STANDALONE)}\par
202 {\cf21     #include "raylib.h"}\par
203 {\cf21 #endif}\par
204 \par
205 {\cf20 // Function specifiers in case library is build/used as a shared library (Windows)}\par
206 {\cf20 // NOTE: Microsoft specifiers to tell compiler that symbols are imported/exported from a .dll}\par
207 {\cf21 #if defined(_WIN32)}\par
208 {\cf21     #if defined(BUILD_LIBTYPE_SHARED)}\par
209 {\cf21         #define RAYGUIAPI __declspec(dllexport)     }{\cf20 // We are building the library as a Win32 shared library (.dll)}\par
210 {\cf21     #elif defined(USE_LIBTYPE_SHARED)}\par
211 {\cf21         #define RAYGUIAPI __declspec(dllimport)     }{\cf20 // We are using the library as a Win32 shared library (.dll)}\par
212 {\cf21     #endif}\par
213 {\cf21 #endif}\par
214 \par
215 {\cf20 // Function specifiers definition}\par
216 {\cf21 #ifndef RAYGUIAPI}\par
217 {\cf21     #define RAYGUIAPI       }{\cf20 // Functions defined as 'extern' by default (implicit specifiers)}\par
218 {\cf21 #endif}\par
219 \par
220 {\cf20 //----------------------------------------------------------------------------------}\par
221 {\cf20 // Defines and Macros}\par
222 {\cf20 //----------------------------------------------------------------------------------}\par
223 {\cf20 // Allow custom memory allocators}\par
224 {\cf21 #ifndef RAYGUI_MALLOC}\par
225 {\cf21     #define RAYGUI_MALLOC(sz)       malloc(sz)}\par
226 {\cf21 #endif}\par
227 {\cf21 #ifndef RAYGUI_CALLOC}\par
228 {\cf21     #define RAYGUI_CALLOC(n,sz)     calloc(n,sz)}\par
229 {\cf21 #endif}\par
230 {\cf21 #ifndef RAYGUI_FREE}\par
231 {\cf21     #define RAYGUI_FREE(p)          free(p)}\par
232 {\cf21 #endif}\par
233 \par
234 {\cf20 // Simple log system to avoid printf() calls if required}\par
235 {\cf20 // NOTE: Avoiding those calls, also avoids const strings memory usage}\par
236 {\cf21 #define RAYGUI_SUPPORT_LOG_INFO}\par
237 {\cf21 #if defined(RAYGUI_SUPPORT_LOG_INFO)}\par
238 {\cf21   #define RAYGUI_LOG(...)           printf(__VA_ARGS__)}\par
239 {\cf21 #else}\par
240 {\cf21   #define RAYGUI_LOG(...)}\par
241 {\cf21 #endif}\par
242 \par
243 {\cf20 //----------------------------------------------------------------------------------}\par
244 {\cf20 // Types and Structures Definition}\par
245 {\cf20 // NOTE: Some types are required for RAYGUI_STANDALONE usage}\par
246 {\cf20 //----------------------------------------------------------------------------------}\par
247 {\cf21 #if defined(RAYGUI_STANDALONE)}\par
248 {\cf21     #ifndef __cplusplus}\par
249     {\cf20 // Boolean type}\par
250 {\cf21         #ifndef true}\par
251             {\cf17 typedef} {\cf17 enum} \{ {\cf17 false}, {\cf17 true} \} bool;\par
252 {\cf21         #endif}\par
253 {\cf21     #endif}\par
254 \par
255     {\cf20 // Vector2 type}\par
256     {\cf17 typedef} {\cf17 struct }Vector2 \{\par
257         {\cf18 float} x;\par
258         {\cf18 float} y;\par
259     \} Vector2;\par
260 \par
261     {\cf20 // Vector3 type                 // -- ConvertHSVtoRGB(), ConvertRGBtoHSV()}\par
262     {\cf17 typedef} {\cf17 struct }Vector3 \{\par
263         {\cf18 float} x;\par
264         {\cf18 float} y;\par
265         {\cf18 float} z;\par
266     \} Vector3;\par
267 \par
268     {\cf20 // Color type, RGBA (32bit)}\par
269     {\cf17 typedef} {\cf17 struct }Color \{\par
270         {\cf18 unsigned} {\cf18 char} r;\par
271         {\cf18 unsigned} {\cf18 char} g;\par
272         {\cf18 unsigned} {\cf18 char} b;\par
273         {\cf18 unsigned} {\cf18 char} a;\par
274     \} Color;\par
275 \par
276     {\cf20 // Rectangle type}\par
277     {\cf17 typedef} {\cf17 struct }Rectangle \{\par
278         {\cf18 float} x;\par
279         {\cf18 float} y;\par
280         {\cf18 float} width;\par
281         {\cf18 float} height;\par
282     \} Rectangle;\par
283 \par
284     {\cf20 // TODO: Texture2D type is very coupled to raylib, required by Font type}\par
285     {\cf20 // It should be redesigned to be provided by user}\par
286     {\cf17 typedef} {\cf17 struct }Texture2D \{\par
287         {\cf18 unsigned} {\cf18 int} id;        {\cf20 // OpenGL texture id}\par
288         {\cf18 int} width;              {\cf20 // Texture base width}\par
289         {\cf18 int} height;             {\cf20 // Texture base height}\par
290         {\cf18 int} mipmaps;            {\cf20 // Mipmap levels, 1 by default}\par
291         {\cf18 int} format;             {\cf20 // Data format (PixelFormat type)}\par
292     \} Texture2D;\par
293 \par
294     {\cf20 // GlyphInfo, font characters glyphs info}\par
295     {\cf17 typedef} {\cf17 struct }GlyphInfo \{\par
296         {\cf18 int} value;              {\cf20 // Character value (Unicode)}\par
297         {\cf18 int} offsetX;            {\cf20 // Character offset X when drawing}\par
298         {\cf18 int} offsetY;            {\cf20 // Character offset Y when drawing}\par
299         {\cf18 int} advanceX;           {\cf20 // Character advance position X}\par
300         Image image;            {\cf20 // Character image data}\par
301     \} GlyphInfo;\par
302 \par
303     {\cf20 // TODO: Font type is very coupled to raylib, mostly required by GuiLoadStyle()}\par
304     {\cf20 // It should be redesigned to be provided by user}\par
305     {\cf17 typedef} {\cf17 struct }Font \{\par
306         {\cf18 int} baseSize;           {\cf20 // Base size (default chars height)}\par
307         {\cf18 int} glyphCount;         {\cf20 // Number of characters}\par
308         Texture2D texture;      {\cf20 // Characters texture atlas}\par
309         Rectangle *recs;        {\cf20 // Characters rectangles in texture}\par
310         GlyphInfo *chars;       {\cf20 // Characters info data}\par
311     \} Font;\par
312 {\cf21 #endif}\par
313 \par
314 {\cf20 // Style property}\par
315 {\cf17 typedef} {\cf17 struct }GuiStyleProp \{\par
316     {\cf18 unsigned} {\cf18 short} controlId;\par
317     {\cf18 unsigned} {\cf18 short} propertyId;\par
318     {\cf18 unsigned} {\cf18 int} propertyValue;\par
319 \} GuiStyleProp;\par
320 \par
321 {\cf20 // Gui control state}\par
322 {\cf17 typedef} {\cf17 enum} \{\par
323     STATE_NORMAL = 0,\par
324     STATE_FOCUSED,\par
325     STATE_PRESSED,\par
326     STATE_DISABLED,\par
327 \} GuiState;\par
328 \par
329 {\cf20 // Gui control text alignment}\par
330 {\cf17 typedef} {\cf17 enum} \{\par
331     TEXT_ALIGN_LEFT = 0,\par
332     TEXT_ALIGN_CENTER,\par
333     TEXT_ALIGN_RIGHT,\par
334 \} GuiTextAlignment;\par
335 \par
336 {\cf20 // Gui controls}\par
337 {\cf17 typedef} {\cf17 enum} \{\par
338     {\cf20 // Default -> populates to all controls when set}\par
339     DEFAULT = 0,\par
340     {\cf20 // Basic controls}\par
341     LABEL,          {\cf20 // Used also for: LABELBUTTON}\par
342     BUTTON,\par
343     TOGGLE,         {\cf20 // Used also for: TOGGLEGROUP}\par
344     SLIDER,         {\cf20 // Used also for: SLIDERBAR}\par
345     PROGRESSBAR,\par
346     CHECKBOX,\par
347     COMBOBOX,\par
348     DROPDOWNBOX,\par
349     TEXTBOX,        {\cf20 // Used also for: TEXTBOXMULTI}\par
350     VALUEBOX,\par
351     SPINNER,        {\cf20 // Uses: BUTTON, VALUEBOX}\par
352     LISTVIEW,\par
353     COLORPICKER,\par
354     SCROLLBAR,\par
355     STATUSBAR\par
356 \} GuiControl;\par
357 \par
358 {\cf20 // Gui base properties for every control}\par
359 {\cf20 // NOTE: RAYGUI_MAX_PROPS_BASE properties (by default 16 properties)}\par
360 {\cf17 typedef} {\cf17 enum} \{\par
361     BORDER_COLOR_NORMAL = 0,\par
362     BASE_COLOR_NORMAL,\par
363     TEXT_COLOR_NORMAL,\par
364     BORDER_COLOR_FOCUSED,\par
365     BASE_COLOR_FOCUSED,\par
366     TEXT_COLOR_FOCUSED,\par
367     BORDER_COLOR_PRESSED,\par
368     BASE_COLOR_PRESSED,\par
369     TEXT_COLOR_PRESSED,\par
370     BORDER_COLOR_DISABLED,\par
371     BASE_COLOR_DISABLED,\par
372     TEXT_COLOR_DISABLED,\par
373     BORDER_WIDTH,\par
374     TEXT_PADDING,\par
375     TEXT_ALIGNMENT,\par
376     RESERVED\par
377 \} GuiControlProperty;\par
378 \par
379 {\cf20 // Gui extended properties depend on control}\par
380 {\cf20 // NOTE: RAYGUI_MAX_PROPS_EXTENDED properties (by default 8 properties)}\par
381 {\cf20 //----------------------------------------------------------------------------------}\par
382 \par
383 {\cf20 // DEFAULT extended properties}\par
384 {\cf20 // NOTE: Those properties are common to all controls or global}\par
385 {\cf17 typedef} {\cf17 enum} \{\par
386     TEXT_SIZE = 16,             {\cf20 // Text size (glyphs max height)}\par
387     TEXT_SPACING,               {\cf20 // Text spacing between glyphs}\par
388     LINE_COLOR,                 {\cf20 // Line control color}\par
389     BACKGROUND_COLOR,           {\cf20 // Background color}\par
390 \} GuiDefaultProperty;\par
391 \par
392 {\cf20 // Label}\par
393 {\cf20 //typedef enum \{ \} GuiLabelProperty;}\par
394 \par
395 {\cf20 // Button/Spinner}\par
396 {\cf20 //typedef enum \{ \} GuiButtonProperty;}\par
397 \par
398 {\cf20 // Toggle/ToggleGroup}\par
399 {\cf17 typedef} {\cf17 enum} \{\par
400     GROUP_PADDING = 16,         {\cf20 // ToggleGroup separation between toggles}\par
401 \} GuiToggleProperty;\par
402 \par
403 {\cf20 // Slider/SliderBar}\par
404 {\cf17 typedef} {\cf17 enum} \{\par
405     SLIDER_WIDTH = 16,          {\cf20 // Slider size of internal bar}\par
406     SLIDER_PADDING              {\cf20 // Slider/SliderBar internal bar padding}\par
407 \} GuiSliderProperty;\par
408 \par
409 {\cf20 // ProgressBar}\par
410 {\cf17 typedef} {\cf17 enum} \{\par
411     PROGRESS_PADDING = 16,      {\cf20 // ProgressBar internal padding}\par
412 \} GuiProgressBarProperty;\par
413 \par
414 {\cf20 // ScrollBar}\par
415 {\cf17 typedef} {\cf17 enum} \{\par
416     ARROWS_SIZE = 16,\par
417     ARROWS_VISIBLE,\par
418     SCROLL_SLIDER_PADDING,      {\cf20 // (SLIDERBAR, SLIDER_PADDING)}\par
419     SCROLL_SLIDER_SIZE,\par
420     SCROLL_PADDING,\par
421     SCROLL_SPEED,\par
422 \} GuiScrollBarProperty;\par
423 \par
424 {\cf20 // CheckBox}\par
425 {\cf17 typedef} {\cf17 enum} \{\par
426     CHECK_PADDING = 16          {\cf20 // CheckBox internal check padding}\par
427 \} GuiCheckBoxProperty;\par
428 \par
429 {\cf20 // ComboBox}\par
430 {\cf17 typedef} {\cf17 enum} \{\par
431     COMBO_BUTTON_WIDTH = 16,    {\cf20 // ComboBox right button width}\par
432     COMBO_BUTTON_SPACING        {\cf20 // ComboBox button separation}\par
433 \} GuiComboBoxProperty;\par
434 \par
435 {\cf20 // DropdownBox}\par
436 {\cf17 typedef} {\cf17 enum} \{\par
437     ARROW_PADDING = 16,         {\cf20 // DropdownBox arrow separation from border and items}\par
438     DROPDOWN_ITEMS_SPACING      {\cf20 // DropdownBox items separation}\par
439 \} GuiDropdownBoxProperty;\par
440 \par
441 {\cf20 // TextBox/TextBoxMulti/ValueBox/Spinner}\par
442 {\cf17 typedef} {\cf17 enum} \{\par
443     TEXT_INNER_PADDING = 16,    {\cf20 // TextBox/TextBoxMulti/ValueBox/Spinner inner text padding}\par
444     TEXT_LINES_SPACING,         {\cf20 // TextBoxMulti lines separation}\par
445 \} GuiTextBoxProperty;\par
446 \par
447 {\cf20 // Spinner}\par
448 {\cf17 typedef} {\cf17 enum} \{\par
449     SPIN_BUTTON_WIDTH = 16,     {\cf20 // Spinner left/right buttons width}\par
450     SPIN_BUTTON_SPACING,        {\cf20 // Spinner buttons separation}\par
451 \} GuiSpinnerProperty;\par
452 \par
453 {\cf20 // ListView}\par
454 {\cf17 typedef} {\cf17 enum} \{\par
455     LIST_ITEMS_HEIGHT = 16,     {\cf20 // ListView items height}\par
456     LIST_ITEMS_SPACING,         {\cf20 // ListView items separation}\par
457     SCROLLBAR_WIDTH,            {\cf20 // ListView scrollbar size (usually width)}\par
458     SCROLLBAR_SIDE,             {\cf20 // ListView scrollbar side (0-left, 1-right)}\par
459 \} GuiListViewProperty;\par
460 \par
461 {\cf20 // ColorPicker}\par
462 {\cf17 typedef} {\cf17 enum} \{\par
463     COLOR_SELECTOR_SIZE = 16,\par
464     HUEBAR_WIDTH,               {\cf20 // ColorPicker right hue bar width}\par
465     HUEBAR_PADDING,             {\cf20 // ColorPicker right hue bar separation from panel}\par
466     HUEBAR_SELECTOR_HEIGHT,     {\cf20 // ColorPicker right hue bar selector height}\par
467     HUEBAR_SELECTOR_OVERFLOW    {\cf20 // ColorPicker right hue bar selector overflow}\par
468 \} GuiColorPickerProperty;\par
469 \par
470 {\cf21 #define SCROLLBAR_LEFT_SIDE     0}\par
471 {\cf21 #define SCROLLBAR_RIGHT_SIDE    1}\par
472 \par
473 {\cf20 //----------------------------------------------------------------------------------}\par
474 {\cf20 // Global Variables Definition}\par
475 {\cf20 //----------------------------------------------------------------------------------}\par
476 {\cf20 // ...}\par
477 \par
478 {\cf20 //----------------------------------------------------------------------------------}\par
479 {\cf20 // Module Functions Declaration}\par
480 {\cf20 //----------------------------------------------------------------------------------}\par
481 \par
482 {\cf21 #if defined(__cplusplus)}\par
483 {\cf17 extern} {\cf22 "C"} \{            {\cf20 // Prevents name mangling of functions}\par
484 {\cf21 #endif}\par
485 \par
486 {\cf20 // Global gui state control functions}\par
487 RAYGUIAPI {\cf18 void} GuiEnable({\cf18 void});                                         {\cf20 // Enable gui controls (global state)}\par
488 RAYGUIAPI {\cf18 void} GuiDisable({\cf18 void});                                        {\cf20 // Disable gui controls (global state)}\par
489 RAYGUIAPI {\cf18 void} GuiLock({\cf18 void});                                           {\cf20 // Lock gui controls (global state)}\par
490 RAYGUIAPI {\cf18 void} GuiUnlock({\cf18 void});                                         {\cf20 // Unlock gui controls (global state)}\par
491 RAYGUIAPI {\cf18 bool} GuiIsLocked({\cf18 void});                                       {\cf20 // Check if gui is locked (global state)}\par
492 RAYGUIAPI {\cf18 void} GuiFade({\cf18 float} alpha);                                    {\cf20 // Set gui controls alpha (global state), alpha goes from 0.0f to 1.0f}\par
493 RAYGUIAPI {\cf18 void} GuiSetState({\cf18 int} state);                                  {\cf20 // Set gui state (global state)}\par
494 RAYGUIAPI {\cf18 int} GuiGetState({\cf18 void});                                        {\cf20 // Get gui state (global state)}\par
495 \par
496 {\cf20 // Font set/get functions}\par
497 RAYGUIAPI {\cf18 void} GuiSetFont(Font font);                                   {\cf20 // Set gui custom font (global state)}\par
498 RAYGUIAPI Font GuiGetFont({\cf18 void});                                        {\cf20 // Get gui custom font (global state)}\par
499 \par
500 {\cf20 // Style set/get functions}\par
501 RAYGUIAPI {\cf18 void} GuiSetStyle({\cf18 int} control, {\cf18 int} property, {\cf18 int} value);       {\cf20 // Set one style property}\par
502 RAYGUIAPI {\cf18 int} GuiGetStyle({\cf18 int} control, {\cf18 int} property);                   {\cf20 // Get one style property}\par
503 \par
504 {\cf20 // Container/separator controls, useful for controls organization}\par
505 RAYGUIAPI {\cf18 bool} GuiWindowBox(Rectangle bounds, {\cf17 const} {\cf18 char} *title);                                       {\cf20 // Window Box control, shows a window that can be closed}\par
506 RAYGUIAPI {\cf18 void} GuiGroupBox(Rectangle bounds, {\cf17 const} {\cf18 char} *text);                                         {\cf20 // Group Box control with text name}\par
507 RAYGUIAPI {\cf18 void} GuiLine(Rectangle bounds, {\cf17 const} {\cf18 char} *text);                                             {\cf20 // Line separator control, could contain text}\par
508 RAYGUIAPI {\cf18 void} GuiPanel(Rectangle bounds, {\cf17 const} {\cf18 char} *text);                                            {\cf20 // Panel control, useful to group controls}\par
509 RAYGUIAPI Rectangle GuiScrollPanel(Rectangle bounds, {\cf17 const} {\cf18 char} *text, Rectangle content, Vector2 *scroll); {\cf20 // Scroll Panel control}\par
510 \par
511 {\cf20 // Basic controls set}\par
512 RAYGUIAPI {\cf18 void} GuiLabel(Rectangle bounds, {\cf17 const} {\cf18 char} *text);                                            {\cf20 // Label control, shows text}\par
513 RAYGUIAPI {\cf18 bool} GuiButton(Rectangle bounds, {\cf17 const} {\cf18 char} *text);                                           {\cf20 // Button control, returns true when clicked}\par
514 RAYGUIAPI {\cf18 bool} GuiLabelButton(Rectangle bounds, {\cf17 const} {\cf18 char} *text);                                      {\cf20 // Label button control, show true when clicked}\par
515 RAYGUIAPI {\cf18 bool} GuiToggle(Rectangle bounds, {\cf17 const} {\cf18 char} *text, {\cf18 bool} active);                              {\cf20 // Toggle Button control, returns true when active}\par
516 RAYGUIAPI {\cf18 int} GuiToggleGroup(Rectangle bounds, {\cf17 const} {\cf18 char} *text, {\cf18 int} active);                           {\cf20 // Toggle Group control, returns active toggle index}\par
517 RAYGUIAPI {\cf18 bool} GuiCheckBox(Rectangle bounds, {\cf17 const} {\cf18 char} *text, {\cf18 bool} checked);                           {\cf20 // Check Box control, returns true when active}\par
518 RAYGUIAPI {\cf18 int} GuiComboBox(Rectangle bounds, {\cf17 const} {\cf18 char} *text, {\cf18 int} active);                              {\cf20 // Combo Box control, returns selected item index}\par
519 RAYGUIAPI {\cf18 bool} GuiDropdownBox(Rectangle bounds, {\cf17 const} {\cf18 char} *text, {\cf18 int} *active, {\cf18 bool} editMode);          {\cf20 // Dropdown Box control, returns selected item}\par
520 RAYGUIAPI {\cf18 bool} GuiSpinner(Rectangle bounds, {\cf17 const} {\cf18 char} *text, {\cf18 int} *value, {\cf18 int} minValue, {\cf18 int} maxValue, {\cf18 bool} editMode);     {\cf20 // Spinner control, returns selected value}\par
521 RAYGUIAPI {\cf18 bool} GuiValueBox(Rectangle bounds, {\cf17 const} {\cf18 char} *text, {\cf18 int} *value, {\cf18 int} minValue, {\cf18 int} maxValue, {\cf18 bool} editMode);    {\cf20 // Value Box control, updates input text with numbers}\par
522 RAYGUIAPI {\cf18 bool} GuiTextBox(Rectangle bounds, {\cf18 char} *text, {\cf18 int} textSize, {\cf18 bool} editMode);                   {\cf20 // Text Box control, updates input text}\par
523 RAYGUIAPI {\cf18 bool} GuiTextBoxMulti(Rectangle bounds, {\cf18 char} *text, {\cf18 int} textSize, {\cf18 bool} editMode);              {\cf20 // Text Box control with multiple lines}\par
524 RAYGUIAPI {\cf18 float} GuiSlider(Rectangle bounds, {\cf17 const} {\cf18 char} *textLeft, {\cf17 const} {\cf18 char} *textRight, {\cf18 float} value, {\cf18 float} minValue, {\cf18 float} maxValue);       {\cf20 // Slider control, returns selected value}\par
525 RAYGUIAPI {\cf18 float} GuiSliderBar(Rectangle bounds, {\cf17 const} {\cf18 char} *textLeft, {\cf17 const} {\cf18 char} *textRight, {\cf18 float} value, {\cf18 float} minValue, {\cf18 float} maxValue);    {\cf20 // Slider Bar control, returns selected value}\par
526 RAYGUIAPI {\cf18 float} GuiProgressBar(Rectangle bounds, {\cf17 const} {\cf18 char} *textLeft, {\cf17 const} {\cf18 char} *textRight, {\cf18 float} value, {\cf18 float} minValue, {\cf18 float} maxValue);  {\cf20 // Progress Bar control, shows current progress value}\par
527 RAYGUIAPI {\cf18 void} GuiStatusBar(Rectangle bounds, {\cf17 const} {\cf18 char} *text);                                        {\cf20 // Status Bar control, shows info text}\par
528 RAYGUIAPI {\cf18 void} GuiDummyRec(Rectangle bounds, {\cf17 const} {\cf18 char} *text);                                         {\cf20 // Dummy control for placeholders}\par
529 RAYGUIAPI Vector2 GuiGrid(Rectangle bounds, {\cf17 const} {\cf18 char} *text, {\cf18 float} spacing, {\cf18 int} subdivs);              {\cf20 // Grid control, returns mouse cell position}\par
530 \par
531 {\cf20 // Advance controls set}\par
532 RAYGUIAPI {\cf18 int} GuiListView(Rectangle bounds, {\cf17 const} {\cf18 char} *text, {\cf18 int} *scrollIndex, {\cf18 int} active);            {\cf20 // List View control, returns selected list item index}\par
533 RAYGUIAPI {\cf18 int} GuiListViewEx(Rectangle bounds, {\cf17 const} {\cf18 char} **text, {\cf18 int} count, {\cf18 int} *focus, {\cf18 int} *scrollIndex, {\cf18 int} active);      {\cf20 // List View with extended parameters}\par
534 RAYGUIAPI {\cf18 int} GuiMessageBox(Rectangle bounds, {\cf17 const} {\cf18 char} *title, {\cf17 const} {\cf18 char} *message, {\cf17 const} {\cf18 char} *buttons);                 {\cf20 // Message Box control, displays a message}\par
535 RAYGUIAPI {\cf18 int} GuiTextInputBox(Rectangle bounds, {\cf17 const} {\cf18 char} *title, {\cf17 const} {\cf18 char} *message, {\cf17 const} {\cf18 char} *buttons, {\cf18 char} *text, {\cf18 int} textMaxSize, {\cf18 int} *secretViewActive);   {\cf20 // Text Input Box control, ask for text, supports secret}\par
536 RAYGUIAPI Color GuiColorPicker(Rectangle bounds, {\cf17 const} {\cf18 char} *text, Color color);                        {\cf20 // Color Picker control (multiple color controls)}\par
537 RAYGUIAPI Color GuiColorPanel(Rectangle bounds, {\cf17 const} {\cf18 char} *text, Color color);                         {\cf20 // Color Panel control}\par
538 RAYGUIAPI {\cf18 float} GuiColorBarAlpha(Rectangle bounds, {\cf17 const} {\cf18 char} *text, {\cf18 float} alpha);                      {\cf20 // Color Bar Alpha control}\par
539 RAYGUIAPI {\cf18 float} GuiColorBarHue(Rectangle bounds, {\cf17 const} {\cf18 char} *text, {\cf18 float} value);                        {\cf20 // Color Bar Hue control}\par
540 \par
541 {\cf20 // Styles loading functions}\par
542 RAYGUIAPI {\cf18 void} GuiLoadStyle({\cf17 const} {\cf18 char} *fileName);              {\cf20 // Load style file over global style variable (.rgs)}\par
543 RAYGUIAPI {\cf18 void} GuiLoadStyleDefault({\cf18 void});                       {\cf20 // Load style default over global style}\par
544 \par
545 {\cf20 // Icons functionality}\par
546 RAYGUIAPI {\cf17 const} {\cf18 char} *GuiIconText({\cf18 int} iconId, {\cf17 const} {\cf18 char} *text); {\cf20 // Get text with icon id prepended (if supported)}\par
547 \par
548 {\cf21 #if !defined(RAYGUI_NO_ICONS)}\par
549 RAYGUIAPI {\cf18 void} GuiDrawIcon({\cf18 int} iconId, {\cf18 int} posX, {\cf18 int} posY, {\cf18 int} pixelSize, Color color);\par
550 \par
551 RAYGUIAPI {\cf18 unsigned} {\cf18 int} *GuiGetIcons({\cf18 void});                      {\cf20 // Get full icons data pointer}\par
552 RAYGUIAPI {\cf18 unsigned} {\cf18 int} *GuiGetIconData({\cf18 int} iconId);             {\cf20 // Get icon bit data}\par
553 RAYGUIAPI {\cf18 void} GuiSetIconData({\cf18 int} iconId, {\cf18 unsigned} {\cf18 int} *data);  {\cf20 // Set icon bit data}\par
554 RAYGUIAPI {\cf18 void} GuiSetIconScale({\cf18 unsigned} {\cf18 int} scale);             {\cf20 // Set icon scale (1 by default)}\par
555 \par
556 RAYGUIAPI {\cf18 void} GuiSetIconPixel({\cf18 int} iconId, {\cf18 int} x, {\cf18 int} y);       {\cf20 // Set icon pixel value}\par
557 RAYGUIAPI {\cf18 void} GuiClearIconPixel({\cf18 int} iconId, {\cf18 int} x, {\cf18 int} y);     {\cf20 // Clear icon pixel value}\par
558 RAYGUIAPI {\cf18 bool} GuiCheckIconPixel({\cf18 int} iconId, {\cf18 int} x, {\cf18 int} y);     {\cf20 // Check icon pixel value}\par
559 \par
560 {\cf21 #if !defined(RAYGUI_CUSTOM_ICONS)}\par
561 {\cf20 //----------------------------------------------------------------------------------}\par
562 {\cf20 // Icons enumeration}\par
563 {\cf20 //----------------------------------------------------------------------------------}\par
564 {\cf17 typedef} {\cf17 enum} \{\par
565     ICON_NONE                     = 0,\par
566     ICON_FOLDER_FILE_OPEN         = 1,\par
567     ICON_FILE_SAVE_CLASSIC        = 2,\par
568     ICON_FOLDER_OPEN              = 3,\par
569     ICON_FOLDER_SAVE              = 4,\par
570     ICON_FILE_OPEN                = 5,\par
571     ICON_FILE_SAVE                = 6,\par
572     ICON_FILE_EXPORT              = 7,\par
573     ICON_FILE_ADD                 = 8,\par
574     ICON_FILE_DELETE              = 9,\par
575     ICON_FILETYPE_TEXT            = 10,\par
576     ICON_FILETYPE_AUDIO           = 11,\par
577     ICON_FILETYPE_IMAGE           = 12,\par
578     ICON_FILETYPE_PLAY            = 13,\par
579     ICON_FILETYPE_VIDEO           = 14,\par
580     ICON_FILETYPE_INFO            = 15,\par
581     ICON_FILE_COPY                = 16,\par
582     ICON_FILE_CUT                 = 17,\par
583     ICON_FILE_PASTE               = 18,\par
584     ICON_CURSOR_HAND              = 19,\par
585     ICON_CURSOR_POINTER           = 20,\par
586     ICON_CURSOR_CLASSIC           = 21,\par
587     ICON_PENCIL                   = 22,\par
588     ICON_PENCIL_BIG               = 23,\par
589     ICON_BRUSH_CLASSIC            = 24,\par
590     ICON_BRUSH_PAINTER            = 25,\par
591     ICON_WATER_DROP               = 26,\par
592     ICON_COLOR_PICKER             = 27,\par
593     ICON_RUBBER                   = 28,\par
594     ICON_COLOR_BUCKET             = 29,\par
595     ICON_TEXT_T                   = 30,\par
596     ICON_TEXT_A                   = 31,\par
597     ICON_SCALE                    = 32,\par
598     ICON_RESIZE                   = 33,\par
599     ICON_FILTER_POINT             = 34,\par
600     ICON_FILTER_BILINEAR          = 35,\par
601     ICON_CROP                     = 36,\par
602     ICON_CROP_ALPHA               = 37,\par
603     ICON_SQUARE_TOGGLE            = 38,\par
604     ICON_SYMMETRY                 = 39,\par
605     ICON_SYMMETRY_HORIZONTAL      = 40,\par
606     ICON_SYMMETRY_VERTICAL        = 41,\par
607     ICON_LENS                     = 42,\par
608     ICON_LENS_BIG                 = 43,\par
609     ICON_EYE_ON                   = 44,\par
610     ICON_EYE_OFF                  = 45,\par
611     ICON_FILTER_TOP               = 46,\par
612     ICON_FILTER                   = 47,\par
613     ICON_TARGET_POINT             = 48,\par
614     ICON_TARGET_SMALL             = 49,\par
615     ICON_TARGET_BIG               = 50,\par
616     ICON_TARGET_MOVE              = 51,\par
617     ICON_CURSOR_MOVE              = 52,\par
618     ICON_CURSOR_SCALE             = 53,\par
619     ICON_CURSOR_SCALE_RIGHT       = 54,\par
620     ICON_CURSOR_SCALE_LEFT        = 55,\par
621     ICON_UNDO                     = 56,\par
622     ICON_REDO                     = 57,\par
623     ICON_REREDO                   = 58,\par
624     ICON_MUTATE                   = 59,\par
625     ICON_ROTATE                   = 60,\par
626     ICON_REPEAT                   = 61,\par
627     ICON_SHUFFLE                  = 62,\par
628     ICON_EMPTYBOX                 = 63,\par
629     ICON_TARGET                   = 64,\par
630     ICON_TARGET_SMALL_FILL        = 65,\par
631     ICON_TARGET_BIG_FILL          = 66,\par
632     ICON_TARGET_MOVE_FILL         = 67,\par
633     ICON_CURSOR_MOVE_FILL         = 68,\par
634     ICON_CURSOR_SCALE_FILL        = 69,\par
635     ICON_CURSOR_SCALE_RIGHT_FILL  = 70,\par
636     ICON_CURSOR_SCALE_LEFT_FILL   = 71,\par
637     ICON_UNDO_FILL                = 72,\par
638     ICON_REDO_FILL                = 73,\par
639     ICON_REREDO_FILL              = 74,\par
640     ICON_MUTATE_FILL              = 75,\par
641     ICON_ROTATE_FILL              = 76,\par
642     ICON_REPEAT_FILL              = 77,\par
643     ICON_SHUFFLE_FILL             = 78,\par
644     ICON_EMPTYBOX_SMALL           = 79,\par
645     ICON_BOX                      = 80,\par
646     ICON_BOX_TOP                  = 81,\par
647     ICON_BOX_TOP_RIGHT            = 82,\par
648     ICON_BOX_RIGHT                = 83,\par
649     ICON_BOX_BOTTOM_RIGHT         = 84,\par
650     ICON_BOX_BOTTOM               = 85,\par
651     ICON_BOX_BOTTOM_LEFT          = 86,\par
652     ICON_BOX_LEFT                 = 87,\par
653     ICON_BOX_TOP_LEFT             = 88,\par
654     ICON_BOX_CENTER               = 89,\par
655     ICON_BOX_CIRCLE_MASK          = 90,\par
656     ICON_POT                      = 91,\par
657     ICON_ALPHA_MULTIPLY           = 92,\par
658     ICON_ALPHA_CLEAR              = 93,\par
659     ICON_DITHERING                = 94,\par
660     ICON_MIPMAPS                  = 95,\par
661     ICON_BOX_GRID                 = 96,\par
662     ICON_GRID                     = 97,\par
663     ICON_BOX_CORNERS_SMALL        = 98,\par
664     ICON_BOX_CORNERS_BIG          = 99,\par
665     ICON_FOUR_BOXES               = 100,\par
666     ICON_GRID_FILL                = 101,\par
667     ICON_BOX_MULTISIZE            = 102,\par
668     ICON_ZOOM_SMALL               = 103,\par
669     ICON_ZOOM_MEDIUM              = 104,\par
670     ICON_ZOOM_BIG                 = 105,\par
671     ICON_ZOOM_ALL                 = 106,\par
672     ICON_ZOOM_CENTER              = 107,\par
673     ICON_BOX_DOTS_SMALL           = 108,\par
674     ICON_BOX_DOTS_BIG             = 109,\par
675     ICON_BOX_CONCENTRIC           = 110,\par
676     ICON_BOX_GRID_BIG             = 111,\par
677     ICON_OK_TICK                  = 112,\par
678     ICON_CROSS                    = 113,\par
679     ICON_ARROW_LEFT               = 114,\par
680     ICON_ARROW_RIGHT              = 115,\par
681     ICON_ARROW_DOWN               = 116,\par
682     ICON_ARROW_UP                 = 117,\par
683     ICON_ARROW_LEFT_FILL          = 118,\par
684     ICON_ARROW_RIGHT_FILL         = 119,\par
685     ICON_ARROW_DOWN_FILL          = 120,\par
686     ICON_ARROW_UP_FILL            = 121,\par
687     ICON_AUDIO                    = 122,\par
688     ICON_FX                       = 123,\par
689     ICON_WAVE                     = 124,\par
690     ICON_WAVE_SINUS               = 125,\par
691     ICON_WAVE_SQUARE              = 126,\par
692     ICON_WAVE_TRIANGULAR          = 127,\par
693     ICON_CROSS_SMALL              = 128,\par
694     ICON_PLAYER_PREVIOUS          = 129,\par
695     ICON_PLAYER_PLAY_BACK         = 130,\par
696     ICON_PLAYER_PLAY              = 131,\par
697     ICON_PLAYER_PAUSE             = 132,\par
698     ICON_PLAYER_STOP              = 133,\par
699     ICON_PLAYER_NEXT              = 134,\par
700     ICON_PLAYER_RECORD            = 135,\par
701     ICON_MAGNET                   = 136,\par
702     ICON_LOCK_CLOSE               = 137,\par
703     ICON_LOCK_OPEN                = 138,\par
704     ICON_CLOCK                    = 139,\par
705     ICON_TOOLS                    = 140,\par
706     ICON_GEAR                     = 141,\par
707     ICON_GEAR_BIG                 = 142,\par
708     ICON_BIN                      = 143,\par
709     ICON_HAND_POINTER             = 144,\par
710     ICON_LASER                    = 145,\par
711     ICON_COIN                     = 146,\par
712     ICON_EXPLOSION                = 147,\par
713     ICON_1UP                      = 148,\par
714     ICON_PLAYER                   = 149,\par
715     ICON_PLAYER_JUMP              = 150,\par
716     ICON_KEY                      = 151,\par
717     ICON_DEMON                    = 152,\par
718     ICON_TEXT_POPUP               = 153,\par
719     ICON_GEAR_EX                  = 154,\par
720     ICON_CRACK                    = 155,\par
721     ICON_CRACK_POINTS             = 156,\par
722     ICON_STAR                     = 157,\par
723     ICON_DOOR                     = 158,\par
724     ICON_EXIT                     = 159,\par
725     ICON_MODE_2D                  = 160,\par
726     ICON_MODE_3D                  = 161,\par
727     ICON_CUBE                     = 162,\par
728     ICON_CUBE_FACE_TOP            = 163,\par
729     ICON_CUBE_FACE_LEFT           = 164,\par
730     ICON_CUBE_FACE_FRONT          = 165,\par
731     ICON_CUBE_FACE_BOTTOM         = 166,\par
732     ICON_CUBE_FACE_RIGHT          = 167,\par
733     ICON_CUBE_FACE_BACK           = 168,\par
734     ICON_CAMERA                   = 169,\par
735     ICON_SPECIAL                  = 170,\par
736     ICON_LINK_NET                 = 171,\par
737     ICON_LINK_BOXES               = 172,\par
738     ICON_LINK_MULTI               = 173,\par
739     ICON_LINK                     = 174,\par
740     ICON_LINK_BROKE               = 175,\par
741     ICON_TEXT_NOTES               = 176,\par
742     ICON_NOTEBOOK                 = 177,\par
743     ICON_SUITCASE                 = 178,\par
744     ICON_SUITCASE_ZIP             = 179,\par
745     ICON_MAILBOX                  = 180,\par
746     ICON_MONITOR                  = 181,\par
747     ICON_PRINTER                  = 182,\par
748     ICON_PHOTO_CAMERA             = 183,\par
749     ICON_PHOTO_CAMERA_FLASH       = 184,\par
750     ICON_HOUSE                    = 185,\par
751     ICON_HEART                    = 186,\par
752     ICON_CORNER                   = 187,\par
753     ICON_VERTICAL_BARS            = 188,\par
754     ICON_VERTICAL_BARS_FILL       = 189,\par
755     ICON_LIFE_BARS                = 190,\par
756     ICON_INFO                     = 191,\par
757     ICON_CROSSLINE                = 192,\par
758     ICON_HELP                     = 193,\par
759     ICON_FILETYPE_ALPHA           = 194,\par
760     ICON_FILETYPE_HOME            = 195,\par
761     ICON_LAYERS_VISIBLE           = 196,\par
762     ICON_LAYERS                   = 197,\par
763     ICON_WINDOW                   = 198,\par
764     ICON_HIDPI                    = 199,\par
765     ICON_FILETYPE_BINARY          = 200,\par
766     ICON_HEX                      = 201,\par
767     ICON_SHIELD                   = 202,\par
768     ICON_FILE_NEW                 = 203,\par
769     ICON_FOLDER_ADD               = 204,\par
770     ICON_ALARM                    = 205,\par
771     ICON_206                      = 206,\par
772     ICON_207                      = 207,\par
773     ICON_208                      = 208,\par
774     ICON_209                      = 209,\par
775     ICON_210                      = 210,\par
776     ICON_211                      = 211,\par
777     ICON_212                      = 212,\par
778     ICON_213                      = 213,\par
779     ICON_214                      = 214,\par
780     ICON_215                      = 215,\par
781     ICON_216                      = 216,\par
782     ICON_217                      = 217,\par
783     ICON_218                      = 218,\par
784     ICON_219                      = 219,\par
785     ICON_220                      = 220,\par
786     ICON_221                      = 221,\par
787     ICON_222                      = 222,\par
788     ICON_223                      = 223,\par
789     ICON_224                      = 224,\par
790     ICON_225                      = 225,\par
791     ICON_226                      = 226,\par
792     ICON_227                      = 227,\par
793     ICON_228                      = 228,\par
794     ICON_229                      = 229,\par
795     ICON_230                      = 230,\par
796     ICON_231                      = 231,\par
797     ICON_232                      = 232,\par
798     ICON_233                      = 233,\par
799     ICON_234                      = 234,\par
800     ICON_235                      = 235,\par
801     ICON_236                      = 236,\par
802     ICON_237                      = 237,\par
803     ICON_238                      = 238,\par
804     ICON_239                      = 239,\par
805     ICON_240                      = 240,\par
806     ICON_241                      = 241,\par
807     ICON_242                      = 242,\par
808     ICON_243                      = 243,\par
809     ICON_244                      = 244,\par
810     ICON_245                      = 245,\par
811     ICON_246                      = 246,\par
812     ICON_247                      = 247,\par
813     ICON_248                      = 248,\par
814     ICON_249                      = 249,\par
815     ICON_250                      = 250,\par
816     ICON_251                      = 251,\par
817     ICON_252                      = 252,\par
818     ICON_253                      = 253,\par
819     ICON_254                      = 254,\par
820     ICON_255                      = 255,\par
821 \} GuiIconName;\par
822 {\cf21 #endif}\par
823 \par
824 {\cf21 #endif}\par
825 \par
826 {\cf21 #if defined(__cplusplus)}\par
827 \}            {\cf20 // Prevents name mangling of functions}\par
828 {\cf21 #endif}\par
829 \par
830 {\cf21 #endif }{\cf20 // RAYGUI_H}\par
831 \par
832 {\cf20 /***********************************************************************************}\par
833 {\cf20 *}\par
834 {\cf20 *   RAYGUI IMPLEMENTATION}\par
835 {\cf20 *}\par
836 {\cf20 ************************************************************************************/}\par
837 \par
838 {\cf21 #if defined(RAYGUI_IMPLEMENTATION)}\par
839 \par
840 {\cf21 #include <stdio.h>}              {\cf20 // Required for: FILE, fopen(), fclose(), fprintf(), feof(), fscanf(), vsprintf() [GuiLoadStyle(), GuiLoadIcons()]}\par
841 {\cf21 #include <stdlib.h>}             {\cf20 // Required for: malloc(), calloc(), free() [GuiLoadStyle(), GuiLoadIcons()]}\par
842 {\cf21 #include <string.h>}             {\cf20 // Required for: strlen() [GuiTextBox(), GuiTextBoxMulti(), GuiValueBox()], memset(), memcpy()}\par
843 {\cf21 #include <stdarg.h>}             {\cf20 // Required for: va_list, va_start(), vfprintf(), va_end() [TextFormat()]}\par
844 {\cf21 #include <math.h>}               {\cf20 // Required for: roundf() [GuiColorPicker()]}\par
845 \par
846 {\cf21 #ifdef __cplusplus}\par
847 {\cf21     #define RAYGUI_CLITERAL(name) name}\par
848 {\cf21 #else}\par
849 {\cf21     #define RAYGUI_CLITERAL(name) (name)}\par
850 {\cf21 #endif}\par
851 \par
852 {\cf21 #if !defined(RAYGUI_NO_ICONS) && !defined(RAYGUI_CUSTOM_ICONS)}\par
853 \par
854 {\cf20 // Embedded icons, no external file provided}\par
855 {\cf21 #define RAYGUI_ICON_SIZE               16          }{\cf20 // Size of icons in pixels (squared)}\par
856 {\cf21 #define RAYGUI_ICON_MAX_ICONS         256          }{\cf20 // Maximum number of icons}\par
857 {\cf21 #define RAYGUI_ICON_MAX_NAME_LENGTH    32          }{\cf20 // Maximum length of icon name id}\par
858 \par
859 {\cf20 // Icons data is defined by bit array (every bit represents one pixel)}\par
860 {\cf20 // Those arrays are stored as unsigned int data arrays, so,}\par
861 {\cf20 // every array element defines 32 pixels (bits) of information}\par
862 {\cf20 // One icon is defined by 8 int, (8 int * 32 bit = 256 bit = 16*16 pixels)}\par
863 {\cf20 // NOTE: Number of elemens depend on RAYGUI_ICON_SIZE (by default 16x16 pixels)}\par
864 {\cf21 #define RAYGUI_ICON_DATA_ELEMENTS   (RAYGUI_ICON_SIZE*RAYGUI_ICON_SIZE/32)}\par
865 \par
866 {\cf20 //----------------------------------------------------------------------------------}\par
867 {\cf20 // Icons data for all gui possible icons (allocated on data segment by default)}\par
868 {\cf20 //}\par
869 {\cf20 // NOTE 1: Every icon is codified in binary form, using 1 bit per pixel, so,}\par
870 {\cf20 // every 16x16 icon requires 8 integers (16*16/32) to be stored}\par
871 {\cf20 //}\par
872 {\cf20 // NOTE 2: A different icon set could be loaded over this array using GuiLoadIcons(),}\par
873 {\cf20 // but loaded icons set must be same RAYGUI_ICON_SIZE and no more than RAYGUI_ICON_MAX_ICONS}\par
874 {\cf20 //}\par
875 {\cf20 // guiIcons size is by default: 256*(16*16/32) = 2048*4 = 8192 bytes = 8 KB}\par
876 {\cf20 //----------------------------------------------------------------------------------}\par
877 {\cf17 static} {\cf18 unsigned} {\cf18 int} guiIcons[RAYGUI_ICON_MAX_ICONS*RAYGUI_ICON_DATA_ELEMENTS] = \{\par
878     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_NONE}\par
879     0x3ff80000, 0x2f082008, 0x2042207e, 0x40027fc2, 0x40024002, 0x40024002, 0x40024002, 0x00007ffe,     {\cf20 // ICON_FOLDER_FILE_OPEN}\par
880     0x3ffe0000, 0x44226422, 0x400247e2, 0x5ffa4002, 0x57ea500a, 0x500a500a, 0x40025ffa, 0x00007ffe,     {\cf20 // ICON_FILE_SAVE_CLASSIC}\par
881     0x00000000, 0x0042007e, 0x40027fc2, 0x40024002, 0x41024002, 0x44424282, 0x793e4102, 0x00000100,     {\cf20 // ICON_FOLDER_OPEN}\par
882     0x00000000, 0x0042007e, 0x40027fc2, 0x40024002, 0x41024102, 0x44424102, 0x793e4282, 0x00000000,     {\cf20 // ICON_FOLDER_SAVE}\par
883     0x3ff00000, 0x201c2010, 0x20042004, 0x21042004, 0x24442284, 0x21042104, 0x20042104, 0x00003ffc,     {\cf20 // ICON_FILE_OPEN}\par
884     0x3ff00000, 0x201c2010, 0x20042004, 0x21042004, 0x21042104, 0x22842444, 0x20042104, 0x00003ffc,     {\cf20 // ICON_FILE_SAVE}\par
885     0x3ff00000, 0x201c2010, 0x00042004, 0x20041004, 0x20844784, 0x00841384, 0x20042784, 0x00003ffc,     {\cf20 // ICON_FILE_EXPORT}\par
886     0x3ff00000, 0x201c2010, 0x20042004, 0x20042004, 0x22042204, 0x22042f84, 0x20042204, 0x00003ffc,     {\cf20 // ICON_FILE_ADD}\par
887     0x3ff00000, 0x201c2010, 0x20042004, 0x20042004, 0x25042884, 0x25042204, 0x20042884, 0x00003ffc,     {\cf20 // ICON_FILE_DELETE}\par
888     0x3ff00000, 0x201c2010, 0x20042004, 0x20042ff4, 0x20042ff4, 0x20042ff4, 0x20042004, 0x00003ffc,     {\cf20 // ICON_FILETYPE_TEXT}\par
889     0x3ff00000, 0x201c2010, 0x27042004, 0x244424c4, 0x26442444, 0x20642664, 0x20042004, 0x00003ffc,     {\cf20 // ICON_FILETYPE_AUDIO}\par
890     0x3ff00000, 0x201c2010, 0x26042604, 0x20042004, 0x35442884, 0x2414222c, 0x20042004, 0x00003ffc,     {\cf20 // ICON_FILETYPE_IMAGE}\par
891     0x3ff00000, 0x201c2010, 0x20c42004, 0x22442144, 0x22442444, 0x20c42144, 0x20042004, 0x00003ffc,     {\cf20 // ICON_FILETYPE_PLAY}\par
892     0x3ff00000, 0x3ffc2ff0, 0x3f3c2ff4, 0x3dbc2eb4, 0x3dbc2bb4, 0x3f3c2eb4, 0x3ffc2ff4, 0x00002ff4,     {\cf20 // ICON_FILETYPE_VIDEO}\par
893     0x3ff00000, 0x201c2010, 0x21842184, 0x21842004, 0x21842184, 0x21842184, 0x20042184, 0x00003ffc,     {\cf20 // ICON_FILETYPE_INFO}\par
894     0x0ff00000, 0x381c0810, 0x28042804, 0x28042804, 0x28042804, 0x28042804, 0x20102ffc, 0x00003ff0,     {\cf20 // ICON_FILE_COPY}\par
895     0x00000000, 0x701c0000, 0x079c1e14, 0x55a000f0, 0x079c00f0, 0x701c1e14, 0x00000000, 0x00000000,     {\cf20 // ICON_FILE_CUT}\par
896     0x01c00000, 0x13e41bec, 0x3f841004, 0x204420c4, 0x20442044, 0x20442044, 0x207c2044, 0x00003fc0,     {\cf20 // ICON_FILE_PASTE}\par
897     0x00000000, 0x3aa00fe0, 0x2abc2aa0, 0x2aa42aa4, 0x20042aa4, 0x20042004, 0x3ffc2004, 0x00000000,     {\cf20 // ICON_CURSOR_HAND}\par
898     0x00000000, 0x003c000c, 0x030800c8, 0x30100c10, 0x10202020, 0x04400840, 0x01800280, 0x00000000,     {\cf20 // ICON_CURSOR_POINTER}\par
899     0x00000000, 0x00180000, 0x01f00078, 0x03e007f0, 0x07c003e0, 0x04000e40, 0x00000000, 0x00000000,     {\cf20 // ICON_CURSOR_CLASSIC}\par
900     0x00000000, 0x04000000, 0x11000a00, 0x04400a80, 0x01100220, 0x00580088, 0x00000038, 0x00000000,     {\cf20 // ICON_PENCIL}\par
901     0x04000000, 0x15000a00, 0x50402880, 0x14102820, 0x05040a08, 0x015c028c, 0x007c00bc, 0x00000000,     {\cf20 // ICON_PENCIL_BIG}\par
902     0x01c00000, 0x01400140, 0x01400140, 0x0ff80140, 0x0ff80808, 0x0aa80808, 0x0aa80aa8, 0x00000ff8,     {\cf20 // ICON_BRUSH_CLASSIC}\par
903     0x1ffc0000, 0x5ffc7ffe, 0x40004000, 0x00807f80, 0x01c001c0, 0x01c001c0, 0x01c001c0, 0x00000080,     {\cf20 // ICON_BRUSH_PAINTER}\par
904     0x00000000, 0x00800000, 0x01c00080, 0x03e001c0, 0x07f003e0, 0x036006f0, 0x000001c0, 0x00000000,     {\cf20 // ICON_WATER_DROP}\par
905     0x00000000, 0x3e003800, 0x1f803f80, 0x0c201e40, 0x02080c10, 0x00840104, 0x00380044, 0x00000000,     {\cf20 // ICON_COLOR_PICKER}\par
906     0x00000000, 0x07800300, 0x1fe00fc0, 0x3f883fd0, 0x0e021f04, 0x02040402, 0x00f00108, 0x00000000,     {\cf20 // ICON_RUBBER}\par
907     0x00c00000, 0x02800140, 0x08200440, 0x20081010, 0x2ffe3004, 0x03f807fc, 0x00e001f0, 0x00000040,     {\cf20 // ICON_COLOR_BUCKET}\par
908     0x00000000, 0x21843ffc, 0x01800180, 0x01800180, 0x01800180, 0x01800180, 0x03c00180, 0x00000000,     {\cf20 // ICON_TEXT_T}\par
909     0x00800000, 0x01400180, 0x06200340, 0x0c100620, 0x1ff80c10, 0x380c1808, 0x70067004, 0x0000f80f,     {\cf20 // ICON_TEXT_A}\par
910     0x78000000, 0x50004000, 0x00004800, 0x03c003c0, 0x03c003c0, 0x00100000, 0x0002000a, 0x0000000e,     {\cf20 // ICON_SCALE}\par
911     0x75560000, 0x5e004002, 0x54001002, 0x41001202, 0x408200fe, 0x40820082, 0x40820082, 0x00006afe,     {\cf20 // ICON_RESIZE}\par
912     0x00000000, 0x3f003f00, 0x3f003f00, 0x3f003f00, 0x00400080, 0x001c0020, 0x001c001c, 0x00000000,     {\cf20 // ICON_FILTER_POINT}\par
913     0x6d800000, 0x00004080, 0x40804080, 0x40800000, 0x00406d80, 0x001c0020, 0x001c001c, 0x00000000,     {\cf20 // ICON_FILTER_BILINEAR}\par
914     0x40080000, 0x1ffe2008, 0x14081008, 0x11081208, 0x10481088, 0x10081028, 0x10047ff8, 0x00001002,     {\cf20 // ICON_CROP}\par
915     0x00100000, 0x3ffc0010, 0x2ab03550, 0x22b02550, 0x20b02150, 0x20302050, 0x2000fff0, 0x00002000,     {\cf20 // ICON_CROP_ALPHA}\par
916     0x40000000, 0x1ff82000, 0x04082808, 0x01082208, 0x00482088, 0x00182028, 0x35542008, 0x00000002,     {\cf20 // ICON_SQUARE_TOGGLE}\par
917     0x00000000, 0x02800280, 0x06c006c0, 0x0ea00ee0, 0x1e901eb0, 0x3e883e98, 0x7efc7e8c, 0x00000000,     {\cf20 // ICON_SYMMETRY}\par
918     0x01000000, 0x05600100, 0x1d480d50, 0x7d423d44, 0x3d447d42, 0x0d501d48, 0x01000560, 0x00000100,     {\cf20 // ICON_SYMMETRY_HORIZONTAL}\par
919     0x01800000, 0x04200240, 0x10080810, 0x00001ff8, 0x00007ffe, 0x0ff01ff8, 0x03c007e0, 0x00000180,     {\cf20 // ICON_SYMMETRY_VERTICAL}\par
920     0x00000000, 0x010800f0, 0x02040204, 0x02040204, 0x07f00308, 0x1c000e00, 0x30003800, 0x00000000,     {\cf20 // ICON_LENS}\par
921     0x00000000, 0x061803f0, 0x08240c0c, 0x08040814, 0x0c0c0804, 0x23f01618, 0x18002400, 0x00000000,     {\cf20 // ICON_LENS_BIG}\par
922     0x00000000, 0x00000000, 0x1c7007c0, 0x638e3398, 0x1c703398, 0x000007c0, 0x00000000, 0x00000000,     {\cf20 // ICON_EYE_ON}\par
923     0x00000000, 0x10002000, 0x04700fc0, 0x610e3218, 0x1c703098, 0x001007a0, 0x00000008, 0x00000000,     {\cf20 // ICON_EYE_OFF}\par
924     0x00000000, 0x00007ffc, 0x40047ffc, 0x10102008, 0x04400820, 0x02800280, 0x02800280, 0x00000100,     {\cf20 // ICON_FILTER_TOP}\par
925     0x00000000, 0x40027ffe, 0x10082004, 0x04200810, 0x02400240, 0x02400240, 0x01400240, 0x000000c0,     {\cf20 // ICON_FILTER}\par
926     0x00800000, 0x00800080, 0x00000080, 0x3c9e0000, 0x00000000, 0x00800080, 0x00800080, 0x00000000,     {\cf20 // ICON_TARGET_POINT}\par
927     0x00800000, 0x00800080, 0x00800080, 0x3f7e01c0, 0x008001c0, 0x00800080, 0x00800080, 0x00000000,     {\cf20 // ICON_TARGET_SMALL}\par
928     0x00800000, 0x00800080, 0x03e00080, 0x3e3e0220, 0x03e00220, 0x00800080, 0x00800080, 0x00000000,     {\cf20 // ICON_TARGET_BIG}\par
929     0x01000000, 0x04400280, 0x01000100, 0x43842008, 0x43849ab2, 0x01002008, 0x04400100, 0x01000280,     {\cf20 // ICON_TARGET_MOVE}\par
930     0x01000000, 0x04400280, 0x01000100, 0x41042108, 0x41049ff2, 0x01002108, 0x04400100, 0x01000280,     {\cf20 // ICON_CURSOR_MOVE}\par
931     0x781e0000, 0x500a4002, 0x04204812, 0x00000240, 0x02400000, 0x48120420, 0x4002500a, 0x0000781e,     {\cf20 // ICON_CURSOR_SCALE}\par
932     0x00000000, 0x20003c00, 0x24002800, 0x01000200, 0x00400080, 0x00140024, 0x003c0004, 0x00000000,     {\cf20 // ICON_CURSOR_SCALE_RIGHT}\par
933     0x00000000, 0x0004003c, 0x00240014, 0x00800040, 0x02000100, 0x28002400, 0x3c002000, 0x00000000,     {\cf20 // ICON_CURSOR_SCALE_LEFT}\par
934     0x00000000, 0x00100020, 0x10101fc8, 0x10001020, 0x10001000, 0x10001000, 0x00001fc0, 0x00000000,     {\cf20 // ICON_UNDO}\par
935     0x00000000, 0x08000400, 0x080813f8, 0x00080408, 0x00080008, 0x00080008, 0x000003f8, 0x00000000,     {\cf20 // ICON_REDO}\par
936     0x00000000, 0x3ffc0000, 0x20042004, 0x20002000, 0x20402000, 0x3f902020, 0x00400020, 0x00000000,     {\cf20 // ICON_REREDO}\par
937     0x00000000, 0x3ffc0000, 0x20042004, 0x27fc2004, 0x20202000, 0x3fc82010, 0x00200010, 0x00000000,     {\cf20 // ICON_MUTATE}\par
938     0x00000000, 0x0ff00000, 0x10081818, 0x11801008, 0x10001180, 0x18101020, 0x00100fc8, 0x00000020,     {\cf20 // ICON_ROTATE}\par
939     0x00000000, 0x04000200, 0x240429fc, 0x20042204, 0x20442004, 0x3f942024, 0x00400020, 0x00000000,     {\cf20 // ICON_REPEAT}\par
940     0x00000000, 0x20001000, 0x22104c0e, 0x00801120, 0x11200040, 0x4c0e2210, 0x10002000, 0x00000000,     {\cf20 // ICON_SHUFFLE}\par
941     0x7ffe0000, 0x50024002, 0x44024802, 0x41024202, 0x40424082, 0x40124022, 0x4002400a, 0x00007ffe,     {\cf20 // ICON_EMPTYBOX}\par
942     0x00800000, 0x03e00080, 0x08080490, 0x3c9e0808, 0x08080808, 0x03e00490, 0x00800080, 0x00000000,     {\cf20 // ICON_TARGET}\par
943     0x00800000, 0x00800080, 0x00800080, 0x3ffe01c0, 0x008001c0, 0x00800080, 0x00800080, 0x00000000,     {\cf20 // ICON_TARGET_SMALL_FILL}\par
944     0x00800000, 0x00800080, 0x03e00080, 0x3ffe03e0, 0x03e003e0, 0x00800080, 0x00800080, 0x00000000,     {\cf20 // ICON_TARGET_BIG_FILL}\par
945     0x01000000, 0x07c00380, 0x01000100, 0x638c2008, 0x638cfbbe, 0x01002008, 0x07c00100, 0x01000380,     {\cf20 // ICON_TARGET_MOVE_FILL}\par
946     0x01000000, 0x07c00380, 0x01000100, 0x610c2108, 0x610cfffe, 0x01002108, 0x07c00100, 0x01000380,     {\cf20 // ICON_CURSOR_MOVE_FILL}\par
947     0x781e0000, 0x6006700e, 0x04204812, 0x00000240, 0x02400000, 0x48120420, 0x700e6006, 0x0000781e,     {\cf20 // ICON_CURSOR_SCALE_FILL}\par
948     0x00000000, 0x38003c00, 0x24003000, 0x01000200, 0x00400080, 0x000c0024, 0x003c001c, 0x00000000,     {\cf20 // ICON_CURSOR_SCALE_RIGHT_FILL}\par
949     0x00000000, 0x001c003c, 0x0024000c, 0x00800040, 0x02000100, 0x30002400, 0x3c003800, 0x00000000,     {\cf20 // ICON_CURSOR_SCALE_LEFT_FILL}\par
950     0x00000000, 0x00300020, 0x10301ff8, 0x10001020, 0x10001000, 0x10001000, 0x00001fc0, 0x00000000,     {\cf20 // ICON_UNDO_FILL}\par
951     0x00000000, 0x0c000400, 0x0c081ff8, 0x00080408, 0x00080008, 0x00080008, 0x000003f8, 0x00000000,     {\cf20 // ICON_REDO_FILL}\par
952     0x00000000, 0x3ffc0000, 0x20042004, 0x20002000, 0x20402000, 0x3ff02060, 0x00400060, 0x00000000,     {\cf20 // ICON_REREDO_FILL}\par
953     0x00000000, 0x3ffc0000, 0x20042004, 0x27fc2004, 0x20202000, 0x3ff82030, 0x00200030, 0x00000000,     {\cf20 // ICON_MUTATE_FILL}\par
954     0x00000000, 0x0ff00000, 0x10081818, 0x11801008, 0x10001180, 0x18301020, 0x00300ff8, 0x00000020,     {\cf20 // ICON_ROTATE_FILL}\par
955     0x00000000, 0x06000200, 0x26042ffc, 0x20042204, 0x20442004, 0x3ff42064, 0x00400060, 0x00000000,     {\cf20 // ICON_REPEAT_FILL}\par
956     0x00000000, 0x30001000, 0x32107c0e, 0x00801120, 0x11200040, 0x7c0e3210, 0x10003000, 0x00000000,     {\cf20 // ICON_SHUFFLE_FILL}\par
957     0x00000000, 0x30043ffc, 0x24042804, 0x21042204, 0x20442084, 0x20142024, 0x3ffc200c, 0x00000000,     {\cf20 // ICON_EMPTYBOX_SMALL}\par
958     0x00000000, 0x20043ffc, 0x20042004, 0x20042004, 0x20042004, 0x20042004, 0x3ffc2004, 0x00000000,     {\cf20 // ICON_BOX}\par
959     0x00000000, 0x23c43ffc, 0x23c423c4, 0x200423c4, 0x20042004, 0x20042004, 0x3ffc2004, 0x00000000,     {\cf20 // ICON_BOX_TOP}\par
960     0x00000000, 0x3e043ffc, 0x3e043e04, 0x20043e04, 0x20042004, 0x20042004, 0x3ffc2004, 0x00000000,     {\cf20 // ICON_BOX_TOP_RIGHT}\par
961     0x00000000, 0x20043ffc, 0x20042004, 0x3e043e04, 0x3e043e04, 0x20042004, 0x3ffc2004, 0x00000000,     {\cf20 // ICON_BOX_RIGHT}\par
962     0x00000000, 0x20043ffc, 0x20042004, 0x20042004, 0x3e042004, 0x3e043e04, 0x3ffc3e04, 0x00000000,     {\cf20 // ICON_BOX_BOTTOM_RIGHT}\par
963     0x00000000, 0x20043ffc, 0x20042004, 0x20042004, 0x23c42004, 0x23c423c4, 0x3ffc23c4, 0x00000000,     {\cf20 // ICON_BOX_BOTTOM}\par
964     0x00000000, 0x20043ffc, 0x20042004, 0x20042004, 0x207c2004, 0x207c207c, 0x3ffc207c, 0x00000000,     {\cf20 // ICON_BOX_BOTTOM_LEFT}\par
965     0x00000000, 0x20043ffc, 0x20042004, 0x207c207c, 0x207c207c, 0x20042004, 0x3ffc2004, 0x00000000,     {\cf20 // ICON_BOX_LEFT}\par
966     0x00000000, 0x207c3ffc, 0x207c207c, 0x2004207c, 0x20042004, 0x20042004, 0x3ffc2004, 0x00000000,     {\cf20 // ICON_BOX_TOP_LEFT}\par
967     0x00000000, 0x20043ffc, 0x20042004, 0x23c423c4, 0x23c423c4, 0x20042004, 0x3ffc2004, 0x00000000,     {\cf20 // ICON_BOX_CENTER}\par
968     0x7ffe0000, 0x40024002, 0x47e24182, 0x4ff247e2, 0x47e24ff2, 0x418247e2, 0x40024002, 0x00007ffe,     {\cf20 // ICON_BOX_CIRCLE_MASK}\par
969     0x7fff0000, 0x40014001, 0x40014001, 0x49555ddd, 0x4945495d, 0x400149c5, 0x40014001, 0x00007fff,     {\cf20 // ICON_POT}\par
970     0x7ffe0000, 0x53327332, 0x44ce4cce, 0x41324332, 0x404e40ce, 0x48125432, 0x4006540e, 0x00007ffe,     {\cf20 // ICON_ALPHA_MULTIPLY}\par
971     0x7ffe0000, 0x53327332, 0x44ce4cce, 0x41324332, 0x5c4e40ce, 0x44124432, 0x40065c0e, 0x00007ffe,     {\cf20 // ICON_ALPHA_CLEAR}\par
972     0x7ffe0000, 0x42fe417e, 0x42fe417e, 0x42fe417e, 0x42fe417e, 0x42fe417e, 0x42fe417e, 0x00007ffe,     {\cf20 // ICON_DITHERING}\par
973     0x07fe0000, 0x1ffa0002, 0x7fea000a, 0x402a402a, 0x5b2a512a, 0x5128552a, 0x40205128, 0x00007fe0,     {\cf20 // ICON_MIPMAPS}\par
974     0x00000000, 0x1ff80000, 0x12481248, 0x12481ff8, 0x1ff81248, 0x12481248, 0x00001ff8, 0x00000000,     {\cf20 // ICON_BOX_GRID}\par
975     0x12480000, 0x7ffe1248, 0x12481248, 0x12487ffe, 0x7ffe1248, 0x12481248, 0x12487ffe, 0x00001248,     {\cf20 // ICON_GRID}\par
976     0x00000000, 0x1c380000, 0x1c3817e8, 0x08100810, 0x08100810, 0x17e81c38, 0x00001c38, 0x00000000,     {\cf20 // ICON_BOX_CORNERS_SMALL}\par
977     0x700e0000, 0x700e5ffa, 0x20042004, 0x20042004, 0x20042004, 0x20042004, 0x5ffa700e, 0x0000700e,     {\cf20 // ICON_BOX_CORNERS_BIG}\par
978     0x3f7e0000, 0x21422142, 0x21422142, 0x00003f7e, 0x21423f7e, 0x21422142, 0x3f7e2142, 0x00000000,     {\cf20 // ICON_FOUR_BOXES}\par
979     0x00000000, 0x3bb80000, 0x3bb83bb8, 0x3bb80000, 0x3bb83bb8, 0x3bb80000, 0x3bb83bb8, 0x00000000,     {\cf20 // ICON_GRID_FILL}\par
980     0x7ffe0000, 0x7ffe7ffe, 0x77fe7000, 0x77fe77fe, 0x777e7700, 0x777e777e, 0x777e777e, 0x0000777e,     {\cf20 // ICON_BOX_MULTISIZE}\par
981     0x781e0000, 0x40024002, 0x00004002, 0x01800000, 0x00000180, 0x40020000, 0x40024002, 0x0000781e,     {\cf20 // ICON_ZOOM_SMALL}\par
982     0x781e0000, 0x40024002, 0x00004002, 0x03c003c0, 0x03c003c0, 0x40020000, 0x40024002, 0x0000781e,     {\cf20 // ICON_ZOOM_MEDIUM}\par
983     0x781e0000, 0x40024002, 0x07e04002, 0x07e007e0, 0x07e007e0, 0x400207e0, 0x40024002, 0x0000781e,     {\cf20 // ICON_ZOOM_BIG}\par
984     0x781e0000, 0x5ffa4002, 0x1ff85ffa, 0x1ff81ff8, 0x1ff81ff8, 0x5ffa1ff8, 0x40025ffa, 0x0000781e,     {\cf20 // ICON_ZOOM_ALL}\par
985     0x00000000, 0x2004381c, 0x00002004, 0x00000000, 0x00000000, 0x20040000, 0x381c2004, 0x00000000,     {\cf20 // ICON_ZOOM_CENTER}\par
986     0x00000000, 0x1db80000, 0x10081008, 0x10080000, 0x00001008, 0x10081008, 0x00001db8, 0x00000000,     {\cf20 // ICON_BOX_DOTS_SMALL}\par
987     0x35560000, 0x00002002, 0x00002002, 0x00002002, 0x00002002, 0x00002002, 0x35562002, 0x00000000,     {\cf20 // ICON_BOX_DOTS_BIG}\par
988     0x7ffe0000, 0x40024002, 0x48124ff2, 0x49924812, 0x48124992, 0x4ff24812, 0x40024002, 0x00007ffe,     {\cf20 // ICON_BOX_CONCENTRIC}\par
989     0x00000000, 0x10841ffc, 0x10841084, 0x1ffc1084, 0x10841084, 0x10841084, 0x00001ffc, 0x00000000,     {\cf20 // ICON_BOX_GRID_BIG}\par
990     0x00000000, 0x00000000, 0x10000000, 0x04000800, 0x01040200, 0x00500088, 0x00000020, 0x00000000,     {\cf20 // ICON_OK_TICK}\par
991     0x00000000, 0x10080000, 0x04200810, 0x01800240, 0x02400180, 0x08100420, 0x00001008, 0x00000000,     {\cf20 // ICON_CROSS}\par
992     0x00000000, 0x02000000, 0x00800100, 0x00200040, 0x00200010, 0x00800040, 0x02000100, 0x00000000,     {\cf20 // ICON_ARROW_LEFT}\par
993     0x00000000, 0x00400000, 0x01000080, 0x04000200, 0x04000800, 0x01000200, 0x00400080, 0x00000000,     {\cf20 // ICON_ARROW_RIGHT}\par
994     0x00000000, 0x00000000, 0x00000000, 0x08081004, 0x02200410, 0x00800140, 0x00000000, 0x00000000,     {\cf20 // ICON_ARROW_DOWN}\par
995     0x00000000, 0x00000000, 0x01400080, 0x04100220, 0x10040808, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_ARROW_UP}\par
996     0x00000000, 0x02000000, 0x03800300, 0x03e003c0, 0x03e003f0, 0x038003c0, 0x02000300, 0x00000000,     {\cf20 // ICON_ARROW_LEFT_FILL}\par
997     0x00000000, 0x00400000, 0x01c000c0, 0x07c003c0, 0x07c00fc0, 0x01c003c0, 0x004000c0, 0x00000000,     {\cf20 // ICON_ARROW_RIGHT_FILL}\par
998     0x00000000, 0x00000000, 0x00000000, 0x0ff81ffc, 0x03e007f0, 0x008001c0, 0x00000000, 0x00000000,     {\cf20 // ICON_ARROW_DOWN_FILL}\par
999     0x00000000, 0x00000000, 0x01c00080, 0x07f003e0, 0x1ffc0ff8, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_ARROW_UP_FILL}\par
1000     0x00000000, 0x18a008c0, 0x32881290, 0x24822686, 0x26862482, 0x12903288, 0x08c018a0, 0x00000000,     {\cf20 // ICON_AUDIO}\par
1001     0x00000000, 0x04800780, 0x004000c0, 0x662000f0, 0x08103c30, 0x130a0e18, 0x0000318e, 0x00000000,     {\cf20 // ICON_FX}\par
1002     0x00000000, 0x00800000, 0x08880888, 0x2aaa0a8a, 0x0a8a2aaa, 0x08880888, 0x00000080, 0x00000000,     {\cf20 // ICON_WAVE}\par
1003     0x00000000, 0x00600000, 0x01080090, 0x02040108, 0x42044204, 0x24022402, 0x00001800, 0x00000000,     {\cf20 // ICON_WAVE_SINUS}\par
1004     0x00000000, 0x07f80000, 0x04080408, 0x04080408, 0x04080408, 0x7c0e0408, 0x00000000, 0x00000000,     {\cf20 // ICON_WAVE_SQUARE}\par
1005     0x00000000, 0x00000000, 0x00a00040, 0x22084110, 0x08021404, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_WAVE_TRIANGULAR}\par
1006     0x00000000, 0x00000000, 0x04200000, 0x01800240, 0x02400180, 0x00000420, 0x00000000, 0x00000000,     {\cf20 // ICON_CROSS_SMALL}\par
1007     0x00000000, 0x18380000, 0x12281428, 0x10a81128, 0x112810a8, 0x14281228, 0x00001838, 0x00000000,     {\cf20 // ICON_PLAYER_PREVIOUS}\par
1008     0x00000000, 0x18000000, 0x11801600, 0x10181060, 0x10601018, 0x16001180, 0x00001800, 0x00000000,     {\cf20 // ICON_PLAYER_PLAY_BACK}\par
1009     0x00000000, 0x00180000, 0x01880068, 0x18080608, 0x06081808, 0x00680188, 0x00000018, 0x00000000,     {\cf20 // ICON_PLAYER_PLAY}\par
1010     0x00000000, 0x1e780000, 0x12481248, 0x12481248, 0x12481248, 0x12481248, 0x00001e78, 0x00000000,     {\cf20 // ICON_PLAYER_PAUSE}\par
1011     0x00000000, 0x1ff80000, 0x10081008, 0x10081008, 0x10081008, 0x10081008, 0x00001ff8, 0x00000000,     {\cf20 // ICON_PLAYER_STOP}\par
1012     0x00000000, 0x1c180000, 0x14481428, 0x15081488, 0x14881508, 0x14281448, 0x00001c18, 0x00000000,     {\cf20 // ICON_PLAYER_NEXT}\par
1013     0x00000000, 0x03c00000, 0x08100420, 0x10081008, 0x10081008, 0x04200810, 0x000003c0, 0x00000000,     {\cf20 // ICON_PLAYER_RECORD}\par
1014     0x00000000, 0x0c3007e0, 0x13c81818, 0x14281668, 0x14281428, 0x1c381c38, 0x08102244, 0x00000000,     {\cf20 // ICON_MAGNET}\par
1015     0x07c00000, 0x08200820, 0x3ff80820, 0x23882008, 0x21082388, 0x20082108, 0x1ff02008, 0x00000000,     {\cf20 // ICON_LOCK_CLOSE}\par
1016     0x07c00000, 0x08000800, 0x3ff80800, 0x23882008, 0x21082388, 0x20082108, 0x1ff02008, 0x00000000,     {\cf20 // ICON_LOCK_OPEN}\par
1017     0x01c00000, 0x0c180770, 0x3086188c, 0x60832082, 0x60034781, 0x30062002, 0x0c18180c, 0x01c00770,     {\cf20 // ICON_CLOCK}\par
1018     0x0a200000, 0x1b201b20, 0x04200e20, 0x04200420, 0x04700420, 0x0e700e70, 0x0e700e70, 0x04200e70,     {\cf20 // ICON_TOOLS}\par
1019     0x01800000, 0x3bdc318c, 0x0ff01ff8, 0x7c3e1e78, 0x1e787c3e, 0x1ff80ff0, 0x318c3bdc, 0x00000180,     {\cf20 // ICON_GEAR}\par
1020     0x01800000, 0x3ffc318c, 0x1c381ff8, 0x781e1818, 0x1818781e, 0x1ff81c38, 0x318c3ffc, 0x00000180,     {\cf20 // ICON_GEAR_BIG}\par
1021     0x00000000, 0x08080ff8, 0x08081ffc, 0x0aa80aa8, 0x0aa80aa8, 0x0aa80aa8, 0x08080aa8, 0x00000ff8,     {\cf20 // ICON_BIN}\par
1022     0x00000000, 0x00000000, 0x20043ffc, 0x08043f84, 0x04040f84, 0x04040784, 0x000007fc, 0x00000000,     {\cf20 // ICON_HAND_POINTER}\par
1023     0x00000000, 0x24400400, 0x00001480, 0x6efe0e00, 0x00000e00, 0x24401480, 0x00000400, 0x00000000,     {\cf20 // ICON_LASER}\par
1024     0x00000000, 0x03c00000, 0x08300460, 0x11181118, 0x11181118, 0x04600830, 0x000003c0, 0x00000000,     {\cf20 // ICON_COIN}\par
1025     0x00000000, 0x10880080, 0x06c00810, 0x366c07e0, 0x07e00240, 0x00001768, 0x04200240, 0x00000000,     {\cf20 // ICON_EXPLOSION}\par
1026     0x00000000, 0x3d280000, 0x2528252c, 0x3d282528, 0x05280528, 0x05e80528, 0x00000000, 0x00000000,     {\cf20 // ICON_1UP}\par
1027     0x01800000, 0x03c003c0, 0x018003c0, 0x0ff007e0, 0x0bd00bd0, 0x0a500bd0, 0x02400240, 0x02400240,     {\cf20 // ICON_PLAYER}\par
1028     0x01800000, 0x03c003c0, 0x118013c0, 0x03c81ff8, 0x07c003c8, 0x04400440, 0x0c080478, 0x00000000,     {\cf20 // ICON_PLAYER_JUMP}\par
1029     0x3ff80000, 0x30183ff8, 0x30183018, 0x3ff83ff8, 0x03000300, 0x03c003c0, 0x03e00300, 0x000003e0,     {\cf20 // ICON_KEY}\par
1030     0x3ff80000, 0x3ff83ff8, 0x33983ff8, 0x3ff83398, 0x3ff83ff8, 0x00000540, 0x0fe00aa0, 0x00000fe0,     {\cf20 // ICON_DEMON}\par
1031     0x00000000, 0x0ff00000, 0x20041008, 0x25442004, 0x10082004, 0x06000bf0, 0x00000300, 0x00000000,     {\cf20 // ICON_TEXT_POPUP}\par
1032     0x00000000, 0x11440000, 0x07f00be8, 0x1c1c0e38, 0x1c1c0c18, 0x07f00e38, 0x11440be8, 0x00000000,     {\cf20 // ICON_GEAR_EX}\par
1033     0x00000000, 0x20080000, 0x0c601010, 0x07c00fe0, 0x07c007c0, 0x0c600fe0, 0x20081010, 0x00000000,     {\cf20 // ICON_CRACK}\par
1034     0x00000000, 0x20080000, 0x0c601010, 0x04400fe0, 0x04405554, 0x0c600fe0, 0x20081010, 0x00000000,     {\cf20 // ICON_CRACK_POINTS}\par
1035     0x00000000, 0x00800080, 0x01c001c0, 0x1ffc3ffe, 0x03e007f0, 0x07f003e0, 0x0c180770, 0x00000808,     {\cf20 // ICON_STAR}\par
1036     0x0ff00000, 0x08180810, 0x08100818, 0x0a100810, 0x08180810, 0x08100818, 0x08100810, 0x00001ff8,     {\cf20 // ICON_DOOR}\par
1037     0x0ff00000, 0x08100810, 0x08100810, 0x10100010, 0x4f902010, 0x10102010, 0x08100010, 0x00000ff0,     {\cf20 // ICON_EXIT}\par
1038     0x00040000, 0x001f000e, 0x0ef40004, 0x12f41284, 0x0ef41214, 0x10040004, 0x7ffc3004, 0x10003000,     {\cf20 // ICON_MODE_2D}\par
1039     0x78040000, 0x501f600e, 0x0ef44004, 0x12f41284, 0x0ef41284, 0x10140004, 0x7ffc300c, 0x10003000,     {\cf20 // ICON_MODE_3D}\par
1040     0x7fe00000, 0x50286030, 0x47fe4804, 0x44224402, 0x44224422, 0x241275e2, 0x0c06140a, 0x000007fe,     {\cf20 // ICON_CUBE}\par
1041     0x7fe00000, 0x5ff87ff0, 0x47fe4ffc, 0x44224402, 0x44224422, 0x241275e2, 0x0c06140a, 0x000007fe,     {\cf20 // ICON_CUBE_FACE_TOP}\par
1042     0x7fe00000, 0x50386030, 0x47fe483c, 0x443e443e, 0x443e443e, 0x241e75fe, 0x0c06140e, 0x000007fe,     {\cf20 // ICON_CUBE_FACE_LEFT}\par
1043     0x7fe00000, 0x50286030, 0x47fe4804, 0x47fe47fe, 0x47fe47fe, 0x27fe77fe, 0x0ffe17fe, 0x000007fe,     {\cf20 // ICON_CUBE_FACE_FRONT}\par
1044     0x7fe00000, 0x50286030, 0x47fe4804, 0x44224402, 0x44224422, 0x3ff27fe2, 0x0ffe1ffa, 0x000007fe,     {\cf20 // ICON_CUBE_FACE_BOTTOM}\par
1045     0x7fe00000, 0x70286030, 0x7ffe7804, 0x7c227c02, 0x7c227c22, 0x3c127de2, 0x0c061c0a, 0x000007fe,     {\cf20 // ICON_CUBE_FACE_RIGHT}\par
1046     0x7fe00000, 0x7fe87ff0, 0x7ffe7fe4, 0x7fe27fe2, 0x7fe27fe2, 0x24127fe2, 0x0c06140a, 0x000007fe,     {\cf20 // ICON_CUBE_FACE_BACK}\par
1047     0x00000000, 0x2a0233fe, 0x22022602, 0x22022202, 0x2a022602, 0x00a033fe, 0x02080110, 0x00000000,     {\cf20 // ICON_CAMERA}\par
1048     0x00000000, 0x200c3ffc, 0x000c000c, 0x3ffc000c, 0x30003000, 0x30003000, 0x3ffc3004, 0x00000000,     {\cf20 // ICON_SPECIAL}\par
1049     0x00000000, 0x0022003e, 0x012201e2, 0x0100013e, 0x01000100, 0x79000100, 0x4f004900, 0x00007800,     {\cf20 // ICON_LINK_NET}\par
1050     0x00000000, 0x44007c00, 0x45004600, 0x00627cbe, 0x00620022, 0x45007cbe, 0x44004600, 0x00007c00,     {\cf20 // ICON_LINK_BOXES}\par
1051     0x00000000, 0x0044007c, 0x0010007c, 0x3f100010, 0x3f1021f0, 0x3f100010, 0x3f0021f0, 0x00000000,     {\cf20 // ICON_LINK_MULTI}\par
1052     0x00000000, 0x0044007c, 0x00440044, 0x0010007c, 0x00100010, 0x44107c10, 0x440047f0, 0x00007c00,     {\cf20 // ICON_LINK}\par
1053     0x00000000, 0x0044007c, 0x00440044, 0x0000007c, 0x00000010, 0x44007c10, 0x44004550, 0x00007c00,     {\cf20 // ICON_LINK_BROKE}\par
1054     0x02a00000, 0x22a43ffc, 0x20042004, 0x20042ff4, 0x20042ff4, 0x20042ff4, 0x20042004, 0x00003ffc,     {\cf20 // ICON_TEXT_NOTES}\par
1055     0x3ffc0000, 0x20042004, 0x245e27c4, 0x27c42444, 0x2004201e, 0x201e2004, 0x20042004, 0x00003ffc,     {\cf20 // ICON_NOTEBOOK}\par
1056     0x00000000, 0x07e00000, 0x04200420, 0x24243ffc, 0x24242424, 0x24242424, 0x3ffc2424, 0x00000000,     {\cf20 // ICON_SUITCASE}\par
1057     0x00000000, 0x0fe00000, 0x08200820, 0x40047ffc, 0x7ffc5554, 0x40045554, 0x7ffc4004, 0x00000000,     {\cf20 // ICON_SUITCASE_ZIP}\par
1058     0x00000000, 0x20043ffc, 0x3ffc2004, 0x13c81008, 0x100813c8, 0x10081008, 0x1ff81008, 0x00000000,     {\cf20 // ICON_MAILBOX}\par
1059     0x00000000, 0x40027ffe, 0x5ffa5ffa, 0x5ffa5ffa, 0x40025ffa, 0x03c07ffe, 0x1ff81ff8, 0x00000000,     {\cf20 // ICON_MONITOR}\par
1060     0x0ff00000, 0x6bfe7ffe, 0x7ffe7ffe, 0x68167ffe, 0x08106816, 0x08100810, 0x0ff00810, 0x00000000,     {\cf20 // ICON_PRINTER}\par
1061     0x3ff80000, 0xfffe2008, 0x870a8002, 0x904a888a, 0x904a904a, 0x870a888a, 0xfffe8002, 0x00000000,     {\cf20 // ICON_PHOTO_CAMERA}\par
1062     0x0fc00000, 0xfcfe0cd8, 0x8002fffe, 0x84428382, 0x84428442, 0x80028382, 0xfffe8002, 0x00000000,     {\cf20 // ICON_PHOTO_CAMERA_FLASH}\par
1063     0x00000000, 0x02400180, 0x08100420, 0x20041008, 0x23c42004, 0x22442244, 0x3ffc2244, 0x00000000,     {\cf20 // ICON_HOUSE}\par
1064     0x00000000, 0x1c700000, 0x3ff83ef8, 0x3ff83ff8, 0x0fe01ff0, 0x038007c0, 0x00000100, 0x00000000,     {\cf20 // ICON_HEART}\par
1065     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x80000000, 0xe000c000,     {\cf20 // ICON_CORNER}\par
1066     0x00000000, 0x14001c00, 0x15c01400, 0x15401540, 0x155c1540, 0x15541554, 0x1ddc1554, 0x00000000,     {\cf20 // ICON_VERTICAL_BARS}\par
1067     0x00000000, 0x03000300, 0x1b001b00, 0x1b601b60, 0x1b6c1b60, 0x1b6c1b6c, 0x1b6c1b6c, 0x00000000,     {\cf20 // ICON_VERTICAL_BARS_FILL}\par
1068     0x00000000, 0x00000000, 0x403e7ffe, 0x7ffe403e, 0x7ffe0000, 0x43fe43fe, 0x00007ffe, 0x00000000,     {\cf20 // ICON_LIFE_BARS}\par
1069     0x7ffc0000, 0x43844004, 0x43844284, 0x43844004, 0x42844284, 0x42844284, 0x40044384, 0x00007ffc,     {\cf20 // ICON_INFO}\par
1070     0x40008000, 0x10002000, 0x04000800, 0x01000200, 0x00400080, 0x00100020, 0x00040008, 0x00010002,     {\cf20 // ICON_CROSSLINE}\par
1071     0x00000000, 0x1ff01ff0, 0x18301830, 0x1f001830, 0x03001f00, 0x00000300, 0x03000300, 0x00000000,     {\cf20 // ICON_HELP}\par
1072     0x3ff00000, 0x2abc3550, 0x2aac3554, 0x2aac3554, 0x2aac3554, 0x2aac3554, 0x2aac3554, 0x00003ffc,     {\cf20 // ICON_FILETYPE_ALPHA}\par
1073     0x3ff00000, 0x201c2010, 0x22442184, 0x28142424, 0x29942814, 0x2ff42994, 0x20042004, 0x00003ffc,     {\cf20 // ICON_FILETYPE_HOME}\par
1074     0x07fe0000, 0x04020402, 0x7fe20402, 0x44224422, 0x44224422, 0x402047fe, 0x40204020, 0x00007fe0,     {\cf20 // ICON_LAYERS_VISIBLE}\par
1075     0x07fe0000, 0x04020402, 0x7c020402, 0x44024402, 0x44024402, 0x402047fe, 0x40204020, 0x00007fe0,     {\cf20 // ICON_LAYERS}\par
1076     0x00000000, 0x40027ffe, 0x7ffe4002, 0x40024002, 0x40024002, 0x40024002, 0x7ffe4002, 0x00000000,     {\cf20 // ICON_WINDOW}\par
1077     0x09100000, 0x09f00910, 0x09100910, 0x00000910, 0x24a2779e, 0x27a224a2, 0x709e20a2, 0x00000000,     {\cf20 // ICON_HIDPI}\par
1078     0x3ff00000, 0x201c2010, 0x2a842e84, 0x2e842a84, 0x2ba42004, 0x2aa42aa4, 0x20042ba4, 0x00003ffc,     {\cf20 // ICON_FILETYPE_BINARY}\par
1079     0x00000000, 0x00000000, 0x00120012, 0x4a5e4bd2, 0x485233d2, 0x00004bd2, 0x00000000, 0x00000000,     {\cf20 // ICON_HEX}\par
1080     0x01800000, 0x381c0660, 0x23c42004, 0x23c42044, 0x13c82204, 0x08101008, 0x02400420, 0x00000180,     {\cf20 // ICON_SHIELD}\par
1081     0x007e0000, 0x20023fc2, 0x40227fe2, 0x400a403a, 0x400a400a, 0x400a400a, 0x4008400e, 0x00007ff8,     {\cf20 // ICON_FILE_NEW}\par
1082     0x00000000, 0x0042007e, 0x40027fc2, 0x44024002, 0x5f024402, 0x44024402, 0x7ffe4002, 0x00000000,     {\cf20 // ICON_FOLDER_ADD}\par
1083     0x44220000, 0x12482244, 0xf3cf0000, 0x14280420, 0x48122424, 0x08100810, 0x1ff81008, 0x03c00420,     {\cf20 // ICON_ALARM}\par
1084     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_206}\par
1085     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_207}\par
1086     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_208}\par
1087     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_209}\par
1088     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_210}\par
1089     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_211}\par
1090     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_212}\par
1091     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_213}\par
1092     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_214}\par
1093     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_215}\par
1094     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_216}\par
1095     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_217}\par
1096     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_218}\par
1097     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_219}\par
1098     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_220}\par
1099     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_221}\par
1100     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_222}\par
1101     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_223}\par
1102     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_224}\par
1103     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_225}\par
1104     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_226}\par
1105     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_227}\par
1106     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_228}\par
1107     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_229}\par
1108     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_230}\par
1109     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_231}\par
1110     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_232}\par
1111     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_233}\par
1112     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_234}\par
1113     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_235}\par
1114     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_236}\par
1115     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_237}\par
1116     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_238}\par
1117     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_239}\par
1118     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_240}\par
1119     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_241}\par
1120     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_242}\par
1121     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_243}\par
1122     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_244}\par
1123     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_245}\par
1124     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_246}\par
1125     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_247}\par
1126     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_248}\par
1127     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_249}\par
1128     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_250}\par
1129     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_251}\par
1130     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_252}\par
1131     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_253}\par
1132     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_254}\par
1133     0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,     {\cf20 // ICON_255}\par
1134 \};\par
1135 \par
1136 {\cf21 #endif      }{\cf20 // !RAYGUI_NO_ICONS && !RAYGUI_CUSTOM_ICONS}\par
1137 \par
1138 {\cf21 #ifndef RAYGUI_ICON_SIZE}\par
1139 {\cf21     #define RAYGUI_ICON_SIZE             0}\par
1140 {\cf21 #endif}\par
1141 \par
1142 {\cf21 #define RAYGUI_MAX_CONTROLS             16      }{\cf20 // Maximum number of standard controls}\par
1143 {\cf21 #define RAYGUI_MAX_PROPS_BASE           16      }{\cf20 // Maximum number of standard properties}\par
1144 {\cf21 #define RAYGUI_MAX_PROPS_EXTENDED        8      }{\cf20 // Maximum number of extended properties}\par
1145 \par
1146 {\cf20 //----------------------------------------------------------------------------------}\par
1147 {\cf20 // Types and Structures Definition}\par
1148 {\cf20 //----------------------------------------------------------------------------------}\par
1149 {\cf20 // Gui control property style color element}\par
1150 {\cf17 typedef} {\cf17 enum} \{ BORDER = 0, BASE, TEXT, OTHER \} GuiPropertyElement;\par
1151 \par
1152 {\cf20 //----------------------------------------------------------------------------------}\par
1153 {\cf20 // Global Variables Definition}\par
1154 {\cf20 //----------------------------------------------------------------------------------}\par
1155 {\cf17 static} GuiState guiState = STATE_NORMAL;    {\cf20 // Gui global state, if !STATE_NORMAL, forces defined state}\par
1156 \par
1157 {\cf17 static} Font guiFont = \{ 0 \};                {\cf20 // Gui current font (WARNING: highly coupled to raylib)}\par
1158 {\cf17 static} {\cf18 bool} guiLocked = {\cf17 false};              {\cf20 // Gui lock state (no inputs processed)}\par
1159 {\cf17 static} {\cf18 float} guiAlpha = 1.0f;               {\cf20 // Gui element transpacency on drawing}\par
1160 \par
1161 {\cf17 static} {\cf18 unsigned} {\cf18 int} guiIconScale = 1;       {\cf20 // Gui icon default scale (if icons enabled)}\par
1162 \par
1163 {\cf20 //----------------------------------------------------------------------------------}\par
1164 {\cf20 // Style data array for all gui style properties (allocated on data segment by default)}\par
1165 {\cf20 //}\par
1166 {\cf20 // NOTE 1: First set of BASE properties are generic to all controls but could be individually}\par
1167 {\cf20 // overwritten per control, first set of EXTENDED properties are generic to all controls and}\par
1168 {\cf20 // can not be overwritten individually but custom EXTENDED properties can be used by control}\par
1169 {\cf20 //}\par
1170 {\cf20 // NOTE 2: A new style set could be loaded over this array using GuiLoadStyle(),}\par
1171 {\cf20 // but default gui style could always be recovered with GuiLoadStyleDefault()}\par
1172 {\cf20 //}\par
1173 {\cf20 // guiStyle size is by default: 16*(16 + 8) = 384*4 = 1536 bytes = 1.5 KB}\par
1174 {\cf20 //----------------------------------------------------------------------------------}\par
1175 {\cf17 static} {\cf18 unsigned} {\cf18 int} guiStyle[RAYGUI_MAX_CONTROLS*(RAYGUI_MAX_PROPS_BASE + RAYGUI_MAX_PROPS_EXTENDED)] = \{ 0 \};\par
1176 \par
1177 {\cf17 static} {\cf18 bool} guiStyleLoaded = {\cf17 false};         {\cf20 // Style loaded flag for lazy style initialization}\par
1178 \par
1179 {\cf20 //----------------------------------------------------------------------------------}\par
1180 {\cf20 // Standalone Mode Functions Declaration}\par
1181 {\cf20 //}\par
1182 {\cf20 // NOTE: raygui depend on some raylib input and drawing functions}\par
1183 {\cf20 // To use raygui as standalone library, below functions must be defined by the user}\par
1184 {\cf20 //----------------------------------------------------------------------------------}\par
1185 {\cf21 #if defined(RAYGUI_STANDALONE)}\par
1186 \par
1187 {\cf21 #define KEY_RIGHT           262}\par
1188 {\cf21 #define KEY_LEFT            263}\par
1189 {\cf21 #define KEY_DOWN            264}\par
1190 {\cf21 #define KEY_UP              265}\par
1191 {\cf21 #define KEY_BACKSPACE       259}\par
1192 {\cf21 #define KEY_ENTER           257}\par
1193 \par
1194 {\cf21 #define MOUSE_LEFT_BUTTON     0}\par
1195 \par
1196 {\cf20 // Input required functions}\par
1197 {\cf20 //-------------------------------------------------------------------------------}\par
1198 {\cf17 static} Vector2 GetMousePosition({\cf18 void});\par
1199 {\cf17 static} {\cf18 float} GetMouseWheelMove({\cf18 void});\par
1200 {\cf17 static} {\cf18 bool} IsMouseButtonDown({\cf18 int} button);\par
1201 {\cf17 static} {\cf18 bool} IsMouseButtonPressed({\cf18 int} button);\par
1202 {\cf17 static} {\cf18 bool} IsMouseButtonReleased({\cf18 int} button);\par
1203 \par
1204 {\cf17 static} {\cf18 bool} IsKeyDown({\cf18 int} key);\par
1205 {\cf17 static} {\cf18 bool} IsKeyPressed({\cf18 int} key);\par
1206 {\cf17 static} {\cf18 int} GetCharPressed({\cf18 void});         {\cf20 // -- GuiTextBox(), GuiTextBoxMulti(), GuiValueBox()}\par
1207 {\cf20 //-------------------------------------------------------------------------------}\par
1208 \par
1209 {\cf20 // Drawing required functions}\par
1210 {\cf20 //-------------------------------------------------------------------------------}\par
1211 {\cf17 static} {\cf18 void} DrawRectangle({\cf18 int} x, {\cf18 int} y, {\cf18 int} width, {\cf18 int} height, Color color);        {\cf20 // -- GuiDrawRectangle(), GuiDrawIcon()}\par
1212 \par
1213 {\cf17 static} {\cf18 void} DrawRectangleGradientEx(Rectangle rec, Color col1, Color col2, Color col3, Color col4); {\cf20 // -- GuiColorPicker()}\par
1214 {\cf20 //-------------------------------------------------------------------------------}\par
1215 \par
1216 {\cf20 // Text required functions}\par
1217 {\cf20 //-------------------------------------------------------------------------------}\par
1218 {\cf17 static} Font LoadFontEx({\cf17 const} {\cf18 char} *fileName, {\cf18 int} fontSize, {\cf18 int} *fontChars, {\cf18 int} glyphCount); {\cf20 // -- GuiLoadStyle()}\par
1219 {\cf17 static} Font GetFontDefault({\cf18 void});                           {\cf20 // -- GuiLoadStyleDefault()}\par
1220 {\cf17 static} Texture2D LoadTextureFromImage(Image image);         {\cf20 // -- GuiLoadStyle()}\par
1221 {\cf17 static} {\cf18 void} SetShapesTexture(Texture2D tex, Rectangle rec); {\cf20 // -- GuiLoadStyle()}\par
1222 {\cf17 static} {\cf18 char} *LoadFileText({\cf17 const} {\cf18 char} *fileName);            {\cf20 // -- GuiLoadStyle()}\par
1223 {\cf17 static} {\cf17 const} {\cf18 char} *GetDirectoryPath({\cf17 const} {\cf18 char} *filePath);  {\cf20 // -- GuiLoadStyle()}\par
1224 \par
1225 {\cf17 static} Vector2 MeasureTextEx(Font font, {\cf17 const} {\cf18 char} *text, {\cf18 float} fontSize, {\cf18 float} spacing);   {\cf20 // -- GetTextWidth(), GuiTextBoxMulti()}\par
1226 {\cf17 static} {\cf18 void} DrawTextEx(Font font, {\cf17 const} {\cf18 char} *text, Vector2 position, {\cf18 float} fontSize, {\cf18 float} spacing, Color tint);  {\cf20 // -- GuiDrawText()}\par
1227 {\cf20 //-------------------------------------------------------------------------------}\par
1228 \par
1229 {\cf20 // raylib functions already implemented in raygui}\par
1230 {\cf20 //-------------------------------------------------------------------------------}\par
1231 {\cf17 static} Color GetColor({\cf18 int} hexValue);                {\cf20 // Returns a Color struct from hexadecimal value}\par
1232 {\cf17 static} {\cf18 int} ColorToInt(Color color);                 {\cf20 // Returns hexadecimal value for a Color}\par
1233 {\cf17 static} Color Fade(Color color, {\cf18 float} alpha);        {\cf20 // Color fade-in or fade-out, alpha goes from 0.0f to 1.0f}\par
1234 {\cf17 static} {\cf18 bool} CheckCollisionPointRec(Vector2 point, Rectangle rec);   {\cf20 // Check if point is inside rectangle}\par
1235 {\cf17 static} {\cf17 const} {\cf18 char} *TextFormat({\cf17 const} {\cf18 char} *text, ...);               {\cf20 // Formatting of text with variables to 'embed'}\par
1236 {\cf17 static} {\cf17 const} {\cf18 char} **TextSplit({\cf17 const} {\cf18 char} *text, {\cf18 char} delimiter, {\cf18 int} *count);    {\cf20 // Split text into multiple strings}\par
1237 {\cf17 static} {\cf18 int} TextToInteger({\cf17 const} {\cf18 char} *text);         {\cf20 // Get integer value from text}\par
1238 {\cf17 static} {\cf18 int} GetCodepoint({\cf17 const} {\cf18 char} *text, {\cf18 int} *bytesProcessed);     {\cf20 // Get next codepoint in a UTF-8 encoded text}\par
1239 {\cf17 static} {\cf17 const} {\cf18 char} *CodepointToUTF8({\cf18 int} codepoint, {\cf18 int} *byteSize);   {\cf20 // Encode codepoint into UTF-8 text (char array size returned as parameter)}\par
1240 \par
1241 {\cf17 static} {\cf18 void} DrawRectangleGradientV({\cf18 int} posX, {\cf18 int} posY, {\cf18 int} width, {\cf18 int} height, Color color1, Color color2);  {\cf20 // Draw rectangle vertical gradient}\par
1242 {\cf20 //-------------------------------------------------------------------------------}\par
1243 \par
1244 {\cf21 #endif      }{\cf20 // RAYGUI_STANDALONE}\par
1245 \par
1246 {\cf20 //----------------------------------------------------------------------------------}\par
1247 {\cf20 // Module specific Functions Declaration}\par
1248 {\cf20 //----------------------------------------------------------------------------------}\par
1249 {\cf17 static} {\cf18 int} GetTextWidth({\cf17 const} {\cf18 char} *text);                      {\cf20 // Gui get text width using default font}\par
1250 {\cf17 static} Rectangle GetTextBounds({\cf18 int} control, Rectangle bounds);  {\cf20 // Get text bounds considering control bounds}\par
1251 {\cf17 static} {\cf17 const} {\cf18 char} *GetTextIcon({\cf17 const} {\cf18 char} *text, {\cf18 int} *iconId);  {\cf20 // Get text icon if provided and move text cursor}\par
1252 \par
1253 {\cf17 static} {\cf18 void} GuiDrawText({\cf17 const} {\cf18 char} *text, Rectangle bounds, {\cf18 int} alignment, Color tint);         {\cf20 // Gui draw text using default font}\par
1254 {\cf17 static} {\cf18 void} GuiDrawRectangle(Rectangle rec, {\cf18 int} borderWidth, Color borderColor, Color color);   {\cf20 // Gui draw rectangle using default raygui style}\par
1255 \par
1256 {\cf17 static} {\cf17 const} {\cf18 char} **GuiTextSplit({\cf17 const} {\cf18 char} *text, {\cf18 int} *count, {\cf18 int} *textRow);       {\cf20 // Split controls text into multiple strings}\par
1257 {\cf17 static} Vector3 ConvertHSVtoRGB(Vector3 hsv);                    {\cf20 // Convert color data from HSV to RGB}\par
1258 {\cf17 static} Vector3 ConvertRGBtoHSV(Vector3 rgb);                    {\cf20 // Convert color data from RGB to HSV}\par
1259 \par
1260 {\cf17 static} {\cf18 int} GuiScrollBar(Rectangle bounds, {\cf18 int} value, {\cf18 int} minValue, {\cf18 int} maxValue);   {\cf20 // Scroll bar control, used by GuiScrollPanel()}\par
1261 \par
1262 {\cf20 //----------------------------------------------------------------------------------}\par
1263 {\cf20 // Gui Setup Functions Definition}\par
1264 {\cf20 //----------------------------------------------------------------------------------}\par
1265 {\cf20 // Enable gui global state}\par
1266 {\cf20 // NOTE: We check for STATE_DISABLED to avoid messing custom global state setups}\par
1267 {\cf18 void} GuiEnable({\cf18 void}) \{ {\cf19 if} (guiState == STATE_DISABLED) guiState = STATE_NORMAL; \}\par
1268 \par
1269 {\cf20 // Disable gui global state}\par
1270 {\cf20 // NOTE: We check for STATE_NORMAL to avoid messing custom global state setups}\par
1271 {\cf18 void} GuiDisable({\cf18 void}) \{ {\cf19 if} (guiState == STATE_NORMAL) guiState = STATE_DISABLED; \}\par
1272 \par
1273 {\cf20 // Lock gui global state}\par
1274 {\cf18 void} GuiLock({\cf18 void}) \{ guiLocked = {\cf17 true}; \}\par
1275 \par
1276 {\cf20 // Unlock gui global state}\par
1277 {\cf18 void} GuiUnlock({\cf18 void}) \{ guiLocked = {\cf17 false}; \}\par
1278 \par
1279 {\cf20 // Check if gui is locked (global state)}\par
1280 {\cf18 bool} GuiIsLocked({\cf18 void}) \{ {\cf19 return} guiLocked; \}\par
1281 \par
1282 {\cf20 // Set gui controls alpha global state}\par
1283 {\cf18 void} GuiFade({\cf18 float} alpha)\par
1284 \{\par
1285     {\cf19 if} (alpha < 0.0f) alpha = 0.0f;\par
1286     {\cf19 else} {\cf19 if} (alpha > 1.0f) alpha = 1.0f;\par
1287 \par
1288     guiAlpha = alpha;\par
1289 \}\par
1290 \par
1291 {\cf20 // Set gui state (global state)}\par
1292 {\cf18 void} GuiSetState({\cf18 int} state) \{ guiState = (GuiState)state; \}\par
1293 \par
1294 {\cf20 // Get gui state (global state)}\par
1295 {\cf18 int} GuiGetState({\cf18 void}) \{ {\cf19 return} guiState; \}\par
1296 \par
1297 {\cf20 // Set custom gui font}\par
1298 {\cf20 // NOTE: Font loading/unloading is external to raygui}\par
1299 {\cf18 void} GuiSetFont(Font font)\par
1300 \{\par
1301     {\cf19 if} (font.texture.id > 0)\par
1302     \{\par
1303         {\cf20 // NOTE: If we try to setup a font but default style has not been}\par
1304         {\cf20 // lazily loaded before, it will be overwritten, so we need to force}\par
1305         {\cf20 // default style loading first}\par
1306         {\cf19 if} (!guiStyleLoaded) GuiLoadStyleDefault();\par
1307 \par
1308         guiFont = font;\par
1309         GuiSetStyle(DEFAULT, TEXT_SIZE, font.baseSize);\par
1310     \}\par
1311 \}\par
1312 \par
1313 {\cf20 // Get custom gui font}\par
1314 Font GuiGetFont({\cf18 void})\par
1315 \{\par
1316     {\cf19 return} guiFont;\par
1317 \}\par
1318 \par
1319 {\cf20 // Set control style property value}\par
1320 {\cf18 void} GuiSetStyle({\cf18 int} control, {\cf18 int} property, {\cf18 int} value)\par
1321 \{\par
1322     {\cf19 if} (!guiStyleLoaded) GuiLoadStyleDefault();\par
1323     guiStyle[control*(RAYGUI_MAX_PROPS_BASE + RAYGUI_MAX_PROPS_EXTENDED) + property] = value;\par
1324 \par
1325     {\cf20 // Default properties are propagated to all controls}\par
1326     {\cf19 if} ((control == 0) && ({\cf17 property} < RAYGUI_MAX_PROPS_BASE))\par
1327     \{\par
1328         {\cf19 for} ({\cf18 int} i = 1; i < RAYGUI_MAX_CONTROLS; i++) guiStyle[i*(RAYGUI_MAX_PROPS_BASE + RAYGUI_MAX_PROPS_EXTENDED) + property] = value;\par
1329     \}\par
1330 \}\par
1331 \par
1332 {\cf20 // Get control style property value}\par
1333 {\cf18 int} GuiGetStyle({\cf18 int} control, {\cf18 int} property)\par
1334 \{\par
1335     {\cf19 if} (!guiStyleLoaded) GuiLoadStyleDefault();\par
1336     {\cf19 return} guiStyle[control*(RAYGUI_MAX_PROPS_BASE + RAYGUI_MAX_PROPS_EXTENDED) + property];\par
1337 \}\par
1338 \par
1339 {\cf20 //----------------------------------------------------------------------------------}\par
1340 {\cf20 // Gui Controls Functions Definition}\par
1341 {\cf20 //----------------------------------------------------------------------------------}\par
1342 \par
1343 {\cf20 // Window Box control}\par
1344 {\cf18 bool} GuiWindowBox(Rectangle bounds, {\cf17 const} {\cf18 char} *title)\par
1345 \{\par
1346     {\cf20 // Window title bar height (including borders)}\par
1347     {\cf20 // NOTE: This define is also used by GuiMessageBox() and GuiTextInputBox()}\par
1348 {\cf21     #if !defined(RAYGUI_WINDOWBOX_STATUSBAR_HEIGHT)}\par
1349 {\cf21         #define RAYGUI_WINDOWBOX_STATUSBAR_HEIGHT        24}\par
1350 {\cf21     #endif}\par
1351 \par
1352     {\cf20 //GuiState state = guiState;}\par
1353     {\cf18 bool} clicked = {\cf17 false};\par
1354 \par
1355     {\cf18 int} statusBarHeight = RAYGUI_WINDOWBOX_STATUSBAR_HEIGHT;\par
1356 \par
1357     Rectangle statusBar = \{ bounds.x, bounds.y, bounds.width, (float)statusBarHeight \};\par
1358     {\cf19 if} (bounds.height < statusBarHeight*2.0f) bounds.height = statusBarHeight*2.0f;\par
1359 \par
1360     Rectangle windowPanel = \{ bounds.x, bounds.y + (float)statusBarHeight - 1, bounds.width, bounds.height - ({\cf18 float})statusBarHeight + 1 \};\par
1361     Rectangle closeButtonRec = \{ statusBar.x + statusBar.width - GuiGetStyle(STATUSBAR, BORDER_WIDTH) - 20,\par
1362                                  statusBar.y + statusBarHeight/2.0f - 18.0f/2.0f, 18, 18 \};\par
1363 \par
1364     {\cf20 // Update control}\par
1365     {\cf20 //--------------------------------------------------------------------}\par
1366     {\cf20 // NOTE: Logic is directly managed by button}\par
1367     {\cf20 //--------------------------------------------------------------------}\par
1368 \par
1369     {\cf20 // Draw control}\par
1370     {\cf20 //--------------------------------------------------------------------}\par
1371     GuiStatusBar(statusBar, title); {\cf20 // Draw window header as status bar}\par
1372     GuiPanel(windowPanel, NULL);    {\cf20 // Draw window base}\par
1373 \par
1374     {\cf20 // Draw window close button}\par
1375     {\cf18 int} tempBorderWidth = GuiGetStyle(BUTTON, BORDER_WIDTH);\par
1376     {\cf18 int} tempTextAlignment = GuiGetStyle(BUTTON, TEXT_ALIGNMENT);\par
1377     GuiSetStyle(BUTTON, BORDER_WIDTH, 1);\par
1378     GuiSetStyle(BUTTON, TEXT_ALIGNMENT, TEXT_ALIGN_CENTER);\par
1379 {\cf21 #if defined(RAYGUI_NO_ICONS)}\par
1380     clicked = GuiButton(closeButtonRec, {\cf22 "x"});\par
1381 {\cf21 #else}\par
1382     clicked = GuiButton(closeButtonRec, GuiIconText(ICON_CROSS_SMALL, NULL));\par
1383 {\cf21 #endif}\par
1384     GuiSetStyle(BUTTON, BORDER_WIDTH, tempBorderWidth);\par
1385     GuiSetStyle(BUTTON, TEXT_ALIGNMENT, tempTextAlignment);\par
1386     {\cf20 //--------------------------------------------------------------------}\par
1387 \par
1388     {\cf19 return} clicked;\par
1389 \}\par
1390 \par
1391 {\cf20 // Group Box control with text name}\par
1392 {\cf18 void} GuiGroupBox(Rectangle bounds, {\cf17 const} {\cf18 char} *text)\par
1393 \{\par
1394 {\cf21     #if !defined(RAYGUI_GROUPBOX_LINE_THICK)}\par
1395 {\cf21         #define RAYGUI_GROUPBOX_LINE_THICK     1}\par
1396 {\cf21     #endif}\par
1397 \par
1398     GuiState state = guiState;\par
1399 \par
1400     {\cf20 // Draw control}\par
1401     {\cf20 //--------------------------------------------------------------------}\par
1402     GuiDrawRectangle(RAYGUI_CLITERAL(Rectangle)\{ bounds.x, bounds.y, RAYGUI_GROUPBOX_LINE_THICK, bounds.height \}, 0, BLANK, Fade(GetColor(GuiGetStyle(DEFAULT, (state == STATE_DISABLED)? BORDER_COLOR_DISABLED : LINE_COLOR)), guiAlpha));\par
1403     GuiDrawRectangle(RAYGUI_CLITERAL(Rectangle)\{ bounds.x, bounds.y + bounds.height - 1, bounds.width, RAYGUI_GROUPBOX_LINE_THICK \}, 0, BLANK, Fade(GetColor(GuiGetStyle(DEFAULT, (state == STATE_DISABLED)? BORDER_COLOR_DISABLED : LINE_COLOR)), guiAlpha));\par
1404     GuiDrawRectangle(RAYGUI_CLITERAL(Rectangle)\{ bounds.x + bounds.width - 1, bounds.y, RAYGUI_GROUPBOX_LINE_THICK, bounds.height \}, 0, BLANK, Fade(GetColor(GuiGetStyle(DEFAULT, (state == STATE_DISABLED)? BORDER_COLOR_DISABLED : LINE_COLOR)), guiAlpha));\par
1405 \par
1406     GuiLine(RAYGUI_CLITERAL(Rectangle)\{ bounds.x, bounds.y - GuiGetStyle(DEFAULT, TEXT_SIZE)/2, bounds.width, (float)GuiGetStyle(DEFAULT, TEXT_SIZE) \}, text);\par
1407     {\cf20 //--------------------------------------------------------------------}\par
1408 \}\par
1409 \par
1410 {\cf20 // Line control}\par
1411 {\cf18 void} GuiLine(Rectangle bounds, {\cf17 const} {\cf18 char} *text)\par
1412 \{\par
1413 {\cf21     #if !defined(RAYGUI_LINE_ORIGIN_SIZE)}\par
1414 {\cf21         #define RAYGUI_LINE_MARGIN_TEXT  12}\par
1415 {\cf21     #endif}\par
1416 {\cf21     #if !defined(RAYGUI_LINE_TEXT_PADDING)}\par
1417 {\cf21         #define RAYGUI_LINE_TEXT_PADDING  4}\par
1418 {\cf21     #endif}\par
1419 \par
1420     GuiState state = guiState;\par
1421 \par
1422     Color color = Fade(GetColor(GuiGetStyle(DEFAULT, (state == STATE_DISABLED)? BORDER_COLOR_DISABLED : LINE_COLOR)), guiAlpha);\par
1423 \par
1424     {\cf20 // Draw control}\par
1425     {\cf20 //--------------------------------------------------------------------}\par
1426     {\cf19 if} (text == NULL) GuiDrawRectangle(RAYGUI_CLITERAL(Rectangle)\{ bounds.x, bounds.y + bounds.height/2, bounds.width, 1 \}, 0, BLANK, color);\par
1427     {\cf19 else}\par
1428     \{\par
1429         Rectangle textBounds = \{ 0 \};\par
1430         textBounds.width = (float)GetTextWidth(text);\par
1431         textBounds.height = bounds.height;\par
1432         textBounds.x = bounds.x + RAYGUI_LINE_MARGIN_TEXT;\par
1433         textBounds.y = bounds.y;\par
1434 \par
1435         {\cf20 // Draw line with embedded text label: "--- text --------------"}\par
1436         GuiDrawRectangle(RAYGUI_CLITERAL(Rectangle)\{ bounds.x, bounds.y + bounds.height/2, RAYGUI_LINE_MARGIN_TEXT - RAYGUI_LINE_TEXT_PADDING, 1 \}, 0, BLANK, color);\par
1437         GuiDrawText(text, textBounds, TEXT_ALIGN_LEFT, color);\par
1438         GuiDrawRectangle(RAYGUI_CLITERAL(Rectangle)\{ bounds.x + 12 + textBounds.width + 4, bounds.y + bounds.height/2, bounds.width - textBounds.width - RAYGUI_LINE_MARGIN_TEXT - RAYGUI_LINE_TEXT_PADDING, 1 \}, 0, BLANK, color);\par
1439     \}\par
1440     {\cf20 //--------------------------------------------------------------------}\par
1441 \}\par
1442 \par
1443 {\cf20 // Panel control}\par
1444 {\cf18 void} GuiPanel(Rectangle bounds, {\cf17 const} {\cf18 char} *text)\par
1445 \{\par
1446 {\cf21     #if !defined(RAYGUI_PANEL_BORDER_WIDTH)}\par
1447 {\cf21         #define RAYGUI_PANEL_BORDER_WIDTH   1}\par
1448 {\cf21     #endif}\par
1449 \par
1450     GuiState state = guiState;\par
1451 \par
1452     {\cf20 // Text will be drawn as a header bar (if provided)}\par
1453     Rectangle statusBar = \{ bounds.x, bounds.y, bounds.width, (float)RAYGUI_WINDOWBOX_STATUSBAR_HEIGHT \};\par
1454     {\cf19 if} ((text != NULL) && (bounds.height < RAYGUI_WINDOWBOX_STATUSBAR_HEIGHT*2.0f)) bounds.height = RAYGUI_WINDOWBOX_STATUSBAR_HEIGHT*2.0f;\par
1455 \par
1456     {\cf19 if} (text != NULL)\par
1457     \{\par
1458         {\cf20 // Move panel bounds after the header bar}\par
1459         bounds.y += (float)RAYGUI_WINDOWBOX_STATUSBAR_HEIGHT - 1;\par
1460         bounds.height -= (float)RAYGUI_WINDOWBOX_STATUSBAR_HEIGHT + 1;\par
1461     \}\par
1462 \par
1463     {\cf20 // Draw control}\par
1464     {\cf20 //--------------------------------------------------------------------}\par
1465     {\cf19 if} (text != NULL) GuiStatusBar(statusBar, text);  {\cf20 // Draw panel header as status bar}\par
1466 \par
1467     GuiDrawRectangle(bounds, RAYGUI_PANEL_BORDER_WIDTH, Fade(GetColor(GuiGetStyle(DEFAULT, (state == STATE_DISABLED)? BORDER_COLOR_DISABLED: LINE_COLOR)), guiAlpha),\par
1468                      Fade(GetColor(GuiGetStyle(DEFAULT, (state == STATE_DISABLED)? BASE_COLOR_DISABLED : BACKGROUND_COLOR)), guiAlpha));\par
1469     {\cf20 //--------------------------------------------------------------------}\par
1470 \}\par
1471 \par
1472 {\cf20 // Scroll Panel control}\par
1473 Rectangle GuiScrollPanel(Rectangle bounds, {\cf17 const} {\cf18 char} *text, Rectangle content, Vector2 *scroll)\par
1474 \{\par
1475     GuiState state = guiState;\par
1476 \par
1477     Vector2 scrollPos = \{ 0.0f, 0.0f \};\par
1478     {\cf19 if} (scroll != NULL) scrollPos = *scroll;\par
1479 \par
1480     {\cf20 // Text will be drawn as a header bar (if provided)}\par
1481     Rectangle statusBar = \{ bounds.x, bounds.y, bounds.width, (float)RAYGUI_WINDOWBOX_STATUSBAR_HEIGHT \};\par
1482     {\cf19 if} (bounds.height < RAYGUI_WINDOWBOX_STATUSBAR_HEIGHT*2.0f) bounds.height = RAYGUI_WINDOWBOX_STATUSBAR_HEIGHT*2.0f;\par
1483 \par
1484     {\cf19 if} (text != NULL)\par
1485     \{\par
1486         {\cf20 // Move panel bounds after the header bar}\par
1487         bounds.y += (float)RAYGUI_WINDOWBOX_STATUSBAR_HEIGHT - 1;\par
1488         bounds.height -= (float)RAYGUI_WINDOWBOX_STATUSBAR_HEIGHT + 1;\par
1489     \}\par
1490 \par
1491     {\cf18 bool} hasHorizontalScrollBar = (content.width > bounds.width - 2*GuiGetStyle(DEFAULT, BORDER_WIDTH))? {\cf17 true} : false;\par
1492     {\cf18 bool} hasVerticalScrollBar = (content.height > bounds.height - 2*GuiGetStyle(DEFAULT, BORDER_WIDTH))? {\cf17 true} : false;\par
1493 \par
1494     {\cf20 // Recheck to account for the other scrollbar being visible}\par
1495     {\cf19 if} (!hasHorizontalScrollBar) hasHorizontalScrollBar = (hasVerticalScrollBar && (content.width > (bounds.width - 2*GuiGetStyle(DEFAULT, BORDER_WIDTH) - GuiGetStyle(LISTVIEW, SCROLLBAR_WIDTH))))? {\cf17 true} : false;\par
1496     {\cf19 if} (!hasVerticalScrollBar) hasVerticalScrollBar = (hasHorizontalScrollBar && (content.height > (bounds.height - 2*GuiGetStyle(DEFAULT, BORDER_WIDTH) - GuiGetStyle(LISTVIEW, SCROLLBAR_WIDTH))))? {\cf17 true} : false;\par
1497 \par
1498     {\cf18 int} horizontalScrollBarWidth = hasHorizontalScrollBar? GuiGetStyle(LISTVIEW, SCROLLBAR_WIDTH) : 0;\par
1499     {\cf18 int} verticalScrollBarWidth =  hasVerticalScrollBar? GuiGetStyle(LISTVIEW, SCROLLBAR_WIDTH) : 0;\par
1500     Rectangle horizontalScrollBar = \{ (float)((GuiGetStyle(LISTVIEW, SCROLLBAR_SIDE) == SCROLLBAR_LEFT_SIDE)? (float)bounds.x + verticalScrollBarWidth : (float)bounds.x) + GuiGetStyle(DEFAULT, BORDER_WIDTH), (float)bounds.y + bounds.height - horizontalScrollBarWidth - GuiGetStyle(DEFAULT, BORDER_WIDTH), (float)bounds.width - verticalScrollBarWidth - 2*GuiGetStyle(DEFAULT, BORDER_WIDTH), (float)horizontalScrollBarWidth \};\par
1501     Rectangle verticalScrollBar = \{ (float)((GuiGetStyle(LISTVIEW, SCROLLBAR_SIDE) == SCROLLBAR_LEFT_SIDE)? (float)bounds.x + GuiGetStyle(DEFAULT, BORDER_WIDTH) : (float)bounds.x + bounds.width - verticalScrollBarWidth - GuiGetStyle(DEFAULT, BORDER_WIDTH)), ({\cf18 float})bounds.y + GuiGetStyle(DEFAULT, BORDER_WIDTH), (float)verticalScrollBarWidth, ({\cf18 float})bounds.height - horizontalScrollBarWidth - 2*GuiGetStyle(DEFAULT, BORDER_WIDTH) \};\par
1502 \par
1503     {\cf20 // Calculate view area (area without the scrollbars)}\par
1504     Rectangle view = (GuiGetStyle(LISTVIEW, SCROLLBAR_SIDE) == SCROLLBAR_LEFT_SIDE)?\par
1505                 RAYGUI_CLITERAL(Rectangle)\{ bounds.x + verticalScrollBarWidth + GuiGetStyle(DEFAULT, BORDER_WIDTH), bounds.y + GuiGetStyle(DEFAULT, BORDER_WIDTH), bounds.width - 2*GuiGetStyle(DEFAULT, BORDER_WIDTH) - verticalScrollBarWidth, bounds.height - 2*GuiGetStyle(DEFAULT, BORDER_WIDTH) - horizontalScrollBarWidth \} :\par
1506                 RAYGUI_CLITERAL(Rectangle)\{ bounds.x + GuiGetStyle(DEFAULT, BORDER_WIDTH), bounds.y + GuiGetStyle(DEFAULT, BORDER_WIDTH), bounds.width - 2*GuiGetStyle(DEFAULT, BORDER_WIDTH) - verticalScrollBarWidth, bounds.height - 2*GuiGetStyle(DEFAULT, BORDER_WIDTH) - horizontalScrollBarWidth \};\par
1507 \par
1508     {\cf20 // Clip view area to the actual content size}\par
1509     {\cf19 if} (view.width > content.width) view.width = content.width;\par
1510     {\cf19 if} (view.height > content.height) view.height = content.height;\par
1511 \par
1512     {\cf18 float} horizontalMin = hasHorizontalScrollBar? ((GuiGetStyle(LISTVIEW, SCROLLBAR_SIDE) == SCROLLBAR_LEFT_SIDE)? ({\cf18 float})-verticalScrollBarWidth : 0) - ({\cf18 float})GuiGetStyle(DEFAULT, BORDER_WIDTH) : (((float)GuiGetStyle(LISTVIEW, SCROLLBAR_SIDE) == SCROLLBAR_LEFT_SIDE)? (float)-verticalScrollBarWidth : 0) - (float)GuiGetStyle(DEFAULT, BORDER_WIDTH);\par
1513     {\cf18 float} horizontalMax = hasHorizontalScrollBar? content.width - bounds.width + (float)verticalScrollBarWidth + GuiGetStyle(DEFAULT, BORDER_WIDTH) - (((float)GuiGetStyle(LISTVIEW, SCROLLBAR_SIDE) == SCROLLBAR_LEFT_SIDE)? ({\cf18 float})verticalScrollBarWidth : 0) : (float)-GuiGetStyle(DEFAULT, BORDER_WIDTH);\par
1514     {\cf18 float} verticalMin = hasVerticalScrollBar? 0 : -1;\par
1515     {\cf18 float} verticalMax = hasVerticalScrollBar? content.height - bounds.height + (float)horizontalScrollBarWidth + ({\cf18 float})GuiGetStyle(DEFAULT, BORDER_WIDTH) : (float)-GuiGetStyle(DEFAULT, BORDER_WIDTH);\par
1516 \par
1517     {\cf20 // Update control}\par
1518     {\cf20 //--------------------------------------------------------------------}\par
1519     {\cf19 if} ((state != STATE_DISABLED) && !guiLocked)\par
1520     \{\par
1521         Vector2 mousePoint = GetMousePosition();\par
1522 \par
1523         {\cf20 // Check button state}\par
1524         {\cf19 if} (CheckCollisionPointRec(mousePoint, bounds))\par
1525         \{\par
1526             {\cf19 if} (IsMouseButtonDown(MOUSE_LEFT_BUTTON)) state = STATE_PRESSED;\par
1527             {\cf19 else} state = STATE_FOCUSED;\par
1528 \par
1529 {\cf21 #if defined(SUPPORT_SCROLLBAR_KEY_INPUT)}\par
1530             {\cf19 if} (hasHorizontalScrollBar)\par
1531             \{\par
1532                 {\cf19 if} (IsKeyDown(KEY_RIGHT)) scrollPos.x -= GuiGetStyle(SCROLLBAR, SCROLL_SPEED);\par
1533                 {\cf19 if} (IsKeyDown(KEY_LEFT)) scrollPos.x += GuiGetStyle(SCROLLBAR, SCROLL_SPEED);\par
1534             \}\par
1535 \par
1536             {\cf19 if} (hasVerticalScrollBar)\par
1537             \{\par
1538                 {\cf19 if} (IsKeyDown(KEY_DOWN)) scrollPos.y -= GuiGetStyle(SCROLLBAR, SCROLL_SPEED);\par
1539                 {\cf19 if} (IsKeyDown(KEY_UP)) scrollPos.y += GuiGetStyle(SCROLLBAR, SCROLL_SPEED);\par
1540             \}\par
1541 {\cf21 #endif}\par
1542             {\cf18 float} wheelMove = GetMouseWheelMove();\par
1543 \par
1544             {\cf20 // Horizontal scroll (Shift + Mouse wheel)}\par
1545             {\cf19 if} (hasHorizontalScrollBar && (IsKeyDown(KEY_LEFT_CONTROL) || IsKeyDown(KEY_RIGHT_SHIFT))) scrollPos.x += wheelMove*20;\par
1546             {\cf19 else} scrollPos.y += wheelMove*20; {\cf20 // Vertical scroll}\par
1547         \}\par
1548     \}\par
1549 \par
1550     {\cf20 // Normalize scroll values}\par
1551     {\cf19 if} (scrollPos.x > -horizontalMin) scrollPos.x = -horizontalMin;\par
1552     {\cf19 if} (scrollPos.x < -horizontalMax) scrollPos.x = -horizontalMax;\par
1553     {\cf19 if} (scrollPos.y > -verticalMin) scrollPos.y = -verticalMin;\par
1554     {\cf19 if} (scrollPos.y < -verticalMax) scrollPos.y = -verticalMax;\par
1555     {\cf20 //--------------------------------------------------------------------}\par
1556 \par
1557     {\cf20 // Draw control}\par
1558     {\cf20 //--------------------------------------------------------------------}\par
1559     {\cf19 if} (text != NULL) GuiStatusBar(statusBar, text);  {\cf20 // Draw panel header as status bar}\par
1560 \par
1561     GuiDrawRectangle(bounds, 0, BLANK, GetColor(GuiGetStyle(DEFAULT, BACKGROUND_COLOR)));        {\cf20 // Draw background}\par
1562 \par
1563     {\cf20 // Save size of the scrollbar slider}\par
1564     {\cf17 const} {\cf18 int} slider = GuiGetStyle(SCROLLBAR, SCROLL_SLIDER_SIZE);\par
1565 \par
1566     {\cf20 // Draw horizontal scrollbar if visible}\par
1567     {\cf19 if} (hasHorizontalScrollBar)\par
1568     \{\par
1569         {\cf20 // Change scrollbar slider size to show the diff in size between the content width and the widget width}\par
1570         GuiSetStyle(SCROLLBAR, SCROLL_SLIDER_SIZE, ({\cf18 int})(((bounds.width - 2*GuiGetStyle(DEFAULT, BORDER_WIDTH) - verticalScrollBarWidth)/({\cf18 int})content.width)*(({\cf18 int})bounds.width - 2*GuiGetStyle(DEFAULT, BORDER_WIDTH) - verticalScrollBarWidth)));\par
1571         scrollPos.x = (float)-GuiScrollBar(horizontalScrollBar, ({\cf18 int})-scrollPos.x, (int)horizontalMin, ({\cf18 int})horizontalMax);\par
1572     \}\par
1573     {\cf19 else} scrollPos.x = 0.0f;\par
1574 \par
1575     {\cf20 // Draw vertical scrollbar if visible}\par
1576     {\cf19 if} (hasVerticalScrollBar)\par
1577     \{\par
1578         {\cf20 // Change scrollbar slider size to show the diff in size between the content height and the widget height}\par
1579         GuiSetStyle(SCROLLBAR, SCROLL_SLIDER_SIZE, ({\cf18 int})(((bounds.height - 2*GuiGetStyle(DEFAULT, BORDER_WIDTH) - horizontalScrollBarWidth)/({\cf18 int})content.height)*(({\cf18 int})bounds.height - 2*GuiGetStyle(DEFAULT, BORDER_WIDTH) - horizontalScrollBarWidth)));\par
1580         scrollPos.y = (float)-GuiScrollBar(verticalScrollBar, ({\cf18 int})-scrollPos.y, (int)verticalMin, ({\cf18 int})verticalMax);\par
1581     \}\par
1582     {\cf19 else} scrollPos.y = 0.0f;\par
1583 \par
1584     {\cf20 // Draw detail corner rectangle if both scroll bars are visible}\par
1585     {\cf19 if} (hasHorizontalScrollBar && hasVerticalScrollBar)\par
1586     \{\par
1587         Rectangle corner = \{ (GuiGetStyle(LISTVIEW, SCROLLBAR_SIDE) == SCROLLBAR_LEFT_SIDE)? (bounds.x + GuiGetStyle(DEFAULT, BORDER_WIDTH) + 2) : (horizontalScrollBar.x + horizontalScrollBar.width + 2), verticalScrollBar.y + verticalScrollBar.height + 2, (float)horizontalScrollBarWidth - 4, (float)verticalScrollBarWidth - 4 \};\par
1588         GuiDrawRectangle(corner, 0, BLANK, Fade(GetColor(GuiGetStyle(LISTVIEW, TEXT + (state*3))), guiAlpha));\par
1589     \}\par
1590 \par
1591     {\cf20 // Draw scrollbar lines depending on current state}\par
1592     GuiDrawRectangle(bounds, GuiGetStyle(DEFAULT, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(LISTVIEW, BORDER + (state*3))), guiAlpha), BLANK);\par
1593 \par
1594     {\cf20 // Set scrollbar slider size back to the way it was before}\par
1595     GuiSetStyle(SCROLLBAR, SCROLL_SLIDER_SIZE, slider);\par
1596     {\cf20 //--------------------------------------------------------------------}\par
1597 \par
1598     {\cf19 if} (scroll != NULL) *scroll = scrollPos;\par
1599 \par
1600     {\cf19 return} view;\par
1601 \}\par
1602 \par
1603 {\cf20 // Label control}\par
1604 {\cf18 void} GuiLabel(Rectangle bounds, {\cf17 const} {\cf18 char} *text)\par
1605 \{\par
1606     GuiState state = guiState;\par
1607 \par
1608     {\cf20 // Update control}\par
1609     {\cf20 //--------------------------------------------------------------------}\par
1610     {\cf20 // ...}\par
1611     {\cf20 //--------------------------------------------------------------------}\par
1612 \par
1613     {\cf20 // Draw control}\par
1614     {\cf20 //--------------------------------------------------------------------}\par
1615     GuiDrawText(text, GetTextBounds(LABEL, bounds), GuiGetStyle(LABEL, TEXT_ALIGNMENT), Fade(GetColor(GuiGetStyle(LABEL, TEXT + (state*3))), guiAlpha));\par
1616     {\cf20 //--------------------------------------------------------------------}\par
1617 \}\par
1618 \par
1619 {\cf20 // Button control, returns true when clicked}\par
1620 {\cf18 bool} GuiButton(Rectangle bounds, {\cf17 const} {\cf18 char} *text)\par
1621 \{\par
1622     GuiState state = guiState;\par
1623     {\cf18 bool} pressed = {\cf17 false};\par
1624 \par
1625     {\cf20 // Update control}\par
1626     {\cf20 //--------------------------------------------------------------------}\par
1627     {\cf19 if} ((state != STATE_DISABLED) && !guiLocked)\par
1628     \{\par
1629         Vector2 mousePoint = GetMousePosition();\par
1630 \par
1631         {\cf20 // Check button state}\par
1632         {\cf19 if} (CheckCollisionPointRec(mousePoint, bounds))\par
1633         \{\par
1634             {\cf19 if} (IsMouseButtonDown(MOUSE_LEFT_BUTTON)) state = STATE_PRESSED;\par
1635             {\cf19 else} state = STATE_FOCUSED;\par
1636 \par
1637             {\cf19 if} (IsMouseButtonReleased(MOUSE_LEFT_BUTTON)) pressed = {\cf17 true};\par
1638         \}\par
1639     \}\par
1640     {\cf20 //--------------------------------------------------------------------}\par
1641 \par
1642     {\cf20 // Draw control}\par
1643     {\cf20 //--------------------------------------------------------------------}\par
1644     GuiDrawRectangle(bounds, GuiGetStyle(BUTTON, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(BUTTON, BORDER + (state*3))), guiAlpha), Fade(GetColor(GuiGetStyle(BUTTON, BASE + (state*3))), guiAlpha));\par
1645     GuiDrawText(text, GetTextBounds(BUTTON, bounds), GuiGetStyle(BUTTON, TEXT_ALIGNMENT), Fade(GetColor(GuiGetStyle(BUTTON, TEXT + (state*3))), guiAlpha));\par
1646     {\cf20 //------------------------------------------------------------------}\par
1647 \par
1648     {\cf19 return} pressed;\par
1649 \}\par
1650 \par
1651 {\cf20 // Label button control}\par
1652 {\cf18 bool} GuiLabelButton(Rectangle bounds, {\cf17 const} {\cf18 char} *text)\par
1653 \{\par
1654     GuiState state = guiState;\par
1655     {\cf18 bool} pressed = {\cf17 false};\par
1656 \par
1657     {\cf20 // NOTE: We force bounds.width to be all text}\par
1658     {\cf18 float} textWidth = MeasureTextEx(guiFont, text, ({\cf18 float})GuiGetStyle(DEFAULT, TEXT_SIZE), ({\cf18 float})GuiGetStyle(DEFAULT, TEXT_SPACING)).x;\par
1659     {\cf19 if} (bounds.width < textWidth) bounds.width = textWidth;\par
1660 \par
1661     {\cf20 // Update control}\par
1662     {\cf20 //--------------------------------------------------------------------}\par
1663     {\cf19 if} ((state != STATE_DISABLED) && !guiLocked)\par
1664     \{\par
1665         Vector2 mousePoint = GetMousePosition();\par
1666 \par
1667         {\cf20 // Check checkbox state}\par
1668         {\cf19 if} (CheckCollisionPointRec(mousePoint, bounds))\par
1669         \{\par
1670             {\cf19 if} (IsMouseButtonDown(MOUSE_LEFT_BUTTON)) state = STATE_PRESSED;\par
1671             {\cf19 else} state = STATE_FOCUSED;\par
1672 \par
1673             {\cf19 if} (IsMouseButtonReleased(MOUSE_LEFT_BUTTON)) pressed = {\cf17 true};\par
1674         \}\par
1675     \}\par
1676     {\cf20 //--------------------------------------------------------------------}\par
1677 \par
1678     {\cf20 // Draw control}\par
1679     {\cf20 //--------------------------------------------------------------------}\par
1680     GuiDrawText(text, GetTextBounds(LABEL, bounds), GuiGetStyle(LABEL, TEXT_ALIGNMENT), Fade(GetColor(GuiGetStyle(LABEL, TEXT + (state*3))), guiAlpha));\par
1681     {\cf20 //--------------------------------------------------------------------}\par
1682 \par
1683     {\cf19 return} pressed;\par
1684 \}\par
1685 \par
1686 {\cf20 // Toggle Button control, returns true when active}\par
1687 {\cf18 bool} GuiToggle(Rectangle bounds, {\cf17 const} {\cf18 char} *text, {\cf18 bool} active)\par
1688 \{\par
1689     GuiState state = guiState;\par
1690 \par
1691     {\cf20 // Update control}\par
1692     {\cf20 //--------------------------------------------------------------------}\par
1693     {\cf19 if} ((state != STATE_DISABLED) && !guiLocked)\par
1694     \{\par
1695         Vector2 mousePoint = GetMousePosition();\par
1696 \par
1697         {\cf20 // Check toggle button state}\par
1698         {\cf19 if} (CheckCollisionPointRec(mousePoint, bounds))\par
1699         \{\par
1700             {\cf19 if} (IsMouseButtonDown(MOUSE_LEFT_BUTTON)) state = STATE_PRESSED;\par
1701             {\cf19 else} {\cf19 if} (IsMouseButtonReleased(MOUSE_LEFT_BUTTON))\par
1702             \{\par
1703                 state = STATE_NORMAL;\par
1704                 active = !active;\par
1705             \}\par
1706             {\cf19 else} state = STATE_FOCUSED;\par
1707         \}\par
1708     \}\par
1709     {\cf20 //--------------------------------------------------------------------}\par
1710 \par
1711     {\cf20 // Draw control}\par
1712     {\cf20 //--------------------------------------------------------------------}\par
1713     {\cf19 if} (state == STATE_NORMAL)\par
1714     \{\par
1715         GuiDrawRectangle(bounds, GuiGetStyle(TOGGLE, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(TOGGLE, (active? BORDER_COLOR_PRESSED : (BORDER + state*3)))), guiAlpha), Fade(GetColor(GuiGetStyle(TOGGLE, (active? BASE_COLOR_PRESSED : (BASE + state*3)))), guiAlpha));\par
1716         GuiDrawText(text, GetTextBounds(TOGGLE, bounds), GuiGetStyle(TOGGLE, TEXT_ALIGNMENT), Fade(GetColor(GuiGetStyle(TOGGLE, (active? TEXT_COLOR_PRESSED : (TEXT + state*3)))), guiAlpha));\par
1717     \}\par
1718     {\cf19 else}\par
1719     \{\par
1720         GuiDrawRectangle(bounds, GuiGetStyle(TOGGLE, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(TOGGLE, BORDER + state*3)), guiAlpha), Fade(GetColor(GuiGetStyle(TOGGLE, BASE + state*3)), guiAlpha));\par
1721         GuiDrawText(text, GetTextBounds(TOGGLE, bounds), GuiGetStyle(TOGGLE, TEXT_ALIGNMENT), Fade(GetColor(GuiGetStyle(TOGGLE, TEXT + state*3)), guiAlpha));\par
1722     \}\par
1723     {\cf20 //--------------------------------------------------------------------}\par
1724 \par
1725     {\cf19 return} active;\par
1726 \}\par
1727 \par
1728 {\cf20 // Toggle Group control, returns toggled button index}\par
1729 {\cf18 int} GuiToggleGroup(Rectangle bounds, {\cf17 const} {\cf18 char} *text, {\cf18 int} active)\par
1730 \{\par
1731 {\cf21     #if !defined(RAYGUI_TOGGLEGROUP_MAX_ITEMS)}\par
1732 {\cf21         #define RAYGUI_TOGGLEGROUP_MAX_ITEMS    32}\par
1733 {\cf21     #endif}\par
1734 \par
1735     {\cf18 float} initBoundsX = bounds.x;\par
1736 \par
1737     {\cf20 // Get substrings items from text (items pointers)}\par
1738     {\cf18 int} rows[RAYGUI_TOGGLEGROUP_MAX_ITEMS] = \{ 0 \};\par
1739     {\cf18 int} itemCount = 0;\par
1740     {\cf17 const} {\cf18 char} **items = GuiTextSplit(text, &itemCount, rows);\par
1741 \par
1742     {\cf18 int} prevRow = rows[0];\par
1743 \par
1744     {\cf19 for} ({\cf18 int} i = 0; i < itemCount; i++)\par
1745     \{\par
1746         {\cf19 if} (prevRow != rows[i])\par
1747         \{\par
1748             bounds.x = initBoundsX;\par
1749             bounds.y += (bounds.height + GuiGetStyle(TOGGLE, GROUP_PADDING));\par
1750             prevRow = rows[i];\par
1751         \}\par
1752 \par
1753         {\cf19 if} (i == active) GuiToggle(bounds, items[i], {\cf17 true});\par
1754         {\cf19 else} {\cf19 if} (GuiToggle(bounds, items[i], {\cf17 false}) == {\cf17 true}) active = i;\par
1755 \par
1756         bounds.x += (bounds.width + GuiGetStyle(TOGGLE, GROUP_PADDING));\par
1757     \}\par
1758 \par
1759     {\cf19 return} active;\par
1760 \}\par
1761 \par
1762 {\cf20 // Check Box control, returns true when active}\par
1763 {\cf18 bool} GuiCheckBox(Rectangle bounds, {\cf17 const} {\cf18 char} *text, {\cf18 bool} checked)\par
1764 \{\par
1765     GuiState state = guiState;\par
1766 \par
1767     Rectangle textBounds = \{ 0 \};\par
1768 \par
1769     {\cf19 if} (text != NULL)\par
1770     \{\par
1771         textBounds.width = (float)GetTextWidth(text);\par
1772         textBounds.height = (float)GuiGetStyle(DEFAULT, TEXT_SIZE);\par
1773         textBounds.x = bounds.x + bounds.width + GuiGetStyle(CHECKBOX, TEXT_PADDING);\par
1774         textBounds.y = bounds.y + bounds.height/2 - GuiGetStyle(DEFAULT, TEXT_SIZE)/2;\par
1775         {\cf19 if} (GuiGetStyle(CHECKBOX, TEXT_ALIGNMENT) == TEXT_ALIGN_LEFT) textBounds.x = bounds.x - textBounds.width - GuiGetStyle(CHECKBOX, TEXT_PADDING);\par
1776     \}\par
1777 \par
1778     {\cf20 // Update control}\par
1779     {\cf20 //--------------------------------------------------------------------}\par
1780     {\cf19 if} ((state != STATE_DISABLED) && !guiLocked)\par
1781     \{\par
1782         Vector2 mousePoint = GetMousePosition();\par
1783 \par
1784         Rectangle totalBounds = \{\par
1785             (GuiGetStyle(CHECKBOX, TEXT_ALIGNMENT) == TEXT_ALIGN_LEFT)? textBounds.x : bounds.x,\par
1786             bounds.y,\par
1787             bounds.width + textBounds.width + GuiGetStyle(CHECKBOX, TEXT_PADDING),\par
1788             bounds.height,\par
1789         \};\par
1790 \par
1791         {\cf20 // Check checkbox state}\par
1792         {\cf19 if} (CheckCollisionPointRec(mousePoint, totalBounds))\par
1793         \{\par
1794             {\cf19 if} (IsMouseButtonDown(MOUSE_LEFT_BUTTON)) state = STATE_PRESSED;\par
1795             {\cf19 else} state = STATE_FOCUSED;\par
1796 \par
1797             {\cf19 if} (IsMouseButtonReleased(MOUSE_LEFT_BUTTON)) checked = !checked;\par
1798         \}\par
1799     \}\par
1800     {\cf20 //--------------------------------------------------------------------}\par
1801 \par
1802     {\cf20 // Draw control}\par
1803     {\cf20 //--------------------------------------------------------------------}\par
1804     GuiDrawRectangle(bounds, GuiGetStyle(CHECKBOX, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(CHECKBOX, BORDER + (state*3))), guiAlpha), BLANK);\par
1805 \par
1806     {\cf19 if} (checked)\par
1807     \{\par
1808         Rectangle check = \{ bounds.x + GuiGetStyle(CHECKBOX, BORDER_WIDTH) + GuiGetStyle(CHECKBOX, CHECK_PADDING),\par
1809                             bounds.y + GuiGetStyle(CHECKBOX, BORDER_WIDTH) + GuiGetStyle(CHECKBOX, CHECK_PADDING),\par
1810                             bounds.width - 2*(GuiGetStyle(CHECKBOX, BORDER_WIDTH) + GuiGetStyle(CHECKBOX, CHECK_PADDING)),\par
1811                             bounds.height - 2*(GuiGetStyle(CHECKBOX, BORDER_WIDTH) + GuiGetStyle(CHECKBOX, CHECK_PADDING)) \};\par
1812         GuiDrawRectangle(check, 0, BLANK, Fade(GetColor(GuiGetStyle(CHECKBOX, TEXT + state*3)), guiAlpha));\par
1813     \}\par
1814 \par
1815     GuiDrawText(text, textBounds, (GuiGetStyle(CHECKBOX, TEXT_ALIGNMENT) == TEXT_ALIGN_RIGHT)? TEXT_ALIGN_LEFT : TEXT_ALIGN_RIGHT, Fade(GetColor(GuiGetStyle(LABEL, TEXT + (state*3))), guiAlpha));\par
1816     {\cf20 //--------------------------------------------------------------------}\par
1817 \par
1818     {\cf19 return} checked;\par
1819 \}\par
1820 \par
1821 {\cf20 // Combo Box control, returns selected item index}\par
1822 {\cf18 int} GuiComboBox(Rectangle bounds, {\cf17 const} {\cf18 char} *text, {\cf18 int} active)\par
1823 \{\par
1824     GuiState state = guiState;\par
1825 \par
1826     bounds.width -= (GuiGetStyle(COMBOBOX, COMBO_BUTTON_WIDTH) + GuiGetStyle(COMBOBOX, COMBO_BUTTON_SPACING));\par
1827 \par
1828     Rectangle selector = \{ (float)bounds.x + bounds.width + GuiGetStyle(COMBOBOX, COMBO_BUTTON_SPACING),\par
1829                            (float)bounds.y, ({\cf18 float})GuiGetStyle(COMBOBOX, COMBO_BUTTON_WIDTH), (float)bounds.height \};\par
1830 \par
1831     {\cf20 // Get substrings items from text (items pointers, lengths and count)}\par
1832     {\cf18 int} itemCount = 0;\par
1833     {\cf17 const} {\cf18 char} **items = GuiTextSplit(text, &itemCount, NULL);\par
1834 \par
1835     {\cf19 if} (active < 0) active = 0;\par
1836     {\cf19 else} {\cf19 if} (active > itemCount - 1) active = itemCount - 1;\par
1837 \par
1838     {\cf20 // Update control}\par
1839     {\cf20 //--------------------------------------------------------------------}\par
1840     {\cf19 if} ((state != STATE_DISABLED) && !guiLocked && (itemCount > 1))\par
1841     \{\par
1842         Vector2 mousePoint = GetMousePosition();\par
1843 \par
1844         {\cf19 if} (CheckCollisionPointRec(mousePoint, bounds) ||\par
1845             CheckCollisionPointRec(mousePoint, selector))\par
1846         \{\par
1847             {\cf19 if} (IsMouseButtonPressed(MOUSE_LEFT_BUTTON))\par
1848             \{\par
1849                 active += 1;\par
1850                 {\cf19 if} (active >= itemCount) active = 0;\par
1851             \}\par
1852 \par
1853             {\cf19 if} (IsMouseButtonDown(MOUSE_LEFT_BUTTON)) state = STATE_PRESSED;\par
1854             {\cf19 else} state = STATE_FOCUSED;\par
1855         \}\par
1856     \}\par
1857     {\cf20 //--------------------------------------------------------------------}\par
1858 \par
1859     {\cf20 // Draw control}\par
1860     {\cf20 //--------------------------------------------------------------------}\par
1861     {\cf20 // Draw combo box main}\par
1862     GuiDrawRectangle(bounds, GuiGetStyle(COMBOBOX, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(COMBOBOX, BORDER + (state*3))), guiAlpha), Fade(GetColor(GuiGetStyle(COMBOBOX, BASE + (state*3))), guiAlpha));\par
1863     GuiDrawText(items[active], GetTextBounds(COMBOBOX, bounds), GuiGetStyle(COMBOBOX, TEXT_ALIGNMENT), Fade(GetColor(GuiGetStyle(COMBOBOX, TEXT + (state*3))), guiAlpha));\par
1864 \par
1865     {\cf20 // Draw selector using a custom button}\par
1866     {\cf20 // NOTE: BORDER_WIDTH and TEXT_ALIGNMENT forced values}\par
1867     {\cf18 int} tempBorderWidth = GuiGetStyle(BUTTON, BORDER_WIDTH);\par
1868     {\cf18 int} tempTextAlign = GuiGetStyle(BUTTON, TEXT_ALIGNMENT);\par
1869     GuiSetStyle(BUTTON, BORDER_WIDTH, 1);\par
1870     GuiSetStyle(BUTTON, TEXT_ALIGNMENT, TEXT_ALIGN_CENTER);\par
1871 \par
1872     GuiButton(selector, TextFormat({\cf22 "%i/%i"}, active + 1, itemCount));\par
1873 \par
1874     GuiSetStyle(BUTTON, TEXT_ALIGNMENT, tempTextAlign);\par
1875     GuiSetStyle(BUTTON, BORDER_WIDTH, tempBorderWidth);\par
1876     {\cf20 //--------------------------------------------------------------------}\par
1877 \par
1878     {\cf19 return} active;\par
1879 \}\par
1880 \par
1881 {\cf20 // Dropdown Box control}\par
1882 {\cf20 // NOTE: Returns mouse click}\par
1883 {\cf18 bool} GuiDropdownBox(Rectangle bounds, {\cf17 const} {\cf18 char} *text, {\cf18 int} *active, {\cf18 bool} editMode)\par
1884 \{\par
1885     GuiState state = guiState;\par
1886     {\cf18 int} itemSelected = *active;\par
1887     {\cf18 int} itemFocused = -1;\par
1888 \par
1889     {\cf20 // Get substrings items from text (items pointers, lengths and count)}\par
1890     {\cf18 int} itemCount = 0;\par
1891     {\cf17 const} {\cf18 char} **items = GuiTextSplit(text, &itemCount, NULL);\par
1892 \par
1893     Rectangle boundsOpen = bounds;\par
1894     boundsOpen.height = (itemCount + 1)*(bounds.height + GuiGetStyle(DROPDOWNBOX, DROPDOWN_ITEMS_SPACING));\par
1895 \par
1896     Rectangle itemBounds = bounds;\par
1897 \par
1898     {\cf18 bool} pressed = {\cf17 false};       {\cf20 // Check mouse button pressed}\par
1899 \par
1900     {\cf20 // Update control}\par
1901     {\cf20 //--------------------------------------------------------------------}\par
1902     {\cf19 if} ((state != STATE_DISABLED) && (editMode || !guiLocked) && (itemCount > 1))\par
1903     \{\par
1904         Vector2 mousePoint = GetMousePosition();\par
1905 \par
1906         {\cf19 if} (editMode)\par
1907         \{\par
1908             state = STATE_PRESSED;\par
1909 \par
1910             {\cf20 // Check if mouse has been pressed or released outside limits}\par
1911             {\cf19 if} (!CheckCollisionPointRec(mousePoint, boundsOpen))\par
1912             \{\par
1913                 {\cf19 if} (IsMouseButtonPressed(MOUSE_LEFT_BUTTON) || IsMouseButtonReleased(MOUSE_LEFT_BUTTON)) pressed = {\cf17 true};\par
1914             \}\par
1915 \par
1916             {\cf20 // Check if already selected item has been pressed again}\par
1917             {\cf19 if} (CheckCollisionPointRec(mousePoint, bounds) && IsMouseButtonPressed(MOUSE_LEFT_BUTTON)) pressed = {\cf17 true};\par
1918 \par
1919             {\cf20 // Check focused and selected item}\par
1920             {\cf19 for} ({\cf18 int} i = 0; i < itemCount; i++)\par
1921             \{\par
1922                 {\cf20 // Update item rectangle y position for next item}\par
1923                 itemBounds.y += (bounds.height + GuiGetStyle(DROPDOWNBOX, DROPDOWN_ITEMS_SPACING));\par
1924 \par
1925                 {\cf19 if} (CheckCollisionPointRec(mousePoint, itemBounds))\par
1926                 \{\par
1927                     itemFocused = i;\par
1928                     {\cf19 if} (IsMouseButtonReleased(MOUSE_LEFT_BUTTON))\par
1929                     \{\par
1930                         itemSelected = i;\par
1931                         pressed = {\cf17 true};     {\cf20 // Item selected, change to editMode = false}\par
1932                     \}\par
1933                     {\cf19 break};\par
1934                 \}\par
1935             \}\par
1936 \par
1937             itemBounds = bounds;\par
1938         \}\par
1939         {\cf19 else}\par
1940         \{\par
1941             {\cf19 if} (CheckCollisionPointRec(mousePoint, bounds))\par
1942             \{\par
1943                 {\cf19 if} (IsMouseButtonPressed(MOUSE_LEFT_BUTTON))\par
1944                 \{\par
1945                     pressed = {\cf17 true};\par
1946                     state = STATE_PRESSED;\par
1947                 \}\par
1948                 {\cf19 else} state = STATE_FOCUSED;\par
1949             \}\par
1950         \}\par
1951     \}\par
1952     {\cf20 //--------------------------------------------------------------------}\par
1953 \par
1954     {\cf20 // Draw control}\par
1955     {\cf20 //--------------------------------------------------------------------}\par
1956     {\cf19 if} (editMode) GuiPanel(boundsOpen, NULL);\par
1957 \par
1958     GuiDrawRectangle(bounds, GuiGetStyle(DROPDOWNBOX, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(DROPDOWNBOX, BORDER + state*3)), guiAlpha), Fade(GetColor(GuiGetStyle(DROPDOWNBOX, BASE + state*3)), guiAlpha));\par
1959     GuiDrawText(items[itemSelected], GetTextBounds(DEFAULT, bounds), GuiGetStyle(DROPDOWNBOX, TEXT_ALIGNMENT), Fade(GetColor(GuiGetStyle(DROPDOWNBOX, TEXT + state*3)), guiAlpha));\par
1960 \par
1961     {\cf19 if} (editMode)\par
1962     \{\par
1963         {\cf20 // Draw visible items}\par
1964         {\cf19 for} ({\cf18 int} i = 0; i < itemCount; i++)\par
1965         \{\par
1966             {\cf20 // Update item rectangle y position for next item}\par
1967             itemBounds.y += (bounds.height + GuiGetStyle(DROPDOWNBOX, DROPDOWN_ITEMS_SPACING));\par
1968 \par
1969             {\cf19 if} (i == itemSelected)\par
1970             \{\par
1971                 GuiDrawRectangle(itemBounds, GuiGetStyle(DROPDOWNBOX, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(DROPDOWNBOX, BORDER_COLOR_PRESSED)), guiAlpha), Fade(GetColor(GuiGetStyle(DROPDOWNBOX, BASE_COLOR_PRESSED)), guiAlpha));\par
1972                 GuiDrawText(items[i], GetTextBounds(DEFAULT, itemBounds), GuiGetStyle(DROPDOWNBOX, TEXT_ALIGNMENT), Fade(GetColor(GuiGetStyle(DROPDOWNBOX, TEXT_COLOR_PRESSED)), guiAlpha));\par
1973             \}\par
1974             {\cf19 else} {\cf19 if} (i == itemFocused)\par
1975             \{\par
1976                 GuiDrawRectangle(itemBounds, GuiGetStyle(DROPDOWNBOX, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(DROPDOWNBOX, BORDER_COLOR_FOCUSED)), guiAlpha), Fade(GetColor(GuiGetStyle(DROPDOWNBOX, BASE_COLOR_FOCUSED)), guiAlpha));\par
1977                 GuiDrawText(items[i], GetTextBounds(DEFAULT, itemBounds), GuiGetStyle(DROPDOWNBOX, TEXT_ALIGNMENT), Fade(GetColor(GuiGetStyle(DROPDOWNBOX, TEXT_COLOR_FOCUSED)), guiAlpha));\par
1978             \}\par
1979             {\cf19 else} GuiDrawText(items[i], GetTextBounds(DEFAULT, itemBounds), GuiGetStyle(DROPDOWNBOX, TEXT_ALIGNMENT), Fade(GetColor(GuiGetStyle(DROPDOWNBOX, TEXT_COLOR_NORMAL)), guiAlpha));\par
1980         \}\par
1981     \}\par
1982 \par
1983     {\cf20 // Draw arrows (using icon if available)}\par
1984 {\cf21 #if defined(RAYGUI_NO_ICONS)}\par
1985     GuiDrawText({\cf22 "v"}, RAYGUI_CLITERAL(Rectangle)\{ bounds.x + bounds.width - GuiGetStyle(DROPDOWNBOX, ARROW_PADDING), bounds.y + bounds.height/2 - 2, 10, 10 \},\par
1986                 TEXT_ALIGN_CENTER, Fade(GetColor(GuiGetStyle(DROPDOWNBOX, TEXT + (state*3))), guiAlpha));\par
1987 {\cf21 #else}\par
1988     GuiDrawText({\cf22 "#120#"}, RAYGUI_CLITERAL(Rectangle)\{ bounds.x + bounds.width - GuiGetStyle(DROPDOWNBOX, ARROW_PADDING), bounds.y + bounds.height/2 - 6, 10, 10 \},\par
1989                 TEXT_ALIGN_CENTER, Fade(GetColor(GuiGetStyle(DROPDOWNBOX, TEXT + (state*3))), guiAlpha));   {\cf20 // ICON_ARROW_DOWN_FILL}\par
1990 {\cf21 #endif}\par
1991     {\cf20 //--------------------------------------------------------------------}\par
1992 \par
1993     *active = itemSelected;\par
1994     {\cf19 return} pressed;\par
1995 \}\par
1996 \par
1997 {\cf20 // Text Box control, updates input text}\par
1998 {\cf20 // NOTE 2: Returns if KEY_ENTER pressed (useful for data validation)}\par
1999 {\cf18 bool} GuiTextBox(Rectangle bounds, {\cf18 char} *text, {\cf18 int} textSize, {\cf18 bool} editMode)\par
2000 \{\par
2001     GuiState state = guiState;\par
2002     {\cf18 bool} pressed = {\cf17 false};\par
2003 \par
2004     Rectangle cursor = \{\par
2005         bounds.x + GuiGetStyle(TEXTBOX, TEXT_PADDING) + GetTextWidth(text) + 2,\par
2006         bounds.y + bounds.height/2 - GuiGetStyle(DEFAULT, TEXT_SIZE),\par
2007         4,\par
2008         (float)GuiGetStyle(DEFAULT, TEXT_SIZE)*2\par
2009     \};\par
2010 \par
2011     {\cf19 if} (cursor.height >= bounds.height) cursor.height = bounds.height - GuiGetStyle(TEXTBOX, BORDER_WIDTH)*2;\par
2012     {\cf19 if} (cursor.y < (bounds.y + GuiGetStyle(TEXTBOX, BORDER_WIDTH))) cursor.y = bounds.y + GuiGetStyle(TEXTBOX, BORDER_WIDTH);\par
2013 \par
2014     {\cf20 // Update control}\par
2015     {\cf20 //--------------------------------------------------------------------}\par
2016     {\cf19 if} ((state != STATE_DISABLED) && !guiLocked)\par
2017     \{\par
2018         Vector2 mousePoint = GetMousePosition();\par
2019 \par
2020         {\cf19 if} (editMode)\par
2021         \{\par
2022             state = STATE_PRESSED;\par
2023 \par
2024             {\cf18 int} key = GetCharPressed();      {\cf20 // Returns codepoint as Unicode}\par
2025             {\cf18 int} keyCount = (int)strlen(text);\par
2026             {\cf18 int} byteSize = 0;\par
2027             {\cf17 const} {\cf18 char} *textUTF8 = CodepointToUTF8(key, &byteSize);\par
2028 \par
2029             {\cf20 // Only allow keys in range [32..125]}\par
2030             {\cf19 if} ((keyCount + byteSize) < textSize)\par
2031             \{\par
2032                 {\cf18 float} maxWidth = (bounds.width - (GuiGetStyle(TEXTBOX, TEXT_INNER_PADDING)*2));\par
2033 \par
2034                 {\cf19 if} ((GetTextWidth(text) < (maxWidth - GuiGetStyle(DEFAULT, TEXT_SIZE))) && (key >= 32))\par
2035                 \{\par
2036                     {\cf19 for} ({\cf18 int} i = 0; i < byteSize; i++)\par
2037                     \{\par
2038                         text[keyCount] = textUTF8[i];\par
2039                         keyCount++;\par
2040                     \}\par
2041 \par
2042                     text[keyCount] = {\cf23 '\\0'};\par
2043                 \}\par
2044             \}\par
2045 \par
2046             {\cf20 // Delete text}\par
2047             {\cf19 if} (keyCount > 0)\par
2048             \{\par
2049                 {\cf19 if} (IsKeyPressed(KEY_BACKSPACE))\par
2050                 \{\par
2051                     {\cf19 while} ((keyCount > 0) && ((text[--keyCount] & 0xc0) == 0x80));\par
2052                     text[keyCount] = {\cf23 '\\0'};\par
2053                 \}\par
2054             \}\par
2055 \par
2056             {\cf19 if} (IsKeyPressed(KEY_ENTER) || (!CheckCollisionPointRec(mousePoint, bounds) && IsMouseButtonPressed(MOUSE_LEFT_BUTTON))) pressed = {\cf17 true};\par
2057 \par
2058             {\cf20 // Check text alignment to position cursor properly}\par
2059             {\cf18 int} textAlignment = GuiGetStyle(TEXTBOX, TEXT_ALIGNMENT);\par
2060             {\cf19 if} (textAlignment == TEXT_ALIGN_CENTER) cursor.x = bounds.x + GetTextWidth(text)/2 + bounds.width/2 + 1;\par
2061             {\cf19 else} {\cf19 if} (textAlignment == TEXT_ALIGN_RIGHT) cursor.x = bounds.x + bounds.width - GuiGetStyle(TEXTBOX, TEXT_INNER_PADDING);\par
2062         \}\par
2063         {\cf19 else}\par
2064         \{\par
2065             {\cf19 if} (CheckCollisionPointRec(mousePoint, bounds))\par
2066             \{\par
2067                 state = STATE_FOCUSED;\par
2068                 {\cf19 if} (IsMouseButtonPressed(MOUSE_LEFT_BUTTON)) pressed = {\cf17 true};\par
2069             \}\par
2070         \}\par
2071     \}\par
2072     {\cf20 //--------------------------------------------------------------------}\par
2073 \par
2074     {\cf20 // Draw control}\par
2075     {\cf20 //--------------------------------------------------------------------}\par
2076     {\cf19 if} (state == STATE_PRESSED)\par
2077     \{\par
2078         GuiDrawRectangle(bounds, GuiGetStyle(TEXTBOX, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(TEXTBOX, BORDER + (state*3))), guiAlpha), Fade(GetColor(GuiGetStyle(TEXTBOX, BASE_COLOR_PRESSED)), guiAlpha));\par
2079     \}\par
2080     {\cf19 else} {\cf19 if} (state == STATE_DISABLED)\par
2081     \{\par
2082         GuiDrawRectangle(bounds, GuiGetStyle(TEXTBOX, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(TEXTBOX, BORDER + (state*3))), guiAlpha), Fade(GetColor(GuiGetStyle(TEXTBOX, BASE_COLOR_DISABLED)), guiAlpha));\par
2083     \}\par
2084     {\cf19 else} GuiDrawRectangle(bounds, 1, Fade(GetColor(GuiGetStyle(TEXTBOX, BORDER + (state*3))), guiAlpha), BLANK);\par
2085 \par
2086     GuiDrawText(text, GetTextBounds(TEXTBOX, bounds), GuiGetStyle(TEXTBOX, TEXT_ALIGNMENT), Fade(GetColor(GuiGetStyle(TEXTBOX, TEXT + (state*3))), guiAlpha));\par
2087 \par
2088     {\cf20 // Draw cursor}\par
2089     {\cf19 if} (editMode) GuiDrawRectangle(cursor, 0, BLANK, Fade(GetColor(GuiGetStyle(TEXTBOX, BORDER_COLOR_PRESSED)), guiAlpha));\par
2090     {\cf20 //--------------------------------------------------------------------}\par
2091 \par
2092     {\cf19 return} pressed;\par
2093 \}\par
2094 \par
2095 {\cf20 // Spinner control, returns selected value}\par
2096 {\cf18 bool} GuiSpinner(Rectangle bounds, {\cf17 const} {\cf18 char} *text, {\cf18 int} *value, {\cf18 int} minValue, {\cf18 int} maxValue, {\cf18 bool} editMode)\par
2097 \{\par
2098     GuiState state = guiState;\par
2099 \par
2100     {\cf18 bool} pressed = {\cf17 false};\par
2101     {\cf18 int} tempValue = *value;\par
2102 \par
2103     Rectangle spinner = \{ bounds.x + GuiGetStyle(SPINNER, SPIN_BUTTON_WIDTH) + GuiGetStyle(SPINNER, SPIN_BUTTON_SPACING), bounds.y,\par
2104                           bounds.width - 2*(GuiGetStyle(SPINNER, SPIN_BUTTON_WIDTH) + GuiGetStyle(SPINNER, SPIN_BUTTON_SPACING)), bounds.height \};\par
2105     Rectangle leftButtonBound = \{ (float)bounds.x, ({\cf18 float})bounds.y, (float)GuiGetStyle(SPINNER, SPIN_BUTTON_WIDTH), (float)bounds.height \};\par
2106     Rectangle rightButtonBound = \{ (float)bounds.x + bounds.width - GuiGetStyle(SPINNER, SPIN_BUTTON_WIDTH), (float)bounds.y, ({\cf18 float})GuiGetStyle(SPINNER, SPIN_BUTTON_WIDTH), (float)bounds.height \};\par
2107 \par
2108     Rectangle textBounds = \{ 0 \};\par
2109     {\cf19 if} (text != NULL)\par
2110     \{\par
2111         textBounds.width = (float)GetTextWidth(text);\par
2112         textBounds.height = (float)GuiGetStyle(DEFAULT, TEXT_SIZE);\par
2113         textBounds.x = bounds.x + bounds.width + GuiGetStyle(SPINNER, TEXT_PADDING);\par
2114         textBounds.y = bounds.y + bounds.height/2 - GuiGetStyle(DEFAULT, TEXT_SIZE)/2;\par
2115         {\cf19 if} (GuiGetStyle(SPINNER, TEXT_ALIGNMENT) == TEXT_ALIGN_LEFT) textBounds.x = bounds.x - textBounds.width - GuiGetStyle(SPINNER, TEXT_PADDING);\par
2116     \}\par
2117 \par
2118     {\cf20 // Update control}\par
2119     {\cf20 //--------------------------------------------------------------------}\par
2120     {\cf19 if} ((state != STATE_DISABLED) && !guiLocked)\par
2121     \{\par
2122         Vector2 mousePoint = GetMousePosition();\par
2123 \par
2124         {\cf20 // Check spinner state}\par
2125         {\cf19 if} (CheckCollisionPointRec(mousePoint, bounds))\par
2126         \{\par
2127             {\cf19 if} (IsMouseButtonDown(MOUSE_LEFT_BUTTON)) state = STATE_PRESSED;\par
2128             {\cf19 else} state = STATE_FOCUSED;\par
2129         \}\par
2130     \}\par
2131 \par
2132 {\cf21 #if defined(RAYGUI_NO_ICONS)}\par
2133     {\cf19 if} (GuiButton(leftButtonBound, {\cf22 "<"})) tempValue--;\par
2134     {\cf19 if} (GuiButton(rightButtonBound, {\cf22 ">"})) tempValue++;\par
2135 {\cf21 #else}\par
2136     {\cf19 if} (GuiButton(leftButtonBound, GuiIconText(ICON_ARROW_LEFT_FILL, NULL))) tempValue--;\par
2137     {\cf19 if} (GuiButton(rightButtonBound, GuiIconText(ICON_ARROW_RIGHT_FILL, NULL))) tempValue++;\par
2138 {\cf21 #endif}\par
2139 \par
2140     {\cf19 if} (!editMode)\par
2141     \{\par
2142         {\cf19 if} (tempValue < minValue) tempValue = minValue;\par
2143         {\cf19 if} (tempValue > maxValue) tempValue = maxValue;\par
2144     \}\par
2145     {\cf20 //--------------------------------------------------------------------}\par
2146 \par
2147     {\cf20 // Draw control}\par
2148     {\cf20 //--------------------------------------------------------------------}\par
2149     {\cf20 // TODO: Set Spinner properties for ValueBox}\par
2150     pressed = GuiValueBox(spinner, NULL, &tempValue, minValue, maxValue, editMode);\par
2151 \par
2152     {\cf20 // Draw value selector custom buttons}\par
2153     {\cf20 // NOTE: BORDER_WIDTH and TEXT_ALIGNMENT forced values}\par
2154     {\cf18 int} tempBorderWidth = GuiGetStyle(BUTTON, BORDER_WIDTH);\par
2155     {\cf18 int} tempTextAlign = GuiGetStyle(BUTTON, TEXT_ALIGNMENT);\par
2156     GuiSetStyle(BUTTON, BORDER_WIDTH, GuiGetStyle(SPINNER, BORDER_WIDTH));\par
2157     GuiSetStyle(BUTTON, TEXT_ALIGNMENT, TEXT_ALIGN_CENTER);\par
2158 \par
2159     GuiSetStyle(BUTTON, TEXT_ALIGNMENT, tempTextAlign);\par
2160     GuiSetStyle(BUTTON, BORDER_WIDTH, tempBorderWidth);\par
2161 \par
2162     {\cf20 // Draw text label if provided}\par
2163     GuiDrawText(text, textBounds, (GuiGetStyle(SPINNER, TEXT_ALIGNMENT) == TEXT_ALIGN_RIGHT)? TEXT_ALIGN_LEFT : TEXT_ALIGN_RIGHT, Fade(GetColor(GuiGetStyle(LABEL, TEXT + (state*3))), guiAlpha));\par
2164     {\cf20 //--------------------------------------------------------------------}\par
2165 \par
2166     *value = tempValue;\par
2167     {\cf19 return} pressed;\par
2168 \}\par
2169 \par
2170 {\cf20 // Value Box control, updates input text with numbers}\par
2171 {\cf20 // NOTE: Requires static variables: frameCounter}\par
2172 {\cf18 bool} GuiValueBox(Rectangle bounds, {\cf17 const} {\cf18 char} *text, {\cf18 int} *value, {\cf18 int} minValue, {\cf18 int} maxValue, {\cf18 bool} editMode)\par
2173 \{\par
2174 {\cf21     #if !defined(RAYGUI_VALUEBOX_MAX_CHARS)}\par
2175 {\cf21         #define RAYGUI_VALUEBOX_MAX_CHARS  32}\par
2176 {\cf21     #endif}\par
2177 \par
2178     GuiState state = guiState;\par
2179     {\cf18 bool} pressed = {\cf17 false};\par
2180 \par
2181     {\cf18 char} textValue[RAYGUI_VALUEBOX_MAX_CHARS + 1] = {\cf22 "\\0"};\par
2182     sprintf(textValue, {\cf22 "%i"}, *value);\par
2183 \par
2184     Rectangle textBounds = \{ 0 \};\par
2185     {\cf19 if} (text != NULL)\par
2186     \{\par
2187         textBounds.width = (float)GetTextWidth(text);\par
2188         textBounds.height = (float)GuiGetStyle(DEFAULT, TEXT_SIZE);\par
2189         textBounds.x = bounds.x + bounds.width + GuiGetStyle(VALUEBOX, TEXT_PADDING);\par
2190         textBounds.y = bounds.y + bounds.height/2 - GuiGetStyle(DEFAULT, TEXT_SIZE)/2;\par
2191         {\cf19 if} (GuiGetStyle(VALUEBOX, TEXT_ALIGNMENT) == TEXT_ALIGN_LEFT) textBounds.x = bounds.x - textBounds.width - GuiGetStyle(VALUEBOX, TEXT_PADDING);\par
2192     \}\par
2193 \par
2194     {\cf20 // Update control}\par
2195     {\cf20 //--------------------------------------------------------------------}\par
2196     {\cf19 if} ((state != STATE_DISABLED) && !guiLocked)\par
2197     \{\par
2198         Vector2 mousePoint = GetMousePosition();\par
2199 \par
2200         {\cf18 bool} valueHasChanged = {\cf17 false};\par
2201 \par
2202         {\cf19 if} (editMode)\par
2203         \{\par
2204             state = STATE_PRESSED;\par
2205 \par
2206             {\cf18 int} keyCount = (int)strlen(textValue);\par
2207 \par
2208             {\cf20 // Only allow keys in range [48..57]}\par
2209             {\cf19 if} (keyCount < RAYGUI_VALUEBOX_MAX_CHARS)\par
2210             \{\par
2211                 {\cf19 if} (GetTextWidth(textValue) < bounds.width)\par
2212                 \{\par
2213                     {\cf18 int} key = GetCharPressed();\par
2214                     {\cf19 if} ((key >= 48) && (key <= 57))\par
2215                     \{\par
2216                         textValue[keyCount] = (char)key;\par
2217                         keyCount++;\par
2218                         valueHasChanged = {\cf17 true};\par
2219                     \}\par
2220                 \}\par
2221             \}\par
2222 \par
2223             {\cf20 // Delete text}\par
2224             {\cf19 if} (keyCount > 0)\par
2225             \{\par
2226                 {\cf19 if} (IsKeyPressed(KEY_BACKSPACE))\par
2227                 \{\par
2228                     keyCount--;\par
2229                     textValue[keyCount] = {\cf23 '\\0'};\par
2230                     valueHasChanged = {\cf17 true};\par
2231                 \}\par
2232             \}\par
2233 \par
2234             {\cf19 if} (valueHasChanged) *value = TextToInteger(textValue);\par
2235 \par
2236             {\cf20 // NOTE: We are not clamp values until user input finishes}\par
2237             {\cf20 //if (*value > maxValue) *value = maxValue;}\par
2238             {\cf20 //else if (*value < minValue) *value = minValue;}\par
2239 \par
2240             {\cf19 if} (IsKeyPressed(KEY_ENTER) || (!CheckCollisionPointRec(mousePoint, bounds) && IsMouseButtonPressed(MOUSE_LEFT_BUTTON))) pressed = {\cf17 true};\par
2241         \}\par
2242         {\cf19 else}\par
2243         \{\par
2244             {\cf19 if} (*value > maxValue) *value = maxValue;\par
2245             {\cf19 else} {\cf19 if} (*value < minValue) *value = minValue;\par
2246 \par
2247             {\cf19 if} (CheckCollisionPointRec(mousePoint, bounds))\par
2248             \{\par
2249                 state = STATE_FOCUSED;\par
2250                 {\cf19 if} (IsMouseButtonPressed(MOUSE_LEFT_BUTTON)) pressed = {\cf17 true};\par
2251             \}\par
2252         \}\par
2253     \}\par
2254     {\cf20 //--------------------------------------------------------------------}\par
2255 \par
2256     {\cf20 // Draw control}\par
2257     {\cf20 //--------------------------------------------------------------------}\par
2258     Color baseColor = BLANK;\par
2259     {\cf19 if} (state == STATE_PRESSED) baseColor = GetColor(GuiGetStyle(VALUEBOX, BASE_COLOR_PRESSED));\par
2260     {\cf19 else} {\cf19 if} (state == STATE_DISABLED) baseColor = GetColor(GuiGetStyle(VALUEBOX, BASE_COLOR_DISABLED));\par
2261 \par
2262     {\cf20 // WARNING: BLANK color does not work properly with Fade()}\par
2263     GuiDrawRectangle(bounds, GuiGetStyle(VALUEBOX, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(VALUEBOX, BORDER + (state*3))), guiAlpha), baseColor);\par
2264     GuiDrawText(textValue, GetTextBounds(VALUEBOX, bounds), TEXT_ALIGN_CENTER, Fade(GetColor(GuiGetStyle(VALUEBOX, TEXT + (state*3))), guiAlpha));\par
2265 \par
2266     {\cf20 // Draw cursor}\par
2267     {\cf19 if} (editMode)\par
2268     \{\par
2269         {\cf20 // NOTE: ValueBox internal text is always centered}\par
2270         Rectangle cursor = \{ bounds.x + GetTextWidth(textValue)/2 + bounds.width/2 + 2, bounds.y + 2*GuiGetStyle(VALUEBOX, BORDER_WIDTH), 4, bounds.height - 4*GuiGetStyle(VALUEBOX, BORDER_WIDTH) \};\par
2271         GuiDrawRectangle(cursor, 0, BLANK, Fade(GetColor(GuiGetStyle(VALUEBOX, BORDER_COLOR_PRESSED)), guiAlpha));\par
2272     \}\par
2273 \par
2274     {\cf20 // Draw text label if provided}\par
2275     GuiDrawText(text, textBounds, (GuiGetStyle(VALUEBOX, TEXT_ALIGNMENT) == TEXT_ALIGN_RIGHT)? TEXT_ALIGN_LEFT : TEXT_ALIGN_RIGHT, Fade(GetColor(GuiGetStyle(LABEL, TEXT + (state*3))), guiAlpha));\par
2276     {\cf20 //--------------------------------------------------------------------}\par
2277 \par
2278     {\cf19 return} pressed;\par
2279 \}\par
2280 \par
2281 {\cf20 // Text Box control with multiple lines}\par
2282 {\cf18 bool} GuiTextBoxMulti(Rectangle bounds, {\cf18 char} *text, {\cf18 int} textSize, {\cf18 bool} editMode)\par
2283 \{\par
2284     GuiState state = guiState;\par
2285     {\cf18 bool} pressed = {\cf17 false};\par
2286 \par
2287     Rectangle textAreaBounds = \{\par
2288         bounds.x + GuiGetStyle(TEXTBOX, BORDER_WIDTH) + GuiGetStyle(TEXTBOX, TEXT_INNER_PADDING),\par
2289         bounds.y + GuiGetStyle(TEXTBOX, BORDER_WIDTH) + GuiGetStyle(TEXTBOX, TEXT_INNER_PADDING),\par
2290         bounds.width - 2*(GuiGetStyle(TEXTBOX, BORDER_WIDTH) + GuiGetStyle(TEXTBOX, TEXT_INNER_PADDING)),\par
2291         bounds.height - 2*(GuiGetStyle(TEXTBOX, BORDER_WIDTH) + GuiGetStyle(TEXTBOX, TEXT_INNER_PADDING))\par
2292     \};\par
2293 \par
2294     {\cf20 // Cursor position, [x, y] values should be updated}\par
2295     Rectangle cursor = \{ 0, -1, 4, (float)GuiGetStyle(DEFAULT, TEXT_SIZE) + 2 \};\par
2296 \par
2297     {\cf18 float} scaleFactor = (float)GuiGetStyle(DEFAULT, TEXT_SIZE)/(float)guiFont.baseSize;     {\cf20 // Character rectangle scaling factor}\par
2298 \par
2299     {\cf20 // Update control}\par
2300     {\cf20 //--------------------------------------------------------------------}\par
2301     {\cf19 if} ((state != STATE_DISABLED) && !guiLocked)\par
2302     \{\par
2303         Vector2 mousePoint = GetMousePosition();\par
2304 \par
2305         {\cf19 if} (editMode)\par
2306         \{\par
2307             state = STATE_PRESSED;\par
2308 \par
2309             {\cf20 // We get an Unicode codepoint}\par
2310             {\cf18 int} codepoint = GetCharPressed();\par
2311             {\cf18 int} textLength = (int)strlen(text);     {\cf20 // Length in bytes (UTF-8 string)}\par
2312 \par
2313             {\cf20 // Introduce characters}\par
2314             {\cf19 if} (textLength < (textSize - 1))\par
2315             \{\par
2316                 {\cf19 if} (IsKeyPressed(KEY_ENTER))\par
2317                 \{\par
2318                     text[textLength] = {\cf23 '\\n'};\par
2319                     textLength++;\par
2320                 \}\par
2321                 {\cf19 else} {\cf19 if} (codepoint >= 32)\par
2322                 \{\par
2323                     {\cf20 // Supports Unicode inputs -> Encoded to UTF-8}\par
2324                     {\cf18 int} charUTF8Length = 0;\par
2325                     {\cf17 const} {\cf18 char} *charEncoded = CodepointToUTF8(codepoint, &charUTF8Length);\par
2326                     memcpy(text + textLength, charEncoded, charUTF8Length);\par
2327                     textLength += charUTF8Length;\par
2328                 \}\par
2329             \}\par
2330 \par
2331             {\cf20 // Delete characters}\par
2332             {\cf19 if} (textLength > 0)\par
2333             \{\par
2334                 {\cf19 if} (IsKeyPressed(KEY_BACKSPACE))\par
2335                 \{\par
2336                     {\cf19 if} (({\cf18 unsigned} {\cf18 char})text[textLength - 1] < 127)\par
2337                     \{\par
2338                         {\cf20 // Remove ASCII equivalent character (1 byte)}\par
2339                         textLength--;\par
2340                         text[textLength] = {\cf23 '\\0'};\par
2341                     \}\par
2342                     {\cf19 else}\par
2343                     \{\par
2344                         {\cf20 // Remove latest UTF-8 unicode character introduced (n bytes)}\par
2345                         {\cf18 int} charUTF8Length = 0;\par
2346                         {\cf19 while} ((({\cf18 unsigned} {\cf18 char})text[textLength - 1 - charUTF8Length] & 0b01000000) == 0) charUTF8Length++;\par
2347 \par
2348                         textLength -= (charUTF8Length + 1);\par
2349                         text[textLength] = {\cf23 '\\0'};\par
2350                     \}\par
2351                 \}\par
2352             \}\par
2353 \par
2354             {\cf20 // Exit edit mode}\par
2355             {\cf19 if} (!CheckCollisionPointRec(mousePoint, bounds) && IsMouseButtonPressed(MOUSE_LEFT_BUTTON)) pressed = {\cf17 true};\par
2356         \}\par
2357         {\cf19 else}\par
2358         \{\par
2359             {\cf19 if} (CheckCollisionPointRec(mousePoint, bounds))\par
2360             \{\par
2361                 state = STATE_FOCUSED;\par
2362                 {\cf19 if} (IsMouseButtonPressed(MOUSE_LEFT_BUTTON)) pressed = {\cf17 true};\par
2363             \}\par
2364         \}\par
2365     \}\par
2366     {\cf20 //--------------------------------------------------------------------}\par
2367 \par
2368     {\cf20 // Draw control}\par
2369     {\cf20 //--------------------------------------------------------------------}\par
2370     {\cf19 if} (state == STATE_PRESSED)\par
2371     \{\par
2372         GuiDrawRectangle(bounds, GuiGetStyle(TEXTBOX, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(TEXTBOX, BORDER + (state*3))), guiAlpha), Fade(GetColor(GuiGetStyle(TEXTBOX, BASE_COLOR_PRESSED)), guiAlpha));\par
2373     \}\par
2374     {\cf19 else} {\cf19 if} (state == STATE_DISABLED)\par
2375     \{\par
2376         GuiDrawRectangle(bounds, GuiGetStyle(TEXTBOX, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(TEXTBOX, BORDER + (state*3))), guiAlpha), Fade(GetColor(GuiGetStyle(TEXTBOX, BASE_COLOR_DISABLED)), guiAlpha));\par
2377     \}\par
2378     {\cf19 else} GuiDrawRectangle(bounds, 1, Fade(GetColor(GuiGetStyle(TEXTBOX, BORDER + (state*3))), guiAlpha), BLANK);\par
2379 \par
2380     {\cf18 int} wrapMode = 1;      {\cf20 // 0-No wrap, 1-Char wrap, 2-Word wrap}\par
2381     Vector2 cursorPos = \{ textAreaBounds.x, textAreaBounds.y \};\par
2382 \par
2383     {\cf20 //int lastSpacePos = 0;}\par
2384     {\cf20 //int lastSpaceWidth = 0;}\par
2385     {\cf20 //int lastSpaceCursorPos = 0;}\par
2386 \par
2387     {\cf19 for} ({\cf18 int} i = 0, codepointLength = 0; text[i] != {\cf23 '\\0'}; i += codepointLength)\par
2388     \{\par
2389         {\cf18 int} codepoint = GetCodepoint(text + i, &codepointLength);\par
2390         {\cf18 int} index = GetGlyphIndex(guiFont, codepoint);      {\cf20 // If requested codepoint is not found, we get '?' (0x3f)}\par
2391         Rectangle atlasRec = guiFont.recs[index];\par
2392         GlyphInfo glyphInfo = guiFont.glyphs[index];        {\cf20 // Glyph measures}\par
2393 \par
2394         {\cf19 if} ((codepointLength == 1) && (codepoint == {\cf23 '\\n'}))\par
2395         \{\par
2396             cursorPos.y += (guiFont.baseSize*scaleFactor + GuiGetStyle(TEXTBOX, TEXT_LINES_SPACING));   {\cf20 // Line feed}\par
2397             cursorPos.x = textAreaBounds.x;                 {\cf20 // Carriage return}\par
2398         \}\par
2399         {\cf19 else}\par
2400         \{\par
2401             {\cf19 if} (wrapMode == 1)\par
2402             \{\par
2403                 {\cf18 int} glyphWidth = 0;\par
2404                 {\cf19 if} (glyphInfo.advanceX != 0) glyphWidth += glyphInfo.advanceX;\par
2405                 {\cf19 else} glyphWidth += (int)(atlasRec.width + glyphInfo.offsetX);\par
2406 \par
2407                 {\cf20 // Jump line if the end of the text box area has been reached}\par
2408                 {\cf19 if} ((cursorPos.x + (glyphWidth*scaleFactor)) > (textAreaBounds.x + textAreaBounds.width))\par
2409                 \{\par
2410                     cursorPos.y += (guiFont.baseSize*scaleFactor + GuiGetStyle(TEXTBOX, TEXT_LINES_SPACING));   {\cf20 // Line feed}\par
2411                     cursorPos.x = textAreaBounds.x;     {\cf20 // Carriage return}\par
2412                 \}\par
2413             \}\par
2414             {\cf19 else} {\cf19 if} (wrapMode == 2)\par
2415             \{\par
2416                 {\cf20 /*}\par
2417 {\cf20                 if ((codepointLength == 1) && (codepoint == ' '))}\par
2418 {\cf20                 \{}\par
2419 {\cf20                     lastSpacePos = i;}\par
2420 {\cf20                     lastSpaceWidth = 0;}\par
2421 {\cf20                     lastSpaceCursorPos = cursorPos.x;}\par
2422 {\cf20                 \}}\par
2423 {\cf20 }\par
2424 {\cf20                 // Jump line if last word reaches end of text box area}\par
2425 {\cf20                 if ((lastSpaceCursorPos + lastSpaceWidth) > (textAreaBounds.x + textAreaBounds.width))}\par
2426 {\cf20                 \{}\par
2427 {\cf20                     cursorPos.y += 12;               // Line feed}\par
2428 {\cf20                     cursorPos.x = textAreaBounds.x;  // Carriage return}\par
2429 {\cf20                 \}}\par
2430 {\cf20                 */}\par
2431             \}\par
2432 \par
2433             {\cf20 // Draw current character glyph}\par
2434             DrawTextCodepoint(guiFont, codepoint, cursorPos, ({\cf18 float})GuiGetStyle(DEFAULT, TEXT_SIZE), Fade(GetColor(GuiGetStyle(TEXTBOX, TEXT + (state*3))), guiAlpha));\par
2435 \par
2436             {\cf18 int} glyphWidth = 0;\par
2437             {\cf19 if} (glyphInfo.advanceX != 0) glyphWidth += glyphInfo.advanceX;\par
2438             {\cf19 else} glyphWidth += (int)(atlasRec.width + glyphInfo.offsetX);\par
2439 \par
2440             cursorPos.x += (glyphWidth*scaleFactor + (float)GuiGetStyle(DEFAULT, TEXT_SPACING));\par
2441             {\cf20 //if (i > lastSpacePos) lastSpaceWidth += (atlasRec.width + (float)GuiGetStyle(DEFAULT, TEXT_SPACING));}\par
2442         \}\par
2443     \}\par
2444 \par
2445     cursor.x = cursorPos.x;\par
2446     cursor.y = cursorPos.y;\par
2447 \par
2448     {\cf20 // Draw cursor position considering text glyphs}\par
2449     {\cf19 if} (editMode) GuiDrawRectangle(cursor, 0, BLANK, Fade(GetColor(GuiGetStyle(TEXTBOX, BORDER_COLOR_PRESSED)), guiAlpha));\par
2450     {\cf20 //--------------------------------------------------------------------}\par
2451 \par
2452     {\cf19 return} pressed;\par
2453 \}\par
2454 \par
2455 {\cf20 // Slider control with pro parameters}\par
2456 {\cf20 // NOTE: Other GuiSlider*() controls use this one}\par
2457 {\cf18 float} GuiSliderPro(Rectangle bounds, {\cf17 const} {\cf18 char} *textLeft, {\cf17 const} {\cf18 char} *textRight, {\cf18 float} value, {\cf18 float} minValue, {\cf18 float} maxValue, {\cf18 int} sliderWidth)\par
2458 \{\par
2459     GuiState state = guiState;\par
2460 \par
2461     {\cf18 int} sliderValue = (int)(((value - minValue)/(maxValue - minValue))*(bounds.width - 2*GuiGetStyle(SLIDER, BORDER_WIDTH)));\par
2462 \par
2463     Rectangle slider = \{ bounds.x, bounds.y + GuiGetStyle(SLIDER, BORDER_WIDTH) + GuiGetStyle(SLIDER, SLIDER_PADDING),\par
2464                          0, bounds.height - 2*GuiGetStyle(SLIDER, BORDER_WIDTH) - 2*GuiGetStyle(SLIDER, SLIDER_PADDING) \};\par
2465 \par
2466     {\cf19 if} (sliderWidth > 0)        {\cf20 // Slider}\par
2467     \{\par
2468         slider.x += (sliderValue - sliderWidth/2);\par
2469         slider.width = (float)sliderWidth;\par
2470     \}\par
2471     {\cf19 else} {\cf19 if} (sliderWidth == 0)  {\cf20 // SliderBar}\par
2472     \{\par
2473         slider.x += GuiGetStyle(SLIDER, BORDER_WIDTH);\par
2474         slider.width = (float)sliderValue;\par
2475     \}\par
2476 \par
2477     {\cf20 // Update control}\par
2478     {\cf20 //--------------------------------------------------------------------}\par
2479     {\cf19 if} ((state != STATE_DISABLED) && !guiLocked)\par
2480     \{\par
2481         Vector2 mousePoint = GetMousePosition();\par
2482 \par
2483         {\cf19 if} (CheckCollisionPointRec(mousePoint, bounds))\par
2484         \{\par
2485             {\cf19 if} (IsMouseButtonDown(MOUSE_LEFT_BUTTON))\par
2486             \{\par
2487                 state = STATE_PRESSED;\par
2488 \par
2489                 {\cf20 // Get equivalent value and slider position from mousePoint.x}\par
2490                 value = ((maxValue - minValue)*(mousePoint.x - ({\cf18 float})(bounds.x + sliderWidth/2)))/({\cf18 float})(bounds.width - sliderWidth) + minValue;\par
2491 \par
2492                 {\cf19 if} (sliderWidth > 0) slider.x = mousePoint.x - slider.width/2;  {\cf20 // Slider}\par
2493                 {\cf19 else} {\cf19 if} (sliderWidth == 0) slider.width = (float)sliderValue;          {\cf20 // SliderBar}\par
2494             \}\par
2495             {\cf19 else} state = STATE_FOCUSED;\par
2496         \}\par
2497 \par
2498         {\cf19 if} (value > maxValue) value = maxValue;\par
2499         {\cf19 else} {\cf19 if} (value < minValue) value = minValue;\par
2500     \}\par
2501 \par
2502     {\cf20 // Bar limits check}\par
2503     {\cf19 if} (sliderWidth > 0)        {\cf20 // Slider}\par
2504     \{\par
2505         {\cf19 if} (slider.x <= (bounds.x + GuiGetStyle(SLIDER, BORDER_WIDTH))) slider.x = bounds.x + GuiGetStyle(SLIDER, BORDER_WIDTH);\par
2506         {\cf19 else} {\cf19 if} ((slider.x + slider.width) >= (bounds.x + bounds.width)) slider.x = bounds.x + bounds.width - slider.width - GuiGetStyle(SLIDER, BORDER_WIDTH);\par
2507     \}\par
2508     {\cf19 else} {\cf19 if} (sliderWidth == 0)  {\cf20 // SliderBar}\par
2509     \{\par
2510         {\cf19 if} (slider.width > bounds.width) slider.width = bounds.width - 2*GuiGetStyle(SLIDER, BORDER_WIDTH);\par
2511     \}\par
2512     {\cf20 //--------------------------------------------------------------------}\par
2513 \par
2514     {\cf20 // Draw control}\par
2515     {\cf20 //--------------------------------------------------------------------}\par
2516     GuiDrawRectangle(bounds, GuiGetStyle(SLIDER, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(SLIDER, BORDER + (state*3))), guiAlpha), Fade(GetColor(GuiGetStyle(SLIDER, (state != STATE_DISABLED)?  BASE_COLOR_NORMAL : BASE_COLOR_DISABLED)), guiAlpha));\par
2517 \par
2518     {\cf20 // Draw slider internal bar (depends on state)}\par
2519     {\cf19 if} ((state == STATE_NORMAL) || (state == STATE_PRESSED)) GuiDrawRectangle(slider, 0, BLANK, Fade(GetColor(GuiGetStyle(SLIDER, BASE_COLOR_PRESSED)), guiAlpha));\par
2520     {\cf19 else} {\cf19 if} (state == STATE_FOCUSED) GuiDrawRectangle(slider, 0, BLANK, Fade(GetColor(GuiGetStyle(SLIDER, TEXT_COLOR_FOCUSED)), guiAlpha));\par
2521 \par
2522     {\cf20 // Draw left/right text if provided}\par
2523     {\cf19 if} (textLeft != NULL)\par
2524     \{\par
2525         Rectangle textBounds = \{ 0 \};\par
2526         textBounds.width = (float)GetTextWidth(textLeft);\par
2527         textBounds.height = (float)GuiGetStyle(DEFAULT, TEXT_SIZE);\par
2528         textBounds.x = bounds.x - textBounds.width - GuiGetStyle(SLIDER, TEXT_PADDING);\par
2529         textBounds.y = bounds.y + bounds.height/2 - GuiGetStyle(DEFAULT, TEXT_SIZE)/2;\par
2530 \par
2531         GuiDrawText(textLeft, textBounds, TEXT_ALIGN_RIGHT, Fade(GetColor(GuiGetStyle(SLIDER, TEXT + (state*3))), guiAlpha));\par
2532     \}\par
2533 \par
2534     {\cf19 if} (textRight != NULL)\par
2535     \{\par
2536         Rectangle textBounds = \{ 0 \};\par
2537         textBounds.width = (float)GetTextWidth(textRight);\par
2538         textBounds.height = (float)GuiGetStyle(DEFAULT, TEXT_SIZE);\par
2539         textBounds.x = bounds.x + bounds.width + GuiGetStyle(SLIDER, TEXT_PADDING);\par
2540         textBounds.y = bounds.y + bounds.height/2 - GuiGetStyle(DEFAULT, TEXT_SIZE)/2;\par
2541 \par
2542         GuiDrawText(textRight, textBounds, TEXT_ALIGN_LEFT, Fade(GetColor(GuiGetStyle(SLIDER, TEXT + (state*3))), guiAlpha));\par
2543     \}\par
2544     {\cf20 //--------------------------------------------------------------------}\par
2545 \par
2546     {\cf19 return} value;\par
2547 \}\par
2548 \par
2549 {\cf20 // Slider control extended, returns selected value and has text}\par
2550 {\cf18 float} GuiSlider(Rectangle bounds, {\cf17 const} {\cf18 char} *textLeft, {\cf17 const} {\cf18 char} *textRight, {\cf18 float} value, {\cf18 float} minValue, {\cf18 float} maxValue)\par
2551 \{\par
2552     {\cf19 return} GuiSliderPro(bounds, textLeft, textRight, value, minValue, maxValue, GuiGetStyle(SLIDER, SLIDER_WIDTH));\par
2553 \}\par
2554 \par
2555 {\cf20 // Slider Bar control extended, returns selected value}\par
2556 {\cf18 float} GuiSliderBar(Rectangle bounds, {\cf17 const} {\cf18 char} *textLeft, {\cf17 const} {\cf18 char} *textRight, {\cf18 float} value, {\cf18 float} minValue, {\cf18 float} maxValue)\par
2557 \{\par
2558     {\cf19 return} GuiSliderPro(bounds, textLeft, textRight, value, minValue, maxValue, 0);\par
2559 \}\par
2560 \par
2561 {\cf20 // Progress Bar control extended, shows current progress value}\par
2562 {\cf18 float} GuiProgressBar(Rectangle bounds, {\cf17 const} {\cf18 char} *textLeft, {\cf17 const} {\cf18 char} *textRight, {\cf18 float} value, {\cf18 float} minValue, {\cf18 float} maxValue)\par
2563 \{\par
2564     GuiState state = guiState;\par
2565 \par
2566     Rectangle progress = \{ bounds.x + GuiGetStyle(PROGRESSBAR, BORDER_WIDTH),\par
2567                            bounds.y + GuiGetStyle(PROGRESSBAR, BORDER_WIDTH) + GuiGetStyle(PROGRESSBAR, PROGRESS_PADDING), 0,\par
2568                            bounds.height - 2*GuiGetStyle(PROGRESSBAR, BORDER_WIDTH) - 2*GuiGetStyle(PROGRESSBAR, PROGRESS_PADDING) \};\par
2569 \par
2570     {\cf20 // Update control}\par
2571     {\cf20 //--------------------------------------------------------------------}\par
2572     {\cf19 if} (value > maxValue) value = maxValue;\par
2573 \par
2574     {\cf19 if} (state != STATE_DISABLED) progress.width = ((float)(value/(maxValue - minValue))*({\cf18 float})(bounds.width - 2*GuiGetStyle(PROGRESSBAR, BORDER_WIDTH)));\par
2575     {\cf20 //--------------------------------------------------------------------}\par
2576 \par
2577     {\cf20 // Draw control}\par
2578     {\cf20 //--------------------------------------------------------------------}\par
2579     GuiDrawRectangle(bounds, GuiGetStyle(PROGRESSBAR, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(PROGRESSBAR, BORDER + (state*3))), guiAlpha), BLANK);\par
2580 \par
2581     {\cf20 // Draw slider internal progress bar (depends on state)}\par
2582     {\cf19 if} ((state == STATE_NORMAL) || (state == STATE_PRESSED)) GuiDrawRectangle(progress, 0, BLANK, Fade(GetColor(GuiGetStyle(PROGRESSBAR, BASE_COLOR_PRESSED)), guiAlpha));\par
2583     {\cf19 else} {\cf19 if} (state == STATE_FOCUSED) GuiDrawRectangle(progress, 0, BLANK, Fade(GetColor(GuiGetStyle(PROGRESSBAR, TEXT_COLOR_FOCUSED)), guiAlpha));\par
2584 \par
2585     {\cf20 // Draw left/right text if provided}\par
2586     {\cf19 if} (textLeft != NULL)\par
2587     \{\par
2588         Rectangle textBounds = \{ 0 \};\par
2589         textBounds.width = (float)GetTextWidth(textLeft);\par
2590         textBounds.height = (float)GuiGetStyle(DEFAULT, TEXT_SIZE);\par
2591         textBounds.x = bounds.x - textBounds.width - GuiGetStyle(PROGRESSBAR, TEXT_PADDING);\par
2592         textBounds.y = bounds.y + bounds.height/2 - GuiGetStyle(DEFAULT, TEXT_SIZE)/2;\par
2593 \par
2594         GuiDrawText(textLeft, textBounds, TEXT_ALIGN_RIGHT, Fade(GetColor(GuiGetStyle(PROGRESSBAR, TEXT + (state*3))), guiAlpha));\par
2595     \}\par
2596 \par
2597     {\cf19 if} (textRight != NULL)\par
2598     \{\par
2599         Rectangle textBounds = \{ 0 \};\par
2600         textBounds.width = (float)GetTextWidth(textRight);\par
2601         textBounds.height = (float)GuiGetStyle(DEFAULT, TEXT_SIZE);\par
2602         textBounds.x = bounds.x + bounds.width + GuiGetStyle(PROGRESSBAR, TEXT_PADDING);\par
2603         textBounds.y = bounds.y + bounds.height/2 - GuiGetStyle(DEFAULT, TEXT_SIZE)/2;\par
2604 \par
2605         GuiDrawText(textRight, textBounds, TEXT_ALIGN_LEFT, Fade(GetColor(GuiGetStyle(PROGRESSBAR, TEXT + (state*3))), guiAlpha));\par
2606     \}\par
2607     {\cf20 //--------------------------------------------------------------------}\par
2608 \par
2609     {\cf19 return} value;\par
2610 \}\par
2611 \par
2612 {\cf20 // Status Bar control}\par
2613 {\cf18 void} GuiStatusBar(Rectangle bounds, {\cf17 const} {\cf18 char} *text)\par
2614 \{\par
2615     GuiState state = guiState;\par
2616 \par
2617     {\cf20 // Draw control}\par
2618     {\cf20 //--------------------------------------------------------------------}\par
2619     GuiDrawRectangle(bounds, GuiGetStyle(STATUSBAR, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(STATUSBAR, (state != STATE_DISABLED)? BORDER_COLOR_NORMAL : BORDER_COLOR_DISABLED)), guiAlpha),\par
2620                      Fade(GetColor(GuiGetStyle(STATUSBAR, (state != STATE_DISABLED)? BASE_COLOR_NORMAL : BASE_COLOR_DISABLED)), guiAlpha));\par
2621     GuiDrawText(text, GetTextBounds(STATUSBAR, bounds), GuiGetStyle(STATUSBAR, TEXT_ALIGNMENT), Fade(GetColor(GuiGetStyle(STATUSBAR, (state != STATE_DISABLED)? TEXT_COLOR_NORMAL : TEXT_COLOR_DISABLED)), guiAlpha));\par
2622     {\cf20 //--------------------------------------------------------------------}\par
2623 \}\par
2624 \par
2625 {\cf20 // Dummy rectangle control, intended for placeholding}\par
2626 {\cf18 void} GuiDummyRec(Rectangle bounds, {\cf17 const} {\cf18 char} *text)\par
2627 \{\par
2628     GuiState state = guiState;\par
2629 \par
2630     {\cf20 // Update control}\par
2631     {\cf20 //--------------------------------------------------------------------}\par
2632     {\cf19 if} ((state != STATE_DISABLED) && !guiLocked)\par
2633     \{\par
2634         Vector2 mousePoint = GetMousePosition();\par
2635 \par
2636         {\cf20 // Check button state}\par
2637         {\cf19 if} (CheckCollisionPointRec(mousePoint, bounds))\par
2638         \{\par
2639             {\cf19 if} (IsMouseButtonDown(MOUSE_LEFT_BUTTON)) state = STATE_PRESSED;\par
2640             {\cf19 else} state = STATE_FOCUSED;\par
2641         \}\par
2642     \}\par
2643     {\cf20 //--------------------------------------------------------------------}\par
2644 \par
2645     {\cf20 // Draw control}\par
2646     {\cf20 //--------------------------------------------------------------------}\par
2647     GuiDrawRectangle(bounds, 0, BLANK, Fade(GetColor(GuiGetStyle(DEFAULT, (state != STATE_DISABLED)? BASE_COLOR_NORMAL : BASE_COLOR_DISABLED)), guiAlpha));\par
2648     GuiDrawText(text, GetTextBounds(DEFAULT, bounds), TEXT_ALIGN_CENTER, Fade(GetColor(GuiGetStyle(BUTTON, (state != STATE_DISABLED)? TEXT_COLOR_NORMAL : TEXT_COLOR_DISABLED)), guiAlpha));\par
2649     {\cf20 //------------------------------------------------------------------}\par
2650 \}\par
2651 \par
2652 {\cf20 // List View control}\par
2653 {\cf18 int} GuiListView(Rectangle bounds, {\cf17 const} {\cf18 char} *text, {\cf18 int} *scrollIndex, {\cf18 int} active)\par
2654 \{\par
2655     {\cf18 int} itemCount = 0;\par
2656     {\cf17 const} {\cf18 char} **items = NULL;\par
2657 \par
2658     {\cf19 if} (text != NULL) items = GuiTextSplit(text, &itemCount, NULL);\par
2659 \par
2660     {\cf19 return} GuiListViewEx(bounds, items, itemCount, NULL, scrollIndex, active);\par
2661 \}\par
2662 \par
2663 {\cf20 // List View control with extended parameters}\par
2664 {\cf18 int} GuiListViewEx(Rectangle bounds, {\cf17 const} {\cf18 char} **text, {\cf18 int} count, {\cf18 int} *focus, {\cf18 int} *scrollIndex, {\cf18 int} active)\par
2665 \{\par
2666     GuiState state = guiState;\par
2667     {\cf18 int} itemFocused = (focus == NULL)? -1 : *focus;\par
2668     {\cf18 int} itemSelected = active;\par
2669 \par
2670     {\cf20 // Check if we need a scroll bar}\par
2671     {\cf18 bool} useScrollBar = {\cf17 false};\par
2672     {\cf19 if} ((GuiGetStyle(LISTVIEW, LIST_ITEMS_HEIGHT) + GuiGetStyle(LISTVIEW, LIST_ITEMS_SPACING))*count > bounds.height) useScrollBar = {\cf17 true};\par
2673 \par
2674     {\cf20 // Define base item rectangle [0]}\par
2675     Rectangle itemBounds = \{ 0 \};\par
2676     itemBounds.x = bounds.x + GuiGetStyle(LISTVIEW, LIST_ITEMS_SPACING);\par
2677     itemBounds.y = bounds.y + GuiGetStyle(LISTVIEW, LIST_ITEMS_SPACING) + GuiGetStyle(DEFAULT, BORDER_WIDTH);\par
2678     itemBounds.width = bounds.width - 2*GuiGetStyle(LISTVIEW, LIST_ITEMS_SPACING) - GuiGetStyle(DEFAULT, BORDER_WIDTH);\par
2679     itemBounds.height = (float)GuiGetStyle(LISTVIEW, LIST_ITEMS_HEIGHT);\par
2680     {\cf19 if} (useScrollBar) itemBounds.width -= GuiGetStyle(LISTVIEW, SCROLLBAR_WIDTH);\par
2681 \par
2682     {\cf20 // Get items on the list}\par
2683     {\cf18 int} visibleItems = (int)bounds.height/(GuiGetStyle(LISTVIEW, LIST_ITEMS_HEIGHT) + GuiGetStyle(LISTVIEW, LIST_ITEMS_SPACING));\par
2684     {\cf19 if} (visibleItems > count) visibleItems = count;\par
2685 \par
2686     {\cf18 int} startIndex = (scrollIndex == NULL)? 0 : *scrollIndex;\par
2687     {\cf19 if} ((startIndex < 0) || (startIndex > (count - visibleItems))) startIndex = 0;\par
2688     {\cf18 int} endIndex = startIndex + visibleItems;\par
2689 \par
2690     {\cf20 // Update control}\par
2691     {\cf20 //--------------------------------------------------------------------}\par
2692     {\cf19 if} ((state != STATE_DISABLED) && !guiLocked)\par
2693     \{\par
2694         Vector2 mousePoint = GetMousePosition();\par
2695 \par
2696         {\cf20 // Check mouse inside list view}\par
2697         {\cf19 if} (CheckCollisionPointRec(mousePoint, bounds))\par
2698         \{\par
2699             state = STATE_FOCUSED;\par
2700 \par
2701             {\cf20 // Check focused and selected item}\par
2702             {\cf19 for} ({\cf18 int} i = 0; i < visibleItems; i++)\par
2703             \{\par
2704                 {\cf19 if} (CheckCollisionPointRec(mousePoint, itemBounds))\par
2705                 \{\par
2706                     itemFocused = startIndex + i;\par
2707                     {\cf19 if} (IsMouseButtonPressed(MOUSE_LEFT_BUTTON))\par
2708                     \{\par
2709                         {\cf19 if} (itemSelected == (startIndex + i)) itemSelected = -1;\par
2710                         {\cf19 else} itemSelected = startIndex + i;\par
2711                     \}\par
2712                     {\cf19 break};\par
2713                 \}\par
2714 \par
2715                 {\cf20 // Update item rectangle y position for next item}\par
2716                 itemBounds.y += (GuiGetStyle(LISTVIEW, LIST_ITEMS_HEIGHT) + GuiGetStyle(LISTVIEW, LIST_ITEMS_SPACING));\par
2717             \}\par
2718 \par
2719             {\cf19 if} (useScrollBar)\par
2720             \{\par
2721                 {\cf18 int} wheelMove = (int)GetMouseWheelMove();\par
2722                 startIndex -= wheelMove;\par
2723 \par
2724                 {\cf19 if} (startIndex < 0) startIndex = 0;\par
2725                 {\cf19 else} {\cf19 if} (startIndex > (count - visibleItems)) startIndex = count - visibleItems;\par
2726 \par
2727                 endIndex = startIndex + visibleItems;\par
2728                 {\cf19 if} (endIndex > count) endIndex = count;\par
2729             \}\par
2730         \}\par
2731         {\cf19 else} itemFocused = -1;\par
2732 \par
2733         {\cf20 // Reset item rectangle y to [0]}\par
2734         itemBounds.y = bounds.y + GuiGetStyle(LISTVIEW, LIST_ITEMS_SPACING) + GuiGetStyle(DEFAULT, BORDER_WIDTH);\par
2735     \}\par
2736     {\cf20 //--------------------------------------------------------------------}\par
2737 \par
2738     {\cf20 // Draw control}\par
2739     {\cf20 //--------------------------------------------------------------------}\par
2740     GuiDrawRectangle(bounds, GuiGetStyle(DEFAULT, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(LISTVIEW, BORDER + state*3)), guiAlpha), GetColor(GuiGetStyle(DEFAULT, BACKGROUND_COLOR)));     {\cf20 // Draw background}\par
2741 \par
2742     {\cf20 // Draw visible items}\par
2743     {\cf19 for} ({\cf18 int} i = 0; ((i < visibleItems) && (text != NULL)); i++)\par
2744     \{\par
2745         {\cf19 if} (state == STATE_DISABLED)\par
2746         \{\par
2747             {\cf19 if} ((startIndex + i) == itemSelected) GuiDrawRectangle(itemBounds, GuiGetStyle(LISTVIEW, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(LISTVIEW, BORDER_COLOR_DISABLED)), guiAlpha), Fade(GetColor(GuiGetStyle(LISTVIEW, BASE_COLOR_DISABLED)), guiAlpha));\par
2748 \par
2749             GuiDrawText(text[startIndex + i], GetTextBounds(DEFAULT, itemBounds), GuiGetStyle(LISTVIEW, TEXT_ALIGNMENT), Fade(GetColor(GuiGetStyle(LISTVIEW, TEXT_COLOR_DISABLED)), guiAlpha));\par
2750         \}\par
2751         {\cf19 else}\par
2752         \{\par
2753             {\cf19 if} ((startIndex + i) == itemSelected)\par
2754             \{\par
2755                 {\cf20 // Draw item selected}\par
2756                 GuiDrawRectangle(itemBounds, GuiGetStyle(LISTVIEW, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(LISTVIEW, BORDER_COLOR_PRESSED)), guiAlpha), Fade(GetColor(GuiGetStyle(LISTVIEW, BASE_COLOR_PRESSED)), guiAlpha));\par
2757                 GuiDrawText(text[startIndex + i], GetTextBounds(DEFAULT, itemBounds), GuiGetStyle(LISTVIEW, TEXT_ALIGNMENT), Fade(GetColor(GuiGetStyle(LISTVIEW, TEXT_COLOR_PRESSED)), guiAlpha));\par
2758             \}\par
2759             {\cf19 else} {\cf19 if} ((startIndex + i) == itemFocused)\par
2760             \{\par
2761                 {\cf20 // Draw item focused}\par
2762                 GuiDrawRectangle(itemBounds, GuiGetStyle(LISTVIEW, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(LISTVIEW, BORDER_COLOR_FOCUSED)), guiAlpha), Fade(GetColor(GuiGetStyle(LISTVIEW, BASE_COLOR_FOCUSED)), guiAlpha));\par
2763                 GuiDrawText(text[startIndex + i], GetTextBounds(DEFAULT, itemBounds), GuiGetStyle(LISTVIEW, TEXT_ALIGNMENT), Fade(GetColor(GuiGetStyle(LISTVIEW, TEXT_COLOR_FOCUSED)), guiAlpha));\par
2764             \}\par
2765             {\cf19 else}\par
2766             \{\par
2767                 {\cf20 // Draw item normal}\par
2768                 GuiDrawText(text[startIndex + i], GetTextBounds(DEFAULT, itemBounds), GuiGetStyle(LISTVIEW, TEXT_ALIGNMENT), Fade(GetColor(GuiGetStyle(LISTVIEW, TEXT_COLOR_NORMAL)), guiAlpha));\par
2769             \}\par
2770         \}\par
2771 \par
2772         {\cf20 // Update item rectangle y position for next item}\par
2773         itemBounds.y += (GuiGetStyle(LISTVIEW, LIST_ITEMS_HEIGHT) + GuiGetStyle(LISTVIEW, LIST_ITEMS_SPACING));\par
2774     \}\par
2775 \par
2776     {\cf19 if} (useScrollBar)\par
2777     \{\par
2778         Rectangle scrollBarBounds = \{\par
2779             bounds.x + bounds.width - GuiGetStyle(LISTVIEW, BORDER_WIDTH) - GuiGetStyle(LISTVIEW, SCROLLBAR_WIDTH),\par
2780             bounds.y + GuiGetStyle(LISTVIEW, BORDER_WIDTH), (float)GuiGetStyle(LISTVIEW, SCROLLBAR_WIDTH),\par
2781             bounds.height - 2*GuiGetStyle(DEFAULT, BORDER_WIDTH)\par
2782         \};\par
2783 \par
2784         {\cf20 // Calculate percentage of visible items and apply same percentage to scrollbar}\par
2785         {\cf18 float} percentVisible = (float)(endIndex - startIndex)/count;\par
2786         {\cf18 float} sliderSize = bounds.height*percentVisible;\par
2787 \par
2788         {\cf18 int} prevSliderSize = GuiGetStyle(SCROLLBAR, SCROLL_SLIDER_SIZE);   {\cf20 // Save default slider size}\par
2789         {\cf18 int} prevScrollSpeed = GuiGetStyle(SCROLLBAR, SCROLL_SPEED); {\cf20 // Save default scroll speed}\par
2790         GuiSetStyle(SCROLLBAR, SCROLL_SLIDER_SIZE, ({\cf18 int})sliderSize);            {\cf20 // Change slider size}\par
2791         GuiSetStyle(SCROLLBAR, SCROLL_SPEED, count - visibleItems); {\cf20 // Change scroll speed}\par
2792 \par
2793         startIndex = GuiScrollBar(scrollBarBounds, startIndex, 0, count - visibleItems);\par
2794 \par
2795         GuiSetStyle(SCROLLBAR, SCROLL_SPEED, prevScrollSpeed); {\cf20 // Reset scroll speed to default}\par
2796         GuiSetStyle(SCROLLBAR, SCROLL_SLIDER_SIZE, prevSliderSize); {\cf20 // Reset slider size to default}\par
2797     \}\par
2798     {\cf20 //--------------------------------------------------------------------}\par
2799 \par
2800     {\cf19 if} (focus != NULL) *focus = itemFocused;\par
2801     {\cf19 if} (scrollIndex != NULL) *scrollIndex = startIndex;\par
2802 \par
2803     {\cf19 return} itemSelected;\par
2804 \}\par
2805 \par
2806 {\cf20 // Color Panel control}\par
2807 Color GuiColorPanel(Rectangle bounds, {\cf17 const} {\cf18 char} *text, Color color)\par
2808 \{\par
2809     {\cf17 const} Color colWhite = \{ 255, 255, 255, 255 \};\par
2810     {\cf17 const} Color colBlack = \{ 0, 0, 0, 255 \};\par
2811 \par
2812     GuiState state = guiState;\par
2813     Vector2 pickerSelector = \{ 0 \};\par
2814 \par
2815     Vector3 vcolor = \{ (float)color.r/255.0f, ({\cf18 float})color.g/255.0f, (float)color.b/255.0f \};\par
2816     Vector3 hsv = ConvertRGBtoHSV(vcolor);\par
2817 \par
2818     pickerSelector.x = bounds.x + (float)hsv.y*bounds.width;            {\cf20 // HSV: Saturation}\par
2819     pickerSelector.y = bounds.y + (1.0f - (float)hsv.z)*bounds.height;  {\cf20 // HSV: Value}\par
2820 \par
2821     {\cf18 float} hue = -1.0f;\par
2822     Vector3 maxHue = \{ hue >= 0.0f ? hue : hsv.x, 1.0f, 1.0f \};\par
2823     Vector3 rgbHue = ConvertHSVtoRGB(maxHue);\par
2824     Color maxHueCol = \{ ({\cf18 unsigned} char)(255.0f*rgbHue.x),\par
2825                       ({\cf18 unsigned} char)(255.0f*rgbHue.y),\par
2826                       ({\cf18 unsigned} char)(255.0f*rgbHue.z), 255 \};\par
2827 \par
2828     {\cf20 // Update control}\par
2829     {\cf20 //--------------------------------------------------------------------}\par
2830     {\cf19 if} ((state != STATE_DISABLED) && !guiLocked)\par
2831     \{\par
2832         Vector2 mousePoint = GetMousePosition();\par
2833 \par
2834         {\cf19 if} (CheckCollisionPointRec(mousePoint, bounds))\par
2835         \{\par
2836             {\cf19 if} (IsMouseButtonDown(MOUSE_LEFT_BUTTON))\par
2837             \{\par
2838                 state = STATE_PRESSED;\par
2839                 pickerSelector = mousePoint;\par
2840 \par
2841                 {\cf20 // Calculate color from picker}\par
2842                 Vector2 colorPick = \{ pickerSelector.x - bounds.x, pickerSelector.y - bounds.y \};\par
2843 \par
2844                 colorPick.x /= (float)bounds.width;     {\cf20 // Get normalized value on x}\par
2845                 colorPick.y /= (float)bounds.height;    {\cf20 // Get normalized value on y}\par
2846 \par
2847                 hsv.y = colorPick.x;\par
2848                 hsv.z = 1.0f - colorPick.y;\par
2849 \par
2850                 Vector3 rgb = ConvertHSVtoRGB(hsv);\par
2851 \par
2852                 {\cf20 // NOTE: Vector3ToColor() only available on raylib 1.8.1}\par
2853                 color = RAYGUI_CLITERAL(Color)\{ ({\cf18 unsigned} char)(255.0f*rgb.x),\par
2854                                  ({\cf18 unsigned} char)(255.0f*rgb.y),\par
2855                                  ({\cf18 unsigned} char)(255.0f*rgb.z),\par
2856                                  ({\cf18 unsigned} char)(255.0f*({\cf18 float})color.a/255.0f) \};\par
2857 \par
2858             \}\par
2859             {\cf19 else} state = STATE_FOCUSED;\par
2860         \}\par
2861     \}\par
2862     {\cf20 //--------------------------------------------------------------------}\par
2863 \par
2864     {\cf20 // Draw control}\par
2865     {\cf20 //--------------------------------------------------------------------}\par
2866     {\cf19 if} (state != STATE_DISABLED)\par
2867     \{\par
2868         DrawRectangleGradientEx(bounds, Fade(colWhite, guiAlpha), Fade(colWhite, guiAlpha), Fade(maxHueCol, guiAlpha), Fade(maxHueCol, guiAlpha));\par
2869         DrawRectangleGradientEx(bounds, Fade(colBlack, 0), Fade(colBlack, guiAlpha), Fade(colBlack, guiAlpha), Fade(colBlack, 0));\par
2870 \par
2871         {\cf20 // Draw color picker: selector}\par
2872         Rectangle selector = \{ pickerSelector.x - GuiGetStyle(COLORPICKER, COLOR_SELECTOR_SIZE)/2, pickerSelector.y - GuiGetStyle(COLORPICKER, COLOR_SELECTOR_SIZE)/2, (float)GuiGetStyle(COLORPICKER, COLOR_SELECTOR_SIZE), (float)GuiGetStyle(COLORPICKER, COLOR_SELECTOR_SIZE) \};\par
2873         GuiDrawRectangle(selector, 0, BLANK, Fade(colWhite, guiAlpha));\par
2874     \}\par
2875     {\cf19 else}\par
2876     \{\par
2877         DrawRectangleGradientEx(bounds, Fade(Fade(GetColor(GuiGetStyle(COLORPICKER, BASE_COLOR_DISABLED)), 0.1f), guiAlpha), Fade(Fade(colBlack, 0.6f), guiAlpha), Fade(Fade(colBlack, 0.6f), guiAlpha), Fade(Fade(GetColor(GuiGetStyle(COLORPICKER, BORDER_COLOR_DISABLED)), 0.6f), guiAlpha));\par
2878     \}\par
2879 \par
2880     GuiDrawRectangle(bounds, GuiGetStyle(COLORPICKER, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(COLORPICKER, BORDER + state*3)), guiAlpha), BLANK);\par
2881     {\cf20 //--------------------------------------------------------------------}\par
2882 \par
2883     {\cf19 return} color;\par
2884 \}\par
2885 \par
2886 {\cf20 // Color Bar Alpha control}\par
2887 {\cf20 // NOTE: Returns alpha value normalized [0..1]}\par
2888 {\cf18 float} GuiColorBarAlpha(Rectangle bounds, {\cf17 const} {\cf18 char} *text, {\cf18 float} alpha)\par
2889 \{\par
2890 {\cf21     #if !defined(RAYGUI_COLORBARALPHA_CHECKED_SIZE)}\par
2891 {\cf21         #define RAYGUI_COLORBARALPHA_CHECKED_SIZE   10}\par
2892 {\cf21     #endif}\par
2893 \par
2894     GuiState state = guiState;\par
2895     Rectangle selector = \{ (float)bounds.x + alpha*bounds.width - GuiGetStyle(COLORPICKER, HUEBAR_SELECTOR_HEIGHT)/2, (float)bounds.y - GuiGetStyle(COLORPICKER, HUEBAR_SELECTOR_OVERFLOW), (float)GuiGetStyle(COLORPICKER, HUEBAR_SELECTOR_HEIGHT), (float)bounds.height + GuiGetStyle(COLORPICKER, HUEBAR_SELECTOR_OVERFLOW)*2 \};\par
2896 \par
2897     {\cf20 // Update control}\par
2898     {\cf20 //--------------------------------------------------------------------}\par
2899     {\cf19 if} ((state != STATE_DISABLED) && !guiLocked)\par
2900     \{\par
2901         Vector2 mousePoint = GetMousePosition();\par
2902 \par
2903         {\cf19 if} (CheckCollisionPointRec(mousePoint, bounds) ||\par
2904             CheckCollisionPointRec(mousePoint, selector))\par
2905         \{\par
2906             {\cf19 if} (IsMouseButtonDown(MOUSE_LEFT_BUTTON))\par
2907             \{\par
2908                 state = STATE_PRESSED;\par
2909 \par
2910                 alpha = (mousePoint.x - bounds.x)/bounds.width;\par
2911                 {\cf19 if} (alpha <= 0.0f) alpha = 0.0f;\par
2912                 {\cf19 if} (alpha >= 1.0f) alpha = 1.0f;\par
2913                 {\cf20 //selector.x = bounds.x + (int)(((alpha - 0)/(100 - 0))*(bounds.width - 2*GuiGetStyle(SLIDER, BORDER_WIDTH))) - selector.width/2;}\par
2914             \}\par
2915             {\cf19 else} state = STATE_FOCUSED;\par
2916         \}\par
2917     \}\par
2918     {\cf20 //--------------------------------------------------------------------}\par
2919 \par
2920     {\cf20 // Draw control}\par
2921     {\cf20 //--------------------------------------------------------------------}\par
2922 \par
2923     {\cf20 // Draw alpha bar: checked background}\par
2924     {\cf19 if} (state != STATE_DISABLED)\par
2925     \{\par
2926         {\cf18 int} checksX = (int)bounds.width/RAYGUI_COLORBARALPHA_CHECKED_SIZE;\par
2927         {\cf18 int} checksY = (int)bounds.height/RAYGUI_COLORBARALPHA_CHECKED_SIZE;\par
2928 \par
2929         {\cf19 for} ({\cf18 int} x = 0; x < checksX; x++)\par
2930         \{\par
2931             {\cf19 for} ({\cf18 int} y = 0; y < checksY; y++)\par
2932             \{\par
2933                 Rectangle check = \{ bounds.x + x*RAYGUI_COLORBARALPHA_CHECKED_SIZE, bounds.y + y*RAYGUI_COLORBARALPHA_CHECKED_SIZE, RAYGUI_COLORBARALPHA_CHECKED_SIZE, RAYGUI_COLORBARALPHA_CHECKED_SIZE \};\par
2934                 GuiDrawRectangle(check, 0, BLANK, ((x + y)%2)? Fade(Fade(GetColor(GuiGetStyle(COLORPICKER, BORDER_COLOR_DISABLED)), 0.4f), guiAlpha) : Fade(Fade(GetColor(GuiGetStyle(COLORPICKER, BASE_COLOR_DISABLED)), 0.4f), guiAlpha));\par
2935             \}\par
2936         \}\par
2937 \par
2938         DrawRectangleGradientEx(bounds, RAYGUI_CLITERAL(Color)\{ 255, 255, 255, 0 \}, RAYGUI_CLITERAL(Color)\{ 255, 255, 255, 0 \}, Fade(RAYGUI_CLITERAL(Color)\{ 0, 0, 0, 255 \}, guiAlpha), Fade(RAYGUI_CLITERAL(Color)\{ 0, 0, 0, 255 \}, guiAlpha));\par
2939     \}\par
2940     {\cf19 else} DrawRectangleGradientEx(bounds, Fade(GetColor(GuiGetStyle(COLORPICKER, BASE_COLOR_DISABLED)), 0.1f), Fade(GetColor(GuiGetStyle(COLORPICKER, BASE_COLOR_DISABLED)), 0.1f), Fade(GetColor(GuiGetStyle(COLORPICKER, BORDER_COLOR_DISABLED)), guiAlpha), Fade(GetColor(GuiGetStyle(COLORPICKER, BORDER_COLOR_DISABLED)), guiAlpha));\par
2941 \par
2942     GuiDrawRectangle(bounds, GuiGetStyle(COLORPICKER, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(COLORPICKER, BORDER + state*3)), guiAlpha), BLANK);\par
2943 \par
2944     {\cf20 // Draw alpha bar: selector}\par
2945     GuiDrawRectangle(selector, 0, BLANK, Fade(GetColor(GuiGetStyle(COLORPICKER, BORDER + state*3)), guiAlpha));\par
2946     {\cf20 //--------------------------------------------------------------------}\par
2947 \par
2948     {\cf19 return} alpha;\par
2949 \}\par
2950 \par
2951 {\cf20 // Color Bar Hue control}\par
2952 {\cf20 // Returns hue value normalized [0..1]}\par
2953 {\cf20 // NOTE: Other similar bars (for reference):}\par
2954 {\cf20 //      Color GuiColorBarSat() [WHITE->color]}\par
2955 {\cf20 //      Color GuiColorBarValue() [BLACK->color], HSV/HSL}\par
2956 {\cf20 //      float GuiColorBarLuminance() [BLACK->WHITE]}\par
2957 {\cf18 float} GuiColorBarHue(Rectangle bounds, {\cf17 const} {\cf18 char} *text, {\cf18 float} hue)\par
2958 \{\par
2959     GuiState state = guiState;\par
2960     Rectangle selector = \{ (float)bounds.x - GuiGetStyle(COLORPICKER, HUEBAR_SELECTOR_OVERFLOW), (float)bounds.y + hue/360.0f*bounds.height - GuiGetStyle(COLORPICKER, HUEBAR_SELECTOR_HEIGHT)/2, (float)bounds.width + GuiGetStyle(COLORPICKER, HUEBAR_SELECTOR_OVERFLOW)*2, (float)GuiGetStyle(COLORPICKER, HUEBAR_SELECTOR_HEIGHT) \};\par
2961 \par
2962     {\cf20 // Update control}\par
2963     {\cf20 //--------------------------------------------------------------------}\par
2964     {\cf19 if} ((state != STATE_DISABLED) && !guiLocked)\par
2965     \{\par
2966         Vector2 mousePoint = GetMousePosition();\par
2967 \par
2968         {\cf19 if} (CheckCollisionPointRec(mousePoint, bounds) ||\par
2969             CheckCollisionPointRec(mousePoint, selector))\par
2970         \{\par
2971             {\cf19 if} (IsMouseButtonDown(MOUSE_LEFT_BUTTON))\par
2972             \{\par
2973                 state = STATE_PRESSED;\par
2974 \par
2975                 hue = (mousePoint.y - bounds.y)*360/bounds.height;\par
2976                 {\cf19 if} (hue <= 0.0f) hue = 0.0f;\par
2977                 {\cf19 if} (hue >= 359.0f) hue = 359.0f;\par
2978 \par
2979             \}\par
2980             {\cf19 else} state = STATE_FOCUSED;\par
2981 \par
2982             {\cf20 /*if (IsKeyDown(KEY_UP))}\par
2983 {\cf20             \{}\par
2984 {\cf20                 hue -= 2.0f;}\par
2985 {\cf20                 if (hue <= 0.0f) hue = 0.0f;}\par
2986 {\cf20             \}}\par
2987 {\cf20             else if (IsKeyDown(KEY_DOWN))}\par
2988 {\cf20             \{}\par
2989 {\cf20                 hue += 2.0f;}\par
2990 {\cf20                 if (hue >= 360.0f) hue = 360.0f;}\par
2991 {\cf20             \}*/}\par
2992         \}\par
2993     \}\par
2994     {\cf20 //--------------------------------------------------------------------}\par
2995 \par
2996     {\cf20 // Draw control}\par
2997     {\cf20 //--------------------------------------------------------------------}\par
2998     {\cf19 if} (state != STATE_DISABLED)\par
2999     \{\par
3000         {\cf20 // Draw hue bar:color bars}\par
3001         DrawRectangleGradientV(({\cf18 int})bounds.x, ({\cf18 int})(bounds.y), ({\cf18 int})bounds.width, ({\cf18 int})ceilf(bounds.height/6),  Fade(RAYGUI_CLITERAL(Color) \{ 255, 0, 0, 255 \}, guiAlpha), Fade(RAYGUI_CLITERAL(Color) \{ 255, 255, 0, 255 \}, guiAlpha));\par
3002         DrawRectangleGradientV(({\cf18 int})bounds.x, ({\cf18 int})(bounds.y + bounds.height/6), ({\cf18 int})bounds.width, ({\cf18 int})ceilf(bounds.height/6), Fade(RAYGUI_CLITERAL(Color) \{ 255, 255, 0, 255 \}, guiAlpha), Fade(RAYGUI_CLITERAL(Color) \{ 0, 255, 0, 255 \}, guiAlpha));\par
3003         DrawRectangleGradientV(({\cf18 int})bounds.x, ({\cf18 int})(bounds.y + 2*(bounds.height/6)), ({\cf18 int})bounds.width, ({\cf18 int})ceilf(bounds.height/6), Fade(RAYGUI_CLITERAL(Color) \{ 0, 255, 0, 255 \}, guiAlpha), Fade(RAYGUI_CLITERAL(Color) \{ 0, 255, 255, 255 \}, guiAlpha));\par
3004         DrawRectangleGradientV(({\cf18 int})bounds.x, ({\cf18 int})(bounds.y + 3*(bounds.height/6)), ({\cf18 int})bounds.width, ({\cf18 int})ceilf(bounds.height/6), Fade(RAYGUI_CLITERAL(Color) \{ 0, 255, 255, 255 \}, guiAlpha), Fade(RAYGUI_CLITERAL(Color) \{ 0, 0, 255, 255 \}, guiAlpha));\par
3005         DrawRectangleGradientV(({\cf18 int})bounds.x, ({\cf18 int})(bounds.y + 4*(bounds.height/6)), ({\cf18 int})bounds.width, ({\cf18 int})ceilf(bounds.height/6), Fade(RAYGUI_CLITERAL(Color) \{ 0, 0, 255, 255 \}, guiAlpha), Fade(RAYGUI_CLITERAL(Color) \{ 255, 0, 255, 255 \}, guiAlpha));\par
3006         DrawRectangleGradientV(({\cf18 int})bounds.x, ({\cf18 int})(bounds.y + 5*(bounds.height/6)), ({\cf18 int})bounds.width, ({\cf18 int})(bounds.height/6), Fade(RAYGUI_CLITERAL(Color) \{ 255, 0, 255, 255 \}, guiAlpha), Fade(RAYGUI_CLITERAL(Color) \{ 255, 0, 0, 255 \}, guiAlpha));\par
3007     \}\par
3008     {\cf19 else} DrawRectangleGradientV(({\cf18 int})bounds.x, ({\cf18 int})bounds.y, ({\cf18 int})bounds.width, ({\cf18 int})bounds.height, Fade(Fade(GetColor(GuiGetStyle(COLORPICKER, BASE_COLOR_DISABLED)), 0.1f), guiAlpha), Fade(GetColor(GuiGetStyle(COLORPICKER, BORDER_COLOR_DISABLED)), guiAlpha));\par
3009 \par
3010     GuiDrawRectangle(bounds, GuiGetStyle(COLORPICKER, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(COLORPICKER, BORDER + state*3)), guiAlpha), BLANK);\par
3011 \par
3012     {\cf20 // Draw hue bar: selector}\par
3013     GuiDrawRectangle(selector, 0, BLANK, Fade(GetColor(GuiGetStyle(COLORPICKER, BORDER + state*3)), guiAlpha));\par
3014     {\cf20 //--------------------------------------------------------------------}\par
3015 \par
3016     {\cf19 return} hue;\par
3017 \}\par
3018 \par
3019 {\cf20 // Color Picker control}\par
3020 {\cf20 // NOTE: It's divided in multiple controls:}\par
3021 {\cf20 //      Color GuiColorPanel(Rectangle bounds, Color color)}\par
3022 {\cf20 //      float GuiColorBarAlpha(Rectangle bounds, float alpha)}\par
3023 {\cf20 //      float GuiColorBarHue(Rectangle bounds, float value)}\par
3024 {\cf20 // NOTE: bounds define GuiColorPanel() size}\par
3025 Color GuiColorPicker(Rectangle bounds, {\cf17 const} {\cf18 char} *text, Color color)\par
3026 \{\par
3027     color = GuiColorPanel(bounds, NULL, color);\par
3028 \par
3029     Rectangle boundsHue = \{ (float)bounds.x + bounds.width + GuiGetStyle(COLORPICKER, HUEBAR_PADDING), (float)bounds.y, ({\cf18 float})GuiGetStyle(COLORPICKER, HUEBAR_WIDTH), (float)bounds.height \};\par
3030     {\cf20 //Rectangle boundsAlpha = \{ bounds.x, bounds.y + bounds.height + GuiGetStyle(COLORPICKER, BARS_PADDING), bounds.width, GuiGetStyle(COLORPICKER, BARS_THICK) \};}\par
3031 \par
3032     Vector3 hsv = ConvertRGBtoHSV(RAYGUI_CLITERAL(Vector3)\{ color.r/255.0f, color.g/255.0f, color.b/255.0f \});\par
3033     hsv.x = GuiColorBarHue(boundsHue, NULL, hsv.x);\par
3034     {\cf20 //color.a = (unsigned char)(GuiColorBarAlpha(boundsAlpha, (float)color.a/255.0f)*255.0f);}\par
3035     Vector3 rgb = ConvertHSVtoRGB(hsv);\par
3036 \par
3037     color = RAYGUI_CLITERAL(Color)\{ ({\cf18 unsigned} char)roundf(rgb.x*255.0f), ({\cf18 unsigned} char)roundf(rgb.y*255.0f), ({\cf18 unsigned} char)roundf(rgb.z*255.0f), color.a \};\par
3038 \par
3039     {\cf19 return} color;\par
3040 \}\par
3041 \par
3042 {\cf20 // Message Box control}\par
3043 {\cf18 int} GuiMessageBox(Rectangle bounds, {\cf17 const} {\cf18 char} *title, {\cf17 const} {\cf18 char} *message, {\cf17 const} {\cf18 char} *buttons)\par
3044 \{\par
3045 {\cf21     #if !defined(RAYGUI_MESSAGEBOX_BUTTON_HEIGHT)}\par
3046 {\cf21         #define RAYGUI_MESSAGEBOX_BUTTON_HEIGHT    24}\par
3047 {\cf21     #endif}\par
3048 {\cf21     #if !defined(RAYGUI_MESSAGEBOX_BUTTON_PADDING)}\par
3049 {\cf21         #define RAYGUI_MESSAGEBOX_BUTTON_PADDING   12}\par
3050 {\cf21     #endif}\par
3051 \par
3052     {\cf18 int} clicked = -1;    {\cf20 // Returns clicked button from buttons list, 0 refers to closed window button}\par
3053 \par
3054     {\cf18 int} buttonCount = 0;\par
3055     {\cf17 const} {\cf18 char} **buttonsText = GuiTextSplit(buttons, &buttonCount, NULL);\par
3056     Rectangle buttonBounds = \{ 0 \};\par
3057     buttonBounds.x = bounds.x + RAYGUI_MESSAGEBOX_BUTTON_PADDING;\par
3058     buttonBounds.y = bounds.y + bounds.height - RAYGUI_MESSAGEBOX_BUTTON_HEIGHT - RAYGUI_MESSAGEBOX_BUTTON_PADDING;\par
3059     buttonBounds.width = (bounds.width - RAYGUI_MESSAGEBOX_BUTTON_PADDING*(buttonCount + 1))/buttonCount;\par
3060     buttonBounds.height = RAYGUI_MESSAGEBOX_BUTTON_HEIGHT;\par
3061 \par
3062     Vector2 textSize = MeasureTextEx(guiFont, message, ({\cf18 float})GuiGetStyle(DEFAULT, TEXT_SIZE), 1);\par
3063 \par
3064     Rectangle textBounds = \{ 0 \};\par
3065     textBounds.x = bounds.x + bounds.width/2 - textSize.x/2;\par
3066     textBounds.y = bounds.y + RAYGUI_WINDOWBOX_STATUSBAR_HEIGHT + RAYGUI_MESSAGEBOX_BUTTON_PADDING;\par
3067     textBounds.width = textSize.x;\par
3068     textBounds.height = bounds.height - RAYGUI_WINDOWBOX_STATUSBAR_HEIGHT - 3*RAYGUI_MESSAGEBOX_BUTTON_PADDING - RAYGUI_MESSAGEBOX_BUTTON_HEIGHT;\par
3069 \par
3070     {\cf20 // Draw control}\par
3071     {\cf20 //--------------------------------------------------------------------}\par
3072     {\cf19 if} (GuiWindowBox(bounds, title)) clicked = 0;\par
3073 \par
3074     {\cf18 int} prevTextAlignment = GuiGetStyle(LABEL, TEXT_ALIGNMENT);\par
3075     GuiSetStyle(LABEL, TEXT_ALIGNMENT, TEXT_ALIGN_CENTER);\par
3076     GuiLabel(textBounds, message);\par
3077     GuiSetStyle(LABEL, TEXT_ALIGNMENT, prevTextAlignment);\par
3078 \par
3079     prevTextAlignment = GuiGetStyle(BUTTON, TEXT_ALIGNMENT);\par
3080     GuiSetStyle(BUTTON, TEXT_ALIGNMENT, TEXT_ALIGN_CENTER);\par
3081 \par
3082     {\cf19 for} ({\cf18 int} i = 0; i < buttonCount; i++)\par
3083     \{\par
3084         {\cf19 if} (GuiButton(buttonBounds, buttonsText[i])) clicked = i + 1;\par
3085         buttonBounds.x += (buttonBounds.width + RAYGUI_MESSAGEBOX_BUTTON_PADDING);\par
3086     \}\par
3087 \par
3088     GuiSetStyle(BUTTON, TEXT_ALIGNMENT, prevTextAlignment);\par
3089     {\cf20 //--------------------------------------------------------------------}\par
3090 \par
3091     {\cf19 return} clicked;\par
3092 \}\par
3093 \par
3094 {\cf20 // Text Input Box control, ask for text}\par
3095 {\cf18 int} GuiTextInputBox(Rectangle bounds, {\cf17 const} {\cf18 char} *title, {\cf17 const} {\cf18 char} *message, {\cf17 const} {\cf18 char} *buttons, {\cf18 char} *text, {\cf18 int} textMaxSize, {\cf18 int} *secretViewActive)\par
3096 \{\par
3097 {\cf21     #if !defined(RAYGUI_TEXTINPUTBOX_BUTTON_HEIGHT)}\par
3098 {\cf21         #define RAYGUI_TEXTINPUTBOX_BUTTON_HEIGHT      28}\par
3099 {\cf21     #endif}\par
3100 {\cf21     #if !defined(RAYGUI_TEXTINPUTBOX_BUTTON_PADDING)}\par
3101 {\cf21         #define RAYGUI_TEXTINPUTBOX_BUTTON_PADDING     12}\par
3102 {\cf21     #endif}\par
3103 {\cf21     #if !defined(RAYGUI_TEXTINPUTBOX_HEIGHT)}\par
3104 {\cf21         #define RAYGUI_TEXTINPUTBOX_HEIGHT             28}\par
3105 {\cf21     #endif}\par
3106 \par
3107     {\cf20 // Used to enable text edit mode}\par
3108     {\cf20 // WARNING: No more than one GuiTextInputBox() should be open at the same time}\par
3109     {\cf17 static} {\cf18 bool} textEditMode = {\cf17 false};\par
3110 \par
3111     {\cf18 int} btnIndex = -1;\par
3112 \par
3113     {\cf18 int} buttonCount = 0;\par
3114     {\cf17 const} {\cf18 char} **buttonsText = GuiTextSplit(buttons, &buttonCount, NULL);\par
3115     Rectangle buttonBounds = \{ 0 \};\par
3116     buttonBounds.x = bounds.x + RAYGUI_TEXTINPUTBOX_BUTTON_PADDING;\par
3117     buttonBounds.y = bounds.y + bounds.height - RAYGUI_TEXTINPUTBOX_BUTTON_HEIGHT - RAYGUI_TEXTINPUTBOX_BUTTON_PADDING;\par
3118     buttonBounds.width = (bounds.width - RAYGUI_TEXTINPUTBOX_BUTTON_PADDING*(buttonCount + 1))/buttonCount;\par
3119     buttonBounds.height = RAYGUI_TEXTINPUTBOX_BUTTON_HEIGHT;\par
3120 \par
3121     {\cf18 int} messageInputHeight = (int)bounds.height - RAYGUI_WINDOWBOX_STATUSBAR_HEIGHT - GuiGetStyle(STATUSBAR, BORDER_WIDTH) - RAYGUI_TEXTINPUTBOX_BUTTON_HEIGHT - 2*RAYGUI_TEXTINPUTBOX_BUTTON_PADDING;\par
3122 \par
3123     Rectangle textBounds = \{ 0 \};\par
3124     {\cf19 if} (message != NULL)\par
3125     \{\par
3126         Vector2 textSize = MeasureTextEx(guiFont, message, ({\cf18 float})GuiGetStyle(DEFAULT, TEXT_SIZE), 1);\par
3127 \par
3128         textBounds.x = bounds.x + bounds.width/2 - textSize.x/2;\par
3129         textBounds.y = bounds.y + RAYGUI_WINDOWBOX_STATUSBAR_HEIGHT + messageInputHeight/4 - textSize.y/2;\par
3130         textBounds.width = textSize.x;\par
3131         textBounds.height = textSize.y;\par
3132     \}\par
3133 \par
3134     Rectangle textBoxBounds = \{ 0 \};\par
3135     textBoxBounds.x = bounds.x + RAYGUI_TEXTINPUTBOX_BUTTON_PADDING;\par
3136     textBoxBounds.y = bounds.y + RAYGUI_WINDOWBOX_STATUSBAR_HEIGHT - RAYGUI_TEXTINPUTBOX_HEIGHT/2;\par
3137     {\cf19 if} (message == NULL) textBoxBounds.y = bounds.y + 24 + RAYGUI_TEXTINPUTBOX_BUTTON_PADDING;\par
3138     {\cf19 else} textBoxBounds.y += (messageInputHeight/2 + messageInputHeight/4);\par
3139     textBoxBounds.width = bounds.width - RAYGUI_TEXTINPUTBOX_BUTTON_PADDING*2;\par
3140     textBoxBounds.height = RAYGUI_TEXTINPUTBOX_HEIGHT;\par
3141 \par
3142     {\cf20 // Draw control}\par
3143     {\cf20 //--------------------------------------------------------------------}\par
3144     {\cf19 if} (GuiWindowBox(bounds, title)) btnIndex = 0;\par
3145 \par
3146     {\cf20 // Draw message if available}\par
3147     {\cf19 if} (message != NULL)\par
3148     \{\par
3149         {\cf18 int} prevTextAlignment = GuiGetStyle(LABEL, TEXT_ALIGNMENT);\par
3150         GuiSetStyle(LABEL, TEXT_ALIGNMENT, TEXT_ALIGN_CENTER);\par
3151         GuiLabel(textBounds, message);\par
3152         GuiSetStyle(LABEL, TEXT_ALIGNMENT, prevTextAlignment);\par
3153     \}\par
3154 \par
3155     {\cf19 if} (secretViewActive != NULL)\par
3156     \{\par
3157         {\cf17 static} {\cf18 char} stars[] = {\cf22 "****************"};\par
3158         {\cf19 if} (GuiTextBox(RAYGUI_CLITERAL(Rectangle)\{ textBoxBounds.x, textBoxBounds.y, textBoxBounds.width - 4 - RAYGUI_TEXTINPUTBOX_HEIGHT, textBoxBounds.height \}, \par
3159             ((*secretViewActive == 1) || textEditMode)? text : stars, textMaxSize, textEditMode)) textEditMode = !textEditMode;\par
3160 \par
3161         *secretViewActive = GuiToggle(RAYGUI_CLITERAL(Rectangle)\{ textBoxBounds.x + textBoxBounds.width - RAYGUI_TEXTINPUTBOX_HEIGHT, textBoxBounds.y, RAYGUI_TEXTINPUTBOX_HEIGHT, RAYGUI_TEXTINPUTBOX_HEIGHT \}, (*secretViewActive == 1)? {\cf22 "#44#"} : {\cf22 "#45#"}, *secretViewActive);\par
3162     \}\par
3163     {\cf19 else}\par
3164     \{\par
3165         {\cf19 if} (GuiTextBox(textBoxBounds, text, textMaxSize, textEditMode)) textEditMode = !textEditMode;\par
3166     \}\par
3167 \par
3168     {\cf18 int} prevBtnTextAlignment = GuiGetStyle(BUTTON, TEXT_ALIGNMENT);\par
3169     GuiSetStyle(BUTTON, TEXT_ALIGNMENT, TEXT_ALIGN_CENTER);\par
3170 \par
3171     {\cf19 for} ({\cf18 int} i = 0; i < buttonCount; i++)\par
3172     \{\par
3173         {\cf19 if} (GuiButton(buttonBounds, buttonsText[i])) btnIndex = i + 1;\par
3174         buttonBounds.x += (buttonBounds.width + RAYGUI_MESSAGEBOX_BUTTON_PADDING);\par
3175     \}\par
3176 \par
3177     GuiSetStyle(BUTTON, TEXT_ALIGNMENT, prevBtnTextAlignment);\par
3178     {\cf20 //--------------------------------------------------------------------}\par
3179 \par
3180     {\cf19 return} btnIndex;\par
3181 \}\par
3182 \par
3183 {\cf20 // Grid control}\par
3184 {\cf20 // NOTE: Returns grid mouse-hover selected cell}\par
3185 {\cf20 // About drawing lines at subpixel spacing, simple put, not easy solution:}\par
3186 {\cf20 // https://stackoverflow.com/questions/4435450/2d-opengl-drawing-lines-that-dont-exactly-fit-pixel-raster}\par
3187 Vector2 GuiGrid(Rectangle bounds, {\cf17 const} {\cf18 char} *text, {\cf18 float} spacing, {\cf18 int} subdivs)\par
3188 \{\par
3189     {\cf20 // Grid lines alpha amount}\par
3190 {\cf21     #if !defined(RAYGUI_GRID_ALPHA)}\par
3191 {\cf21         #define RAYGUI_GRID_ALPHA    0.15f}\par
3192 {\cf21     #endif}\par
3193 \par
3194     GuiState state = guiState;\par
3195     Vector2 mousePoint = GetMousePosition();\par
3196     Vector2 currentCell = \{ -1, -1 \};\par
3197 \par
3198     {\cf18 int} linesV = ((int)(bounds.width/spacing))*subdivs + 1;\par
3199     {\cf18 int} linesH = ((int)(bounds.height/spacing))*subdivs + 1;\par
3200 \par
3201     {\cf20 // Update control}\par
3202     {\cf20 //--------------------------------------------------------------------}\par
3203     {\cf19 if} ((state != STATE_DISABLED) && !guiLocked)\par
3204     \{\par
3205         {\cf19 if} (CheckCollisionPointRec(mousePoint, bounds))\par
3206         \{\par
3207             {\cf20 // NOTE: Cell values must be rounded to int}\par
3208             currentCell.x = (int)((mousePoint.x - bounds.x)/spacing);\par
3209             currentCell.y = (int)((mousePoint.y - bounds.y)/spacing);\par
3210         \}\par
3211     \}\par
3212     {\cf20 //--------------------------------------------------------------------}\par
3213 \par
3214     {\cf20 // Draw control}\par
3215     {\cf20 //--------------------------------------------------------------------}\par
3216 \par
3217     {\cf20 // TODO: Draw background panel?}\par
3218 \par
3219     {\cf19 switch} (state)\par
3220     \{\par
3221         {\cf19 case} STATE_NORMAL:\par
3222         \{\par
3223             {\cf19 if} (subdivs > 0)\par
3224             \{\par
3225                 {\cf20 // Draw vertical grid lines}\par
3226                 {\cf19 for} ({\cf18 int} i = 0; i < linesV; i++)\par
3227                 \{\par
3228                     Rectangle lineV = \{ bounds.x + spacing*i/subdivs, bounds.y, 1, bounds.height \};\par
3229                     GuiDrawRectangle(lineV, 0, BLANK, ((i%subdivs) == 0) ? Fade(GetColor(GuiGetStyle(DEFAULT, LINE_COLOR)), RAYGUI_GRID_ALPHA*4) : Fade(GetColor(GuiGetStyle(DEFAULT, LINE_COLOR)), RAYGUI_GRID_ALPHA));\par
3230                 \}\par
3231 \par
3232                 {\cf20 // Draw horizontal grid lines}\par
3233                 {\cf19 for} ({\cf18 int} i = 0; i < linesH; i++)\par
3234                 \{\par
3235                     Rectangle lineH = \{ bounds.x, bounds.y + spacing*i/subdivs, bounds.width, 1 \};\par
3236                     GuiDrawRectangle(lineH, 0, BLANK, ((i%subdivs) == 0) ? Fade(GetColor(GuiGetStyle(DEFAULT, LINE_COLOR)), RAYGUI_GRID_ALPHA*4) : Fade(GetColor(GuiGetStyle(DEFAULT, LINE_COLOR)), RAYGUI_GRID_ALPHA));\par
3237                 \}\par
3238             \}\par
3239         \} {\cf19 break};\par
3240         {\cf19 default}: {\cf19 break};\par
3241     \}\par
3242 \par
3243     {\cf19 return} currentCell;\par
3244 \}\par
3245 \par
3246 {\cf20 //----------------------------------------------------------------------------------}\par
3247 {\cf20 // Styles loading functions}\par
3248 {\cf20 //----------------------------------------------------------------------------------}\par
3249 \par
3250 {\cf20 // Load raygui style file (.rgs)}\par
3251 {\cf20 // NOTE: By default a binary file is expected, that file could contain a custom font,}\par
3252 {\cf20 // in that case, custom font image atlas is GRAY+ALPHA and pixel data can be compressed (DEFLATE)}\par
3253 {\cf18 void} GuiLoadStyle({\cf17 const} {\cf18 char} *fileName)\par
3254 \{\par
3255 {\cf21     #define MAX_LINE_BUFFER_SIZE    256}\par
3256 \par
3257     {\cf18 bool} tryBinary = {\cf17 false};\par
3258 \par
3259     {\cf20 // Try reading the files as text file first}\par
3260     FILE *rgsFile = fopen(fileName, {\cf22 "rt"});\par
3261 \par
3262     {\cf19 if} (rgsFile != NULL)\par
3263     \{\par
3264         {\cf18 char} buffer[MAX_LINE_BUFFER_SIZE] = \{ 0 \};\par
3265         fgets(buffer, MAX_LINE_BUFFER_SIZE, rgsFile);\par
3266 \par
3267         {\cf19 if} (buffer[0] == {\cf23 '#'})\par
3268         \{\par
3269             {\cf18 int} controlId = 0;\par
3270             {\cf18 int} propertyId = 0;\par
3271             {\cf18 unsigned} {\cf18 int} propertyValue = 0;\par
3272 \par
3273             {\cf19 while} (!feof(rgsFile))\par
3274             \{\par
3275                 {\cf19 switch} (buffer[0])\par
3276                 \{\par
3277                     {\cf19 case} {\cf23 'p'}:\par
3278                     \{\par
3279                         {\cf20 // Style property: p <control_id> <property_id> <property_value> <property_name>}\par
3280 \par
3281                         sscanf(buffer, {\cf22 "p %d %d 0x%x"}, &controlId, &propertyId, &propertyValue);\par
3282                         GuiSetStyle(controlId, propertyId, ({\cf18 int})propertyValue);\par
3283 \par
3284                     \} {\cf19 break};\par
3285                     {\cf19 case} {\cf23 'f'}:\par
3286                     \{\par
3287                         {\cf20 // Style font: f <gen_font_size> <charmap_file> <font_file>}\par
3288 \par
3289                         {\cf18 int} fontSize = 0;\par
3290                         {\cf18 char} charmapFileName[256] = \{ 0 \};\par
3291                         {\cf18 char} fontFileName[256] = \{ 0 \};\par
3292                         sscanf(buffer, {\cf22 "f %d %s %[^\\r\\n]s"}, &fontSize, charmapFileName, fontFileName);\par
3293 \par
3294                         Font font = \{ 0 \};\par
3295 \par
3296                         {\cf19 if} (charmapFileName[0] != {\cf23 '0'})\par
3297                         \{\par
3298                             {\cf20 // Load characters from charmap file,}\par
3299                             {\cf20 // expected '\\n' separated list of integer values}\par
3300                             {\cf18 char} *charValues = LoadFileText(charmapFileName);\par
3301                             {\cf19 if} (charValues != NULL)\par
3302                             \{\par
3303                                 {\cf18 int} glyphCount = 0;\par
3304                                 {\cf17 const} {\cf18 char} **chars = TextSplit(charValues, {\cf23 '\\n'}, &glyphCount);\par
3305 \par
3306                                 {\cf18 int} *values = ({\cf18 int} *)RAYGUI_MALLOC(glyphCount*{\cf17 sizeof}({\cf18 int}));\par
3307                                 {\cf19 for} ({\cf18 int} i = 0; i < glyphCount; i++) values[i] = TextToInteger(chars[i]);\par
3308 \par
3309                                 {\cf19 if} (font.texture.id != GetFontDefault().texture.id) UnloadTexture(font.texture);\par
3310                                 font = LoadFontEx(TextFormat({\cf22 "%s/%s"}, GetDirectoryPath(fileName), fontFileName), fontSize, values, glyphCount);\par
3311                                 {\cf19 if} (font.texture.id == 0) font = GetFontDefault();\par
3312 \par
3313                                 RAYGUI_FREE(values);\par
3314                             \}\par
3315                         \}\par
3316                         {\cf19 else}\par
3317                         \{\par
3318                             {\cf19 if} (font.texture.id != GetFontDefault().texture.id) UnloadTexture(font.texture);\par
3319                             font = LoadFontEx(TextFormat({\cf22 "%s/%s"}, GetDirectoryPath(fileName), fontFileName), fontSize, NULL, 0);\par
3320                             {\cf19 if} (font.texture.id == 0) font = GetFontDefault();\par
3321                         \}\par
3322 \par
3323                         {\cf19 if} ((font.texture.id > 0) && (font.glyphCount > 0)) GuiSetFont(font);\par
3324 \par
3325                     \} {\cf19 break};\par
3326                     {\cf19 default}: {\cf19 break};\par
3327                 \}\par
3328 \par
3329                 fgets(buffer, MAX_LINE_BUFFER_SIZE, rgsFile);\par
3330             \}\par
3331         \}\par
3332         {\cf19 else} tryBinary = {\cf17 true};\par
3333 \par
3334         fclose(rgsFile);\par
3335     \}\par
3336 \par
3337     {\cf19 if} (tryBinary)\par
3338     \{\par
3339         rgsFile = fopen(fileName, {\cf22 "rb"});\par
3340 \par
3341         {\cf19 if} (rgsFile == NULL) {\cf19 return};\par
3342 \par
3343         {\cf18 char} signature[5] = \{ 0 \};\par
3344         {\cf18 short} version = 0;\par
3345         {\cf18 short} reserved = 0;\par
3346         {\cf18 int} propertyCount = 0;\par
3347 \par
3348         fread(signature, 1, 4, rgsFile);\par
3349         fread(&version, 1, {\cf17 sizeof}({\cf18 short}), rgsFile);\par
3350         fread(&reserved, 1, {\cf17 sizeof}({\cf18 short}), rgsFile);\par
3351         fread(&propertyCount, 1, {\cf17 sizeof}({\cf18 int}), rgsFile);\par
3352 \par
3353         {\cf19 if} ((signature[0] == {\cf23 'r'}) &&\par
3354             (signature[1] == {\cf23 'G'}) &&\par
3355             (signature[2] == {\cf23 'S'}) &&\par
3356             (signature[3] == {\cf23 ' '}))\par
3357         \{\par
3358             {\cf18 short} controlId = 0;\par
3359             {\cf18 short} propertyId = 0;\par
3360             {\cf18 unsigned} {\cf18 int} propertyValue = 0;\par
3361 \par
3362             {\cf19 for} ({\cf18 int} i = 0; i < propertyCount; i++)\par
3363             \{\par
3364                 fread(&controlId, 1, {\cf17 sizeof}({\cf18 short}), rgsFile);\par
3365                 fread(&propertyId, 1, {\cf17 sizeof}({\cf18 short}), rgsFile);\par
3366                 fread(&propertyValue, 1, {\cf17 sizeof}({\cf18 unsigned} {\cf18 int}), rgsFile);\par
3367 \par
3368                 {\cf19 if} (controlId == 0) {\cf20 // DEFAULT control}\par
3369                 \{\par
3370                     {\cf20 // If a DEFAULT property is loaded, it is propagated to all controls}\par
3371                     {\cf20 // NOTE: All DEFAULT properties should be defined first in the file}\par
3372                     GuiSetStyle(0, ({\cf18 int})propertyId, propertyValue);\par
3373 \par
3374                     {\cf19 if} (propertyId < RAYGUI_MAX_PROPS_BASE) {\cf19 for} ({\cf18 int} i = 1; i < RAYGUI_MAX_CONTROLS; i++) GuiSetStyle(i, ({\cf18 int})propertyId, propertyValue);\par
3375                 \}\par
3376                 {\cf19 else} GuiSetStyle(({\cf18 int})controlId, ({\cf18 int})propertyId, propertyValue);\par
3377             \}\par
3378 \par
3379             {\cf20 // Font loading is highly dependant on raylib API to load font data and image}\par
3380 {\cf21 #if !defined(RAYGUI_STANDALONE)}\par
3381             {\cf20 // Load custom font if available}\par
3382             {\cf18 int} fontDataSize = 0;\par
3383             fread(&fontDataSize, 1, {\cf17 sizeof}({\cf18 int}), rgsFile);\par
3384 \par
3385             {\cf19 if} (fontDataSize > 0)\par
3386             \{\par
3387                 Font font = \{ 0 \};\par
3388                 {\cf18 int} fontType = 0;   {\cf20 // 0-Normal, 1-SDF}\par
3389                 Rectangle whiteRec = \{ 0 \};\par
3390 \par
3391                 fread(&font.baseSize, 1, {\cf17 sizeof}({\cf18 int}), rgsFile);\par
3392                 fread(&font.glyphCount, 1, {\cf17 sizeof}({\cf18 int}), rgsFile);\par
3393                 fread(&fontType, 1, {\cf17 sizeof}({\cf18 int}), rgsFile);\par
3394 \par
3395                 {\cf20 // Load font white rectangle}\par
3396                 fread(&whiteRec, 1, {\cf17 sizeof}(Rectangle), rgsFile);\par
3397 \par
3398                 {\cf20 // Load font image parameters}\par
3399                 {\cf18 int} fontImageUncompSize = 0;\par
3400                 {\cf18 int} fontImageCompSize = 0;\par
3401                 fread(&fontImageUncompSize, 1, {\cf17 sizeof}({\cf18 int}), rgsFile);\par
3402                 fread(&fontImageCompSize, 1, {\cf17 sizeof}({\cf18 int}), rgsFile);\par
3403 \par
3404                 Image imFont = \{ 0 \};\par
3405                 imFont.mipmaps = 1;\par
3406                 fread(&imFont.width, 1, {\cf17 sizeof}({\cf18 int}), rgsFile);\par
3407                 fread(&imFont.height, 1, {\cf17 sizeof}({\cf18 int}), rgsFile);\par
3408                 fread(&imFont.format, 1, {\cf17 sizeof}({\cf18 int}), rgsFile);\par
3409 \par
3410                 {\cf19 if} (fontImageCompSize < fontImageUncompSize)\par
3411                 \{\par
3412                     {\cf20 // Compressed font atlas image data (DEFLATE), it requires DecompressData()}\par
3413                     {\cf18 int} dataUncompSize = 0;\par
3414                     {\cf18 unsigned} {\cf18 char} *compData = ({\cf18 unsigned} {\cf18 char} *)RAYGUI_MALLOC(fontImageCompSize);\par
3415                     fread(compData, 1, fontImageCompSize, rgsFile);\par
3416                     imFont.data = DecompressData(compData, fontImageCompSize, &dataUncompSize);\par
3417 \par
3418                     {\cf20 // Security check, dataUncompSize must match the provided fontImageUncompSize}\par
3419                     {\cf19 if} (dataUncompSize != fontImageUncompSize) RAYGUI_LOG({\cf22 "WARNING: Uncompressed font atlas image data could be corrupted"});\par
3420 \par
3421                     RAYGUI_FREE(compData);\par
3422                 \}\par
3423                 {\cf19 else}\par
3424                 \{\par
3425                     {\cf20 // Font atlas image data is not compressed}\par
3426                     imFont.data = ({\cf18 unsigned} {\cf18 char} *)RAYGUI_MALLOC(fontImageUncompSize);\par
3427                     fread(imFont.data, 1, fontImageUncompSize, rgsFile);\par
3428                 \}\par
3429 \par
3430                 {\cf19 if} (font.texture.id != GetFontDefault().texture.id) UnloadTexture(font.texture);\par
3431                 font.texture = LoadTextureFromImage(imFont);\par
3432                 {\cf19 if} (font.texture.id == 0) font = GetFontDefault();\par
3433 \par
3434                 RAYGUI_FREE(imFont.data);\par
3435 \par
3436                 {\cf20 // Load font recs data}\par
3437                 font.recs = (Rectangle *)RAYGUI_CALLOC(font.glyphCount, {\cf17 sizeof}(Rectangle));\par
3438                 {\cf19 for} ({\cf18 int} i = 0; i < font.glyphCount; i++) fread(&font.recs[i], 1, {\cf17 sizeof}(Rectangle), rgsFile);\par
3439 \par
3440                 {\cf20 // Load font chars info data}\par
3441                 font.glyphs = (GlyphInfo *)RAYGUI_CALLOC(font.glyphCount, {\cf17 sizeof}(GlyphInfo));\par
3442                 {\cf19 for} ({\cf18 int} i = 0; i < font.glyphCount; i++)\par
3443                 \{\par
3444                     fread(&font.glyphs[i].value, 1, {\cf17 sizeof}({\cf18 int}), rgsFile);\par
3445                     fread(&font.glyphs[i].offsetX, 1, {\cf17 sizeof}({\cf18 int}), rgsFile);\par
3446                     fread(&font.glyphs[i].offsetY, 1, {\cf17 sizeof}({\cf18 int}), rgsFile);\par
3447                     fread(&font.glyphs[i].advanceX, 1, {\cf17 sizeof}({\cf18 int}), rgsFile);\par
3448                 \}\par
3449 \par
3450                 GuiSetFont(font);\par
3451 \par
3452                 {\cf20 // Set font texture source rectangle to be used as white texture to draw shapes}\par
3453                 {\cf20 // NOTE: This way, all gui can be draw using a single draw call}\par
3454                 {\cf19 if} ((whiteRec.width != 0) && (whiteRec.height != 0)) SetShapesTexture(font.texture, whiteRec);\par
3455             \}\par
3456 {\cf21 #endif}\par
3457         \}\par
3458 \par
3459         fclose(rgsFile);\par
3460     \}\par
3461 \}\par
3462 \par
3463 {\cf20 // Load style default over global style}\par
3464 {\cf18 void} GuiLoadStyleDefault({\cf18 void})\par
3465 \{\par
3466     {\cf20 // We set this variable first to avoid cyclic function calls}\par
3467     {\cf20 // when calling GuiSetStyle() and GuiGetStyle()}\par
3468     guiStyleLoaded = {\cf17 true};\par
3469 \par
3470     {\cf20 // Initialize default LIGHT style property values}\par
3471     GuiSetStyle(DEFAULT, BORDER_COLOR_NORMAL, 0x838383ff);\par
3472     GuiSetStyle(DEFAULT, BASE_COLOR_NORMAL, 0xc9c9c9ff);\par
3473     GuiSetStyle(DEFAULT, TEXT_COLOR_NORMAL, 0x686868ff);\par
3474     GuiSetStyle(DEFAULT, BORDER_COLOR_FOCUSED, 0x5bb2d9ff);\par
3475     GuiSetStyle(DEFAULT, BASE_COLOR_FOCUSED, 0xc9effeff);\par
3476     GuiSetStyle(DEFAULT, TEXT_COLOR_FOCUSED, 0x6c9bbcff);\par
3477     GuiSetStyle(DEFAULT, BORDER_COLOR_PRESSED, 0x0492c7ff);\par
3478     GuiSetStyle(DEFAULT, BASE_COLOR_PRESSED, 0x97e8ffff);\par
3479     GuiSetStyle(DEFAULT, TEXT_COLOR_PRESSED, 0x368bafff);\par
3480     GuiSetStyle(DEFAULT, BORDER_COLOR_DISABLED, 0xb5c1c2ff);\par
3481     GuiSetStyle(DEFAULT, BASE_COLOR_DISABLED, 0xe6e9e9ff);\par
3482     GuiSetStyle(DEFAULT, TEXT_COLOR_DISABLED, 0xaeb7b8ff);\par
3483     GuiSetStyle(DEFAULT, BORDER_WIDTH, 1);                       {\cf20 // WARNING: Some controls use other values}\par
3484     GuiSetStyle(DEFAULT, TEXT_PADDING, 0);                       {\cf20 // WARNING: Some controls use other values}\par
3485     GuiSetStyle(DEFAULT, TEXT_ALIGNMENT, TEXT_ALIGN_CENTER); {\cf20 // WARNING: Some controls use other values}\par
3486 \par
3487     {\cf20 // Initialize control-specific property values}\par
3488     {\cf20 // NOTE: Those properties are in default list but require specific values by control type}\par
3489     GuiSetStyle(LABEL, TEXT_ALIGNMENT, TEXT_ALIGN_LEFT);\par
3490     GuiSetStyle(BUTTON, BORDER_WIDTH, 2);\par
3491     GuiSetStyle(SLIDER, TEXT_PADDING, 4);\par
3492     GuiSetStyle(CHECKBOX, TEXT_PADDING, 4);\par
3493     GuiSetStyle(CHECKBOX, TEXT_ALIGNMENT, TEXT_ALIGN_RIGHT);\par
3494     GuiSetStyle(TEXTBOX, TEXT_PADDING, 4);\par
3495     GuiSetStyle(TEXTBOX, TEXT_ALIGNMENT, TEXT_ALIGN_LEFT);\par
3496     GuiSetStyle(VALUEBOX, TEXT_PADDING, 4);\par
3497     GuiSetStyle(VALUEBOX, TEXT_ALIGNMENT, TEXT_ALIGN_LEFT);\par
3498     GuiSetStyle(SPINNER, TEXT_PADDING, 4);\par
3499     GuiSetStyle(SPINNER, TEXT_ALIGNMENT, TEXT_ALIGN_LEFT);\par
3500     GuiSetStyle(STATUSBAR, TEXT_PADDING, 8);\par
3501     GuiSetStyle(STATUSBAR, TEXT_ALIGNMENT, TEXT_ALIGN_LEFT);\par
3502 \par
3503     {\cf20 // Initialize extended property values}\par
3504     {\cf20 // NOTE: By default, extended property values are initialized to 0}\par
3505     GuiSetStyle(DEFAULT, TEXT_SIZE, 10);                {\cf20 // DEFAULT, shared by all controls}\par
3506     GuiSetStyle(DEFAULT, TEXT_SPACING, 1);              {\cf20 // DEFAULT, shared by all controls}\par
3507     GuiSetStyle(DEFAULT, LINE_COLOR, 0x90abb5ff);       {\cf20 // DEFAULT specific property}\par
3508     GuiSetStyle(DEFAULT, BACKGROUND_COLOR, 0xf5f5f5ff); {\cf20 // DEFAULT specific property}\par
3509     GuiSetStyle(TOGGLE, GROUP_PADDING, 2);\par
3510     GuiSetStyle(SLIDER, SLIDER_WIDTH, 16);\par
3511     GuiSetStyle(SLIDER, SLIDER_PADDING, 1);\par
3512     GuiSetStyle(PROGRESSBAR, PROGRESS_PADDING, 1);\par
3513     GuiSetStyle(CHECKBOX, CHECK_PADDING, 1);\par
3514     GuiSetStyle(COMBOBOX, COMBO_BUTTON_WIDTH, 32);\par
3515     GuiSetStyle(COMBOBOX, COMBO_BUTTON_SPACING, 2);\par
3516     GuiSetStyle(DROPDOWNBOX, ARROW_PADDING, 16);\par
3517     GuiSetStyle(DROPDOWNBOX, DROPDOWN_ITEMS_SPACING, 2);\par
3518     GuiSetStyle(TEXTBOX, TEXT_LINES_SPACING, 4);\par
3519     GuiSetStyle(TEXTBOX, TEXT_INNER_PADDING, 4);\par
3520     GuiSetStyle(SPINNER, SPIN_BUTTON_WIDTH, 24);\par
3521     GuiSetStyle(SPINNER, SPIN_BUTTON_SPACING, 2);\par
3522     GuiSetStyle(SCROLLBAR, BORDER_WIDTH, 0);\par
3523     GuiSetStyle(SCROLLBAR, ARROWS_VISIBLE, 0);\par
3524     GuiSetStyle(SCROLLBAR, ARROWS_SIZE, 6);\par
3525     GuiSetStyle(SCROLLBAR, SCROLL_SLIDER_PADDING, 0);\par
3526     GuiSetStyle(SCROLLBAR, SCROLL_SLIDER_SIZE, 16);\par
3527     GuiSetStyle(SCROLLBAR, SCROLL_PADDING, 0);\par
3528     GuiSetStyle(SCROLLBAR, SCROLL_SPEED, 12);\par
3529     GuiSetStyle(LISTVIEW, LIST_ITEMS_HEIGHT, 24);\par
3530     GuiSetStyle(LISTVIEW, LIST_ITEMS_SPACING, 2);\par
3531     GuiSetStyle(LISTVIEW, SCROLLBAR_WIDTH, 12);\par
3532     GuiSetStyle(LISTVIEW, SCROLLBAR_SIDE, SCROLLBAR_RIGHT_SIDE);\par
3533     GuiSetStyle(COLORPICKER, COLOR_SELECTOR_SIZE, 8);\par
3534     GuiSetStyle(COLORPICKER, HUEBAR_WIDTH, 16);\par
3535     GuiSetStyle(COLORPICKER, HUEBAR_PADDING, 8);\par
3536     GuiSetStyle(COLORPICKER, HUEBAR_SELECTOR_HEIGHT, 8);\par
3537     GuiSetStyle(COLORPICKER, HUEBAR_SELECTOR_OVERFLOW, 2);\par
3538 \par
3539     guiFont = GetFontDefault();     {\cf20 // Initialize default font}\par
3540 \}\par
3541 \par
3542 {\cf20 // Get text with icon id prepended}\par
3543 {\cf20 // NOTE: Useful to add icons by name id (enum) instead of}\par
3544 {\cf20 // a number that can change between ricon versions}\par
3545 {\cf17 const} {\cf18 char} *GuiIconText({\cf18 int} iconId, {\cf17 const} {\cf18 char} *text)\par
3546 \{\par
3547 {\cf21 #if defined(RAYGUI_NO_ICONS)}\par
3548     {\cf19 return} NULL;\par
3549 {\cf21 #else}\par
3550     {\cf17 static} {\cf18 char} buffer[1024] = \{ 0 \};\par
3551     {\cf17 static} {\cf18 char} iconBuffer[6] = \{ 0 \};\par
3552 \par
3553     {\cf19 if} (text != NULL)\par
3554     \{\par
3555         memset(buffer, 0, 1024);\par
3556         sprintf(buffer, {\cf22 "#%03i#"}, iconId);\par
3557         \par
3558         {\cf19 for} ({\cf18 int} i = 5; i < 1024; i++)\par
3559         \{\par
3560             buffer[i] = text[i - 5];\par
3561             {\cf19 if} (text[i - 5] == {\cf23 '\\0'}) {\cf19 break};\par
3562         \}\par
3563     \par
3564         {\cf19 return} buffer;\par
3565     \}\par
3566     {\cf19 else} \par
3567     \{\par
3568         sprintf(iconBuffer, {\cf22 "#%03i#"}, iconId & 0x1ff);\par
3569         \par
3570         {\cf19 return} iconBuffer;\par
3571     \}\par
3572 {\cf21 #endif}\par
3573 \}\par
3574 \par
3575 {\cf21 #if !defined(RAYGUI_NO_ICONS)}\par
3576 \par
3577 {\cf20 // Get full icons data pointer}\par
3578 {\cf18 unsigned} {\cf18 int} *GuiGetIcons({\cf18 void}) \{ {\cf19 return} guiIcons; \}\par
3579 \par
3580 {\cf20 // Load raygui icons file (.rgi)}\par
3581 {\cf20 // NOTE: In case nameIds are required, they can be requested with loadIconsName,}\par
3582 {\cf20 // they are returned as a guiIconsName[iconCount][RAYGUI_ICON_MAX_NAME_LENGTH],}\par
3583 {\cf20 // WARNING: guiIconsName[]][] memory should be manually freed!}\par
3584 {\cf18 char} **GuiLoadIcons({\cf17 const} {\cf18 char} *fileName, {\cf18 bool} loadIconsName)\par
3585 \{\par
3586     {\cf20 // Style File Structure (.rgi)}\par
3587     {\cf20 // ------------------------------------------------------}\par
3588     {\cf20 // Offset  | Size    | Type       | Description}\par
3589     {\cf20 // ------------------------------------------------------}\par
3590     {\cf20 // 0       | 4       | char       | Signature: "rGI "}\par
3591     {\cf20 // 4       | 2       | short      | Version: 100}\par
3592     {\cf20 // 6       | 2       | short      | reserved}\par
3593 \par
3594     {\cf20 // 8       | 2       | short      | Num icons (N)}\par
3595     {\cf20 // 10      | 2       | short      | Icons size (Options: 16, 32, 64) (S)}\par
3596 \par
3597     {\cf20 // Icons name id (32 bytes per name id)}\par
3598     {\cf20 // foreach (icon)}\par
3599     {\cf20 // \{}\par
3600     {\cf20 //   12+32*i  | 32   | char       | Icon NameId}\par
3601     {\cf20 // \}}\par
3602 \par
3603     {\cf20 // Icons data: One bit per pixel, stored as unsigned int array (depends on icon size)}\par
3604     {\cf20 // S*S pixels/32bit per unsigned int = K unsigned int per icon}\par
3605     {\cf20 // foreach (icon)}\par
3606     {\cf20 // \{}\par
3607     {\cf20 //   ...   | K       | unsigned int | Icon Data}\par
3608     {\cf20 // \}}\par
3609 \par
3610     FILE *rgiFile = fopen(fileName, {\cf22 "rb"});\par
3611 \par
3612     {\cf18 char} **guiIconsName = NULL;\par
3613 \par
3614     {\cf19 if} (rgiFile != NULL)\par
3615     \{\par
3616         {\cf18 char} signature[5] = \{ 0 \};\par
3617         {\cf18 short} version = 0;\par
3618         {\cf18 short} reserved = 0;\par
3619         {\cf18 short} iconCount = 0;\par
3620         {\cf18 short} iconSize = 0;\par
3621 \par
3622         fread(signature, 1, 4, rgiFile);\par
3623         fread(&version, 1, {\cf17 sizeof}({\cf18 short}), rgiFile);\par
3624         fread(&reserved, 1, {\cf17 sizeof}({\cf18 short}), rgiFile);\par
3625         fread(&iconCount, 1, {\cf17 sizeof}({\cf18 short}), rgiFile);\par
3626         fread(&iconSize, 1, {\cf17 sizeof}({\cf18 short}), rgiFile);\par
3627 \par
3628         {\cf19 if} ((signature[0] == {\cf23 'r'}) &&\par
3629             (signature[1] == {\cf23 'G'}) &&\par
3630             (signature[2] == {\cf23 'I'}) &&\par
3631             (signature[3] == {\cf23 ' '}))\par
3632         \{\par
3633             {\cf19 if} (loadIconsName)\par
3634             \{\par
3635                 guiIconsName = ({\cf18 char} **)RAYGUI_MALLOC(iconCount*{\cf17 sizeof}({\cf18 char} **));\par
3636                 {\cf19 for} ({\cf18 int} i = 0; i < iconCount; i++)\par
3637                 \{\par
3638                     guiIconsName[i] = ({\cf18 char} *)RAYGUI_MALLOC(RAYGUI_ICON_MAX_NAME_LENGTH);\par
3639                     fread(guiIconsName[i], RAYGUI_ICON_MAX_NAME_LENGTH, 1, rgiFile);\par
3640                 \}\par
3641             \}\par
3642             {\cf19 else} fseek(rgiFile, iconCount*RAYGUI_ICON_MAX_NAME_LENGTH, SEEK_CUR);\par
3643 \par
3644             {\cf20 // Read icons data directly over guiIcons data array}\par
3645             fread(guiIcons, iconCount*(iconSize*iconSize/32), {\cf17 sizeof}({\cf18 unsigned} {\cf18 int}), rgiFile);\par
3646         \}\par
3647 \par
3648         fclose(rgiFile);\par
3649     \}\par
3650 \par
3651     {\cf19 return} guiIconsName;\par
3652 \}\par
3653 \par
3654 {\cf20 // Draw selected icon using rectangles pixel-by-pixel}\par
3655 {\cf18 void} GuiDrawIcon({\cf18 int} iconId, {\cf18 int} posX, {\cf18 int} posY, {\cf18 int} pixelSize, Color color)\par
3656 \{\par
3657 {\cf21     #define BIT_CHECK(a,b) ((a) & (1u<<(b)))}\par
3658 \par
3659     {\cf19 for} ({\cf18 int} i = 0, y = 0; i < RAYGUI_ICON_SIZE*RAYGUI_ICON_SIZE/32; i++)\par
3660     \{\par
3661         {\cf19 for} ({\cf18 int} k = 0; k < 32; k++)\par
3662         \{\par
3663             {\cf19 if} (BIT_CHECK(guiIcons[iconId*RAYGUI_ICON_DATA_ELEMENTS + i], k))\par
3664             \{\par
3665 {\cf21             #if !defined(RAYGUI_STANDALONE)}\par
3666                 DrawRectangle(posX + (k%RAYGUI_ICON_SIZE)*pixelSize, posY + y*pixelSize, pixelSize, pixelSize, color);\par
3667 {\cf21             #endif}\par
3668             \}\par
3669 \par
3670             {\cf19 if} ((k == 15) || (k == 31)) y++;\par
3671         \}\par
3672     \}\par
3673 \}\par
3674 \par
3675 {\cf20 // Get icon bit data}\par
3676 {\cf20 // NOTE: Bit data array grouped as unsigned int (RAYGUI_ICON_SIZE*RAYGUI_ICON_SIZE/32 elements)}\par
3677 {\cf18 unsigned} {\cf18 int} *GuiGetIconData({\cf18 int} iconId)\par
3678 \{\par
3679     {\cf17 static} {\cf18 unsigned} {\cf18 int} iconData[RAYGUI_ICON_DATA_ELEMENTS] = \{ 0 \};\par
3680     memset(iconData, 0, RAYGUI_ICON_DATA_ELEMENTS*{\cf17 sizeof}({\cf18 unsigned} {\cf18 int}));\par
3681 \par
3682     {\cf19 if} (iconId < RAYGUI_ICON_MAX_ICONS) memcpy(iconData, &guiIcons[iconId*RAYGUI_ICON_DATA_ELEMENTS], RAYGUI_ICON_DATA_ELEMENTS*{\cf17 sizeof}({\cf18 unsigned} {\cf18 int}));\par
3683 \par
3684     {\cf19 return} iconData;\par
3685 \}\par
3686 \par
3687 {\cf20 // Set icon bit data}\par
3688 {\cf20 // NOTE: Data must be provided as unsigned int array (RAYGUI_ICON_SIZE*RAYGUI_ICON_SIZE/32 elements)}\par
3689 {\cf18 void} GuiSetIconData({\cf18 int} iconId, {\cf18 unsigned} {\cf18 int} *data)\par
3690 \{\par
3691     {\cf19 if} (iconId < RAYGUI_ICON_MAX_ICONS) memcpy(&guiIcons[iconId*RAYGUI_ICON_DATA_ELEMENTS], data, RAYGUI_ICON_DATA_ELEMENTS*{\cf17 sizeof}({\cf18 unsigned} {\cf18 int}));\par
3692 \}\par
3693 \par
3694 {\cf20 // Set icon scale (1 by default)}\par
3695 {\cf18 void} GuiSetIconScale({\cf18 unsigned} {\cf18 int} scale)\par
3696 \{\par
3697     guiIconScale = (scale < 1)? 1 : scale;\par
3698 \}\par
3699 \par
3700 {\cf20 // Set icon pixel value}\par
3701 {\cf18 void} GuiSetIconPixel({\cf18 int} iconId, {\cf18 int} x, {\cf18 int} y)\par
3702 \{\par
3703 {\cf21     #define BIT_SET(a,b)   ((a) |= (1u<<(b)))}\par
3704 \par
3705     {\cf20 // This logic works for any RAYGUI_ICON_SIZE pixels icons,}\par
3706     {\cf20 // For example, in case of 16x16 pixels, every 2 lines fit in one unsigned int data element}\par
3707     BIT_SET(guiIcons[iconId*RAYGUI_ICON_DATA_ELEMENTS + y/({\cf17 sizeof}({\cf18 unsigned} {\cf18 int})*8/RAYGUI_ICON_SIZE)], x + (y%({\cf17 sizeof}({\cf18 unsigned} {\cf18 int})*8/RAYGUI_ICON_SIZE)*RAYGUI_ICON_SIZE));\par
3708 \}\par
3709 \par
3710 {\cf20 // Clear icon pixel value}\par
3711 {\cf18 void} GuiClearIconPixel({\cf18 int} iconId, {\cf18 int} x, {\cf18 int} y)\par
3712 \{\par
3713 {\cf21     #define BIT_CLEAR(a,b) ((a) &= ~((1u)<<(b)))}\par
3714 \par
3715     {\cf20 // This logic works for any RAYGUI_ICON_SIZE pixels icons,}\par
3716     {\cf20 // For example, in case of 16x16 pixels, every 2 lines fit in one unsigned int data element}\par
3717     BIT_CLEAR(guiIcons[iconId*RAYGUI_ICON_DATA_ELEMENTS + y/({\cf17 sizeof}({\cf18 unsigned} {\cf18 int})*8/RAYGUI_ICON_SIZE)], x + (y%({\cf17 sizeof}({\cf18 unsigned} {\cf18 int})*8/RAYGUI_ICON_SIZE)*RAYGUI_ICON_SIZE));\par
3718 \}\par
3719 \par
3720 {\cf20 // Check icon pixel value}\par
3721 {\cf18 bool} GuiCheckIconPixel({\cf18 int} iconId, {\cf18 int} x, {\cf18 int} y)\par
3722 \{\par
3723 {\cf21     #define BIT_CHECK(a,b) ((a) & (1u<<(b)))}\par
3724 \par
3725     {\cf19 return} (BIT_CHECK(guiIcons[iconId*8 + y/2], x + (y%2*16)));\par
3726 \}\par
3727 {\cf21 #endif      }{\cf20 // !RAYGUI_NO_ICONS}\par
3728 \par
3729 {\cf20 //----------------------------------------------------------------------------------}\par
3730 {\cf20 // Module specific Functions Definition}\par
3731 {\cf20 //----------------------------------------------------------------------------------}\par
3732 {\cf20 // Gui get text width considering icon}\par
3733 {\cf17 static} {\cf18 int} GetTextWidth({\cf17 const} {\cf18 char} *text)\par
3734 \{\par
3735 {\cf21     #if !defined(ICON_TEXT_PADDING)}\par
3736 {\cf21         #define ICON_TEXT_PADDING   4}\par
3737 {\cf21     #endif}\par
3738 \par
3739     Vector2 size = \{ 0 \};\par
3740     {\cf18 int} textIconOffset = 0;\par
3741 \par
3742     {\cf19 if} ((text != NULL) && (text[0] != {\cf23 '\\0'}))\par
3743     \{\par
3744         {\cf19 if} (text[0] == {\cf23 '#'})\par
3745         \{\par
3746             {\cf19 for} ({\cf18 int} i = 1; (text[i] != {\cf23 '\\0'}) && (i < 5); i++)\par
3747             \{\par
3748                 {\cf19 if} (text[i] == {\cf23 '#'})\par
3749                 \{\par
3750                     textIconOffset = i;\par
3751                     {\cf19 break};\par
3752                 \}\par
3753             \}\par
3754         \}\par
3755         \par
3756         {\cf20 // Make sure guiFont is set, GuiGetStyle() initializes it lazynessly}\par
3757         {\cf18 float} fontSize = (float)GuiGetStyle(DEFAULT, TEXT_SIZE);\par
3758         \par
3759         size = MeasureTextEx(guiFont, text + textIconOffset, fontSize, ({\cf18 float})GuiGetStyle(DEFAULT, TEXT_SPACING));\par
3760         {\cf19 if} (textIconOffset > 0) size.x += (RAYGUI_ICON_SIZE - ICON_TEXT_PADDING);\par
3761     \}\par
3762 \par
3763     {\cf19 return} ({\cf18 int})size.x;\par
3764 \}\par
3765 \par
3766 {\cf20 // Get text bounds considering control bounds}\par
3767 {\cf17 static} Rectangle GetTextBounds({\cf18 int} control, Rectangle bounds)\par
3768 \{\par
3769     Rectangle textBounds = bounds;\par
3770 \par
3771     textBounds.x = bounds.x + GuiGetStyle(control, BORDER_WIDTH);\par
3772     textBounds.y = bounds.y + GuiGetStyle(control, BORDER_WIDTH);\par
3773     textBounds.width = bounds.width - 2*GuiGetStyle(control, BORDER_WIDTH);\par
3774     textBounds.height = bounds.height - 2*GuiGetStyle(control, BORDER_WIDTH);\par
3775 \par
3776     {\cf20 // Consider TEXT_PADDING properly, depends on control type and TEXT_ALIGNMENT}\par
3777     {\cf19 switch} (control)\par
3778     \{\par
3779         {\cf19 case} COMBOBOX: bounds.width -= (GuiGetStyle(control, COMBO_BUTTON_WIDTH) + GuiGetStyle(control, COMBO_BUTTON_SPACING)); {\cf19 break};\par
3780         {\cf19 case} VALUEBOX: {\cf19 break};   {\cf20 // NOTE: ValueBox text value always centered, text padding applies to label}\par
3781         {\cf19 default}:\par
3782         \{\par
3783             {\cf19 if} (GuiGetStyle(control, TEXT_ALIGNMENT) == TEXT_ALIGN_RIGHT) textBounds.x -= GuiGetStyle(control, TEXT_PADDING);\par
3784             {\cf19 else} textBounds.x += GuiGetStyle(control, TEXT_PADDING);\par
3785         \} {\cf19 break};\par
3786     \}\par
3787 \par
3788     {\cf20 // TODO: Special cases (no label): COMBOBOX, DROPDOWNBOX, LISTVIEW (scrollbar?)}\par
3789     {\cf20 // More special cases (label on side): CHECKBOX, SLIDER, VALUEBOX, SPINNER}\par
3790 \par
3791     {\cf19 return} textBounds;\par
3792 \}\par
3793 \par
3794 {\cf20 // Get text icon if provided and move text cursor}\par
3795 {\cf20 // NOTE: We support up to 999 values for iconId}\par
3796 {\cf17 static} {\cf17 const} {\cf18 char} *GetTextIcon({\cf17 const} {\cf18 char} *text, {\cf18 int} *iconId)\par
3797 \{\par
3798 {\cf21 #if !defined(RAYGUI_NO_ICONS)}\par
3799     *iconId = -1;\par
3800     {\cf19 if} (text[0] == {\cf23 '#'})     {\cf20 // Maybe we have an icon!}\par
3801     \{\par
3802         {\cf18 char} iconValue[4] = \{ 0 \};  {\cf20 // Maximum length for icon value: 3 digits + '\\0'}\par
3803 \par
3804         {\cf18 int} pos = 1;\par
3805         {\cf19 while} ((pos < 4) && (text[pos] >= {\cf23 '0'}) && (text[pos] <= {\cf23 '9'}))\par
3806         \{\par
3807             iconValue[pos - 1] = text[pos];\par
3808             pos++;\par
3809         \}\par
3810 \par
3811         {\cf19 if} (text[pos] == {\cf23 '#'})\par
3812         \{\par
3813             *iconId = TextToInteger(iconValue);\par
3814 \par
3815             {\cf20 // Move text pointer after icon}\par
3816             {\cf20 // WARNING: If only icon provided, it could point to EOL character: '\\0'}\par
3817             {\cf19 if} (*iconId >= 0) text += (pos + 1);\par
3818         \}\par
3819     \}\par
3820 {\cf21 #endif}\par
3821 \par
3822     {\cf19 return} text;\par
3823 \}\par
3824 \par
3825 {\cf20 // Gui draw text using default font}\par
3826 {\cf17 static} {\cf18 void} GuiDrawText({\cf17 const} {\cf18 char} *text, Rectangle bounds, {\cf18 int} alignment, Color tint)\par
3827 \{\par
3828 {\cf21     #define TEXT_VALIGN_PIXEL_OFFSET(h)  ((int)h%2)     }{\cf20 // Vertical alignment for pixel perfect}\par
3829 \par
3830 {\cf21     #if !defined(ICON_TEXT_PADDING)}\par
3831 {\cf21         #define ICON_TEXT_PADDING   4}\par
3832 {\cf21     #endif}\par
3833 \par
3834     {\cf19 if} ((text != NULL) && (text[0] != {\cf23 '\\0'}))\par
3835     \{\par
3836         {\cf18 int} iconId = 0;\par
3837         text = GetTextIcon(text, &iconId);              {\cf20 // Check text for icon and move cursor}\par
3838 \par
3839         {\cf20 // Get text position depending on alignment and iconId}\par
3840         {\cf20 //---------------------------------------------------------------------------------}\par
3841         Vector2 position = \{ bounds.x, bounds.y \};\par
3842 \par
3843         {\cf20 // NOTE: We get text size after icon has been processed}\par
3844         {\cf20 // TODO: REVIEW: We consider text size in case of line breaks! -> MeasureTextEx() depends on raylib!}\par
3845         Vector2 textSize = MeasureTextEx(GuiGetFont(), text, GuiGetStyle(DEFAULT, TEXT_SIZE), GuiGetStyle(DEFAULT, TEXT_SPACING));\par
3846         {\cf20 //int textWidth = GetTextWidth(text);}\par
3847         {\cf20 //int textHeight = GuiGetStyle(DEFAULT, TEXT_SIZE);}\par
3848 \par
3849         {\cf20 // If text requires an icon, add size to measure}\par
3850         {\cf19 if} (iconId >= 0)\par
3851         \{\par
3852             textSize.x += RAYGUI_ICON_SIZE*guiIconScale;\par
3853 \par
3854             {\cf20 // WARNING: If only icon provided, text could be pointing to EOF character: '\\0'}\par
3855             {\cf19 if} ((text != NULL) && (text[0] != {\cf23 '\\0'})) textSize.x += ICON_TEXT_PADDING;\par
3856         \}\par
3857 \par
3858         {\cf20 // Check guiTextAlign global variables}\par
3859         {\cf19 switch} (alignment)\par
3860         \{\par
3861             {\cf19 case} TEXT_ALIGN_LEFT:\par
3862             \{\par
3863                 position.x = bounds.x;\par
3864                 position.y = bounds.y + bounds.height/2 - textSize.y/2 + TEXT_VALIGN_PIXEL_OFFSET(bounds.height);\par
3865             \} {\cf19 break};\par
3866             {\cf19 case} TEXT_ALIGN_CENTER:\par
3867             \{\par
3868                 position.x = bounds.x + bounds.width/2 - textSize.x/2;\par
3869                 position.y = bounds.y + bounds.height/2 - textSize.y/2 + TEXT_VALIGN_PIXEL_OFFSET(bounds.height);\par
3870             \} {\cf19 break};\par
3871             {\cf19 case} TEXT_ALIGN_RIGHT:\par
3872             \{\par
3873                 position.x = bounds.x + bounds.width - textSize.x;\par
3874                 position.y = bounds.y + bounds.height/2 - textSize.y/2 + TEXT_VALIGN_PIXEL_OFFSET(bounds.height);\par
3875             \} {\cf19 break};\par
3876             {\cf19 default}: {\cf19 break};\par
3877         \}\par
3878 \par
3879         {\cf20 // NOTE: Make sure we get pixel-perfect coordinates,}\par
3880         {\cf20 // In case of decimals we got weird text positioning}\par
3881         position.x = (float)(({\cf18 int})position.x);\par
3882         position.y = (float)(({\cf18 int})position.y);\par
3883         {\cf20 //---------------------------------------------------------------------------------}\par
3884 \par
3885         {\cf20 // Draw text (with icon if available)}\par
3886         {\cf20 //---------------------------------------------------------------------------------}\par
3887 {\cf21 #if !defined(RAYGUI_NO_ICONS)}\par
3888         {\cf19 if} (iconId >= 0)\par
3889         \{\par
3890             {\cf20 // NOTE: We consider icon height, probably different than text size}\par
3891             GuiDrawIcon(iconId, ({\cf18 int})position.x, ({\cf18 int})(bounds.y + bounds.height/2 - RAYGUI_ICON_SIZE*guiIconScale/2 + TEXT_VALIGN_PIXEL_OFFSET(bounds.height)), guiIconScale, tint);\par
3892             position.x += (RAYGUI_ICON_SIZE*guiIconScale + ICON_TEXT_PADDING);\par
3893         \}\par
3894 {\cf21 #endif}\par
3895         DrawTextEx(guiFont, text, position, ({\cf18 float})GuiGetStyle(DEFAULT, TEXT_SIZE), ({\cf18 float})GuiGetStyle(DEFAULT, TEXT_SPACING), tint);\par
3896         {\cf20 //---------------------------------------------------------------------------------}\par
3897     \}\par
3898 \}\par
3899 \par
3900 {\cf20 // Gui draw rectangle using default raygui plain style with borders}\par
3901 {\cf17 static} {\cf18 void} GuiDrawRectangle(Rectangle rec, {\cf18 int} borderWidth, Color borderColor, Color color)\par
3902 \{\par
3903     {\cf19 if} (color.a > 0)\par
3904     \{\par
3905         {\cf20 // Draw rectangle filled with color}\par
3906         DrawRectangle(({\cf18 int})rec.x, ({\cf18 int})rec.y, ({\cf18 int})rec.width, ({\cf18 int})rec.height, color);\par
3907     \}\par
3908 \par
3909     {\cf19 if} (borderWidth > 0)\par
3910     \{\par
3911         {\cf20 // Draw rectangle border lines with color}\par
3912         DrawRectangle(({\cf18 int})rec.x, ({\cf18 int})rec.y, ({\cf18 int})rec.width, borderWidth, borderColor);\par
3913         DrawRectangle(({\cf18 int})rec.x, ({\cf18 int})rec.y + borderWidth, borderWidth, ({\cf18 int})rec.height - 2*borderWidth, borderColor);\par
3914         DrawRectangle(({\cf18 int})rec.x + ({\cf18 int})rec.width - borderWidth, ({\cf18 int})rec.y + borderWidth, borderWidth, ({\cf18 int})rec.height - 2*borderWidth, borderColor);\par
3915         DrawRectangle(({\cf18 int})rec.x, ({\cf18 int})rec.y + ({\cf18 int})rec.height - borderWidth, ({\cf18 int})rec.width, borderWidth, borderColor);\par
3916     \}\par
3917 \}\par
3918 \par
3919 {\cf20 // Split controls text into multiple strings}\par
3920 {\cf20 // Also check for multiple columns (required by GuiToggleGroup())}\par
3921 {\cf17 static} {\cf17 const} {\cf18 char} **GuiTextSplit({\cf17 const} {\cf18 char} *text, {\cf18 int} *count, {\cf18 int} *textRow)\par
3922 \{\par
3923     {\cf20 // NOTE: Current implementation returns a copy of the provided string with '\\0' (string end delimiter)}\par
3924     {\cf20 // inserted between strings defined by "delimiter" parameter. No memory is dynamically allocated,}\par
3925     {\cf20 // all used memory is static... it has some limitations:}\par
3926     {\cf20 //      1. Maximum number of possible split strings is set by RAYGUI_TEXTSPLIT_MAX_ITEMS}\par
3927     {\cf20 //      2. Maximum size of text to split is RAYGUI_TEXTSPLIT_MAX_TEXT_SIZE}\par
3928     {\cf20 // NOTE: Those definitions could be externally provided if required}\par
3929 \par
3930 {\cf21     #if !defined(RAYGUI_TEXTSPLIT_MAX_ITEMS)}\par
3931 {\cf21         #define RAYGUI_TEXTSPLIT_MAX_ITEMS        128}\par
3932 {\cf21     #endif}\par
3933 {\cf21     #if !defined(RAYGUI_TEXTSPLIT_MAX_TEXT_SIZE)}\par
3934 {\cf21         #define RAYGUI_TEXTSPLIT_MAX_TEXT_SIZE      1024}\par
3935 {\cf21     #endif}\par
3936 \par
3937     {\cf17 static} {\cf17 const} {\cf18 char} *result[RAYGUI_TEXTSPLIT_MAX_ITEMS] = \{ NULL \};\par
3938     {\cf17 static} {\cf18 char} buffer[RAYGUI_TEXTSPLIT_MAX_TEXT_SIZE] = \{ 0 \};\par
3939     memset(buffer, 0, RAYGUI_TEXTSPLIT_MAX_TEXT_SIZE);\par
3940 \par
3941     result[0] = buffer;\par
3942     {\cf18 int} counter = 1;\par
3943 \par
3944     {\cf19 if} (textRow != NULL) textRow[0] = 0;\par
3945 \par
3946     {\cf20 // Count how many substrings we have on text and point to every one}\par
3947     {\cf19 for} ({\cf18 int} i = 0; i < RAYGUI_TEXTSPLIT_MAX_TEXT_SIZE; i++)\par
3948     \{\par
3949         buffer[i] = text[i];\par
3950         {\cf19 if} (buffer[i] == {\cf23 '\\0'}) {\cf19 break};\par
3951         {\cf19 else} {\cf19 if} ((buffer[i] == {\cf23 ';'}) || (buffer[i] == {\cf23 '\\n'}))\par
3952         \{\par
3953             result[counter] = buffer + i + 1;\par
3954 \par
3955             {\cf19 if} (textRow != NULL)\par
3956             \{\par
3957                 {\cf19 if} (buffer[i] == {\cf23 '\\n'}) textRow[counter] = textRow[counter - 1] + 1;\par
3958                 {\cf19 else} textRow[counter] = textRow[counter - 1];\par
3959             \}\par
3960 \par
3961             buffer[i] = {\cf23 '\\0'};   {\cf20 // Set an end of string at this point}\par
3962 \par
3963             counter++;\par
3964             {\cf19 if} (counter == RAYGUI_TEXTSPLIT_MAX_ITEMS) {\cf19 break};\par
3965         \}\par
3966     \}\par
3967 \par
3968     *count = counter;\par
3969 \par
3970     {\cf19 return} result;\par
3971 \}\par
3972 \par
3973 {\cf20 // Convert color data from RGB to HSV}\par
3974 {\cf20 // NOTE: Color data should be passed normalized}\par
3975 {\cf17 static} Vector3 ConvertRGBtoHSV(Vector3 rgb)\par
3976 \{\par
3977     Vector3 hsv = \{ 0 \};\par
3978     {\cf18 float} min = 0.0f;\par
3979     {\cf18 float} max = 0.0f;\par
3980     {\cf18 float} delta = 0.0f;\par
3981 \par
3982     min = (rgb.x < rgb.y)? rgb.x : rgb.y;\par
3983     min = (min < rgb.z)? min  : rgb.z;\par
3984 \par
3985     max = (rgb.x > rgb.y)? rgb.x : rgb.y;\par
3986     max = (max > rgb.z)? max  : rgb.z;\par
3987 \par
3988     hsv.z = max;            {\cf20 // Value}\par
3989     delta = max - min;\par
3990 \par
3991     {\cf19 if} (delta < 0.00001f)\par
3992     \{\par
3993         hsv.y = 0.0f;\par
3994         hsv.x = 0.0f;           {\cf20 // Undefined, maybe NAN?}\par
3995         {\cf19 return} hsv;\par
3996     \}\par
3997 \par
3998     {\cf19 if} (max > 0.0f)\par
3999     \{\par
4000         {\cf20 // NOTE: If max is 0, this divide would cause a crash}\par
4001         hsv.y = (delta/max);    {\cf20 // Saturation}\par
4002     \}\par
4003     {\cf19 else}\par
4004     \{\par
4005         {\cf20 // NOTE: If max is 0, then r = g = b = 0, s = 0, h is undefined}\par
4006         hsv.y = 0.0f;\par
4007         hsv.x = 0.0f;           {\cf20 // Undefined, maybe NAN?}\par
4008         {\cf19 return} hsv;\par
4009     \}\par
4010 \par
4011     {\cf20 // NOTE: Comparing float values could not work properly}\par
4012     {\cf19 if} (rgb.x >= max) hsv.x = (rgb.y - rgb.z)/delta;    {\cf20 // Between yellow & magenta}\par
4013     {\cf19 else}\par
4014     \{\par
4015         {\cf19 if} (rgb.y >= max) hsv.x = 2.0f + (rgb.z - rgb.x)/delta;  {\cf20 // Between cyan & yellow}\par
4016         {\cf19 else} hsv.x = 4.0f + (rgb.x - rgb.y)/delta;      {\cf20 // Between magenta & cyan}\par
4017     \}\par
4018 \par
4019     hsv.x *= 60.0f;     {\cf20 // Convert to degrees}\par
4020 \par
4021     {\cf19 if} (hsv.x < 0.0f) hsv.x += 360.0f;\par
4022 \par
4023     {\cf19 return} hsv;\par
4024 \}\par
4025 \par
4026 {\cf20 // Convert color data from HSV to RGB}\par
4027 {\cf20 // NOTE: Color data should be passed normalized}\par
4028 {\cf17 static} Vector3 ConvertHSVtoRGB(Vector3 hsv)\par
4029 \{\par
4030     Vector3 rgb = \{ 0 \};\par
4031     {\cf18 float} hh = 0.0f, p = 0.0f, q = 0.0f, t = 0.0f, ff = 0.0f;\par
4032     {\cf18 long} i = 0;\par
4033 \par
4034     {\cf20 // NOTE: Comparing float values could not work properly}\par
4035     {\cf19 if} (hsv.y <= 0.0f)\par
4036     \{\par
4037         rgb.x = hsv.z;\par
4038         rgb.y = hsv.z;\par
4039         rgb.z = hsv.z;\par
4040         {\cf19 return} rgb;\par
4041     \}\par
4042 \par
4043     hh = hsv.x;\par
4044     {\cf19 if} (hh >= 360.0f) hh = 0.0f;\par
4045     hh /= 60.0f;\par
4046 \par
4047     i = (long)hh;\par
4048     ff = hh - i;\par
4049     p = hsv.z*(1.0f - hsv.y);\par
4050     q = hsv.z*(1.0f - (hsv.y*ff));\par
4051     t = hsv.z*(1.0f - (hsv.y*(1.0f - ff)));\par
4052 \par
4053     {\cf19 switch} (i)\par
4054     \{\par
4055         {\cf19 case} 0:\par
4056         \{\par
4057             rgb.x = hsv.z;\par
4058             rgb.y = t;\par
4059             rgb.z = p;\par
4060         \} {\cf19 break};\par
4061         {\cf19 case} 1:\par
4062         \{\par
4063             rgb.x = q;\par
4064             rgb.y = hsv.z;\par
4065             rgb.z = p;\par
4066         \} {\cf19 break};\par
4067         {\cf19 case} 2:\par
4068         \{\par
4069             rgb.x = p;\par
4070             rgb.y = hsv.z;\par
4071             rgb.z = t;\par
4072         \} {\cf19 break};\par
4073         {\cf19 case} 3:\par
4074         \{\par
4075             rgb.x = p;\par
4076             rgb.y = q;\par
4077             rgb.z = hsv.z;\par
4078         \} {\cf19 break};\par
4079         {\cf19 case} 4:\par
4080         \{\par
4081             rgb.x = t;\par
4082             rgb.y = p;\par
4083             rgb.z = hsv.z;\par
4084         \} {\cf19 break};\par
4085         {\cf19 case} 5:\par
4086         {\cf19 default}:\par
4087         \{\par
4088             rgb.x = hsv.z;\par
4089             rgb.y = p;\par
4090             rgb.z = q;\par
4091         \} {\cf19 break};\par
4092     \}\par
4093 \par
4094     {\cf19 return} rgb;\par
4095 \}\par
4096 \par
4097 {\cf20 // Scroll bar control (used by GuiScrollPanel())}\par
4098 {\cf17 static} {\cf18 int} GuiScrollBar(Rectangle bounds, {\cf18 int} value, {\cf18 int} minValue, {\cf18 int} maxValue)\par
4099 \{\par
4100     GuiState state = guiState;\par
4101 \par
4102     {\cf20 // Is the scrollbar horizontal or vertical?}\par
4103     {\cf18 bool} isVertical = (bounds.width > bounds.height) ? {\cf17 false} : true;\par
4104 \par
4105     {\cf20 // The size (width or height depending on scrollbar type) of the spinner buttons}\par
4106     {\cf17 const} {\cf18 int} spinnerSize = GuiGetStyle(SCROLLBAR, ARROWS_VISIBLE) ? (isVertical ? (int)bounds.width - 2*GuiGetStyle(SCROLLBAR, BORDER_WIDTH) : (int)bounds.height - 2*GuiGetStyle(SCROLLBAR, BORDER_WIDTH)) : 0;\par
4107 \par
4108     {\cf20 // Arrow buttons [<] [>] [\'E2\'88\'A7] [\'E2\'88\'A8]}\par
4109     Rectangle arrowUpLeft = \{ 0 \};\par
4110     Rectangle arrowDownRight = \{ 0 \};\par
4111 \par
4112     {\cf20 // Actual area of the scrollbar excluding the arrow buttons}\par
4113     Rectangle scrollbar = \{ 0 \};\par
4114 \par
4115     {\cf20 // Slider bar that moves     --[///]-----}\par
4116     Rectangle slider = \{ 0 \};\par
4117 \par
4118     {\cf20 // Normalize value}\par
4119     {\cf19 if} (value > maxValue) value = maxValue;\par
4120     {\cf19 if} (value < minValue) value = minValue;\par
4121 \par
4122     {\cf17 const} {\cf18 int} range = maxValue - minValue;\par
4123     {\cf18 int} sliderSize = GuiGetStyle(SCROLLBAR, SCROLL_SLIDER_SIZE);\par
4124 \par
4125     {\cf20 // Calculate rectangles for all of the components}\par
4126     arrowUpLeft = RAYGUI_CLITERAL(Rectangle) \{ (float)bounds.x + GuiGetStyle(SCROLLBAR, BORDER_WIDTH), (float)bounds.y + GuiGetStyle(SCROLLBAR, BORDER_WIDTH), (float)spinnerSize, ({\cf18 float})spinnerSize \};\par
4127 \par
4128     {\cf19 if} (isVertical)\par
4129     \{\par
4130         arrowDownRight = RAYGUI_CLITERAL(Rectangle) \{ (float)bounds.x + GuiGetStyle(SCROLLBAR, BORDER_WIDTH), (float)bounds.y + bounds.height - spinnerSize - GuiGetStyle(SCROLLBAR, BORDER_WIDTH), (float)spinnerSize, ({\cf18 float})spinnerSize \};\par
4131         scrollbar = RAYGUI_CLITERAL(Rectangle) \{ bounds.x + GuiGetStyle(SCROLLBAR, BORDER_WIDTH) + GuiGetStyle(SCROLLBAR, SCROLL_PADDING), arrowUpLeft.y + arrowUpLeft.height, bounds.width - 2*(GuiGetStyle(SCROLLBAR, BORDER_WIDTH) + GuiGetStyle(SCROLLBAR, SCROLL_PADDING)), bounds.height - arrowUpLeft.height - arrowDownRight.height - 2*GuiGetStyle(SCROLLBAR, BORDER_WIDTH) \};\par
4132         sliderSize = (sliderSize >= scrollbar.height) ? (({\cf18 int})scrollbar.height - 2) : sliderSize;     {\cf20 // Make sure the slider won't get outside of the scrollbar}\par
4133         slider = RAYGUI_CLITERAL(Rectangle) \{ (float)bounds.x + GuiGetStyle(SCROLLBAR, BORDER_WIDTH) + GuiGetStyle(SCROLLBAR, SCROLL_SLIDER_PADDING), (float)scrollbar.y + ({\cf18 int})(((float)(value - minValue)/range)*(scrollbar.height - sliderSize)), ({\cf18 float})bounds.width - 2*(GuiGetStyle(SCROLLBAR, BORDER_WIDTH) + GuiGetStyle(SCROLLBAR, SCROLL_SLIDER_PADDING)), ({\cf18 float})sliderSize \};\par
4134     \}\par
4135     {\cf19 else}\par
4136     \{\par
4137         arrowDownRight = RAYGUI_CLITERAL(Rectangle) \{ (float)bounds.x + bounds.width - spinnerSize - GuiGetStyle(SCROLLBAR, BORDER_WIDTH), (float)bounds.y + GuiGetStyle(SCROLLBAR, BORDER_WIDTH), (float)spinnerSize, ({\cf18 float})spinnerSize \};\par
4138         scrollbar = RAYGUI_CLITERAL(Rectangle) \{ arrowUpLeft.x + arrowUpLeft.width, bounds.y + GuiGetStyle(SCROLLBAR, BORDER_WIDTH) + GuiGetStyle(SCROLLBAR, SCROLL_PADDING), bounds.width - arrowUpLeft.width - arrowDownRight.width - 2*GuiGetStyle(SCROLLBAR, BORDER_WIDTH), bounds.height - 2*(GuiGetStyle(SCROLLBAR, BORDER_WIDTH) + GuiGetStyle(SCROLLBAR, SCROLL_PADDING)) \};\par
4139         sliderSize = (sliderSize >= scrollbar.width) ? (({\cf18 int})scrollbar.width - 2) : sliderSize;       {\cf20 // Make sure the slider won't get outside of the scrollbar}\par
4140         slider = RAYGUI_CLITERAL(Rectangle) \{ (float)scrollbar.x + ({\cf18 int})(((float)(value - minValue)/range)*(scrollbar.width - sliderSize)), ({\cf18 float})bounds.y + GuiGetStyle(SCROLLBAR, BORDER_WIDTH) + GuiGetStyle(SCROLLBAR, SCROLL_SLIDER_PADDING), (float)sliderSize, ({\cf18 float})bounds.height - 2*(GuiGetStyle(SCROLLBAR, BORDER_WIDTH) + GuiGetStyle(SCROLLBAR, SCROLL_SLIDER_PADDING)) \};\par
4141     \}\par
4142 \par
4143     {\cf20 // Update control}\par
4144     {\cf20 //--------------------------------------------------------------------}\par
4145     {\cf19 if} ((state != STATE_DISABLED) && !guiLocked)\par
4146     \{\par
4147         Vector2 mousePoint = GetMousePosition();\par
4148 \par
4149         {\cf19 if} (CheckCollisionPointRec(mousePoint, bounds))\par
4150         \{\par
4151             state = STATE_FOCUSED;\par
4152 \par
4153             {\cf20 // Handle mouse wheel}\par
4154             {\cf18 int} wheel = (int)GetMouseWheelMove();\par
4155             {\cf19 if} (wheel != 0) value += wheel;\par
4156 \par
4157             {\cf19 if} (IsMouseButtonPressed(MOUSE_LEFT_BUTTON))\par
4158             \{\par
4159                 {\cf19 if} (CheckCollisionPointRec(mousePoint, arrowUpLeft)) value -= range/GuiGetStyle(SCROLLBAR, SCROLL_SPEED);\par
4160                 {\cf19 else} {\cf19 if} (CheckCollisionPointRec(mousePoint, arrowDownRight)) value += range/GuiGetStyle(SCROLLBAR, SCROLL_SPEED);\par
4161 \par
4162                 state = STATE_PRESSED;\par
4163             \}\par
4164             {\cf19 else} {\cf19 if} (IsMouseButtonDown(MOUSE_LEFT_BUTTON))\par
4165             \{\par
4166                 {\cf19 if} (!isVertical)\par
4167                 \{\par
4168                     Rectangle scrollArea = \{ arrowUpLeft.x + arrowUpLeft.width, arrowUpLeft.y, scrollbar.width, bounds.height - 2*GuiGetStyle(SCROLLBAR, BORDER_WIDTH) \};\par
4169                     {\cf19 if} (CheckCollisionPointRec(mousePoint, scrollArea)) value = (int)((({\cf18 float})(mousePoint.x - scrollArea.x - slider.width/2)*range)/(scrollArea.width - slider.width) + minValue);\par
4170                 \}\par
4171                 {\cf19 else}\par
4172                 \{\par
4173                     Rectangle scrollArea = \{ arrowUpLeft.x, arrowUpLeft.y+arrowUpLeft.height, bounds.width - 2*GuiGetStyle(SCROLLBAR, BORDER_WIDTH),  scrollbar.height \};\par
4174                     {\cf19 if} (CheckCollisionPointRec(mousePoint, scrollArea)) value = (int)((({\cf18 float})(mousePoint.y - scrollArea.y - slider.height/2)*range)/(scrollArea.height - slider.height) + minValue);\par
4175                 \}\par
4176             \}\par
4177         \}\par
4178 \par
4179         {\cf20 // Normalize value}\par
4180         {\cf19 if} (value > maxValue) value = maxValue;\par
4181         {\cf19 if} (value < minValue) value = minValue;\par
4182     \}\par
4183     {\cf20 //--------------------------------------------------------------------}\par
4184 \par
4185     {\cf20 // Draw control}\par
4186     {\cf20 //--------------------------------------------------------------------}\par
4187     GuiDrawRectangle(bounds, GuiGetStyle(SCROLLBAR, BORDER_WIDTH), Fade(GetColor(GuiGetStyle(LISTVIEW, BORDER + state*3)), guiAlpha), Fade(GetColor(GuiGetStyle(DEFAULT, BORDER_COLOR_DISABLED)), guiAlpha));   {\cf20 // Draw the background}\par
4188 \par
4189     GuiDrawRectangle(scrollbar, 0, BLANK, Fade(GetColor(GuiGetStyle(BUTTON, BASE_COLOR_NORMAL)), guiAlpha));     {\cf20 // Draw the scrollbar active area background}\par
4190     GuiDrawRectangle(slider, 0, BLANK, Fade(GetColor(GuiGetStyle(SLIDER, BORDER + state*3)), guiAlpha));         {\cf20 // Draw the slider bar}\par
4191 \par
4192     {\cf20 // Draw arrows (using icon if available)}\par
4193     {\cf19 if} (GuiGetStyle(SCROLLBAR, ARROWS_VISIBLE))\par
4194     \{\par
4195 {\cf21 #if defined(RAYGUI_NO_ICONS)}\par
4196         GuiDrawText(isVertical ? {\cf22 "^"} : {\cf22 "<"}, RAYGUI_CLITERAL(Rectangle)\{ arrowUpLeft.x, arrowUpLeft.y, isVertical ? bounds.width : bounds.height, isVertical ? bounds.width : bounds.height \},\par
4197             TEXT_ALIGN_CENTER, Fade(GetColor(GuiGetStyle(DROPDOWNBOX, TEXT + (state*3))), guiAlpha));\par
4198         GuiDrawText(isVertical ? {\cf22 "v"} : {\cf22 ">"}, RAYGUI_CLITERAL(Rectangle)\{ arrowDownRight.x, arrowDownRight.y, isVertical ? bounds.width : bounds.height, isVertical ? bounds.width : bounds.height \},\par
4199             TEXT_ALIGN_CENTER, Fade(GetColor(GuiGetStyle(DROPDOWNBOX, TEXT + (state*3))), guiAlpha));\par
4200 {\cf21 #else}\par
4201         GuiDrawText(isVertical ? {\cf22 "#121#"} : {\cf22 "#118#"}, RAYGUI_CLITERAL(Rectangle)\{ arrowUpLeft.x, arrowUpLeft.y, isVertical ? bounds.width : bounds.height, isVertical ? bounds.width : bounds.height \},\par
4202             TEXT_ALIGN_CENTER, Fade(GetColor(GuiGetStyle(SCROLLBAR, TEXT + state*3)), guiAlpha));   {\cf20 // ICON_ARROW_UP_FILL / ICON_ARROW_LEFT_FILL}\par
4203         GuiDrawText(isVertical ? {\cf22 "#120#"} : {\cf22 "#119#"}, RAYGUI_CLITERAL(Rectangle)\{ arrowDownRight.x, arrowDownRight.y, isVertical ? bounds.width : bounds.height, isVertical ? bounds.width : bounds.height \},\par
4204             TEXT_ALIGN_CENTER, Fade(GetColor(GuiGetStyle(SCROLLBAR, TEXT + state*3)), guiAlpha));   {\cf20 // ICON_ARROW_DOWN_FILL / ICON_ARROW_RIGHT_FILL}\par
4205 {\cf21 #endif}\par
4206     \}\par
4207     {\cf20 //--------------------------------------------------------------------}\par
4208 \par
4209     {\cf19 return} value;\par
4210 \}\par
4211 \par
4212 {\cf21 #if defined(RAYGUI_STANDALONE)}\par
4213 {\cf20 // Returns a Color struct from hexadecimal value}\par
4214 {\cf17 static} Color GetColor({\cf18 int} hexValue)\par
4215 \{\par
4216     Color color;\par
4217 \par
4218     color.r = ({\cf18 unsigned} char)(hexValue >> 24) & 0xFF;\par
4219     color.g = ({\cf18 unsigned} char)(hexValue >> 16) & 0xFF;\par
4220     color.b = ({\cf18 unsigned} char)(hexValue >> 8) & 0xFF;\par
4221     color.a = ({\cf18 unsigned} char)hexValue & 0xFF;\par
4222 \par
4223     {\cf19 return} color;\par
4224 \}\par
4225 \par
4226 {\cf20 // Returns hexadecimal value for a Color}\par
4227 {\cf17 static} {\cf18 int} ColorToInt(Color color)\par
4228 \{\par
4229     {\cf19 return} ((({\cf18 int})color.r << 24) | (({\cf18 int})color.g << 16) | (({\cf18 int})color.b << 8) | ({\cf18 int})color.a);\par
4230 \}\par
4231 \par
4232 {\cf20 // Check if point is inside rectangle}\par
4233 {\cf17 static} {\cf18 bool} CheckCollisionPointRec(Vector2 point, Rectangle rec)\par
4234 \{\par
4235     {\cf18 bool} collision = {\cf17 false};\par
4236 \par
4237     {\cf19 if} ((point.x >= rec.x) && (point.x <= (rec.x + rec.width)) &&\par
4238         (point.y >= rec.y) && (point.y <= (rec.y + rec.height))) collision = {\cf17 true};\par
4239 \par
4240     {\cf19 return} collision;\par
4241 \}\par
4242 \par
4243 {\cf20 // Color fade-in or fade-out, alpha goes from 0.0f to 1.0f}\par
4244 {\cf17 static} Color Fade(Color color, {\cf18 float} alpha)\par
4245 \{\par
4246     {\cf19 if} (alpha < 0.0f) alpha = 0.0f;\par
4247     {\cf19 else} {\cf19 if} (alpha > 1.0f) alpha = 1.0f;\par
4248 \par
4249     Color result = \{ color.r, color.g, color.b, ({\cf18 unsigned} char)(255.0f*alpha) \};\par
4250 \par
4251     {\cf19 return} result;\par
4252 \}\par
4253 \par
4254 {\cf20 // Formatting of text with variables to 'embed'}\par
4255 {\cf17 static} {\cf17 const} {\cf18 char} *TextFormat({\cf17 const} {\cf18 char} *text, ...)\par
4256 \{\par
4257 {\cf21     #if !defined(RAYGUI_TEXTFORMAT_MAX_SIZE)}\par
4258 {\cf21         #define RAYGUI_TEXTFORMAT_MAX_SIZE   256}\par
4259 {\cf21     #endif}\par
4260 \par
4261     {\cf17 static} {\cf18 char} buffer[RAYGUI_TEXTFORMAT_MAX_SIZE];\par
4262 \par
4263     va_list args;\par
4264     va_start(args, text);\par
4265     vsprintf(buffer, text, args);\par
4266     va_end(args);\par
4267 \par
4268     {\cf19 return} buffer;\par
4269 \}\par
4270 \par
4271 {\cf20 // Draw rectangle with vertical gradient fill color}\par
4272 {\cf20 // NOTE: This function is only used by GuiColorPicker()}\par
4273 {\cf17 static} {\cf18 void} DrawRectangleGradientV({\cf18 int} posX, {\cf18 int} posY, {\cf18 int} width, {\cf18 int} height, Color color1, Color color2)\par
4274 \{\par
4275     Rectangle bounds = \{ (float)posX, ({\cf18 float})posY, (float)width, ({\cf18 float})height \};\par
4276     DrawRectangleGradientEx(bounds, color1, color2, color2, color1);\par
4277 \}\par
4278 \par
4279 {\cf20 // Split string into multiple strings}\par
4280 {\cf17 const} {\cf18 char} **TextSplit({\cf17 const} {\cf18 char} *text, {\cf18 char} delimiter, {\cf18 int} *count)\par
4281 \{\par
4282     {\cf20 // NOTE: Current implementation returns a copy of the provided string with '\\0' (string end delimiter)}\par
4283     {\cf20 // inserted between strings defined by "delimiter" parameter. No memory is dynamically allocated,}\par
4284     {\cf20 // all used memory is static... it has some limitations:}\par
4285     {\cf20 //      1. Maximum number of possible split strings is set by RAYGUI_TEXTSPLIT_MAX_ITEMS}\par
4286     {\cf20 //      2. Maximum size of text to split is RAYGUI_TEXTSPLIT_MAX_TEXT_SIZE}\par
4287 \par
4288 {\cf21     #if !defined(RAYGUI_TEXTSPLIT_MAX_ITEMS)}\par
4289 {\cf21         #define RAYGUI_TEXTSPLIT_MAX_ITEMS        128}\par
4290 {\cf21     #endif}\par
4291 {\cf21     #if !defined(RAYGUI_TEXTSPLIT_MAX_TEXT_SIZE)}\par
4292 {\cf21         #define RAYGUI_TEXTSPLIT_MAX_TEXT_SIZE      1024}\par
4293 {\cf21     #endif}\par
4294 \par
4295     {\cf17 static} {\cf17 const} {\cf18 char} *result[RAYGUI_TEXTSPLIT_MAX_ITEMS] = \{ NULL \};\par
4296     {\cf17 static} {\cf18 char} buffer[RAYGUI_TEXTSPLIT_MAX_TEXT_SIZE] = \{ 0 \};\par
4297     memset(buffer, 0, RAYGUI_TEXTSPLIT_MAX_TEXT_SIZE);\par
4298 \par
4299     result[0] = buffer;\par
4300     {\cf18 int} counter = 0;\par
4301 \par
4302     {\cf19 if} (text != NULL)\par
4303     \{\par
4304         counter = 1;\par
4305 \par
4306         {\cf20 // Count how many substrings we have on text and point to every one}\par
4307         {\cf19 for} ({\cf18 int} i = 0; i < RAYGUI_TEXTSPLIT_MAX_TEXT_SIZE; i++)\par
4308         \{\par
4309             buffer[i] = text[i];\par
4310             {\cf19 if} (buffer[i] == {\cf23 '\\0'}) {\cf19 break};\par
4311             {\cf19 else} {\cf19 if} (buffer[i] == delimiter)\par
4312             \{\par
4313                 buffer[i] = {\cf23 '\\0'};   {\cf20 // Set an end of string at this point}\par
4314                 result[counter] = buffer + i + 1;\par
4315                 counter++;\par
4316 \par
4317                 {\cf19 if} (counter == RAYGUI_TEXTSPLIT_MAX_ITEMS) {\cf19 break};\par
4318             \}\par
4319         \}\par
4320     \}\par
4321 \par
4322     *count = counter;\par
4323     {\cf19 return} result;\par
4324 \}\par
4325 \par
4326 {\cf20 // Get integer value from text}\par
4327 {\cf20 // NOTE: This function replaces atoi() [stdlib.h]}\par
4328 {\cf17 static} {\cf18 int} TextToInteger({\cf17 const} {\cf18 char} *text)\par
4329 \{\par
4330     {\cf18 int} value = 0;\par
4331     {\cf18 int} sign = 1;\par
4332 \par
4333     {\cf19 if} ((text[0] == {\cf23 '+'}) || (text[0] == {\cf23 '-'}))\par
4334     \{\par
4335         {\cf19 if} (text[0] == {\cf23 '-'}) sign = -1;\par
4336         text++;\par
4337     \}\par
4338 \par
4339     {\cf19 for} ({\cf18 int} i = 0; ((text[i] >= {\cf23 '0'}) && (text[i] <= {\cf23 '9'})); ++i) value = value*10 + ({\cf18 int})(text[i] - {\cf23 '0'});\par
4340 \par
4341     {\cf19 return} value*sign;\par
4342 \}\par
4343 \par
4344 {\cf20 // Encode codepoint into UTF-8 text (char array size returned as parameter)}\par
4345 {\cf17 static} {\cf17 const} {\cf18 char} *CodepointToUTF8({\cf18 int} codepoint, {\cf18 int} *byteSize)\par
4346 \{\par
4347     {\cf17 static} {\cf18 char} utf8[6] = \{ 0 \};\par
4348     {\cf18 int} size = 0;\par
4349 \par
4350     {\cf19 if} (codepoint <= 0x7f)\par
4351     \{\par
4352         utf8[0] = (char)codepoint;\par
4353         size = 1;\par
4354     \}\par
4355     {\cf19 else} {\cf19 if} (codepoint <= 0x7ff)\par
4356     \{\par
4357         utf8[0] = (char)(((codepoint >> 6) & 0x1f) | 0xc0);\par
4358         utf8[1] = (char)((codepoint & 0x3f) | 0x80);\par
4359         size = 2;\par
4360     \}\par
4361     {\cf19 else} {\cf19 if} (codepoint <= 0xffff)\par
4362     \{\par
4363         utf8[0] = (char)(((codepoint >> 12) & 0x0f) | 0xe0);\par
4364         utf8[1] = (char)(((codepoint >>  6) & 0x3f) | 0x80);\par
4365         utf8[2] = (char)((codepoint & 0x3f) | 0x80);\par
4366         size = 3;\par
4367     \}\par
4368     {\cf19 else} {\cf19 if} (codepoint <= 0x10ffff)\par
4369     \{\par
4370         utf8[0] = (char)(((codepoint >> 18) & 0x07) | 0xf0);\par
4371         utf8[1] = (char)(((codepoint >> 12) & 0x3f) | 0x80);\par
4372         utf8[2] = (char)(((codepoint >>  6) & 0x3f) | 0x80);\par
4373         utf8[3] = (char)((codepoint & 0x3f) | 0x80);\par
4374         size = 4;\par
4375     \}\par
4376 \par
4377     *byteSize = size;\par
4378 \par
4379     {\cf19 return} utf8;\par
4380 \}\par
4381 \par
4382 {\cf20 // Get next codepoint in a UTF-8 encoded text, scanning until '\\0' is found}\par
4383 {\cf20 // When a invalid UTF-8 byte is encountered we exit as soon as possible and a '?'(0x3f) codepoint is returned}\par
4384 {\cf20 // Total number of bytes processed are returned as a parameter}\par
4385 {\cf20 // NOTE: the standard says U+FFFD should be returned in case of errors}\par
4386 {\cf20 // but that character is not supported by the default font in raylib}\par
4387 {\cf17 static} {\cf18 int} GetCodepoint({\cf17 const} {\cf18 char} *text, {\cf18 int} *bytesProcessed)\par
4388 \{\par
4389 {\cf20 /*}\par
4390 {\cf20     UTF-8 specs from https://www.ietf.org/rfc/rfc3629.txt}\par
4391 {\cf20 }\par
4392 {\cf20     Char. number range  |        UTF-8 octet sequence}\par
4393 {\cf20       (hexadecimal)    |              (binary)}\par
4394 {\cf20     --------------------+---------------------------------------------}\par
4395 {\cf20     0000 0000-0000 007F | 0xxxxxxx}\par
4396 {\cf20     0000 0080-0000 07FF | 110xxxxx 10xxxxxx}\par
4397 {\cf20     0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx}\par
4398 {\cf20     0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx}\par
4399 {\cf20 */}\par
4400     {\cf20 // NOTE: on decode errors we return as soon as possible}\par
4401 \par
4402     {\cf18 int} code = 0x3f;   {\cf20 // Codepoint (defaults to '?')}\par
4403     {\cf18 int} octet = ({\cf18 unsigned} char)(text[0]); {\cf20 // The first UTF8 octet}\par
4404     *bytesProcessed = 1;\par
4405 \par
4406     {\cf19 if} (octet <= 0x7f)\par
4407     \{\par
4408         {\cf20 // Only one octet (ASCII range x00-7F)}\par
4409         code = text[0];\par
4410     \}\par
4411     {\cf19 else} {\cf19 if} ((octet & 0xe0) == 0xc0)\par
4412     \{\par
4413         {\cf20 // Two octets}\par
4414 \par
4415         {\cf20 // [0]xC2-DF    [1]UTF8-tail(x80-BF)}\par
4416         {\cf18 unsigned} {\cf18 char} octet1 = text[1];\par
4417 \par
4418         {\cf19 if} ((octet1 == {\cf23 '\\0'}) || ((octet1 >> 6) != 2)) \{ *bytesProcessed = 2; {\cf19 return} code; \} {\cf20 // Unexpected sequence}\par
4419 \par
4420         {\cf19 if} ((octet >= 0xc2) && (octet <= 0xdf))\par
4421         \{\par
4422             code = ((octet & 0x1f) << 6) | (octet1 & 0x3f);\par
4423             *bytesProcessed = 2;\par
4424         \}\par
4425     \}\par
4426     {\cf19 else} {\cf19 if} ((octet & 0xf0) == 0xe0)\par
4427     \{\par
4428         {\cf20 // Three octets}\par
4429         {\cf18 unsigned} {\cf18 char} octet1 = text[1];\par
4430         {\cf18 unsigned} {\cf18 char} octet2 = {\cf23 '\\0'};\par
4431 \par
4432         {\cf19 if} ((octet1 == {\cf23 '\\0'}) || ((octet1 >> 6) != 2)) \{ *bytesProcessed = 2; {\cf19 return} code; \} {\cf20 // Unexpected sequence}\par
4433 \par
4434         octet2 = text[2];\par
4435 \par
4436         {\cf19 if} ((octet2 == {\cf23 '\\0'}) || ((octet2 >> 6) != 2)) \{ *bytesProcessed = 3; {\cf19 return} code; \} {\cf20 // Unexpected sequence}\par
4437 \par
4438         {\cf20 // [0]xE0    [1]xA0-BF       [2]UTF8-tail(x80-BF)}\par
4439         {\cf20 // [0]xE1-EC [1]UTF8-tail    [2]UTF8-tail(x80-BF)}\par
4440         {\cf20 // [0]xED    [1]x80-9F       [2]UTF8-tail(x80-BF)}\par
4441         {\cf20 // [0]xEE-EF [1]UTF8-tail    [2]UTF8-tail(x80-BF)}\par
4442 \par
4443         {\cf19 if} (((octet == 0xe0) && !((octet1 >= 0xa0) && (octet1 <= 0xbf))) ||\par
4444             ((octet == 0xed) && !((octet1 >= 0x80) && (octet1 <= 0x9f)))) \{ *bytesProcessed = 2; {\cf19 return} code; \}\par
4445 \par
4446         {\cf19 if} ((octet >= 0xe0) && (0 <= 0xef))\par
4447         \{\par
4448             code = ((octet & 0xf) << 12) | ((octet1 & 0x3f) << 6) | (octet2 & 0x3f);\par
4449             *bytesProcessed = 3;\par
4450         \}\par
4451     \}\par
4452     {\cf19 else} {\cf19 if} ((octet & 0xf8) == 0xf0)\par
4453     \{\par
4454         {\cf20 // Four octets}\par
4455         {\cf19 if} (octet > 0xf4) {\cf19 return} code;\par
4456 \par
4457         {\cf18 unsigned} {\cf18 char} octet1 = text[1];\par
4458         {\cf18 unsigned} {\cf18 char} octet2 = {\cf23 '\\0'};\par
4459         {\cf18 unsigned} {\cf18 char} octet3 = {\cf23 '\\0'};\par
4460 \par
4461         {\cf19 if} ((octet1 == {\cf23 '\\0'}) || ((octet1 >> 6) != 2)) \{ *bytesProcessed = 2; {\cf19 return} code; \}  {\cf20 // Unexpected sequence}\par
4462 \par
4463         octet2 = text[2];\par
4464 \par
4465         {\cf19 if} ((octet2 == {\cf23 '\\0'}) || ((octet2 >> 6) != 2)) \{ *bytesProcessed = 3; {\cf19 return} code; \}  {\cf20 // Unexpected sequence}\par
4466 \par
4467         octet3 = text[3];\par
4468 \par
4469         {\cf19 if} ((octet3 == {\cf23 '\\0'}) || ((octet3 >> 6) != 2)) \{ *bytesProcessed = 4; {\cf19 return} code; \}  {\cf20 // Unexpected sequence}\par
4470 \par
4471         {\cf20 // [0]xF0       [1]x90-BF       [2]UTF8-tail  [3]UTF8-tail}\par
4472         {\cf20 // [0]xF1-F3    [1]UTF8-tail    [2]UTF8-tail  [3]UTF8-tail}\par
4473         {\cf20 // [0]xF4       [1]x80-8F       [2]UTF8-tail  [3]UTF8-tail}\par
4474 \par
4475         {\cf19 if} (((octet == 0xf0) && !((octet1 >= 0x90) && (octet1 <= 0xbf))) ||\par
4476             ((octet == 0xf4) && !((octet1 >= 0x80) && (octet1 <= 0x8f)))) \{ *bytesProcessed = 2; {\cf19 return} code; \} {\cf20 // Unexpected sequence}\par
4477 \par
4478         {\cf19 if} (octet >= 0xf0)\par
4479         \{\par
4480             code = ((octet & 0x7) << 18) | ((octet1 & 0x3f) << 12) | ((octet2 & 0x3f) << 6) | (octet3 & 0x3f);\par
4481             *bytesProcessed = 4;\par
4482         \}\par
4483     \}\par
4484 \par
4485     {\cf19 if} (code > 0x10ffff) code = 0x3f;     {\cf20 // Codepoints after U+10ffff are invalid}\par
4486 \par
4487     {\cf19 return} code;\par
4488 \}\par
4489 {\cf21 #endif      }{\cf20 // RAYGUI_STANDALONE}\par
4490 \par
4491 {\cf21 #endif      }{\cf20 // RAYGUI_IMPLEMENTATION}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/raylib.h\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/raylib.h}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/raylib.h}
{\bkmkstart AAAAAAABFV}
{\bkmkend AAAAAAABFV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdarg.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Vector2}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Vector3}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Vector4}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Matrix}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Color}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Rectangle}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Image}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Texture}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RenderTexture}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b NPatchInfo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b GlyphInfo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Font}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Camera3D}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Camera2D}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Mesh}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Shader}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b MaterialMap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Material}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Transform}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b BoneInfo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Model}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ModelAnimation}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Ray}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RayCollision}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b BoundingBox}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Wave}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b AudioStream}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Sound}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Music}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b VrDeviceInfo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b VrStereoConfig}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RAYLIB_VERSION}\~ "4.1-dev"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RLAPI}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PI}\~ 3.14159265358979323846f\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEG2RAD}\~ ({\b PI}/180.0f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RAD2DEG}\~ (180.0f/{\b PI})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RL_MALLOC}(sz)\~ malloc(sz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RL_CALLOC}(n,  sz)\~ calloc(n,sz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RL_REALLOC}(ptr,  sz)\~ realloc(ptr,sz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RL_FREE}(ptr)\~ free(ptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CLITERAL}(type)\~ (type)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RL_COLOR_TYPE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RL_RECTANGLE_TYPE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RL_VECTOR2_TYPE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RL_VECTOR3_TYPE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RL_VECTOR4_TYPE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RL_QUATERNION_TYPE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RL_MATRIX_TYPE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LIGHTGRAY}\~ {\b CLITERAL}({\b Color})\{ 200, 200, 200, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GRAY}\~ {\b CLITERAL}({\b Color})\{ 130, 130, 130, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DARKGRAY}\~ {\b CLITERAL}({\b Color})\{ 80, 80, 80, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b YELLOW}\~ {\b CLITERAL}({\b Color})\{ 253, 249, 0, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GOLD}\~ {\b CLITERAL}({\b Color})\{ 255, 203, 0, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ORANGE}\~ {\b CLITERAL}({\b Color})\{ 255, 161, 0, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PINK}\~ {\b CLITERAL}({\b Color})\{ 255, 109, 194, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RED}\~ {\b CLITERAL}({\b Color})\{ 230, 41, 55, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAROON}\~ {\b CLITERAL}({\b Color})\{ 190, 33, 55, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GREEN}\~ {\b CLITERAL}({\b Color})\{ 0, 228, 48, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LIME}\~ {\b CLITERAL}({\b Color})\{ 0, 158, 47, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DARKGREEN}\~ {\b CLITERAL}({\b Color})\{ 0, 117, 44, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SKYBLUE}\~ {\b CLITERAL}({\b Color})\{ 102, 191, 255, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BLUE}\~ {\b CLITERAL}({\b Color})\{ 0, 121, 241, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DARKBLUE}\~ {\b CLITERAL}({\b Color})\{ 0, 82, 172, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PURPLE}\~ {\b CLITERAL}({\b Color})\{ 200, 122, 255, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b VIOLET}\~ {\b CLITERAL}({\b Color})\{ 135, 60, 190, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DARKPURPLE}\~ {\b CLITERAL}({\b Color})\{ 112, 31, 126, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BEIGE}\~ {\b CLITERAL}({\b Color})\{ 211, 176, 131, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BROWN}\~ {\b CLITERAL}({\b Color})\{ 127, 106, 79, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DARKBROWN}\~ {\b CLITERAL}({\b Color})\{ 76, 63, 47, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WHITE}\~ {\b CLITERAL}({\b Color})\{ 255, 255, 255, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BLACK}\~ {\b CLITERAL}({\b Color})\{ 0, 0, 0, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BLANK}\~ {\b CLITERAL}({\b Color})\{ 0, 0, 0, 0 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAGENTA}\~ {\b CLITERAL}({\b Color})\{ 255, 0, 255, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RAYWHITE}\~ {\b CLITERAL}({\b Color})\{ 245, 245, 245, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RL_BOOL_TYPE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MOUSE_LEFT_BUTTON}\~ {\b MOUSE_BUTTON_LEFT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MOUSE_RIGHT_BUTTON}\~ {\b MOUSE_BUTTON_RIGHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MOUSE_MIDDLE_BUTTON}\~ {\b MOUSE_BUTTON_MIDDLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MATERIAL_MAP_DIFFUSE}\~ {\b MATERIAL_MAP_ALBEDO}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MATERIAL_MAP_SPECULAR}\~ {\b MATERIAL_MAP_METALNESS}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHADER_LOC_MAP_DIFFUSE}\~ {\b SHADER_LOC_MAP_ALBEDO}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHADER_LOC_MAP_SPECULAR}\~ {\b SHADER_LOC_MAP_METALNESS}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es de Tipos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef enum {\b bool} {\b bool}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Vector2} {\b Vector2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Vector3} {\b Vector3}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Vector4} {\b Vector4}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b Vector4} {\b Quaternion}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Matrix} {\b Matrix}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Color} {\b Color}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Rectangle} {\b Rectangle}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Image} {\b Image}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Texture} {\b Texture}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b Texture} {\b Texture2D}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b Texture} {\b TextureCubemap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b RenderTexture} {\b RenderTexture}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b RenderTexture} {\b RenderTexture2D}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b NPatchInfo} {\b NPatchInfo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b GlyphInfo} {\b GlyphInfo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Font} {\b Font}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Camera3D} {\b Camera3D}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b Camera3D} {\b Camera}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Camera2D} {\b Camera2D}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Mesh} {\b Mesh}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Shader} {\b Shader}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b MaterialMap} {\b MaterialMap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Material} {\b Material}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Transform} {\b Transform}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b BoneInfo} {\b BoneInfo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Model} {\b Model}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b ModelAnimation} {\b ModelAnimation}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Ray} {\b Ray}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b RayCollision} {\b RayCollision}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b BoundingBox} {\b BoundingBox}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Wave} {\b Wave}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b rAudioBuffer} {\b rAudioBuffer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b rAudioProcessor} {\b rAudioProcessor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b AudioStream} {\b AudioStream}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Sound} {\b Sound}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Music} {\b Music}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b VrDeviceInfo} {\b VrDeviceInfo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b VrStereoConfig} {\b VrStereoConfig}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void(* {\b TraceLogCallback}) (int logLevel, const char *text, va_list args)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef unsigned char *(* {\b LoadFileDataCallback}) (const char *fileName, unsigned int *bytesRead)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b bool}(* {\b SaveFileDataCallback}) (const char *fileName, void *data, unsigned int bytesToWrite)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef char *(* {\b LoadFileTextCallback}) (const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b bool}(* {\b SaveFileTextCallback}) (const char *fileName, char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void(* {\b AudioCallback}) (void *bufferData, unsigned int frames)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b bool} \{ {\b false} = 0
, {\b true} = !false
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ConfigFlags} \{ {\b FLAG_VSYNC_HINT} = 0x00000040
, {\b FLAG_FULLSCREEN_MODE} = 0x00000002
, {\b FLAG_WINDOW_RESIZABLE} = 0x00000004
, {\b FLAG_WINDOW_UNDECORATED} = 0x00000008
, {\b FLAG_WINDOW_HIDDEN} = 0x00000080
, {\b FLAG_WINDOW_MINIMIZED} = 0x00000200
, {\b FLAG_WINDOW_MAXIMIZED} = 0x00000400
, {\b FLAG_WINDOW_UNFOCUSED} = 0x00000800
, {\b FLAG_WINDOW_TOPMOST} = 0x00001000
, {\b FLAG_WINDOW_ALWAYS_RUN} = 0x00000100
, {\b FLAG_WINDOW_TRANSPARENT} = 0x00000010
, {\b FLAG_WINDOW_HIGHDPI} = 0x00002000
, {\b FLAG_MSAA_4X_HINT} = 0x00000020
, {\b FLAG_INTERLACED_HINT} = 0x00010000
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TraceLogLevel} \{ {\b LOG_ALL} = 0
, {\b LOG_TRACE}
, {\b LOG_DEBUG}
, {\b LOG_INFO}
, {\b LOG_WARNING}
, {\b LOG_ERROR}
, {\b LOG_FATAL}
, {\b LOG_NONE}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b KeyboardKey} \{ {\b KEY_NULL} = 0
, {\b KEY_APOSTROPHE} = 39
, {\b KEY_COMMA} = 44
, {\b KEY_MINUS} = 45
, {\b KEY_PERIOD} = 46
, {\b KEY_SLASH} = 47
, {\b KEY_ZERO} = 48
, {\b KEY_ONE} = 49
, {\b KEY_TWO} = 50
, {\b KEY_THREE} = 51
, {\b KEY_FOUR} = 52
, {\b KEY_FIVE} = 53
, {\b KEY_SIX} = 54
, {\b KEY_SEVEN} = 55
, {\b KEY_EIGHT} = 56
, {\b KEY_NINE} = 57
, {\b KEY_SEMICOLON} = 59
, {\b KEY_EQUAL} = 61
, {\b KEY_A} = 65
, {\b KEY_B} = 66
, {\b KEY_C} = 67
, {\b KEY_D} = 68
, {\b KEY_E} = 69
, {\b KEY_F} = 70
, {\b KEY_G} = 71
, {\b KEY_H} = 72
, {\b KEY_I} = 73
, {\b KEY_J} = 74
, {\b KEY_K} = 75
, {\b KEY_L} = 76
, {\b KEY_M} = 77
, {\b KEY_N} = 78
, {\b KEY_O} = 79
, {\b KEY_P} = 80
, {\b KEY_Q} = 81
, {\b KEY_R} = 82
, {\b KEY_S} = 83
, {\b KEY_T} = 84
, {\b KEY_U} = 85
, {\b KEY_V} = 86
, {\b KEY_W} = 87
, {\b KEY_X} = 88
, {\b KEY_Y} = 89
, {\b KEY_Z} = 90
, {\b KEY_LEFT_BRACKET} = 91
, {\b KEY_BACKSLASH} = 92
, {\b KEY_RIGHT_BRACKET} = 93
, {\b KEY_GRAVE} = 96
, {\b KEY_SPACE} = 32
, {\b KEY_ESCAPE} = 256
, {\b KEY_ENTER} = 257
, {\b KEY_TAB} = 258
, {\b KEY_BACKSPACE} = 259
, {\b KEY_INSERT} = 260
, {\b KEY_DELETE} = 261
, {\b KEY_RIGHT} = 262
, {\b KEY_LEFT} = 263
, {\b KEY_DOWN} = 264
, {\b KEY_UP} = 265
, {\b KEY_PAGE_UP} = 266
, {\b KEY_PAGE_DOWN} = 267
, {\b KEY_HOME} = 268
, {\b KEY_END} = 269
, {\b KEY_CAPS_LOCK} = 280
, {\b KEY_SCROLL_LOCK} = 281
, {\b KEY_NUM_LOCK} = 282
, {\b KEY_PRINT_SCREEN} = 283
, {\b KEY_PAUSE} = 284
, {\b KEY_F1} = 290
, {\b KEY_F2} = 291
, {\b KEY_F3} = 292
, {\b KEY_F4} = 293
, {\b KEY_F5} = 294
, {\b KEY_F6} = 295
, {\b KEY_F7} = 296
, {\b KEY_F8} = 297
, {\b KEY_F9} = 298
, {\b KEY_F10} = 299
, {\b KEY_F11} = 300
, {\b KEY_F12} = 301
, {\b KEY_LEFT_SHIFT} = 340
, {\b KEY_LEFT_CONTROL} = 341
, {\b KEY_LEFT_ALT} = 342
, {\b KEY_LEFT_SUPER} = 343
, {\b KEY_RIGHT_SHIFT} = 344
, {\b KEY_RIGHT_CONTROL} = 345
, {\b KEY_RIGHT_ALT} = 346
, {\b KEY_RIGHT_SUPER} = 347
, {\b KEY_KB_MENU} = 348
, {\b KEY_KP_0} = 320
, {\b KEY_KP_1} = 321
, {\b KEY_KP_2} = 322
, {\b KEY_KP_3} = 323
, {\b KEY_KP_4} = 324
, {\b KEY_KP_5} = 325
, {\b KEY_KP_6} = 326
, {\b KEY_KP_7} = 327
, {\b KEY_KP_8} = 328
, {\b KEY_KP_9} = 329
, {\b KEY_KP_DECIMAL} = 330
, {\b KEY_KP_DIVIDE} = 331
, {\b KEY_KP_MULTIPLY} = 332
, {\b KEY_KP_SUBTRACT} = 333
, {\b KEY_KP_ADD} = 334
, {\b KEY_KP_ENTER} = 335
, {\b KEY_KP_EQUAL} = 336
, {\b KEY_BACK} = 4
, {\b KEY_MENU} = 82
, {\b KEY_VOLUME_UP} = 24
, {\b KEY_VOLUME_DOWN} = 25
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b MouseButton} \{ {\b MOUSE_BUTTON_LEFT} = 0
, {\b MOUSE_BUTTON_RIGHT} = 1
, {\b MOUSE_BUTTON_MIDDLE} = 2
, {\b MOUSE_BUTTON_SIDE} = 3
, {\b MOUSE_BUTTON_EXTRA} = 4
, {\b MOUSE_BUTTON_FORWARD} = 5
, {\b MOUSE_BUTTON_BACK} = 6
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b MouseCursor} \{ {\b MOUSE_CURSOR_DEFAULT} = 0
, {\b MOUSE_CURSOR_ARROW} = 1
, {\b MOUSE_CURSOR_IBEAM} = 2
, {\b MOUSE_CURSOR_CROSSHAIR} = 3
, {\b MOUSE_CURSOR_POINTING_HAND} = 4
, {\b MOUSE_CURSOR_RESIZE_EW} = 5
, {\b MOUSE_CURSOR_RESIZE_NS} = 6
, {\b MOUSE_CURSOR_RESIZE_NWSE} = 7
, {\b MOUSE_CURSOR_RESIZE_NESW} = 8
, {\b MOUSE_CURSOR_RESIZE_ALL} = 9
, {\b MOUSE_CURSOR_NOT_ALLOWED} = 10
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GamepadButton} \{ {\b GAMEPAD_BUTTON_UNKNOWN} = 0
, {\b GAMEPAD_BUTTON_LEFT_FACE_UP}
, {\b GAMEPAD_BUTTON_LEFT_FACE_RIGHT}
, {\b GAMEPAD_BUTTON_LEFT_FACE_DOWN}
, {\b GAMEPAD_BUTTON_LEFT_FACE_LEFT}
, {\b GAMEPAD_BUTTON_RIGHT_FACE_UP}
, {\b GAMEPAD_BUTTON_RIGHT_FACE_RIGHT}
, {\b GAMEPAD_BUTTON_RIGHT_FACE_DOWN}
, {\b GAMEPAD_BUTTON_RIGHT_FACE_LEFT}
, {\b GAMEPAD_BUTTON_LEFT_TRIGGER_1}
, {\b GAMEPAD_BUTTON_LEFT_TRIGGER_2}
, {\b GAMEPAD_BUTTON_RIGHT_TRIGGER_1}
, {\b GAMEPAD_BUTTON_RIGHT_TRIGGER_2}
, {\b GAMEPAD_BUTTON_MIDDLE_LEFT}
, {\b GAMEPAD_BUTTON_MIDDLE}
, {\b GAMEPAD_BUTTON_MIDDLE_RIGHT}
, {\b GAMEPAD_BUTTON_LEFT_THUMB}
, {\b GAMEPAD_BUTTON_RIGHT_THUMB}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GamepadAxis} \{ {\b GAMEPAD_AXIS_LEFT_X} = 0
, {\b GAMEPAD_AXIS_LEFT_Y} = 1
, {\b GAMEPAD_AXIS_RIGHT_X} = 2
, {\b GAMEPAD_AXIS_RIGHT_Y} = 3
, {\b GAMEPAD_AXIS_LEFT_TRIGGER} = 4
, {\b GAMEPAD_AXIS_RIGHT_TRIGGER} = 5
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b MaterialMapIndex} \{ {\b MATERIAL_MAP_ALBEDO} = 0
, {\b MATERIAL_MAP_METALNESS}
, {\b MATERIAL_MAP_NORMAL}
, {\b MATERIAL_MAP_ROUGHNESS}
, {\b MATERIAL_MAP_OCCLUSION}
, {\b MATERIAL_MAP_EMISSION}
, {\b MATERIAL_MAP_HEIGHT}
, {\b MATERIAL_MAP_CUBEMAP}
, {\b MATERIAL_MAP_IRRADIANCE}
, {\b MATERIAL_MAP_PREFILTER}
, {\b MATERIAL_MAP_BRDF}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ShaderLocationIndex} \{ {\b SHADER_LOC_VERTEX_POSITION} = 0
, {\b SHADER_LOC_VERTEX_TEXCOORD01}
, {\b SHADER_LOC_VERTEX_TEXCOORD02}
, {\b SHADER_LOC_VERTEX_NORMAL}
, {\b SHADER_LOC_VERTEX_TANGENT}
, {\b SHADER_LOC_VERTEX_COLOR}
, {\b SHADER_LOC_MATRIX_MVP}
, {\b SHADER_LOC_MATRIX_VIEW}
, {\b SHADER_LOC_MATRIX_PROJECTION}
, {\b SHADER_LOC_MATRIX_MODEL}
, {\b SHADER_LOC_MATRIX_NORMAL}
, {\b SHADER_LOC_VECTOR_VIEW}
, {\b SHADER_LOC_COLOR_DIFFUSE}
, {\b SHADER_LOC_COLOR_SPECULAR}
, {\b SHADER_LOC_COLOR_AMBIENT}
, {\b SHADER_LOC_MAP_ALBEDO}
, {\b SHADER_LOC_MAP_METALNESS}
, {\b SHADER_LOC_MAP_NORMAL}
, {\b SHADER_LOC_MAP_ROUGHNESS}
, {\b SHADER_LOC_MAP_OCCLUSION}
, {\b SHADER_LOC_MAP_EMISSION}
, {\b SHADER_LOC_MAP_HEIGHT}
, {\b SHADER_LOC_MAP_CUBEMAP}
, {\b SHADER_LOC_MAP_IRRADIANCE}
, {\b SHADER_LOC_MAP_PREFILTER}
, {\b SHADER_LOC_MAP_BRDF}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ShaderUniformDataType} \{ {\b SHADER_UNIFORM_FLOAT} = 0
, {\b SHADER_UNIFORM_VEC2}
, {\b SHADER_UNIFORM_VEC3}
, {\b SHADER_UNIFORM_VEC4}
, {\b SHADER_UNIFORM_INT}
, {\b SHADER_UNIFORM_IVEC2}
, {\b SHADER_UNIFORM_IVEC3}
, {\b SHADER_UNIFORM_IVEC4}
, {\b SHADER_UNIFORM_SAMPLER2D}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ShaderAttributeDataType} \{ {\b SHADER_ATTRIB_FLOAT} = 0
, {\b SHADER_ATTRIB_VEC2}
, {\b SHADER_ATTRIB_VEC3}
, {\b SHADER_ATTRIB_VEC4}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b PixelFormat} \{ {\b PIXELFORMAT_UNCOMPRESSED_GRAYSCALE} = 1
, {\b PIXELFORMAT_UNCOMPRESSED_GRAY_ALPHA}
, {\b PIXELFORMAT_UNCOMPRESSED_R5G6B5}
, {\b PIXELFORMAT_UNCOMPRESSED_R8G8B8}
, {\b PIXELFORMAT_UNCOMPRESSED_R5G5B5A1}
, {\b PIXELFORMAT_UNCOMPRESSED_R4G4B4A4}
, {\b PIXELFORMAT_UNCOMPRESSED_R8G8B8A8}
, {\b PIXELFORMAT_UNCOMPRESSED_R32}
, {\b PIXELFORMAT_UNCOMPRESSED_R32G32B32}
, {\b PIXELFORMAT_UNCOMPRESSED_R32G32B32A32}
, {\b PIXELFORMAT_COMPRESSED_DXT1_RGB}
, {\b PIXELFORMAT_COMPRESSED_DXT1_RGBA}
, {\b PIXELFORMAT_COMPRESSED_DXT3_RGBA}
, {\b PIXELFORMAT_COMPRESSED_DXT5_RGBA}
, {\b PIXELFORMAT_COMPRESSED_ETC1_RGB}
, {\b PIXELFORMAT_COMPRESSED_ETC2_RGB}
, {\b PIXELFORMAT_COMPRESSED_ETC2_EAC_RGBA}
, {\b PIXELFORMAT_COMPRESSED_PVRT_RGB}
, {\b PIXELFORMAT_COMPRESSED_PVRT_RGBA}
, {\b PIXELFORMAT_COMPRESSED_ASTC_4x4_RGBA}
, {\b PIXELFORMAT_COMPRESSED_ASTC_8x8_RGBA}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TextureFilter} \{ {\b TEXTURE_FILTER_POINT} = 0
, {\b TEXTURE_FILTER_BILINEAR}
, {\b TEXTURE_FILTER_TRILINEAR}
, {\b TEXTURE_FILTER_ANISOTROPIC_4X}
, {\b TEXTURE_FILTER_ANISOTROPIC_8X}
, {\b TEXTURE_FILTER_ANISOTROPIC_16X}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TextureWrap} \{ {\b TEXTURE_WRAP_REPEAT} = 0
, {\b TEXTURE_WRAP_CLAMP}
, {\b TEXTURE_WRAP_MIRROR_REPEAT}
, {\b TEXTURE_WRAP_MIRROR_CLAMP}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CubemapLayout} \{ {\b CUBEMAP_LAYOUT_AUTO_DETECT} = 0
, {\b CUBEMAP_LAYOUT_LINE_VERTICAL}
, {\b CUBEMAP_LAYOUT_LINE_HORIZONTAL}
, {\b CUBEMAP_LAYOUT_CROSS_THREE_BY_FOUR}
, {\b CUBEMAP_LAYOUT_CROSS_FOUR_BY_THREE}
, {\b CUBEMAP_LAYOUT_PANORAMA}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b FontType} \{ {\b FONT_DEFAULT} = 0
, {\b FONT_BITMAP}
, {\b FONT_SDF}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b BlendMode} \{ {\b BLEND_ALPHA} = 0
, {\b BLEND_ADDITIVE}
, {\b BLEND_MULTIPLIED}
, {\b BLEND_ADD_COLORS}
, {\b BLEND_SUBTRACT_COLORS}
, {\b BLEND_ALPHA_PREMUL}
, {\b BLEND_CUSTOM}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Gesture} \{ {\b GESTURE_NONE} = 0
, {\b GESTURE_TAP} = 1
, {\b GESTURE_DOUBLETAP} = 2
, {\b GESTURE_HOLD} = 4
, {\b GESTURE_DRAG} = 8
, {\b GESTURE_SWIPE_RIGHT} = 16
, {\b GESTURE_SWIPE_LEFT} = 32
, {\b GESTURE_SWIPE_UP} = 64
, {\b GESTURE_SWIPE_DOWN} = 128
, {\b GESTURE_PINCH_IN} = 256
, {\b GESTURE_PINCH_OUT} = 512
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CameraMode} \{ {\b CAMERA_CUSTOM} = 0
, {\b CAMERA_FREE}
, {\b CAMERA_ORBITAL}
, {\b CAMERA_FIRST_PERSON}
, {\b CAMERA_THIRD_PERSON}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CameraProjection} \{ {\b CAMERA_PERSPECTIVE} = 0
, {\b CAMERA_ORTHOGRAPHIC}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b NPatchLayout} \{ {\b NPATCH_NINE_PATCH} = 0
, {\b NPATCH_THREE_PATCH_VERTICAL}
, {\b NPATCH_THREE_PATCH_HORIZONTAL}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b InitWindow} (int width, int height, const char *title)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b WindowShouldClose} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b CloseWindow} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsWindowReady} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsWindowFullscreen} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsWindowHidden} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsWindowMinimized} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsWindowMaximized} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsWindowFocused} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsWindowResized} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsWindowState} (unsigned int flag)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetWindowState} (unsigned int flags)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ClearWindowState} (unsigned int flags)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ToggleFullscreen} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b MaximizeWindow} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b MinimizeWindow} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b RestoreWindow} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetWindowIcon} ({\b Image} image)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetWindowTitle} (const char *title)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetWindowPosition} (int x, int y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetWindowMonitor} (int monitor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetWindowMinSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetWindowSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetWindowOpacity} (float opacity)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void * {\b GetWindowHandle} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetScreenWidth} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetScreenHeight} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetRenderWidth} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetRenderHeight} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetMonitorCount} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetCurrentMonitor} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Vector2} {\b GetMonitorPosition} (int monitor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetMonitorWidth} (int monitor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetMonitorHeight} (int monitor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetMonitorPhysicalWidth} (int monitor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetMonitorPhysicalHeight} (int monitor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetMonitorRefreshRate} (int monitor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Vector2} {\b GetWindowPosition} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Vector2} {\b GetWindowScaleDPI} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} const char * {\b GetMonitorName} (int monitor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetClipboardText} (const char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} const char * {\b GetClipboardText} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b EnableEventWaiting} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DisableEventWaiting} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SwapScreenBuffer} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b PollInputEvents} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b WaitTime} (float ms)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ShowCursor} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b HideCursor} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsCursorHidden} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b EnableCursor} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DisableCursor} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsCursorOnScreen} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ClearBackground} ({\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b BeginDrawing} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b EndDrawing} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b BeginMode2D} ({\b Camera2D} camera)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b EndMode2D} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b BeginMode3D} ({\b Camera3D} camera)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b EndMode3D} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b BeginTextureMode} ({\b RenderTexture2D} target)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b EndTextureMode} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b BeginShaderMode} ({\b Shader} shader)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b EndShaderMode} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b BeginBlendMode} (int mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b EndBlendMode} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b BeginScissorMode} (int x, int y, int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b EndScissorMode} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b BeginVrStereoMode} ({\b VrStereoConfig} config)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b EndVrStereoMode} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b VrStereoConfig} {\b LoadVrStereoConfig} ({\b VrDeviceInfo} device)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UnloadVrStereoConfig} ({\b VrStereoConfig} config)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Shader} {\b LoadShader} (const char *vsFileName, const char *fsFileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Shader} {\b LoadShaderFromMemory} (const char *vsCode, const char *fsCode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetShaderLocation} ({\b Shader} shader, const char *uniformName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetShaderLocationAttrib} ({\b Shader} shader, const char *attribName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetShaderValue} ({\b Shader} shader, int locIndex, const void *value, int uniformType)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetShaderValueV} ({\b Shader} shader, int locIndex, const void *value, int uniformType, int count)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetShaderValueMatrix} ({\b Shader} shader, int locIndex, {\b Matrix} mat)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetShaderValueTexture} ({\b Shader} shader, int locIndex, {\b Texture2D} texture)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UnloadShader} ({\b Shader} shader)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Ray} {\b GetMouseRay} ({\b Vector2} mousePosition, {\b Camera} camera)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Matrix} {\b GetCameraMatrix} ({\b Camera} camera)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Matrix} {\b GetCameraMatrix2D} ({\b Camera2D} camera)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Vector2} {\b GetWorldToScreen} ({\b Vector3} position, {\b Camera} camera)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Vector2} {\b GetScreenToWorld2D} ({\b Vector2} position, {\b Camera2D} camera)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Vector2} {\b GetWorldToScreenEx} ({\b Vector3} position, {\b Camera} camera, int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Vector2} {\b GetWorldToScreen2D} ({\b Vector2} position, {\b Camera2D} camera)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetTargetFPS} (int fps)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetFPS} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} float {\b GetFrameTime} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} double {\b GetTime} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetRandomValue} (int min, int max)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetRandomSeed} (unsigned int seed)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b TakeScreenshot} (const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetConfigFlags} (unsigned int flags)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b TraceLog} (int logLevel, const char *text,...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetTraceLogLevel} (int logLevel)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void * {\b MemAlloc} (int size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void * {\b MemRealloc} (void *ptr, int size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b MemFree} (void *ptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetTraceLogCallback} ({\b TraceLogCallback} callback)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetLoadFileDataCallback} ({\b LoadFileDataCallback} callback)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetSaveFileDataCallback} ({\b SaveFileDataCallback} callback)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetLoadFileTextCallback} ({\b LoadFileTextCallback} callback)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetSaveFileTextCallback} ({\b SaveFileTextCallback} callback)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} unsigned char * {\b LoadFileData} (const char *fileName, unsigned int *bytesRead)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UnloadFileData} (unsigned char *data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b SaveFileData} (const char *fileName, void *data, unsigned int bytesToWrite)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b ExportDataAsCode} (const char *data, unsigned int size, const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} char * {\b LoadFileText} (const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UnloadFileText} (char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b SaveFileText} (const char *fileName, char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b FileExists} (const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b DirectoryExists} (const char *dirPath)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsFileExtension} (const char *fileName, const char *ext)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetFileLength} (const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} const char * {\b GetFileExtension} (const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} const char * {\b GetFileName} (const char *filePath)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} const char * {\b GetFileNameWithoutExt} (const char *filePath)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} const char * {\b GetDirectoryPath} (const char *filePath)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} const char * {\b GetPrevDirectoryPath} (const char *dirPath)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} const char * {\b GetWorkingDirectory} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} const char * {\b GetApplicationDirectory} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} char ** {\b GetDirectoryFiles} (const char *dirPath, int *count)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ClearDirectoryFiles} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b ChangeDirectory} (const char *dir)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsFileDropped} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} char ** {\b GetDroppedFiles} (int *count)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ClearDroppedFiles} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} long {\b GetFileModTime} (const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} unsigned char * {\b CompressData} (const unsigned char *data, int dataSize, int *compDataSize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} unsigned char * {\b DecompressData} (const unsigned char *compData, int compDataSize, int *dataSize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} char * {\b EncodeDataBase64} (const unsigned char *data, int dataSize, int *outputSize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} unsigned char * {\b DecodeDataBase64} (const unsigned char *data, int *outputSize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b SaveStorageValue} (unsigned int position, int value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b LoadStorageValue} (unsigned int position)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b OpenURL} (const char *url)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsKeyPressed} (int key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsKeyDown} (int key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsKeyReleased} (int key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsKeyUp} (int key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetExitKey} (int key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetKeyPressed} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetCharPressed} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsGamepadAvailable} (int gamepad)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} const char * {\b GetGamepadName} (int gamepad)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsGamepadButtonPressed} (int gamepad, int button)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsGamepadButtonDown} (int gamepad, int button)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsGamepadButtonReleased} (int gamepad, int button)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsGamepadButtonUp} (int gamepad, int button)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetGamepadButtonPressed} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetGamepadAxisCount} (int gamepad)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} float {\b GetGamepadAxisMovement} (int gamepad, int axis)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b SetGamepadMappings} (const char *mappings)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsMouseButtonPressed} (int button)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsMouseButtonDown} (int button)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsMouseButtonReleased} (int button)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsMouseButtonUp} (int button)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetMouseX} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetMouseY} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Vector2} {\b GetMousePosition} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Vector2} {\b GetMouseDelta} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetMousePosition} (int x, int y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetMouseOffset} (int offsetX, int offsetY)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetMouseScale} (float scaleX, float scaleY)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} float {\b GetMouseWheelMove} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetMouseCursor} (int cursor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetTouchX} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetTouchY} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Vector2} {\b GetTouchPosition} (int index)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetTouchPointId} (int index)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetTouchPointCount} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetGesturesEnabled} (unsigned int flags)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsGestureDetected} (int gesture)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetGestureDetected} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} float {\b GetGestureHoldDuration} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Vector2} {\b GetGestureDragVector} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} float {\b GetGestureDragAngle} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Vector2} {\b GetGesturePinchVector} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} float {\b GetGesturePinchAngle} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetCameraMode} ({\b Camera} camera, int mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UpdateCamera} ({\b Camera} *camera)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetCameraPanControl} (int keyPan)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetCameraAltControl} (int keyAlt)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetCameraSmoothZoomControl} (int keySmoothZoom)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetCameraMoveControls} (int keyFront, int keyBack, int keyRight, int keyLeft, int keyUp, int keyDown)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetShapesTexture} ({\b Texture2D} texture, {\b Rectangle} source)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawPixel} (int posX, int posY, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawPixelV} ({\b Vector2} position, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawLine} (int startPosX, int startPosY, int endPosX, int endPosY, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawLineV} ({\b Vector2} startPos, {\b Vector2} endPos, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawLineEx} ({\b Vector2} startPos, {\b Vector2} endPos, float thick, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawLineBezier} ({\b Vector2} startPos, {\b Vector2} endPos, float thick, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawLineBezierQuad} ({\b Vector2} startPos, {\b Vector2} endPos, {\b Vector2} controlPos, float thick, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawLineBezierCubic} ({\b Vector2} startPos, {\b Vector2} endPos, {\b Vector2} startControlPos, {\b Vector2} endControlPos, float thick, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawLineStrip} ({\b Vector2} *points, int pointCount, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawCircle} (int centerX, int centerY, float radius, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawCircleSector} ({\b Vector2} center, float radius, float startAngle, float endAngle, int segments, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawCircleSectorLines} ({\b Vector2} center, float radius, float startAngle, float endAngle, int segments, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawCircleGradient} (int centerX, int centerY, float radius, {\b Color} color1, {\b Color} color2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawCircleV} ({\b Vector2} center, float radius, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawCircleLines} (int centerX, int centerY, float radius, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawEllipse} (int centerX, int centerY, float radiusH, float radiusV, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawEllipseLines} (int centerX, int centerY, float radiusH, float radiusV, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawRing} ({\b Vector2} center, float innerRadius, float outerRadius, float startAngle, float endAngle, int segments, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawRingLines} ({\b Vector2} center, float innerRadius, float outerRadius, float startAngle, float endAngle, int segments, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawRectangle} (int posX, int posY, int width, int height, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawRectangleV} ({\b Vector2} position, {\b Vector2} size, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawRectangleRec} ({\b Rectangle} rec, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawRectanglePro} ({\b Rectangle} rec, {\b Vector2} origin, float rotation, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawRectangleGradientV} (int posX, int posY, int width, int height, {\b Color} color1, {\b Color} color2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawRectangleGradientH} (int posX, int posY, int width, int height, {\b Color} color1, {\b Color} color2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawRectangleGradientEx} ({\b Rectangle} rec, {\b Color} col1, {\b Color} col2, {\b Color} col3, {\b Color} col4)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawRectangleLines} (int posX, int posY, int width, int height, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawRectangleLinesEx} ({\b Rectangle} rec, float lineThick, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawRectangleRounded} ({\b Rectangle} rec, float roundness, int segments, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawRectangleRoundedLines} ({\b Rectangle} rec, float roundness, int segments, float lineThick, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawTriangle} ({\b Vector2} v1, {\b Vector2} v2, {\b Vector2} v3, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawTriangleLines} ({\b Vector2} v1, {\b Vector2} v2, {\b Vector2} v3, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawTriangleFan} ({\b Vector2} *points, int pointCount, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawTriangleStrip} ({\b Vector2} *points, int pointCount, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawPoly} ({\b Vector2} center, int sides, float radius, float rotation, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawPolyLines} ({\b Vector2} center, int sides, float radius, float rotation, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawPolyLinesEx} ({\b Vector2} center, int sides, float radius, float rotation, float lineThick, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b CheckCollisionRecs} ({\b Rectangle} rec1, {\b Rectangle} rec2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b CheckCollisionCircles} ({\b Vector2} center1, float radius1, {\b Vector2} center2, float radius2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b CheckCollisionCircleRec} ({\b Vector2} center, float radius, {\b Rectangle} rec)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b CheckCollisionPointRec} ({\b Vector2} point, {\b Rectangle} rec)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b CheckCollisionPointCircle} ({\b Vector2} point, {\b Vector2} center, float radius)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b CheckCollisionPointTriangle} ({\b Vector2} point, {\b Vector2} p1, {\b Vector2} p2, {\b Vector2} p3)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b CheckCollisionLines} ({\b Vector2} startPos1, {\b Vector2} endPos1, {\b Vector2} startPos2, {\b Vector2} endPos2, {\b Vector2} *collisionPoint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b CheckCollisionPointLine} ({\b Vector2} point, {\b Vector2} p1, {\b Vector2} p2, int threshold)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Rectangle} {\b GetCollisionRec} ({\b Rectangle} rec1, {\b Rectangle} rec2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Image} {\b LoadImage} (const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Image} {\b LoadImageRaw} (const char *fileName, int width, int height, int format, int headerSize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Image} {\b LoadImageAnim} (const char *fileName, int *frames)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Image} {\b LoadImageFromMemory} (const char *fileType, const unsigned char *fileData, int dataSize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Image} {\b LoadImageFromTexture} ({\b Texture2D} texture)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Image} {\b LoadImageFromScreen} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UnloadImage} ({\b Image} image)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b ExportImage} ({\b Image} image, const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b ExportImageAsCode} ({\b Image} image, const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Image} {\b GenImageColor} (int width, int height, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Image} {\b GenImageGradientV} (int width, int height, {\b Color} top, {\b Color} bottom)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Image} {\b GenImageGradientH} (int width, int height, {\b Color} left, {\b Color} right)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Image} {\b GenImageGradientRadial} (int width, int height, float density, {\b Color} inner, {\b Color} outer)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Image} {\b GenImageChecked} (int width, int height, int checksX, int checksY, {\b Color} col1, {\b Color} col2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Image} {\b GenImageWhiteNoise} (int width, int height, float factor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Image} {\b GenImageCellular} (int width, int height, int tileSize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Image} {\b ImageCopy} ({\b Image} image)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Image} {\b ImageFromImage} ({\b Image} image, {\b Rectangle} rec)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Image} {\b ImageText} (const char *text, int fontSize, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Image} {\b ImageTextEx} ({\b Font} font, const char *text, float fontSize, float spacing, {\b Color} tint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageFormat} ({\b Image} *image, int newFormat)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageToPOT} ({\b Image} *image, {\b Color} fill)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageCrop} ({\b Image} *image, {\b Rectangle} crop)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageAlphaCrop} ({\b Image} *image, float threshold)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageAlphaClear} ({\b Image} *image, {\b Color} color, float threshold)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageAlphaMask} ({\b Image} *image, {\b Image} alphaMask)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageAlphaPremultiply} ({\b Image} *image)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageResize} ({\b Image} *image, int newWidth, int newHeight)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageResizeNN} ({\b Image} *image, int newWidth, int newHeight)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageResizeCanvas} ({\b Image} *image, int newWidth, int newHeight, int offsetX, int offsetY, {\b Color} fill)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageMipmaps} ({\b Image} *image)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageDither} ({\b Image} *image, int rBpp, int gBpp, int bBpp, int aBpp)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageFlipVertical} ({\b Image} *image)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageFlipHorizontal} ({\b Image} *image)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageRotateCW} ({\b Image} *image)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageRotateCCW} ({\b Image} *image)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageColorTint} ({\b Image} *image, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageColorInvert} ({\b Image} *image)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageColorGrayscale} ({\b Image} *image)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageColorContrast} ({\b Image} *image, float contrast)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageColorBrightness} ({\b Image} *image, int brightness)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageColorReplace} ({\b Image} *image, {\b Color} color, {\b Color} replace)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Color} * {\b LoadImageColors} ({\b Image} image)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Color} * {\b LoadImagePalette} ({\b Image} image, int maxPaletteSize, int *colorCount)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UnloadImageColors} ({\b Color} *colors)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UnloadImagePalette} ({\b Color} *colors)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Rectangle} {\b GetImageAlphaBorder} ({\b Image} image, float threshold)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Color} {\b GetImageColor} ({\b Image} image, int x, int y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageClearBackground} ({\b Image} *dst, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageDrawPixel} ({\b Image} *dst, int posX, int posY, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageDrawPixelV} ({\b Image} *dst, {\b Vector2} position, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageDrawLine} ({\b Image} *dst, int startPosX, int startPosY, int endPosX, int endPosY, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageDrawLineV} ({\b Image} *dst, {\b Vector2} start, {\b Vector2} end, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageDrawCircle} ({\b Image} *dst, int centerX, int centerY, int radius, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageDrawCircleV} ({\b Image} *dst, {\b Vector2} center, int radius, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageDrawRectangle} ({\b Image} *dst, int posX, int posY, int width, int height, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageDrawRectangleV} ({\b Image} *dst, {\b Vector2} position, {\b Vector2} size, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageDrawRectangleRec} ({\b Image} *dst, {\b Rectangle} rec, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageDrawRectangleLines} ({\b Image} *dst, {\b Rectangle} rec, int thick, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageDraw} ({\b Image} *dst, {\b Image} src, {\b Rectangle} srcRec, {\b Rectangle} dstRec, {\b Color} tint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageDrawText} ({\b Image} *dst, const char *text, int posX, int posY, int fontSize, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ImageDrawTextEx} ({\b Image} *dst, {\b Font} font, const char *text, {\b Vector2} position, float fontSize, float spacing, {\b Color} tint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Texture2D} {\b LoadTexture} (const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Texture2D} {\b LoadTextureFromImage} ({\b Image} image)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b TextureCubemap} {\b LoadTextureCubemap} ({\b Image} image, int layout)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b RenderTexture2D} {\b LoadRenderTexture} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UnloadTexture} ({\b Texture2D} texture)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UnloadRenderTexture} ({\b RenderTexture2D} target)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UpdateTexture} ({\b Texture2D} texture, const void *pixels)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UpdateTextureRec} ({\b Texture2D} texture, {\b Rectangle} rec, const void *pixels)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b GenTextureMipmaps} ({\b Texture2D} *texture)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetTextureFilter} ({\b Texture2D} texture, int filter)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetTextureWrap} ({\b Texture2D} texture, int wrap)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawTexture} ({\b Texture2D} texture, int posX, int posY, {\b Color} tint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawTextureV} ({\b Texture2D} texture, {\b Vector2} position, {\b Color} tint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawTextureEx} ({\b Texture2D} texture, {\b Vector2} position, float rotation, float scale, {\b Color} tint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawTextureRec} ({\b Texture2D} texture, {\b Rectangle} source, {\b Vector2} position, {\b Color} tint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawTextureQuad} ({\b Texture2D} texture, {\b Vector2} tiling, {\b Vector2} offset, {\b Rectangle} quad, {\b Color} tint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawTextureTiled} ({\b Texture2D} texture, {\b Rectangle} source, {\b Rectangle} dest, {\b Vector2} origin, float rotation, float scale, {\b Color} tint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawTexturePro} ({\b Texture2D} texture, {\b Rectangle} source, {\b Rectangle} dest, {\b Vector2} origin, float rotation, {\b Color} tint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawTextureNPatch} ({\b Texture2D} texture, {\b NPatchInfo} nPatchInfo, {\b Rectangle} dest, {\b Vector2} origin, float rotation, {\b Color} tint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawTexturePoly} ({\b Texture2D} texture, {\b Vector2} center, {\b Vector2} *points, {\b Vector2} *texcoords, int pointCount, {\b Color} tint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Color} {\b Fade} ({\b Color} color, float alpha)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b ColorToInt} ({\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Vector4} {\b ColorNormalize} ({\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Color} {\b ColorFromNormalized} ({\b Vector4} normalized)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Vector3} {\b ColorToHSV} ({\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Color} {\b ColorFromHSV} (float hue, float saturation, float value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Color} {\b ColorAlpha} ({\b Color} color, float alpha)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Color} {\b ColorAlphaBlend} ({\b Color} dst, {\b Color} src, {\b Color} tint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Color} {\b GetColor} (unsigned int hexValue)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Color} {\b GetPixelColor} (void *srcPtr, int format)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetPixelColor} (void *dstPtr, {\b Color} color, int format)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetPixelDataSize} (int width, int height, int format)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Font} {\b GetFontDefault} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Font} {\b LoadFont} (const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Font} {\b LoadFontEx} (const char *fileName, int fontSize, int *fontChars, int glyphCount)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Font} {\b LoadFontFromImage} ({\b Image} image, {\b Color} key, int firstChar)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Font} {\b LoadFontFromMemory} (const char *fileType, const unsigned char *fileData, int dataSize, int fontSize, int *fontChars, int glyphCount)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b GlyphInfo} * {\b LoadFontData} (const unsigned char *fileData, int dataSize, int fontSize, int *fontChars, int glyphCount, int type)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Image} {\b GenImageFontAtlas} (const {\b GlyphInfo} *chars, {\b Rectangle} **recs, int glyphCount, int fontSize, int padding, int packMethod)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UnloadFontData} ({\b GlyphInfo} *chars, int glyphCount)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UnloadFont} ({\b Font} font)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b ExportFontAsCode} ({\b Font} font, const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawFPS} (int posX, int posY)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawText} (const char *text, int posX, int posY, int fontSize, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawTextEx} ({\b Font} font, const char *text, {\b Vector2} position, float fontSize, float spacing, {\b Color} tint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawTextPro} ({\b Font} font, const char *text, {\b Vector2} position, {\b Vector2} origin, float rotation, float fontSize, float spacing, {\b Color} tint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawTextCodepoint} ({\b Font} font, int codepoint, {\b Vector2} position, float fontSize, {\b Color} tint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawTextCodepoints} ({\b Font} font, const int *codepoints, int count, {\b Vector2} position, float fontSize, float spacing, {\b Color} tint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b MeasureText} (const char *text, int fontSize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Vector2} {\b MeasureTextEx} ({\b Font} font, const char *text, float fontSize, float spacing)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetGlyphIndex} ({\b Font} font, int codepoint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b GlyphInfo} {\b GetGlyphInfo} ({\b Font} font, int codepoint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Rectangle} {\b GetGlyphAtlasRec} ({\b Font} font, int codepoint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int * {\b LoadCodepoints} (const char *text, int *count)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UnloadCodepoints} (int *codepoints)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetCodepointCount} (const char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetCodepoint} (const char *text, int *bytesProcessed)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} const char * {\b CodepointToUTF8} (int codepoint, int *byteSize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} char * {\b TextCodepointsToUTF8} (const int *codepoints, int length)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b TextCopy} (char *dst, const char *src)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b TextIsEqual} (const char *text1, const char *text2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} unsigned int {\b TextLength} (const char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} const char * {\b TextFormat} (const char *text,...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} const char * {\b TextSubtext} (const char *text, int position, int length)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} char * {\b TextReplace} (char *text, const char *replace, const char *by)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} char * {\b TextInsert} (const char *text, const char *insert, int position)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} const char * {\b TextJoin} (const char **textList, int count, const char *delimiter)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} const char ** {\b TextSplit} (const char *text, char delimiter, int *count)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b TextAppend} (char *text, const char *append, int *position)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b TextFindIndex} (const char *text, const char *find)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} const char * {\b TextToUpper} (const char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} const char * {\b TextToLower} (const char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} const char * {\b TextToPascal} (const char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b TextToInteger} (const char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawLine3D} ({\b Vector3} startPos, {\b Vector3} endPos, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawPoint3D} ({\b Vector3} position, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawCircle3D} ({\b Vector3} center, float radius, {\b Vector3} rotationAxis, float rotationAngle, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawTriangle3D} ({\b Vector3} v1, {\b Vector3} v2, {\b Vector3} v3, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawTriangleStrip3D} ({\b Vector3} *points, int pointCount, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawCube} ({\b Vector3} position, float width, float height, float length, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawCubeV} ({\b Vector3} position, {\b Vector3} size, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawCubeWires} ({\b Vector3} position, float width, float height, float length, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawCubeWiresV} ({\b Vector3} position, {\b Vector3} size, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawCubeTexture} ({\b Texture2D} texture, {\b Vector3} position, float width, float height, float length, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawCubeTextureRec} ({\b Texture2D} texture, {\b Rectangle} source, {\b Vector3} position, float width, float height, float length, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawSphere} ({\b Vector3} centerPos, float radius, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawSphereEx} ({\b Vector3} centerPos, float radius, int rings, int slices, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawSphereWires} ({\b Vector3} centerPos, float radius, int rings, int slices, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawCylinder} ({\b Vector3} position, float radiusTop, float radiusBottom, float height, int slices, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawCylinderEx} ({\b Vector3} startPos, {\b Vector3} endPos, float startRadius, float endRadius, int sides, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawCylinderWires} ({\b Vector3} position, float radiusTop, float radiusBottom, float height, int slices, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawCylinderWiresEx} ({\b Vector3} startPos, {\b Vector3} endPos, float startRadius, float endRadius, int sides, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawPlane} ({\b Vector3} centerPos, {\b Vector2} size, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawRay} ({\b Ray} ray, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawGrid} (int slices, float spacing)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Model} {\b LoadModel} (const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Model} {\b LoadModelFromMesh} ({\b Mesh} mesh)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UnloadModel} ({\b Model} model)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UnloadModelKeepMeshes} ({\b Model} model)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b BoundingBox} {\b GetModelBoundingBox} ({\b Model} model)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawModel} ({\b Model} model, {\b Vector3} position, float scale, {\b Color} tint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawModelEx} ({\b Model} model, {\b Vector3} position, {\b Vector3} rotationAxis, float rotationAngle, {\b Vector3} scale, {\b Color} tint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawModelWires} ({\b Model} model, {\b Vector3} position, float scale, {\b Color} tint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawModelWiresEx} ({\b Model} model, {\b Vector3} position, {\b Vector3} rotationAxis, float rotationAngle, {\b Vector3} scale, {\b Color} tint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawBoundingBox} ({\b BoundingBox} box, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawBillboard} ({\b Camera} camera, {\b Texture2D} texture, {\b Vector3} position, float size, {\b Color} tint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawBillboardRec} ({\b Camera} camera, {\b Texture2D} texture, {\b Rectangle} source, {\b Vector3} position, {\b Vector2} size, {\b Color} tint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawBillboardPro} ({\b Camera} camera, {\b Texture2D} texture, {\b Rectangle} source, {\b Vector3} position, {\b Vector3} up, {\b Vector2} size, {\b Vector2} origin, float rotation, {\b Color} tint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UploadMesh} ({\b Mesh} *mesh, {\b bool} dynamic)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UpdateMeshBuffer} ({\b Mesh} mesh, int index, const void *data, int dataSize, int offset)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UnloadMesh} ({\b Mesh} mesh)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawMesh} ({\b Mesh} mesh, {\b Material} material, {\b Matrix} transform)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DrawMeshInstanced} ({\b Mesh} mesh, {\b Material} material, const {\b Matrix} *transforms, int instances)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b ExportMesh} ({\b Mesh} mesh, const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b BoundingBox} {\b GetMeshBoundingBox} ({\b Mesh} mesh)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b GenMeshTangents} ({\b Mesh} *mesh)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b GenMeshBinormals} ({\b Mesh} *mesh)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Mesh} {\b GenMeshPoly} (int sides, float radius)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Mesh} {\b GenMeshPlane} (float width, float length, int resX, int resZ)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Mesh} {\b GenMeshCube} (float width, float height, float length)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Mesh} {\b GenMeshSphere} (float radius, int rings, int slices)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Mesh} {\b GenMeshHemiSphere} (float radius, int rings, int slices)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Mesh} {\b GenMeshCylinder} (float radius, float height, int slices)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Mesh} {\b GenMeshCone} (float radius, float height, int slices)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Mesh} {\b GenMeshTorus} (float radius, float size, int radSeg, int sides)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Mesh} {\b GenMeshKnot} (float radius, float size, int radSeg, int sides)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Mesh} {\b GenMeshHeightmap} ({\b Image} heightmap, {\b Vector3} size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Mesh} {\b GenMeshCubicmap} ({\b Image} cubicmap, {\b Vector3} cubeSize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Material} * {\b LoadMaterials} (const char *fileName, int *materialCount)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Material} {\b LoadMaterialDefault} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UnloadMaterial} ({\b Material} material)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetMaterialTexture} ({\b Material} *material, int mapType, {\b Texture2D} texture)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetModelMeshMaterial} ({\b Model} *model, int meshId, int materialId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b ModelAnimation} * {\b LoadModelAnimations} (const char *fileName, unsigned int *animCount)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UpdateModelAnimation} ({\b Model} model, {\b ModelAnimation} anim, int frame)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UnloadModelAnimation} ({\b ModelAnimation} anim)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UnloadModelAnimations} ({\b ModelAnimation} *animations, unsigned int count)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsModelAnimationValid} ({\b Model} model, {\b ModelAnimation} anim)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b CheckCollisionSpheres} ({\b Vector3} center1, float radius1, {\b Vector3} center2, float radius2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b CheckCollisionBoxes} ({\b BoundingBox} box1, {\b BoundingBox} box2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b CheckCollisionBoxSphere} ({\b BoundingBox} box, {\b Vector3} center, float radius)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b RayCollision} {\b GetRayCollisionSphere} ({\b Ray} ray, {\b Vector3} center, float radius)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b RayCollision} {\b GetRayCollisionBox} ({\b Ray} ray, {\b BoundingBox} box)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b RayCollision} {\b GetRayCollisionMesh} ({\b Ray} ray, {\b Mesh} mesh, {\b Matrix} transform)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b RayCollision} {\b GetRayCollisionTriangle} ({\b Ray} ray, {\b Vector3} p1, {\b Vector3} p2, {\b Vector3} p3)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b RayCollision} {\b GetRayCollisionQuad} ({\b Ray} ray, {\b Vector3} p1, {\b Vector3} p2, {\b Vector3} p3, {\b Vector3} p4)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b InitAudioDevice} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b CloseAudioDevice} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsAudioDeviceReady} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetMasterVolume} (float volume)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Wave} {\b LoadWave} (const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Wave} {\b LoadWaveFromMemory} (const char *fileType, const unsigned char *fileData, int dataSize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Sound} {\b LoadSound} (const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Sound} {\b LoadSoundFromWave} ({\b Wave} wave)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UpdateSound} ({\b Sound} sound, const void *data, int sampleCount)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UnloadWave} ({\b Wave} wave)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UnloadSound} ({\b Sound} sound)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b ExportWave} ({\b Wave} wave, const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b ExportWaveAsCode} ({\b Wave} wave, const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b PlaySound} ({\b Sound} sound)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b StopSound} ({\b Sound} sound)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b PauseSound} ({\b Sound} sound)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ResumeSound} ({\b Sound} sound)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b PlaySoundMulti} ({\b Sound} sound)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b StopSoundMulti} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} int {\b GetSoundsPlaying} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsSoundPlaying} ({\b Sound} sound)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetSoundVolume} ({\b Sound} sound, float volume)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetSoundPitch} ({\b Sound} sound, float pitch)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetSoundPan} ({\b Sound} sound, float pan)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Wave} {\b WaveCopy} ({\b Wave} wave)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b WaveCrop} ({\b Wave} *wave, int initSample, int finalSample)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b WaveFormat} ({\b Wave} *wave, int sampleRate, int sampleSize, int channels)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} float * {\b LoadWaveSamples} ({\b Wave} wave)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UnloadWaveSamples} (float *samples)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Music} {\b LoadMusicStream} (const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b Music} {\b LoadMusicStreamFromMemory} (const char *fileType, const unsigned char *data, int dataSize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UnloadMusicStream} ({\b Music} music)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b PlayMusicStream} ({\b Music} music)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsMusicStreamPlaying} ({\b Music} music)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UpdateMusicStream} ({\b Music} music)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b StopMusicStream} ({\b Music} music)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b PauseMusicStream} ({\b Music} music)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ResumeMusicStream} ({\b Music} music)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SeekMusicStream} ({\b Music} music, float position)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetMusicVolume} ({\b Music} music, float volume)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetMusicPitch} ({\b Music} music, float pitch)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetMusicPan} ({\b Music} music, float pan)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} float {\b GetMusicTimeLength} ({\b Music} music)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} float {\b GetMusicTimePlayed} ({\b Music} music)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b AudioStream} {\b LoadAudioStream} (unsigned int sampleRate, unsigned int sampleSize, unsigned int channels)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UnloadAudioStream} ({\b AudioStream} stream)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b UpdateAudioStream} ({\b AudioStream} stream, const void *data, int frameCount)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsAudioStreamProcessed} ({\b AudioStream} stream)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b PlayAudioStream} ({\b AudioStream} stream)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b PauseAudioStream} ({\b AudioStream} stream)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b ResumeAudioStream} ({\b AudioStream} stream)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} {\b bool} {\b IsAudioStreamPlaying} ({\b AudioStream} stream)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b StopAudioStream} ({\b AudioStream} stream)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetAudioStreamVolume} ({\b AudioStream} stream, float volume)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetAudioStreamPitch} ({\b AudioStream} stream, float pitch)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetAudioStreamPan} ({\b AudioStream} stream, float pan)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetAudioStreamBufferSizeDefault} (int size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b SetAudioStreamCallback} ({\b AudioStream} stream, {\b AudioCallback} callback)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b AttachAudioStreamProcessor} ({\b AudioStream} stream, {\b AudioCallback} processor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RLAPI} void {\b DetachAudioStreamProcessor} ({\b AudioStream} stream, {\b AudioCallback} processor)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v BEIGE\:raylib.h}
{\xe \v raylib.h\:BEIGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BEIGE\~ {\b CLITERAL}({\b Color})\{ 211, 176, 131, 255 \}}}
\par
{\bkmkstart AAAAAAABFW}
{\bkmkend AAAAAAABFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BLACK\:raylib.h}
{\xe \v raylib.h\:BLACK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BLACK\~ {\b CLITERAL}({\b Color})\{ 0, 0, 0, 255 \}}}
\par
{\bkmkstart AAAAAAABFX}
{\bkmkend AAAAAAABFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BLANK\:raylib.h}
{\xe \v raylib.h\:BLANK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BLANK\~ {\b CLITERAL}({\b Color})\{ 0, 0, 0, 0 \}}}
\par
{\bkmkstart AAAAAAABFY}
{\bkmkend AAAAAAABFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BLUE\:raylib.h}
{\xe \v raylib.h\:BLUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BLUE\~ {\b CLITERAL}({\b Color})\{ 0, 121, 241, 255 \}}}
\par
{\bkmkstart AAAAAAABFZ}
{\bkmkend AAAAAAABFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BROWN\:raylib.h}
{\xe \v raylib.h\:BROWN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BROWN\~ {\b CLITERAL}({\b Color})\{ 127, 106, 79, 255 \}}}
\par
{\bkmkstart AAAAAAABGA}
{\bkmkend AAAAAAABGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CLITERAL\:raylib.h}
{\xe \v raylib.h\:CLITERAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CLITERAL( type)\~ (type)}}
\par
{\bkmkstart AAAAAAABGB}
{\bkmkend AAAAAAABGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DARKBLUE\:raylib.h}
{\xe \v raylib.h\:DARKBLUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DARKBLUE\~ {\b CLITERAL}({\b Color})\{ 0, 82, 172, 255 \}}}
\par
{\bkmkstart AAAAAAABGC}
{\bkmkend AAAAAAABGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DARKBROWN\:raylib.h}
{\xe \v raylib.h\:DARKBROWN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DARKBROWN\~ {\b CLITERAL}({\b Color})\{ 76, 63, 47, 255 \}}}
\par
{\bkmkstart AAAAAAABGD}
{\bkmkend AAAAAAABGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DARKGRAY\:raylib.h}
{\xe \v raylib.h\:DARKGRAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DARKGRAY\~ {\b CLITERAL}({\b Color})\{ 80, 80, 80, 255 \}}}
\par
{\bkmkstart AAAAAAABGE}
{\bkmkend AAAAAAABGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DARKGREEN\:raylib.h}
{\xe \v raylib.h\:DARKGREEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DARKGREEN\~ {\b CLITERAL}({\b Color})\{ 0, 117, 44, 255 \}}}
\par
{\bkmkstart AAAAAAABGF}
{\bkmkend AAAAAAABGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DARKPURPLE\:raylib.h}
{\xe \v raylib.h\:DARKPURPLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DARKPURPLE\~ {\b CLITERAL}({\b Color})\{ 112, 31, 126, 255 \}}}
\par
{\bkmkstart AAAAAAABGG}
{\bkmkend AAAAAAABGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DEG2RAD\:raylib.h}
{\xe \v raylib.h\:DEG2RAD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEG2RAD\~ ({\b PI}/180.0f)}}
\par
{\bkmkstart AAAAAAABGH}
{\bkmkend AAAAAAABGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GOLD\:raylib.h}
{\xe \v raylib.h\:GOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GOLD\~ {\b CLITERAL}({\b Color})\{ 255, 203, 0, 255 \}}}
\par
{\bkmkstart AAAAAAABGI}
{\bkmkend AAAAAAABGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GRAY\:raylib.h}
{\xe \v raylib.h\:GRAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GRAY\~ {\b CLITERAL}({\b Color})\{ 130, 130, 130, 255 \}}}
\par
{\bkmkstart AAAAAAABGJ}
{\bkmkend AAAAAAABGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GREEN\:raylib.h}
{\xe \v raylib.h\:GREEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GREEN\~ {\b CLITERAL}({\b Color})\{ 0, 228, 48, 255 \}}}
\par
{\bkmkstart AAAAAAABGK}
{\bkmkend AAAAAAABGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LIGHTGRAY\:raylib.h}
{\xe \v raylib.h\:LIGHTGRAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LIGHTGRAY\~ {\b CLITERAL}({\b Color})\{ 200, 200, 200, 255 \}}}
\par
{\bkmkstart AAAAAAABGL}
{\bkmkend AAAAAAABGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LIME\:raylib.h}
{\xe \v raylib.h\:LIME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LIME\~ {\b CLITERAL}({\b Color})\{ 0, 158, 47, 255 \}}}
\par
{\bkmkstart AAAAAAABGM}
{\bkmkend AAAAAAABGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAGENTA\:raylib.h}
{\xe \v raylib.h\:MAGENTA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAGENTA\~ {\b CLITERAL}({\b Color})\{ 255, 0, 255, 255 \}}}
\par
{\bkmkstart AAAAAAABGN}
{\bkmkend AAAAAAABGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAROON\:raylib.h}
{\xe \v raylib.h\:MAROON}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAROON\~ {\b CLITERAL}({\b Color})\{ 190, 33, 55, 255 \}}}
\par
{\bkmkstart AAAAAAABGO}
{\bkmkend AAAAAAABGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MATERIAL_MAP_DIFFUSE\:raylib.h}
{\xe \v raylib.h\:MATERIAL_MAP_DIFFUSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MATERIAL_MAP_DIFFUSE\~ {\b MATERIAL_MAP_ALBEDO}}}
\par
{\bkmkstart AAAAAAABGP}
{\bkmkend AAAAAAABGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MATERIAL_MAP_SPECULAR\:raylib.h}
{\xe \v raylib.h\:MATERIAL_MAP_SPECULAR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MATERIAL_MAP_SPECULAR\~ {\b MATERIAL_MAP_METALNESS}}}
\par
{\bkmkstart AAAAAAABGQ}
{\bkmkend AAAAAAABGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MOUSE_LEFT_BUTTON\:raylib.h}
{\xe \v raylib.h\:MOUSE_LEFT_BUTTON}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MOUSE_LEFT_BUTTON\~ {\b MOUSE_BUTTON_LEFT}}}
\par
{\bkmkstart AAAAAAABGR}
{\bkmkend AAAAAAABGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MOUSE_MIDDLE_BUTTON\:raylib.h}
{\xe \v raylib.h\:MOUSE_MIDDLE_BUTTON}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MOUSE_MIDDLE_BUTTON\~ {\b MOUSE_BUTTON_MIDDLE}}}
\par
{\bkmkstart AAAAAAABGS}
{\bkmkend AAAAAAABGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MOUSE_RIGHT_BUTTON\:raylib.h}
{\xe \v raylib.h\:MOUSE_RIGHT_BUTTON}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MOUSE_RIGHT_BUTTON\~ {\b MOUSE_BUTTON_RIGHT}}}
\par
{\bkmkstart AAAAAAABGT}
{\bkmkend AAAAAAABGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ORANGE\:raylib.h}
{\xe \v raylib.h\:ORANGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ORANGE\~ {\b CLITERAL}({\b Color})\{ 255, 161, 0, 255 \}}}
\par
{\bkmkstart AAAAAAABGU}
{\bkmkend AAAAAAABGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PI\:raylib.h}
{\xe \v raylib.h\:PI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PI\~ 3.14159265358979323846f}}
\par
{\bkmkstart AAAAAAABGV}
{\bkmkend AAAAAAABGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PINK\:raylib.h}
{\xe \v raylib.h\:PINK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PINK\~ {\b CLITERAL}({\b Color})\{ 255, 109, 194, 255 \}}}
\par
{\bkmkstart AAAAAAABGW}
{\bkmkend AAAAAAABGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PURPLE\:raylib.h}
{\xe \v raylib.h\:PURPLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PURPLE\~ {\b CLITERAL}({\b Color})\{ 200, 122, 255, 255 \}}}
\par
{\bkmkstart AAAAAAABGX}
{\bkmkend AAAAAAABGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RAD2DEG\:raylib.h}
{\xe \v raylib.h\:RAD2DEG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RAD2DEG\~ (180.0f/{\b PI})}}
\par
{\bkmkstart AAAAAAABGY}
{\bkmkend AAAAAAABGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RAYLIB_VERSION\:raylib.h}
{\xe \v raylib.h\:RAYLIB_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RAYLIB_VERSION\~ "4.1-dev"}}
\par
{\bkmkstart AAAAAAABGZ}
{\bkmkend AAAAAAABGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RAYWHITE\:raylib.h}
{\xe \v raylib.h\:RAYWHITE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RAYWHITE\~ {\b CLITERAL}({\b Color})\{ 245, 245, 245, 255 \}}}
\par
{\bkmkstart AAAAAAABHA}
{\bkmkend AAAAAAABHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RED\:raylib.h}
{\xe \v raylib.h\:RED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RED\~ {\b CLITERAL}({\b Color})\{ 230, 41, 55, 255 \}}}
\par
{\bkmkstart AAAAAAABHB}
{\bkmkend AAAAAAABHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RL_BOOL_TYPE\:raylib.h}
{\xe \v raylib.h\:RL_BOOL_TYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RL_BOOL_TYPE}}
\par
{\bkmkstart AAAAAAABHC}
{\bkmkend AAAAAAABHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RL_CALLOC\:raylib.h}
{\xe \v raylib.h\:RL_CALLOC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RL_CALLOC( n,  sz)\~ calloc(n,sz)}}
\par
{\bkmkstart AAAAAAABHD}
{\bkmkend AAAAAAABHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RL_COLOR_TYPE\:raylib.h}
{\xe \v raylib.h\:RL_COLOR_TYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RL_COLOR_TYPE}}
\par
{\bkmkstart AAAAAAABHE}
{\bkmkend AAAAAAABHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RL_FREE\:raylib.h}
{\xe \v raylib.h\:RL_FREE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RL_FREE( ptr)\~ free(ptr)}}
\par
{\bkmkstart AAAAAAABHF}
{\bkmkend AAAAAAABHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RL_MALLOC\:raylib.h}
{\xe \v raylib.h\:RL_MALLOC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RL_MALLOC( sz)\~ malloc(sz)}}
\par
{\bkmkstart AAAAAAABHG}
{\bkmkend AAAAAAABHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RL_MATRIX_TYPE\:raylib.h}
{\xe \v raylib.h\:RL_MATRIX_TYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RL_MATRIX_TYPE}}
\par
{\bkmkstart AAAAAAABHH}
{\bkmkend AAAAAAABHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RL_QUATERNION_TYPE\:raylib.h}
{\xe \v raylib.h\:RL_QUATERNION_TYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RL_QUATERNION_TYPE}}
\par
{\bkmkstart AAAAAAABHI}
{\bkmkend AAAAAAABHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RL_REALLOC\:raylib.h}
{\xe \v raylib.h\:RL_REALLOC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RL_REALLOC( ptr,  sz)\~ realloc(ptr,sz)}}
\par
{\bkmkstart AAAAAAABHJ}
{\bkmkend AAAAAAABHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RL_RECTANGLE_TYPE\:raylib.h}
{\xe \v raylib.h\:RL_RECTANGLE_TYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RL_RECTANGLE_TYPE}}
\par
{\bkmkstart AAAAAAABHK}
{\bkmkend AAAAAAABHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RL_VECTOR2_TYPE\:raylib.h}
{\xe \v raylib.h\:RL_VECTOR2_TYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RL_VECTOR2_TYPE}}
\par
{\bkmkstart AAAAAAABHL}
{\bkmkend AAAAAAABHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RL_VECTOR3_TYPE\:raylib.h}
{\xe \v raylib.h\:RL_VECTOR3_TYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RL_VECTOR3_TYPE}}
\par
{\bkmkstart AAAAAAABHM}
{\bkmkend AAAAAAABHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RL_VECTOR4_TYPE\:raylib.h}
{\xe \v raylib.h\:RL_VECTOR4_TYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RL_VECTOR4_TYPE}}
\par
{\bkmkstart AAAAAAABHN}
{\bkmkend AAAAAAABHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RLAPI\:raylib.h}
{\xe \v raylib.h\:RLAPI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RLAPI}}
\par
{\bkmkstart AAAAAAABHO}
{\bkmkend AAAAAAABHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SHADER_LOC_MAP_DIFFUSE\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_MAP_DIFFUSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHADER_LOC_MAP_DIFFUSE\~ {\b SHADER_LOC_MAP_ALBEDO}}}
\par
{\bkmkstart AAAAAAABHP}
{\bkmkend AAAAAAABHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SHADER_LOC_MAP_SPECULAR\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_MAP_SPECULAR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHADER_LOC_MAP_SPECULAR\~ {\b SHADER_LOC_MAP_METALNESS}}}
\par
{\bkmkstart AAAAAAABHQ}
{\bkmkend AAAAAAABHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SKYBLUE\:raylib.h}
{\xe \v raylib.h\:SKYBLUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SKYBLUE\~ {\b CLITERAL}({\b Color})\{ 102, 191, 255, 255 \}}}
\par
{\bkmkstart AAAAAAABHR}
{\bkmkend AAAAAAABHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v VIOLET\:raylib.h}
{\xe \v raylib.h\:VIOLET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define VIOLET\~ {\b CLITERAL}({\b Color})\{ 135, 60, 190, 255 \}}}
\par
{\bkmkstart AAAAAAABHS}
{\bkmkend AAAAAAABHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WHITE\:raylib.h}
{\xe \v raylib.h\:WHITE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WHITE\~ {\b CLITERAL}({\b Color})\{ 255, 255, 255, 255 \}}}
\par
{\bkmkstart AAAAAAABHT}
{\bkmkend AAAAAAABHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v YELLOW\:raylib.h}
{\xe \v raylib.h\:YELLOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define YELLOW\~ {\b CLITERAL}({\b Color})\{ 253, 249, 0, 255 \}}}
\par
{\bkmkstart AAAAAAABHU}
{\bkmkend AAAAAAABHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es dos tipos\par
\pard\plain 
{\xe \v AudioCallback\:raylib.h}
{\xe \v raylib.h\:AudioCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void(* AudioCallback) (void *bufferData, unsigned int frames)}}
\par
{\bkmkstart AAAAAAABHV}
{\bkmkend AAAAAAABHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AudioStream\:raylib.h}
{\xe \v raylib.h\:AudioStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b AudioStream} {\b AudioStream}}}
\par
{\bkmkstart AAAAAAABHW}
{\bkmkend AAAAAAABHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BoneInfo\:raylib.h}
{\xe \v raylib.h\:BoneInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b BoneInfo} {\b BoneInfo}}}
\par
{\bkmkstart AAAAAAABHX}
{\bkmkend AAAAAAABHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bool\:raylib.h}
{\xe \v raylib.h\:bool}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef enum {\b bool} {\b bool}}}
\par
{\bkmkstart AAAAAAABHY}
{\bkmkend AAAAAAABHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BoundingBox\:raylib.h}
{\xe \v raylib.h\:BoundingBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b BoundingBox} {\b BoundingBox}}}
\par
{\bkmkstart AAAAAAABHZ}
{\bkmkend AAAAAAABHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Camera\:raylib.h}
{\xe \v raylib.h\:Camera}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b Camera3D} {\b Camera}}}
\par
{\bkmkstart AAAAAAABIA}
{\bkmkend AAAAAAABIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Camera2D\:raylib.h}
{\xe \v raylib.h\:Camera2D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Camera2D} {\b Camera2D}}}
\par
{\bkmkstart AAAAAAABIB}
{\bkmkend AAAAAAABIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Camera3D\:raylib.h}
{\xe \v raylib.h\:Camera3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Camera3D} {\b Camera3D}}}
\par
{\bkmkstart AAAAAAABIC}
{\bkmkend AAAAAAABIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Color\:raylib.h}
{\xe \v raylib.h\:Color}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Color} {\b Color}}}
\par
{\bkmkstart AAAAAAABID}
{\bkmkend AAAAAAABID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Font\:raylib.h}
{\xe \v raylib.h\:Font}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Font} {\b Font}}}
\par
{\bkmkstart AAAAAAABIE}
{\bkmkend AAAAAAABIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GlyphInfo\:raylib.h}
{\xe \v raylib.h\:GlyphInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b GlyphInfo} {\b GlyphInfo}}}
\par
{\bkmkstart AAAAAAABIF}
{\bkmkend AAAAAAABIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Image\:raylib.h}
{\xe \v raylib.h\:Image}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Image} {\b Image}}}
\par
{\bkmkstart AAAAAAABIG}
{\bkmkend AAAAAAABIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadFileDataCallback\:raylib.h}
{\xe \v raylib.h\:LoadFileDataCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef unsigned char *(* LoadFileDataCallback) (const char *fileName, unsigned int *bytesRead)}}
\par
{\bkmkstart AAAAAAABIH}
{\bkmkend AAAAAAABIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadFileTextCallback\:raylib.h}
{\xe \v raylib.h\:LoadFileTextCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef char *(* LoadFileTextCallback) (const char *fileName)}}
\par
{\bkmkstart AAAAAAABII}
{\bkmkend AAAAAAABII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Material\:raylib.h}
{\xe \v raylib.h\:Material}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Material} {\b Material}}}
\par
{\bkmkstart AAAAAAABIJ}
{\bkmkend AAAAAAABIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MaterialMap\:raylib.h}
{\xe \v raylib.h\:MaterialMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b MaterialMap} {\b MaterialMap}}}
\par
{\bkmkstart AAAAAAABIK}
{\bkmkend AAAAAAABIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Matrix\:raylib.h}
{\xe \v raylib.h\:Matrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Matrix} {\b Matrix}}}
\par
{\bkmkstart AAAAAAABIL}
{\bkmkend AAAAAAABIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Mesh\:raylib.h}
{\xe \v raylib.h\:Mesh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Mesh} {\b Mesh}}}
\par
{\bkmkstart AAAAAAABIM}
{\bkmkend AAAAAAABIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Model\:raylib.h}
{\xe \v raylib.h\:Model}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Model} {\b Model}}}
\par
{\bkmkstart AAAAAAABIN}
{\bkmkend AAAAAAABIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ModelAnimation\:raylib.h}
{\xe \v raylib.h\:ModelAnimation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b ModelAnimation} {\b ModelAnimation}}}
\par
{\bkmkstart AAAAAAABIO}
{\bkmkend AAAAAAABIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Music\:raylib.h}
{\xe \v raylib.h\:Music}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Music} {\b Music}}}
\par
{\bkmkstart AAAAAAABIP}
{\bkmkend AAAAAAABIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v NPatchInfo\:raylib.h}
{\xe \v raylib.h\:NPatchInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b NPatchInfo} {\b NPatchInfo}}}
\par
{\bkmkstart AAAAAAABIQ}
{\bkmkend AAAAAAABIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Quaternion\:raylib.h}
{\xe \v raylib.h\:Quaternion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b Vector4} {\b Quaternion}}}
\par
{\bkmkstart AAAAAAABIR}
{\bkmkend AAAAAAABIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rAudioBuffer\:raylib.h}
{\xe \v raylib.h\:rAudioBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b rAudioBuffer} {\b rAudioBuffer}}}
\par
{\bkmkstart AAAAAAABIS}
{\bkmkend AAAAAAABIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rAudioProcessor\:raylib.h}
{\xe \v raylib.h\:rAudioProcessor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b rAudioProcessor} {\b rAudioProcessor}}}
\par
{\bkmkstart AAAAAAABIT}
{\bkmkend AAAAAAABIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Ray\:raylib.h}
{\xe \v raylib.h\:Ray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Ray} {\b Ray}}}
\par
{\bkmkstart AAAAAAABIU}
{\bkmkend AAAAAAABIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RayCollision\:raylib.h}
{\xe \v raylib.h\:RayCollision}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b RayCollision} {\b RayCollision}}}
\par
{\bkmkstart AAAAAAABIV}
{\bkmkend AAAAAAABIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Rectangle\:raylib.h}
{\xe \v raylib.h\:Rectangle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Rectangle} {\b Rectangle}}}
\par
{\bkmkstart AAAAAAABIW}
{\bkmkend AAAAAAABIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RenderTexture\:raylib.h}
{\xe \v raylib.h\:RenderTexture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b RenderTexture} {\b RenderTexture}}}
\par
{\bkmkstart AAAAAAABIX}
{\bkmkend AAAAAAABIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RenderTexture2D\:raylib.h}
{\xe \v raylib.h\:RenderTexture2D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b RenderTexture} {\b RenderTexture2D}}}
\par
{\bkmkstart AAAAAAABIY}
{\bkmkend AAAAAAABIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SaveFileDataCallback\:raylib.h}
{\xe \v raylib.h\:SaveFileDataCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b bool}(* SaveFileDataCallback) (const char *fileName, void *data, unsigned int bytesToWrite)}}
\par
{\bkmkstart AAAAAAABIZ}
{\bkmkend AAAAAAABIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SaveFileTextCallback\:raylib.h}
{\xe \v raylib.h\:SaveFileTextCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b bool}(* SaveFileTextCallback) (const char *fileName, char *text)}}
\par
{\bkmkstart AAAAAAABJA}
{\bkmkend AAAAAAABJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Shader\:raylib.h}
{\xe \v raylib.h\:Shader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Shader} {\b Shader}}}
\par
{\bkmkstart AAAAAAABJB}
{\bkmkend AAAAAAABJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Sound\:raylib.h}
{\xe \v raylib.h\:Sound}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Sound} {\b Sound}}}
\par
{\bkmkstart AAAAAAABJC}
{\bkmkend AAAAAAABJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Texture\:raylib.h}
{\xe \v raylib.h\:Texture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Texture} {\b Texture}}}
\par
{\bkmkstart AAAAAAABJD}
{\bkmkend AAAAAAABJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Texture2D\:raylib.h}
{\xe \v raylib.h\:Texture2D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b Texture} {\b Texture2D}}}
\par
{\bkmkstart AAAAAAABJE}
{\bkmkend AAAAAAABJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TextureCubemap\:raylib.h}
{\xe \v raylib.h\:TextureCubemap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b Texture} {\b TextureCubemap}}}
\par
{\bkmkstart AAAAAAABJF}
{\bkmkend AAAAAAABJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TraceLogCallback\:raylib.h}
{\xe \v raylib.h\:TraceLogCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void(* TraceLogCallback) (int logLevel, const char *text, va_list args)}}
\par
{\bkmkstart AAAAAAABJG}
{\bkmkend AAAAAAABJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Transform\:raylib.h}
{\xe \v raylib.h\:Transform}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Transform} {\b Transform}}}
\par
{\bkmkstart AAAAAAABJH}
{\bkmkend AAAAAAABJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Vector2\:raylib.h}
{\xe \v raylib.h\:Vector2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Vector2} {\b Vector2}}}
\par
{\bkmkstart AAAAAAABJI}
{\bkmkend AAAAAAABJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Vector3\:raylib.h}
{\xe \v raylib.h\:Vector3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Vector3} {\b Vector3}}}
\par
{\bkmkstart AAAAAAABJJ}
{\bkmkend AAAAAAABJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Vector4\:raylib.h}
{\xe \v raylib.h\:Vector4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Vector4} {\b Vector4}}}
\par
{\bkmkstart AAAAAAABJK}
{\bkmkend AAAAAAABJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v VrDeviceInfo\:raylib.h}
{\xe \v raylib.h\:VrDeviceInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b VrDeviceInfo} {\b VrDeviceInfo}}}
\par
{\bkmkstart AAAAAAABJL}
{\bkmkend AAAAAAABJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v VrStereoConfig\:raylib.h}
{\xe \v raylib.h\:VrStereoConfig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b VrStereoConfig} {\b VrStereoConfig}}}
\par
{\bkmkstart AAAAAAABJM}
{\bkmkend AAAAAAABJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Wave\:raylib.h}
{\xe \v raylib.h\:Wave}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Wave} {\b Wave}}}
\par
{\bkmkstart AAAAAAABJN}
{\bkmkend AAAAAAABJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 
{\xe \v BlendMode\:raylib.h}
{\xe \v raylib.h\:BlendMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b BlendMode}}}
\par
{\bkmkstart AAAAAAABJO}
{\bkmkend AAAAAAABJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v BLEND_ALPHA\:raylib.h}
{\xe \v raylib.h\:BLEND_ALPHA}
{\qr BLEND_ALPHA{\bkmkstart AAAAAAABJP}
{\bkmkend AAAAAAABJP}
\cell }{\cell }{\row }
{\xe \v BLEND_ADDITIVE\:raylib.h}
{\xe \v raylib.h\:BLEND_ADDITIVE}
{\qr BLEND_ADDITIVE{\bkmkstart AAAAAAABJQ}
{\bkmkend AAAAAAABJQ}
\cell }{\cell }{\row }
{\xe \v BLEND_MULTIPLIED\:raylib.h}
{\xe \v raylib.h\:BLEND_MULTIPLIED}
{\qr BLEND_MULTIPLIED{\bkmkstart AAAAAAABJR}
{\bkmkend AAAAAAABJR}
\cell }{\cell }{\row }
{\xe \v BLEND_ADD_COLORS\:raylib.h}
{\xe \v raylib.h\:BLEND_ADD_COLORS}
{\qr BLEND_ADD_COLORS{\bkmkstart AAAAAAABJS}
{\bkmkend AAAAAAABJS}
\cell }{\cell }{\row }
{\xe \v BLEND_SUBTRACT_COLORS\:raylib.h}
{\xe \v raylib.h\:BLEND_SUBTRACT_COLORS}
{\qr BLEND_SUBTRACT_COLORS{\bkmkstart AAAAAAABJT}
{\bkmkend AAAAAAABJT}
\cell }{\cell }{\row }
{\xe \v BLEND_ALPHA_PREMUL\:raylib.h}
{\xe \v raylib.h\:BLEND_ALPHA_PREMUL}
{\qr BLEND_ALPHA_PREMUL{\bkmkstart AAAAAAABJU}
{\bkmkend AAAAAAABJU}
\cell }{\cell }{\row }
{\xe \v BLEND_CUSTOM\:raylib.h}
{\xe \v raylib.h\:BLEND_CUSTOM}
{\qr BLEND_CUSTOM{\bkmkstart AAAAAAABJV}
{\bkmkend AAAAAAABJV}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 840              \{\par
841     BLEND_ALPHA = 0,                {\cf20 // Blend textures considering alpha (default)}\par
842     BLEND_ADDITIVE,                 {\cf20 // Blend textures adding colors}\par
843     BLEND_MULTIPLIED,               {\cf20 // Blend textures multiplying colors}\par
844     BLEND_ADD_COLORS,               {\cf20 // Blend textures adding colors (alternative)}\par
845     BLEND_SUBTRACT_COLORS,          {\cf20 // Blend textures subtracting colors (alternative)}\par
846     BLEND_ALPHA_PREMUL,             {\cf20 // Blend premultiplied textures considering alpha}\par
847     BLEND_CUSTOM                    {\cf20 // Blend textures using custom src/dst factors (use rlSetBlendMode())}\par
848 \} BlendMode;\par
}
}
{\xe \v bool\:raylib.h}
{\xe \v raylib.h\:bool}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b bool}}}
\par
{\bkmkstart AAAAAAABJW}
{\bkmkend AAAAAAABJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v false\:raylib.h}
{\xe \v raylib.h\:false}
{\qr false{\bkmkstart AAAAAAABJX}
{\bkmkend AAAAAAABJX}
\cell }{\cell }{\row }
{\xe \v true\:raylib.h}
{\xe \v raylib.h\:true}
{\qr true{\bkmkstart AAAAAAABJY}
{\bkmkend AAAAAAABJY}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 183 \{ {\cf17 false} = 0, {\cf17 true} = !{\cf17 false} \} bool;\par
}
}
{\xe \v CameraMode\:raylib.h}
{\xe \v raylib.h\:CameraMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CameraMode}}}
\par
{\bkmkstart AAAAAAABJZ}
{\bkmkend AAAAAAABJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v CAMERA_CUSTOM\:raylib.h}
{\xe \v raylib.h\:CAMERA_CUSTOM}
{\qr CAMERA_CUSTOM{\bkmkstart AAAAAAABKA}
{\bkmkend AAAAAAABKA}
\cell }{\cell }{\row }
{\xe \v CAMERA_FREE\:raylib.h}
{\xe \v raylib.h\:CAMERA_FREE}
{\qr CAMERA_FREE{\bkmkstart AAAAAAABKB}
{\bkmkend AAAAAAABKB}
\cell }{\cell }{\row }
{\xe \v CAMERA_ORBITAL\:raylib.h}
{\xe \v raylib.h\:CAMERA_ORBITAL}
{\qr CAMERA_ORBITAL{\bkmkstart AAAAAAABKC}
{\bkmkend AAAAAAABKC}
\cell }{\cell }{\row }
{\xe \v CAMERA_FIRST_PERSON\:raylib.h}
{\xe \v raylib.h\:CAMERA_FIRST_PERSON}
{\qr CAMERA_FIRST_PERSON{\bkmkstart AAAAAAABKD}
{\bkmkend AAAAAAABKD}
\cell }{\cell }{\row }
{\xe \v CAMERA_THIRD_PERSON\:raylib.h}
{\xe \v raylib.h\:CAMERA_THIRD_PERSON}
{\qr CAMERA_THIRD_PERSON{\bkmkstart AAAAAAABKE}
{\bkmkend AAAAAAABKE}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 867              \{\par
868     CAMERA_CUSTOM = 0,              {\cf20 // Custom camera}\par
869     CAMERA_FREE,                    {\cf20 // Free camera}\par
870     CAMERA_ORBITAL,                 {\cf20 // Orbital camera}\par
871     CAMERA_FIRST_PERSON,            {\cf20 // First person camera}\par
872     CAMERA_THIRD_PERSON             {\cf20 // Third person camera}\par
873 \} CameraMode;\par
}
}
{\xe \v CameraProjection\:raylib.h}
{\xe \v raylib.h\:CameraProjection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CameraProjection}}}
\par
{\bkmkstart AAAAAAABKF}
{\bkmkend AAAAAAABKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v CAMERA_PERSPECTIVE\:raylib.h}
{\xe \v raylib.h\:CAMERA_PERSPECTIVE}
{\qr CAMERA_PERSPECTIVE{\bkmkstart AAAAAAABKG}
{\bkmkend AAAAAAABKG}
\cell }{\cell }{\row }
{\xe \v CAMERA_ORTHOGRAPHIC\:raylib.h}
{\xe \v raylib.h\:CAMERA_ORTHOGRAPHIC}
{\qr CAMERA_ORTHOGRAPHIC{\bkmkstart AAAAAAABKH}
{\bkmkend AAAAAAABKH}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 876              \{\par
877     CAMERA_PERSPECTIVE = 0,         {\cf20 // Perspective projection}\par
878     CAMERA_ORTHOGRAPHIC             {\cf20 // Orthographic projection}\par
879 \} CameraProjection;\par
}
}
{\xe \v ConfigFlags\:raylib.h}
{\xe \v raylib.h\:ConfigFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b ConfigFlags}}}
\par
{\bkmkstart AAAAAAABKI}
{\bkmkend AAAAAAABKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v FLAG_VSYNC_HINT\:raylib.h}
{\xe \v raylib.h\:FLAG_VSYNC_HINT}
{\qr FLAG_VSYNC_HINT{\bkmkstart AAAAAAABKJ}
{\bkmkend AAAAAAABKJ}
\cell }{\cell }{\row }
{\xe \v FLAG_FULLSCREEN_MODE\:raylib.h}
{\xe \v raylib.h\:FLAG_FULLSCREEN_MODE}
{\qr FLAG_FULLSCREEN_MODE{\bkmkstart AAAAAAABKK}
{\bkmkend AAAAAAABKK}
\cell }{\cell }{\row }
{\xe \v FLAG_WINDOW_RESIZABLE\:raylib.h}
{\xe \v raylib.h\:FLAG_WINDOW_RESIZABLE}
{\qr FLAG_WINDOW_RESIZABLE{\bkmkstart AAAAAAABKL}
{\bkmkend AAAAAAABKL}
\cell }{\cell }{\row }
{\xe \v FLAG_WINDOW_UNDECORATED\:raylib.h}
{\xe \v raylib.h\:FLAG_WINDOW_UNDECORATED}
{\qr FLAG_WINDOW_UNDECORATED{\bkmkstart AAAAAAABKM}
{\bkmkend AAAAAAABKM}
\cell }{\cell }{\row }
{\xe \v FLAG_WINDOW_HIDDEN\:raylib.h}
{\xe \v raylib.h\:FLAG_WINDOW_HIDDEN}
{\qr FLAG_WINDOW_HIDDEN{\bkmkstart AAAAAAABKN}
{\bkmkend AAAAAAABKN}
\cell }{\cell }{\row }
{\xe \v FLAG_WINDOW_MINIMIZED\:raylib.h}
{\xe \v raylib.h\:FLAG_WINDOW_MINIMIZED}
{\qr FLAG_WINDOW_MINIMIZED{\bkmkstart AAAAAAABKO}
{\bkmkend AAAAAAABKO}
\cell }{\cell }{\row }
{\xe \v FLAG_WINDOW_MAXIMIZED\:raylib.h}
{\xe \v raylib.h\:FLAG_WINDOW_MAXIMIZED}
{\qr FLAG_WINDOW_MAXIMIZED{\bkmkstart AAAAAAABKP}
{\bkmkend AAAAAAABKP}
\cell }{\cell }{\row }
{\xe \v FLAG_WINDOW_UNFOCUSED\:raylib.h}
{\xe \v raylib.h\:FLAG_WINDOW_UNFOCUSED}
{\qr FLAG_WINDOW_UNFOCUSED{\bkmkstart AAAAAAABKQ}
{\bkmkend AAAAAAABKQ}
\cell }{\cell }{\row }
{\xe \v FLAG_WINDOW_TOPMOST\:raylib.h}
{\xe \v raylib.h\:FLAG_WINDOW_TOPMOST}
{\qr FLAG_WINDOW_TOPMOST{\bkmkstart AAAAAAABKR}
{\bkmkend AAAAAAABKR}
\cell }{\cell }{\row }
{\xe \v FLAG_WINDOW_ALWAYS_RUN\:raylib.h}
{\xe \v raylib.h\:FLAG_WINDOW_ALWAYS_RUN}
{\qr FLAG_WINDOW_ALWAYS_RUN{\bkmkstart AAAAAAABKS}
{\bkmkend AAAAAAABKS}
\cell }{\cell }{\row }
{\xe \v FLAG_WINDOW_TRANSPARENT\:raylib.h}
{\xe \v raylib.h\:FLAG_WINDOW_TRANSPARENT}
{\qr FLAG_WINDOW_TRANSPARENT{\bkmkstart AAAAAAABKT}
{\bkmkend AAAAAAABKT}
\cell }{\cell }{\row }
{\xe \v FLAG_WINDOW_HIGHDPI\:raylib.h}
{\xe \v raylib.h\:FLAG_WINDOW_HIGHDPI}
{\qr FLAG_WINDOW_HIGHDPI{\bkmkstart AAAAAAABKU}
{\bkmkend AAAAAAABKU}
\cell }{\cell }{\row }
{\xe \v FLAG_MSAA_4X_HINT\:raylib.h}
{\xe \v raylib.h\:FLAG_MSAA_4X_HINT}
{\qr FLAG_MSAA_4X_HINT{\bkmkstart AAAAAAABKV}
{\bkmkend AAAAAAABKV}
\cell }{\cell }{\row }
{\xe \v FLAG_INTERLACED_HINT\:raylib.h}
{\xe \v raylib.h\:FLAG_INTERLACED_HINT}
{\qr FLAG_INTERLACED_HINT{\bkmkstart AAAAAAABKW}
{\bkmkend AAAAAAABKW}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 491              \{\par
492     FLAG_VSYNC_HINT         = 0x00000040,   {\cf20 // Set to try enabling V-Sync on GPU}\par
493     FLAG_FULLSCREEN_MODE    = 0x00000002,   {\cf20 // Set to run program in fullscreen}\par
494     FLAG_WINDOW_RESIZABLE   = 0x00000004,   {\cf20 // Set to allow resizable window}\par
495     FLAG_WINDOW_UNDECORATED = 0x00000008,   {\cf20 // Set to disable window decoration (frame and buttons)}\par
496     FLAG_WINDOW_HIDDEN      = 0x00000080,   {\cf20 // Set to hide window}\par
497     FLAG_WINDOW_MINIMIZED   = 0x00000200,   {\cf20 // Set to minimize window (iconify)}\par
498     FLAG_WINDOW_MAXIMIZED   = 0x00000400,   {\cf20 // Set to maximize window (expanded to monitor)}\par
499     FLAG_WINDOW_UNFOCUSED   = 0x00000800,   {\cf20 // Set to window non focused}\par
500     FLAG_WINDOW_TOPMOST     = 0x00001000,   {\cf20 // Set to window always on top}\par
501     FLAG_WINDOW_ALWAYS_RUN  = 0x00000100,   {\cf20 // Set to allow windows running while minimized}\par
502     FLAG_WINDOW_TRANSPARENT = 0x00000010,   {\cf20 // Set to allow transparent framebuffer}\par
503     FLAG_WINDOW_HIGHDPI     = 0x00002000,   {\cf20 // Set to support HighDPI}\par
504     FLAG_MSAA_4X_HINT       = 0x00000020,   {\cf20 // Set to try enabling MSAA 4X}\par
505     FLAG_INTERLACED_HINT    = 0x00010000    {\cf20 // Set to try enabling interlaced video format (for V3D)}\par
506 \} ConfigFlags;\par
}
}
{\xe \v CubemapLayout\:raylib.h}
{\xe \v raylib.h\:CubemapLayout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CubemapLayout}}}
\par
{\bkmkstart AAAAAAABKX}
{\bkmkend AAAAAAABKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v CUBEMAP_LAYOUT_AUTO_DETECT\:raylib.h}
{\xe \v raylib.h\:CUBEMAP_LAYOUT_AUTO_DETECT}
{\qr CUBEMAP_LAYOUT_AUTO_DETECT{\bkmkstart AAAAAAABKY}
{\bkmkend AAAAAAABKY}
\cell }{\cell }{\row }
{\xe \v CUBEMAP_LAYOUT_LINE_VERTICAL\:raylib.h}
{\xe \v raylib.h\:CUBEMAP_LAYOUT_LINE_VERTICAL}
{\qr CUBEMAP_LAYOUT_LINE_VERTICAL{\bkmkstart AAAAAAABKZ}
{\bkmkend AAAAAAABKZ}
\cell }{\cell }{\row }
{\xe \v CUBEMAP_LAYOUT_LINE_HORIZONTAL\:raylib.h}
{\xe \v raylib.h\:CUBEMAP_LAYOUT_LINE_HORIZONTAL}
{\qr CUBEMAP_LAYOUT_LINE_HORIZONTAL{\bkmkstart AAAAAAABLA}
{\bkmkend AAAAAAABLA}
\cell }{\cell }{\row }
{\xe \v CUBEMAP_LAYOUT_CROSS_THREE_BY_FOUR\:raylib.h}
{\xe \v raylib.h\:CUBEMAP_LAYOUT_CROSS_THREE_BY_FOUR}
{\qr CUBEMAP_LAYOUT_CROSS_THREE_BY_FOUR{\bkmkstart AAAAAAABLB}
{\bkmkend AAAAAAABLB}
\cell }{\cell }{\row }
{\xe \v CUBEMAP_LAYOUT_CROSS_FOUR_BY_THREE\:raylib.h}
{\xe \v raylib.h\:CUBEMAP_LAYOUT_CROSS_FOUR_BY_THREE}
{\qr CUBEMAP_LAYOUT_CROSS_FOUR_BY_THREE{\bkmkstart AAAAAAABLC}
{\bkmkend AAAAAAABLC}
\cell }{\cell }{\row }
{\xe \v CUBEMAP_LAYOUT_PANORAMA\:raylib.h}
{\xe \v raylib.h\:CUBEMAP_LAYOUT_PANORAMA}
{\qr CUBEMAP_LAYOUT_PANORAMA{\bkmkstart AAAAAAABLD}
{\bkmkend AAAAAAABLD}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 823              \{\par
824     CUBEMAP_LAYOUT_AUTO_DETECT = 0,         {\cf20 // Automatically detect layout type}\par
825     CUBEMAP_LAYOUT_LINE_VERTICAL,           {\cf20 // Layout is defined by a vertical line with faces}\par
826     CUBEMAP_LAYOUT_LINE_HORIZONTAL,         {\cf20 // Layout is defined by an horizontal line with faces}\par
827     CUBEMAP_LAYOUT_CROSS_THREE_BY_FOUR,     {\cf20 // Layout is defined by a 3x4 cross with cubemap faces}\par
828     CUBEMAP_LAYOUT_CROSS_FOUR_BY_THREE,     {\cf20 // Layout is defined by a 4x3 cross with cubemap faces}\par
829     CUBEMAP_LAYOUT_PANORAMA                 {\cf20 // Layout is defined by a panorama image (equirectangular map)}\par
830 \} CubemapLayout;\par
}
}
{\xe \v FontType\:raylib.h}
{\xe \v raylib.h\:FontType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b FontType}}}
\par
{\bkmkstart AAAAAAABLE}
{\bkmkend AAAAAAABLE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v FONT_DEFAULT\:raylib.h}
{\xe \v raylib.h\:FONT_DEFAULT}
{\qr FONT_DEFAULT{\bkmkstart AAAAAAABLF}
{\bkmkend AAAAAAABLF}
\cell }{\cell }{\row }
{\xe \v FONT_BITMAP\:raylib.h}
{\xe \v raylib.h\:FONT_BITMAP}
{\qr FONT_BITMAP{\bkmkstart AAAAAAABLG}
{\bkmkend AAAAAAABLG}
\cell }{\cell }{\row }
{\xe \v FONT_SDF\:raylib.h}
{\xe \v raylib.h\:FONT_SDF}
{\qr FONT_SDF{\bkmkstart AAAAAAABLH}
{\bkmkend AAAAAAABLH}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 833              \{\par
834     FONT_DEFAULT = 0,               {\cf20 // Default font generation, anti-aliased}\par
835     FONT_BITMAP,                    {\cf20 // Bitmap font generation, no anti-aliasing}\par
836     FONT_SDF                        {\cf20 // SDF font generation, requires external shader}\par
837 \} FontType;\par
}
}
{\xe \v GamepadAxis\:raylib.h}
{\xe \v raylib.h\:GamepadAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GamepadAxis}}}
\par
{\bkmkstart AAAAAAABLI}
{\bkmkend AAAAAAABLI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v GAMEPAD_AXIS_LEFT_X\:raylib.h}
{\xe \v raylib.h\:GAMEPAD_AXIS_LEFT_X}
{\qr GAMEPAD_AXIS_LEFT_X{\bkmkstart AAAAAAABLJ}
{\bkmkend AAAAAAABLJ}
\cell }{\cell }{\row }
{\xe \v GAMEPAD_AXIS_LEFT_Y\:raylib.h}
{\xe \v raylib.h\:GAMEPAD_AXIS_LEFT_Y}
{\qr GAMEPAD_AXIS_LEFT_Y{\bkmkstart AAAAAAABLK}
{\bkmkend AAAAAAABLK}
\cell }{\cell }{\row }
{\xe \v GAMEPAD_AXIS_RIGHT_X\:raylib.h}
{\xe \v raylib.h\:GAMEPAD_AXIS_RIGHT_X}
{\qr GAMEPAD_AXIS_RIGHT_X{\bkmkstart AAAAAAABLL}
{\bkmkend AAAAAAABLL}
\cell }{\cell }{\row }
{\xe \v GAMEPAD_AXIS_RIGHT_Y\:raylib.h}
{\xe \v raylib.h\:GAMEPAD_AXIS_RIGHT_Y}
{\qr GAMEPAD_AXIS_RIGHT_Y{\bkmkstart AAAAAAABLM}
{\bkmkend AAAAAAABLM}
\cell }{\cell }{\row }
{\xe \v GAMEPAD_AXIS_LEFT_TRIGGER\:raylib.h}
{\xe \v raylib.h\:GAMEPAD_AXIS_LEFT_TRIGGER}
{\qr GAMEPAD_AXIS_LEFT_TRIGGER{\bkmkstart AAAAAAABLN}
{\bkmkend AAAAAAABLN}
\cell }{\cell }{\row }
{\xe \v GAMEPAD_AXIS_RIGHT_TRIGGER\:raylib.h}
{\xe \v raylib.h\:GAMEPAD_AXIS_RIGHT_TRIGGER}
{\qr GAMEPAD_AXIS_RIGHT_TRIGGER{\bkmkstart AAAAAAABLO}
{\bkmkend AAAAAAABLO}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 695              \{\par
696     GAMEPAD_AXIS_LEFT_X        = 0,     {\cf20 // Gamepad left stick X axis}\par
697     GAMEPAD_AXIS_LEFT_Y        = 1,     {\cf20 // Gamepad left stick Y axis}\par
698     GAMEPAD_AXIS_RIGHT_X       = 2,     {\cf20 // Gamepad right stick X axis}\par
699     GAMEPAD_AXIS_RIGHT_Y       = 3,     {\cf20 // Gamepad right stick Y axis}\par
700     GAMEPAD_AXIS_LEFT_TRIGGER  = 4,     {\cf20 // Gamepad back trigger left, pressure level: [1..-1]}\par
701     GAMEPAD_AXIS_RIGHT_TRIGGER = 5      {\cf20 // Gamepad back trigger right, pressure level: [1..-1]}\par
702 \} GamepadAxis;\par
}
}
{\xe \v GamepadButton\:raylib.h}
{\xe \v raylib.h\:GamepadButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GamepadButton}}}
\par
{\bkmkstart AAAAAAABLP}
{\bkmkend AAAAAAABLP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v GAMEPAD_BUTTON_UNKNOWN\:raylib.h}
{\xe \v raylib.h\:GAMEPAD_BUTTON_UNKNOWN}
{\qr GAMEPAD_BUTTON_UNKNOWN{\bkmkstart AAAAAAABLQ}
{\bkmkend AAAAAAABLQ}
\cell }{\cell }{\row }
{\xe \v GAMEPAD_BUTTON_LEFT_FACE_UP\:raylib.h}
{\xe \v raylib.h\:GAMEPAD_BUTTON_LEFT_FACE_UP}
{\qr GAMEPAD_BUTTON_LEFT_FACE_UP{\bkmkstart AAAAAAABLR}
{\bkmkend AAAAAAABLR}
\cell }{\cell }{\row }
{\xe \v GAMEPAD_BUTTON_LEFT_FACE_RIGHT\:raylib.h}
{\xe \v raylib.h\:GAMEPAD_BUTTON_LEFT_FACE_RIGHT}
{\qr GAMEPAD_BUTTON_LEFT_FACE_RIGHT{\bkmkstart AAAAAAABLS}
{\bkmkend AAAAAAABLS}
\cell }{\cell }{\row }
{\xe \v GAMEPAD_BUTTON_LEFT_FACE_DOWN\:raylib.h}
{\xe \v raylib.h\:GAMEPAD_BUTTON_LEFT_FACE_DOWN}
{\qr GAMEPAD_BUTTON_LEFT_FACE_DOWN{\bkmkstart AAAAAAABLT}
{\bkmkend AAAAAAABLT}
\cell }{\cell }{\row }
{\xe \v GAMEPAD_BUTTON_LEFT_FACE_LEFT\:raylib.h}
{\xe \v raylib.h\:GAMEPAD_BUTTON_LEFT_FACE_LEFT}
{\qr GAMEPAD_BUTTON_LEFT_FACE_LEFT{\bkmkstart AAAAAAABLU}
{\bkmkend AAAAAAABLU}
\cell }{\cell }{\row }
{\xe \v GAMEPAD_BUTTON_RIGHT_FACE_UP\:raylib.h}
{\xe \v raylib.h\:GAMEPAD_BUTTON_RIGHT_FACE_UP}
{\qr GAMEPAD_BUTTON_RIGHT_FACE_UP{\bkmkstart AAAAAAABLV}
{\bkmkend AAAAAAABLV}
\cell }{\cell }{\row }
{\xe \v GAMEPAD_BUTTON_RIGHT_FACE_RIGHT\:raylib.h}
{\xe \v raylib.h\:GAMEPAD_BUTTON_RIGHT_FACE_RIGHT}
{\qr GAMEPAD_BUTTON_RIGHT_FACE_RIGHT{\bkmkstart AAAAAAABLW}
{\bkmkend AAAAAAABLW}
\cell }{\cell }{\row }
{\xe \v GAMEPAD_BUTTON_RIGHT_FACE_DOWN\:raylib.h}
{\xe \v raylib.h\:GAMEPAD_BUTTON_RIGHT_FACE_DOWN}
{\qr GAMEPAD_BUTTON_RIGHT_FACE_DOWN{\bkmkstart AAAAAAABLX}
{\bkmkend AAAAAAABLX}
\cell }{\cell }{\row }
{\xe \v GAMEPAD_BUTTON_RIGHT_FACE_LEFT\:raylib.h}
{\xe \v raylib.h\:GAMEPAD_BUTTON_RIGHT_FACE_LEFT}
{\qr GAMEPAD_BUTTON_RIGHT_FACE_LEFT{\bkmkstart AAAAAAABLY}
{\bkmkend AAAAAAABLY}
\cell }{\cell }{\row }
{\xe \v GAMEPAD_BUTTON_LEFT_TRIGGER_1\:raylib.h}
{\xe \v raylib.h\:GAMEPAD_BUTTON_LEFT_TRIGGER_1}
{\qr GAMEPAD_BUTTON_LEFT_TRIGGER_1{\bkmkstart AAAAAAABLZ}
{\bkmkend AAAAAAABLZ}
\cell }{\cell }{\row }
{\xe \v GAMEPAD_BUTTON_LEFT_TRIGGER_2\:raylib.h}
{\xe \v raylib.h\:GAMEPAD_BUTTON_LEFT_TRIGGER_2}
{\qr GAMEPAD_BUTTON_LEFT_TRIGGER_2{\bkmkstart AAAAAAABMA}
{\bkmkend AAAAAAABMA}
\cell }{\cell }{\row }
{\xe \v GAMEPAD_BUTTON_RIGHT_TRIGGER_1\:raylib.h}
{\xe \v raylib.h\:GAMEPAD_BUTTON_RIGHT_TRIGGER_1}
{\qr GAMEPAD_BUTTON_RIGHT_TRIGGER_1{\bkmkstart AAAAAAABMB}
{\bkmkend AAAAAAABMB}
\cell }{\cell }{\row }
{\xe \v GAMEPAD_BUTTON_RIGHT_TRIGGER_2\:raylib.h}
{\xe \v raylib.h\:GAMEPAD_BUTTON_RIGHT_TRIGGER_2}
{\qr GAMEPAD_BUTTON_RIGHT_TRIGGER_2{\bkmkstart AAAAAAABMC}
{\bkmkend AAAAAAABMC}
\cell }{\cell }{\row }
{\xe \v GAMEPAD_BUTTON_MIDDLE_LEFT\:raylib.h}
{\xe \v raylib.h\:GAMEPAD_BUTTON_MIDDLE_LEFT}
{\qr GAMEPAD_BUTTON_MIDDLE_LEFT{\bkmkstart AAAAAAABMD}
{\bkmkend AAAAAAABMD}
\cell }{\cell }{\row }
{\xe \v GAMEPAD_BUTTON_MIDDLE\:raylib.h}
{\xe \v raylib.h\:GAMEPAD_BUTTON_MIDDLE}
{\qr GAMEPAD_BUTTON_MIDDLE{\bkmkstart AAAAAAABME}
{\bkmkend AAAAAAABME}
\cell }{\cell }{\row }
{\xe \v GAMEPAD_BUTTON_MIDDLE_RIGHT\:raylib.h}
{\xe \v raylib.h\:GAMEPAD_BUTTON_MIDDLE_RIGHT}
{\qr GAMEPAD_BUTTON_MIDDLE_RIGHT{\bkmkstart AAAAAAABMF}
{\bkmkend AAAAAAABMF}
\cell }{\cell }{\row }
{\xe \v GAMEPAD_BUTTON_LEFT_THUMB\:raylib.h}
{\xe \v raylib.h\:GAMEPAD_BUTTON_LEFT_THUMB}
{\qr GAMEPAD_BUTTON_LEFT_THUMB{\bkmkstart AAAAAAABMG}
{\bkmkend AAAAAAABMG}
\cell }{\cell }{\row }
{\xe \v GAMEPAD_BUTTON_RIGHT_THUMB\:raylib.h}
{\xe \v raylib.h\:GAMEPAD_BUTTON_RIGHT_THUMB}
{\qr GAMEPAD_BUTTON_RIGHT_THUMB{\bkmkstart AAAAAAABMH}
{\bkmkend AAAAAAABMH}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 673              \{\par
674     GAMEPAD_BUTTON_UNKNOWN = 0,         {\cf20 // Unknown button, just for error checking}\par
675     GAMEPAD_BUTTON_LEFT_FACE_UP,        {\cf20 // Gamepad left DPAD up button}\par
676     GAMEPAD_BUTTON_LEFT_FACE_RIGHT,     {\cf20 // Gamepad left DPAD right button}\par
677     GAMEPAD_BUTTON_LEFT_FACE_DOWN,      {\cf20 // Gamepad left DPAD down button}\par
678     GAMEPAD_BUTTON_LEFT_FACE_LEFT,      {\cf20 // Gamepad left DPAD left button}\par
679     GAMEPAD_BUTTON_RIGHT_FACE_UP,       {\cf20 // Gamepad right button up (i.e. PS3: Triangle, Xbox: Y)}\par
680     GAMEPAD_BUTTON_RIGHT_FACE_RIGHT,    {\cf20 // Gamepad right button right (i.e. PS3: Square, Xbox: X)}\par
681     GAMEPAD_BUTTON_RIGHT_FACE_DOWN,     {\cf20 // Gamepad right button down (i.e. PS3: Cross, Xbox: A)}\par
682     GAMEPAD_BUTTON_RIGHT_FACE_LEFT,     {\cf20 // Gamepad right button left (i.e. PS3: Circle, Xbox: B)}\par
683     GAMEPAD_BUTTON_LEFT_TRIGGER_1,      {\cf20 // Gamepad top/back trigger left (first), it could be a trailing button}\par
684     GAMEPAD_BUTTON_LEFT_TRIGGER_2,      {\cf20 // Gamepad top/back trigger left (second), it could be a trailing button}\par
685     GAMEPAD_BUTTON_RIGHT_TRIGGER_1,     {\cf20 // Gamepad top/back trigger right (one), it could be a trailing button}\par
686     GAMEPAD_BUTTON_RIGHT_TRIGGER_2,     {\cf20 // Gamepad top/back trigger right (second), it could be a trailing button}\par
687     GAMEPAD_BUTTON_MIDDLE_LEFT,         {\cf20 // Gamepad center buttons, left one (i.e. PS3: Select)}\par
688     GAMEPAD_BUTTON_MIDDLE,              {\cf20 // Gamepad center buttons, middle one (i.e. PS3: PS, Xbox: XBOX)}\par
689     GAMEPAD_BUTTON_MIDDLE_RIGHT,        {\cf20 // Gamepad center buttons, right one (i.e. PS3: Start)}\par
690     GAMEPAD_BUTTON_LEFT_THUMB,          {\cf20 // Gamepad joystick pressed button left}\par
691     GAMEPAD_BUTTON_RIGHT_THUMB          {\cf20 // Gamepad joystick pressed button right}\par
692 \} GamepadButton;\par
}
}
{\xe \v Gesture\:raylib.h}
{\xe \v raylib.h\:Gesture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Gesture}}}
\par
{\bkmkstart AAAAAAABMI}
{\bkmkend AAAAAAABMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v GESTURE_NONE\:raylib.h}
{\xe \v raylib.h\:GESTURE_NONE}
{\qr GESTURE_NONE{\bkmkstart AAAAAAABMJ}
{\bkmkend AAAAAAABMJ}
\cell }{\cell }{\row }
{\xe \v GESTURE_TAP\:raylib.h}
{\xe \v raylib.h\:GESTURE_TAP}
{\qr GESTURE_TAP{\bkmkstart AAAAAAABMK}
{\bkmkend AAAAAAABMK}
\cell }{\cell }{\row }
{\xe \v GESTURE_DOUBLETAP\:raylib.h}
{\xe \v raylib.h\:GESTURE_DOUBLETAP}
{\qr GESTURE_DOUBLETAP{\bkmkstart AAAAAAABML}
{\bkmkend AAAAAAABML}
\cell }{\cell }{\row }
{\xe \v GESTURE_HOLD\:raylib.h}
{\xe \v raylib.h\:GESTURE_HOLD}
{\qr GESTURE_HOLD{\bkmkstart AAAAAAABMM}
{\bkmkend AAAAAAABMM}
\cell }{\cell }{\row }
{\xe \v GESTURE_DRAG\:raylib.h}
{\xe \v raylib.h\:GESTURE_DRAG}
{\qr GESTURE_DRAG{\bkmkstart AAAAAAABMN}
{\bkmkend AAAAAAABMN}
\cell }{\cell }{\row }
{\xe \v GESTURE_SWIPE_RIGHT\:raylib.h}
{\xe \v raylib.h\:GESTURE_SWIPE_RIGHT}
{\qr GESTURE_SWIPE_RIGHT{\bkmkstart AAAAAAABMO}
{\bkmkend AAAAAAABMO}
\cell }{\cell }{\row }
{\xe \v GESTURE_SWIPE_LEFT\:raylib.h}
{\xe \v raylib.h\:GESTURE_SWIPE_LEFT}
{\qr GESTURE_SWIPE_LEFT{\bkmkstart AAAAAAABMP}
{\bkmkend AAAAAAABMP}
\cell }{\cell }{\row }
{\xe \v GESTURE_SWIPE_UP\:raylib.h}
{\xe \v raylib.h\:GESTURE_SWIPE_UP}
{\qr GESTURE_SWIPE_UP{\bkmkstart AAAAAAABMQ}
{\bkmkend AAAAAAABMQ}
\cell }{\cell }{\row }
{\xe \v GESTURE_SWIPE_DOWN\:raylib.h}
{\xe \v raylib.h\:GESTURE_SWIPE_DOWN}
{\qr GESTURE_SWIPE_DOWN{\bkmkstart AAAAAAABMR}
{\bkmkend AAAAAAABMR}
\cell }{\cell }{\row }
{\xe \v GESTURE_PINCH_IN\:raylib.h}
{\xe \v raylib.h\:GESTURE_PINCH_IN}
{\qr GESTURE_PINCH_IN{\bkmkstart AAAAAAABMS}
{\bkmkend AAAAAAABMS}
\cell }{\cell }{\row }
{\xe \v GESTURE_PINCH_OUT\:raylib.h}
{\xe \v raylib.h\:GESTURE_PINCH_OUT}
{\qr GESTURE_PINCH_OUT{\bkmkstart AAAAAAABMT}
{\bkmkend AAAAAAABMT}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 852              \{\par
853     GESTURE_NONE        = 0,        {\cf20 // No gesture}\par
854     GESTURE_TAP         = 1,        {\cf20 // Tap gesture}\par
855     GESTURE_DOUBLETAP   = 2,        {\cf20 // Double tap gesture}\par
856     GESTURE_HOLD        = 4,        {\cf20 // Hold gesture}\par
857     GESTURE_DRAG        = 8,        {\cf20 // Drag gesture}\par
858     GESTURE_SWIPE_RIGHT = 16,       {\cf20 // Swipe right gesture}\par
859     GESTURE_SWIPE_LEFT  = 32,       {\cf20 // Swipe left gesture}\par
860     GESTURE_SWIPE_UP    = 64,       {\cf20 // Swipe up gesture}\par
861     GESTURE_SWIPE_DOWN  = 128,      {\cf20 // Swipe down gesture}\par
862     GESTURE_PINCH_IN    = 256,      {\cf20 // Pinch in gesture}\par
863     GESTURE_PINCH_OUT   = 512       {\cf20 // Pinch out gesture}\par
864 \} Gesture;\par
}
}
{\xe \v KeyboardKey\:raylib.h}
{\xe \v raylib.h\:KeyboardKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b KeyboardKey}}}
\par
{\bkmkstart AAAAAAABMU}
{\bkmkend AAAAAAABMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v KEY_NULL\:raylib.h}
{\xe \v raylib.h\:KEY_NULL}
{\qr KEY_NULL{\bkmkstart AAAAAAABMV}
{\bkmkend AAAAAAABMV}
\cell }{\cell }{\row }
{\xe \v KEY_APOSTROPHE\:raylib.h}
{\xe \v raylib.h\:KEY_APOSTROPHE}
{\qr KEY_APOSTROPHE{\bkmkstart AAAAAAABMW}
{\bkmkend AAAAAAABMW}
\cell }{\cell }{\row }
{\xe \v KEY_COMMA\:raylib.h}
{\xe \v raylib.h\:KEY_COMMA}
{\qr KEY_COMMA{\bkmkstart AAAAAAABMX}
{\bkmkend AAAAAAABMX}
\cell }{\cell }{\row }
{\xe \v KEY_MINUS\:raylib.h}
{\xe \v raylib.h\:KEY_MINUS}
{\qr KEY_MINUS{\bkmkstart AAAAAAABMY}
{\bkmkend AAAAAAABMY}
\cell }{\cell }{\row }
{\xe \v KEY_PERIOD\:raylib.h}
{\xe \v raylib.h\:KEY_PERIOD}
{\qr KEY_PERIOD{\bkmkstart AAAAAAABMZ}
{\bkmkend AAAAAAABMZ}
\cell }{\cell }{\row }
{\xe \v KEY_SLASH\:raylib.h}
{\xe \v raylib.h\:KEY_SLASH}
{\qr KEY_SLASH{\bkmkstart AAAAAAABNA}
{\bkmkend AAAAAAABNA}
\cell }{\cell }{\row }
{\xe \v KEY_ZERO\:raylib.h}
{\xe \v raylib.h\:KEY_ZERO}
{\qr KEY_ZERO{\bkmkstart AAAAAAABNB}
{\bkmkend AAAAAAABNB}
\cell }{\cell }{\row }
{\xe \v KEY_ONE\:raylib.h}
{\xe \v raylib.h\:KEY_ONE}
{\qr KEY_ONE{\bkmkstart AAAAAAABNC}
{\bkmkend AAAAAAABNC}
\cell }{\cell }{\row }
{\xe \v KEY_TWO\:raylib.h}
{\xe \v raylib.h\:KEY_TWO}
{\qr KEY_TWO{\bkmkstart AAAAAAABND}
{\bkmkend AAAAAAABND}
\cell }{\cell }{\row }
{\xe \v KEY_THREE\:raylib.h}
{\xe \v raylib.h\:KEY_THREE}
{\qr KEY_THREE{\bkmkstart AAAAAAABNE}
{\bkmkend AAAAAAABNE}
\cell }{\cell }{\row }
{\xe \v KEY_FOUR\:raylib.h}
{\xe \v raylib.h\:KEY_FOUR}
{\qr KEY_FOUR{\bkmkstart AAAAAAABNF}
{\bkmkend AAAAAAABNF}
\cell }{\cell }{\row }
{\xe \v KEY_FIVE\:raylib.h}
{\xe \v raylib.h\:KEY_FIVE}
{\qr KEY_FIVE{\bkmkstart AAAAAAABNG}
{\bkmkend AAAAAAABNG}
\cell }{\cell }{\row }
{\xe \v KEY_SIX\:raylib.h}
{\xe \v raylib.h\:KEY_SIX}
{\qr KEY_SIX{\bkmkstart AAAAAAABNH}
{\bkmkend AAAAAAABNH}
\cell }{\cell }{\row }
{\xe \v KEY_SEVEN\:raylib.h}
{\xe \v raylib.h\:KEY_SEVEN}
{\qr KEY_SEVEN{\bkmkstart AAAAAAABNI}
{\bkmkend AAAAAAABNI}
\cell }{\cell }{\row }
{\xe \v KEY_EIGHT\:raylib.h}
{\xe \v raylib.h\:KEY_EIGHT}
{\qr KEY_EIGHT{\bkmkstart AAAAAAABNJ}
{\bkmkend AAAAAAABNJ}
\cell }{\cell }{\row }
{\xe \v KEY_NINE\:raylib.h}
{\xe \v raylib.h\:KEY_NINE}
{\qr KEY_NINE{\bkmkstart AAAAAAABNK}
{\bkmkend AAAAAAABNK}
\cell }{\cell }{\row }
{\xe \v KEY_SEMICOLON\:raylib.h}
{\xe \v raylib.h\:KEY_SEMICOLON}
{\qr KEY_SEMICOLON{\bkmkstart AAAAAAABNL}
{\bkmkend AAAAAAABNL}
\cell }{\cell }{\row }
{\xe \v KEY_EQUAL\:raylib.h}
{\xe \v raylib.h\:KEY_EQUAL}
{\qr KEY_EQUAL{\bkmkstart AAAAAAABNM}
{\bkmkend AAAAAAABNM}
\cell }{\cell }{\row }
{\xe \v KEY_A\:raylib.h}
{\xe \v raylib.h\:KEY_A}
{\qr KEY_A{\bkmkstart AAAAAAABNN}
{\bkmkend AAAAAAABNN}
\cell }{\cell }{\row }
{\xe \v KEY_B\:raylib.h}
{\xe \v raylib.h\:KEY_B}
{\qr KEY_B{\bkmkstart AAAAAAABNO}
{\bkmkend AAAAAAABNO}
\cell }{\cell }{\row }
{\xe \v KEY_C\:raylib.h}
{\xe \v raylib.h\:KEY_C}
{\qr KEY_C{\bkmkstart AAAAAAABNP}
{\bkmkend AAAAAAABNP}
\cell }{\cell }{\row }
{\xe \v KEY_D\:raylib.h}
{\xe \v raylib.h\:KEY_D}
{\qr KEY_D{\bkmkstart AAAAAAABNQ}
{\bkmkend AAAAAAABNQ}
\cell }{\cell }{\row }
{\xe \v KEY_E\:raylib.h}
{\xe \v raylib.h\:KEY_E}
{\qr KEY_E{\bkmkstart AAAAAAABNR}
{\bkmkend AAAAAAABNR}
\cell }{\cell }{\row }
{\xe \v KEY_F\:raylib.h}
{\xe \v raylib.h\:KEY_F}
{\qr KEY_F{\bkmkstart AAAAAAABNS}
{\bkmkend AAAAAAABNS}
\cell }{\cell }{\row }
{\xe \v KEY_G\:raylib.h}
{\xe \v raylib.h\:KEY_G}
{\qr KEY_G{\bkmkstart AAAAAAABNT}
{\bkmkend AAAAAAABNT}
\cell }{\cell }{\row }
{\xe \v KEY_H\:raylib.h}
{\xe \v raylib.h\:KEY_H}
{\qr KEY_H{\bkmkstart AAAAAAABNU}
{\bkmkend AAAAAAABNU}
\cell }{\cell }{\row }
{\xe \v KEY_I\:raylib.h}
{\xe \v raylib.h\:KEY_I}
{\qr KEY_I{\bkmkstart AAAAAAABNV}
{\bkmkend AAAAAAABNV}
\cell }{\cell }{\row }
{\xe \v KEY_J\:raylib.h}
{\xe \v raylib.h\:KEY_J}
{\qr KEY_J{\bkmkstart AAAAAAABNW}
{\bkmkend AAAAAAABNW}
\cell }{\cell }{\row }
{\xe \v KEY_K\:raylib.h}
{\xe \v raylib.h\:KEY_K}
{\qr KEY_K{\bkmkstart AAAAAAABNX}
{\bkmkend AAAAAAABNX}
\cell }{\cell }{\row }
{\xe \v KEY_L\:raylib.h}
{\xe \v raylib.h\:KEY_L}
{\qr KEY_L{\bkmkstart AAAAAAABNY}
{\bkmkend AAAAAAABNY}
\cell }{\cell }{\row }
{\xe \v KEY_M\:raylib.h}
{\xe \v raylib.h\:KEY_M}
{\qr KEY_M{\bkmkstart AAAAAAABNZ}
{\bkmkend AAAAAAABNZ}
\cell }{\cell }{\row }
{\xe \v KEY_N\:raylib.h}
{\xe \v raylib.h\:KEY_N}
{\qr KEY_N{\bkmkstart AAAAAAABOA}
{\bkmkend AAAAAAABOA}
\cell }{\cell }{\row }
{\xe \v KEY_O\:raylib.h}
{\xe \v raylib.h\:KEY_O}
{\qr KEY_O{\bkmkstart AAAAAAABOB}
{\bkmkend AAAAAAABOB}
\cell }{\cell }{\row }
{\xe \v KEY_P\:raylib.h}
{\xe \v raylib.h\:KEY_P}
{\qr KEY_P{\bkmkstart AAAAAAABOC}
{\bkmkend AAAAAAABOC}
\cell }{\cell }{\row }
{\xe \v KEY_Q\:raylib.h}
{\xe \v raylib.h\:KEY_Q}
{\qr KEY_Q{\bkmkstart AAAAAAABOD}
{\bkmkend AAAAAAABOD}
\cell }{\cell }{\row }
{\xe \v KEY_R\:raylib.h}
{\xe \v raylib.h\:KEY_R}
{\qr KEY_R{\bkmkstart AAAAAAABOE}
{\bkmkend AAAAAAABOE}
\cell }{\cell }{\row }
{\xe \v KEY_S\:raylib.h}
{\xe \v raylib.h\:KEY_S}
{\qr KEY_S{\bkmkstart AAAAAAABOF}
{\bkmkend AAAAAAABOF}
\cell }{\cell }{\row }
{\xe \v KEY_T\:raylib.h}
{\xe \v raylib.h\:KEY_T}
{\qr KEY_T{\bkmkstart AAAAAAABOG}
{\bkmkend AAAAAAABOG}
\cell }{\cell }{\row }
{\xe \v KEY_U\:raylib.h}
{\xe \v raylib.h\:KEY_U}
{\qr KEY_U{\bkmkstart AAAAAAABOH}
{\bkmkend AAAAAAABOH}
\cell }{\cell }{\row }
{\xe \v KEY_V\:raylib.h}
{\xe \v raylib.h\:KEY_V}
{\qr KEY_V{\bkmkstart AAAAAAABOI}
{\bkmkend AAAAAAABOI}
\cell }{\cell }{\row }
{\xe \v KEY_W\:raylib.h}
{\xe \v raylib.h\:KEY_W}
{\qr KEY_W{\bkmkstart AAAAAAABOJ}
{\bkmkend AAAAAAABOJ}
\cell }{\cell }{\row }
{\xe \v KEY_X\:raylib.h}
{\xe \v raylib.h\:KEY_X}
{\qr KEY_X{\bkmkstart AAAAAAABOK}
{\bkmkend AAAAAAABOK}
\cell }{\cell }{\row }
{\xe \v KEY_Y\:raylib.h}
{\xe \v raylib.h\:KEY_Y}
{\qr KEY_Y{\bkmkstart AAAAAAABOL}
{\bkmkend AAAAAAABOL}
\cell }{\cell }{\row }
{\xe \v KEY_Z\:raylib.h}
{\xe \v raylib.h\:KEY_Z}
{\qr KEY_Z{\bkmkstart AAAAAAABOM}
{\bkmkend AAAAAAABOM}
\cell }{\cell }{\row }
{\xe \v KEY_LEFT_BRACKET\:raylib.h}
{\xe \v raylib.h\:KEY_LEFT_BRACKET}
{\qr KEY_LEFT_BRACKET{\bkmkstart AAAAAAABON}
{\bkmkend AAAAAAABON}
\cell }{\cell }{\row }
{\xe \v KEY_BACKSLASH\:raylib.h}
{\xe \v raylib.h\:KEY_BACKSLASH}
{\qr KEY_BACKSLASH{\bkmkstart AAAAAAABOO}
{\bkmkend AAAAAAABOO}
\cell }{\cell }{\row }
{\xe \v KEY_RIGHT_BRACKET\:raylib.h}
{\xe \v raylib.h\:KEY_RIGHT_BRACKET}
{\qr KEY_RIGHT_BRACKET{\bkmkstart AAAAAAABOP}
{\bkmkend AAAAAAABOP}
\cell }{\cell }{\row }
{\xe \v KEY_GRAVE\:raylib.h}
{\xe \v raylib.h\:KEY_GRAVE}
{\qr KEY_GRAVE{\bkmkstart AAAAAAABOQ}
{\bkmkend AAAAAAABOQ}
\cell }{\cell }{\row }
{\xe \v KEY_SPACE\:raylib.h}
{\xe \v raylib.h\:KEY_SPACE}
{\qr KEY_SPACE{\bkmkstart AAAAAAABOR}
{\bkmkend AAAAAAABOR}
\cell }{\cell }{\row }
{\xe \v KEY_ESCAPE\:raylib.h}
{\xe \v raylib.h\:KEY_ESCAPE}
{\qr KEY_ESCAPE{\bkmkstart AAAAAAABOS}
{\bkmkend AAAAAAABOS}
\cell }{\cell }{\row }
{\xe \v KEY_ENTER\:raylib.h}
{\xe \v raylib.h\:KEY_ENTER}
{\qr KEY_ENTER{\bkmkstart AAAAAAABOT}
{\bkmkend AAAAAAABOT}
\cell }{\cell }{\row }
{\xe \v KEY_TAB\:raylib.h}
{\xe \v raylib.h\:KEY_TAB}
{\qr KEY_TAB{\bkmkstart AAAAAAABOU}
{\bkmkend AAAAAAABOU}
\cell }{\cell }{\row }
{\xe \v KEY_BACKSPACE\:raylib.h}
{\xe \v raylib.h\:KEY_BACKSPACE}
{\qr KEY_BACKSPACE{\bkmkstart AAAAAAABOV}
{\bkmkend AAAAAAABOV}
\cell }{\cell }{\row }
{\xe \v KEY_INSERT\:raylib.h}
{\xe \v raylib.h\:KEY_INSERT}
{\qr KEY_INSERT{\bkmkstart AAAAAAABOW}
{\bkmkend AAAAAAABOW}
\cell }{\cell }{\row }
{\xe \v KEY_DELETE\:raylib.h}
{\xe \v raylib.h\:KEY_DELETE}
{\qr KEY_DELETE{\bkmkstart AAAAAAABOX}
{\bkmkend AAAAAAABOX}
\cell }{\cell }{\row }
{\xe \v KEY_RIGHT\:raylib.h}
{\xe \v raylib.h\:KEY_RIGHT}
{\qr KEY_RIGHT{\bkmkstart AAAAAAABOY}
{\bkmkend AAAAAAABOY}
\cell }{\cell }{\row }
{\xe \v KEY_LEFT\:raylib.h}
{\xe \v raylib.h\:KEY_LEFT}
{\qr KEY_LEFT{\bkmkstart AAAAAAABOZ}
{\bkmkend AAAAAAABOZ}
\cell }{\cell }{\row }
{\xe \v KEY_DOWN\:raylib.h}
{\xe \v raylib.h\:KEY_DOWN}
{\qr KEY_DOWN{\bkmkstart AAAAAAABPA}
{\bkmkend AAAAAAABPA}
\cell }{\cell }{\row }
{\xe \v KEY_UP\:raylib.h}
{\xe \v raylib.h\:KEY_UP}
{\qr KEY_UP{\bkmkstart AAAAAAABPB}
{\bkmkend AAAAAAABPB}
\cell }{\cell }{\row }
{\xe \v KEY_PAGE_UP\:raylib.h}
{\xe \v raylib.h\:KEY_PAGE_UP}
{\qr KEY_PAGE_UP{\bkmkstart AAAAAAABPC}
{\bkmkend AAAAAAABPC}
\cell }{\cell }{\row }
{\xe \v KEY_PAGE_DOWN\:raylib.h}
{\xe \v raylib.h\:KEY_PAGE_DOWN}
{\qr KEY_PAGE_DOWN{\bkmkstart AAAAAAABPD}
{\bkmkend AAAAAAABPD}
\cell }{\cell }{\row }
{\xe \v KEY_HOME\:raylib.h}
{\xe \v raylib.h\:KEY_HOME}
{\qr KEY_HOME{\bkmkstart AAAAAAABPE}
{\bkmkend AAAAAAABPE}
\cell }{\cell }{\row }
{\xe \v KEY_END\:raylib.h}
{\xe \v raylib.h\:KEY_END}
{\qr KEY_END{\bkmkstart AAAAAAABPF}
{\bkmkend AAAAAAABPF}
\cell }{\cell }{\row }
{\xe \v KEY_CAPS_LOCK\:raylib.h}
{\xe \v raylib.h\:KEY_CAPS_LOCK}
{\qr KEY_CAPS_LOCK{\bkmkstart AAAAAAABPG}
{\bkmkend AAAAAAABPG}
\cell }{\cell }{\row }
{\xe \v KEY_SCROLL_LOCK\:raylib.h}
{\xe \v raylib.h\:KEY_SCROLL_LOCK}
{\qr KEY_SCROLL_LOCK{\bkmkstart AAAAAAABPH}
{\bkmkend AAAAAAABPH}
\cell }{\cell }{\row }
{\xe \v KEY_NUM_LOCK\:raylib.h}
{\xe \v raylib.h\:KEY_NUM_LOCK}
{\qr KEY_NUM_LOCK{\bkmkstart AAAAAAABPI}
{\bkmkend AAAAAAABPI}
\cell }{\cell }{\row }
{\xe \v KEY_PRINT_SCREEN\:raylib.h}
{\xe \v raylib.h\:KEY_PRINT_SCREEN}
{\qr KEY_PRINT_SCREEN{\bkmkstart AAAAAAABPJ}
{\bkmkend AAAAAAABPJ}
\cell }{\cell }{\row }
{\xe \v KEY_PAUSE\:raylib.h}
{\xe \v raylib.h\:KEY_PAUSE}
{\qr KEY_PAUSE{\bkmkstart AAAAAAABPK}
{\bkmkend AAAAAAABPK}
\cell }{\cell }{\row }
{\xe \v KEY_F1\:raylib.h}
{\xe \v raylib.h\:KEY_F1}
{\qr KEY_F1{\bkmkstart AAAAAAABPL}
{\bkmkend AAAAAAABPL}
\cell }{\cell }{\row }
{\xe \v KEY_F2\:raylib.h}
{\xe \v raylib.h\:KEY_F2}
{\qr KEY_F2{\bkmkstart AAAAAAABPM}
{\bkmkend AAAAAAABPM}
\cell }{\cell }{\row }
{\xe \v KEY_F3\:raylib.h}
{\xe \v raylib.h\:KEY_F3}
{\qr KEY_F3{\bkmkstart AAAAAAABPN}
{\bkmkend AAAAAAABPN}
\cell }{\cell }{\row }
{\xe \v KEY_F4\:raylib.h}
{\xe \v raylib.h\:KEY_F4}
{\qr KEY_F4{\bkmkstart AAAAAAABPO}
{\bkmkend AAAAAAABPO}
\cell }{\cell }{\row }
{\xe \v KEY_F5\:raylib.h}
{\xe \v raylib.h\:KEY_F5}
{\qr KEY_F5{\bkmkstart AAAAAAABPP}
{\bkmkend AAAAAAABPP}
\cell }{\cell }{\row }
{\xe \v KEY_F6\:raylib.h}
{\xe \v raylib.h\:KEY_F6}
{\qr KEY_F6{\bkmkstart AAAAAAABPQ}
{\bkmkend AAAAAAABPQ}
\cell }{\cell }{\row }
{\xe \v KEY_F7\:raylib.h}
{\xe \v raylib.h\:KEY_F7}
{\qr KEY_F7{\bkmkstart AAAAAAABPR}
{\bkmkend AAAAAAABPR}
\cell }{\cell }{\row }
{\xe \v KEY_F8\:raylib.h}
{\xe \v raylib.h\:KEY_F8}
{\qr KEY_F8{\bkmkstart AAAAAAABPS}
{\bkmkend AAAAAAABPS}
\cell }{\cell }{\row }
{\xe \v KEY_F9\:raylib.h}
{\xe \v raylib.h\:KEY_F9}
{\qr KEY_F9{\bkmkstart AAAAAAABPT}
{\bkmkend AAAAAAABPT}
\cell }{\cell }{\row }
{\xe \v KEY_F10\:raylib.h}
{\xe \v raylib.h\:KEY_F10}
{\qr KEY_F10{\bkmkstart AAAAAAABPU}
{\bkmkend AAAAAAABPU}
\cell }{\cell }{\row }
{\xe \v KEY_F11\:raylib.h}
{\xe \v raylib.h\:KEY_F11}
{\qr KEY_F11{\bkmkstart AAAAAAABPV}
{\bkmkend AAAAAAABPV}
\cell }{\cell }{\row }
{\xe \v KEY_F12\:raylib.h}
{\xe \v raylib.h\:KEY_F12}
{\qr KEY_F12{\bkmkstart AAAAAAABPW}
{\bkmkend AAAAAAABPW}
\cell }{\cell }{\row }
{\xe \v KEY_LEFT_SHIFT\:raylib.h}
{\xe \v raylib.h\:KEY_LEFT_SHIFT}
{\qr KEY_LEFT_SHIFT{\bkmkstart AAAAAAABPX}
{\bkmkend AAAAAAABPX}
\cell }{\cell }{\row }
{\xe \v KEY_LEFT_CONTROL\:raylib.h}
{\xe \v raylib.h\:KEY_LEFT_CONTROL}
{\qr KEY_LEFT_CONTROL{\bkmkstart AAAAAAABPY}
{\bkmkend AAAAAAABPY}
\cell }{\cell }{\row }
{\xe \v KEY_LEFT_ALT\:raylib.h}
{\xe \v raylib.h\:KEY_LEFT_ALT}
{\qr KEY_LEFT_ALT{\bkmkstart AAAAAAABPZ}
{\bkmkend AAAAAAABPZ}
\cell }{\cell }{\row }
{\xe \v KEY_LEFT_SUPER\:raylib.h}
{\xe \v raylib.h\:KEY_LEFT_SUPER}
{\qr KEY_LEFT_SUPER{\bkmkstart AAAAAAABQA}
{\bkmkend AAAAAAABQA}
\cell }{\cell }{\row }
{\xe \v KEY_RIGHT_SHIFT\:raylib.h}
{\xe \v raylib.h\:KEY_RIGHT_SHIFT}
{\qr KEY_RIGHT_SHIFT{\bkmkstart AAAAAAABQB}
{\bkmkend AAAAAAABQB}
\cell }{\cell }{\row }
{\xe \v KEY_RIGHT_CONTROL\:raylib.h}
{\xe \v raylib.h\:KEY_RIGHT_CONTROL}
{\qr KEY_RIGHT_CONTROL{\bkmkstart AAAAAAABQC}
{\bkmkend AAAAAAABQC}
\cell }{\cell }{\row }
{\xe \v KEY_RIGHT_ALT\:raylib.h}
{\xe \v raylib.h\:KEY_RIGHT_ALT}
{\qr KEY_RIGHT_ALT{\bkmkstart AAAAAAABQD}
{\bkmkend AAAAAAABQD}
\cell }{\cell }{\row }
{\xe \v KEY_RIGHT_SUPER\:raylib.h}
{\xe \v raylib.h\:KEY_RIGHT_SUPER}
{\qr KEY_RIGHT_SUPER{\bkmkstart AAAAAAABQE}
{\bkmkend AAAAAAABQE}
\cell }{\cell }{\row }
{\xe \v KEY_KB_MENU\:raylib.h}
{\xe \v raylib.h\:KEY_KB_MENU}
{\qr KEY_KB_MENU{\bkmkstart AAAAAAABQF}
{\bkmkend AAAAAAABQF}
\cell }{\cell }{\row }
{\xe \v KEY_KP_0\:raylib.h}
{\xe \v raylib.h\:KEY_KP_0}
{\qr KEY_KP_0{\bkmkstart AAAAAAABQG}
{\bkmkend AAAAAAABQG}
\cell }{\cell }{\row }
{\xe \v KEY_KP_1\:raylib.h}
{\xe \v raylib.h\:KEY_KP_1}
{\qr KEY_KP_1{\bkmkstart AAAAAAABQH}
{\bkmkend AAAAAAABQH}
\cell }{\cell }{\row }
{\xe \v KEY_KP_2\:raylib.h}
{\xe \v raylib.h\:KEY_KP_2}
{\qr KEY_KP_2{\bkmkstart AAAAAAABQI}
{\bkmkend AAAAAAABQI}
\cell }{\cell }{\row }
{\xe \v KEY_KP_3\:raylib.h}
{\xe \v raylib.h\:KEY_KP_3}
{\qr KEY_KP_3{\bkmkstart AAAAAAABQJ}
{\bkmkend AAAAAAABQJ}
\cell }{\cell }{\row }
{\xe \v KEY_KP_4\:raylib.h}
{\xe \v raylib.h\:KEY_KP_4}
{\qr KEY_KP_4{\bkmkstart AAAAAAABQK}
{\bkmkend AAAAAAABQK}
\cell }{\cell }{\row }
{\xe \v KEY_KP_5\:raylib.h}
{\xe \v raylib.h\:KEY_KP_5}
{\qr KEY_KP_5{\bkmkstart AAAAAAABQL}
{\bkmkend AAAAAAABQL}
\cell }{\cell }{\row }
{\xe \v KEY_KP_6\:raylib.h}
{\xe \v raylib.h\:KEY_KP_6}
{\qr KEY_KP_6{\bkmkstart AAAAAAABQM}
{\bkmkend AAAAAAABQM}
\cell }{\cell }{\row }
{\xe \v KEY_KP_7\:raylib.h}
{\xe \v raylib.h\:KEY_KP_7}
{\qr KEY_KP_7{\bkmkstart AAAAAAABQN}
{\bkmkend AAAAAAABQN}
\cell }{\cell }{\row }
{\xe \v KEY_KP_8\:raylib.h}
{\xe \v raylib.h\:KEY_KP_8}
{\qr KEY_KP_8{\bkmkstart AAAAAAABQO}
{\bkmkend AAAAAAABQO}
\cell }{\cell }{\row }
{\xe \v KEY_KP_9\:raylib.h}
{\xe \v raylib.h\:KEY_KP_9}
{\qr KEY_KP_9{\bkmkstart AAAAAAABQP}
{\bkmkend AAAAAAABQP}
\cell }{\cell }{\row }
{\xe \v KEY_KP_DECIMAL\:raylib.h}
{\xe \v raylib.h\:KEY_KP_DECIMAL}
{\qr KEY_KP_DECIMAL{\bkmkstart AAAAAAABQQ}
{\bkmkend AAAAAAABQQ}
\cell }{\cell }{\row }
{\xe \v KEY_KP_DIVIDE\:raylib.h}
{\xe \v raylib.h\:KEY_KP_DIVIDE}
{\qr KEY_KP_DIVIDE{\bkmkstart AAAAAAABQR}
{\bkmkend AAAAAAABQR}
\cell }{\cell }{\row }
{\xe \v KEY_KP_MULTIPLY\:raylib.h}
{\xe \v raylib.h\:KEY_KP_MULTIPLY}
{\qr KEY_KP_MULTIPLY{\bkmkstart AAAAAAABQS}
{\bkmkend AAAAAAABQS}
\cell }{\cell }{\row }
{\xe \v KEY_KP_SUBTRACT\:raylib.h}
{\xe \v raylib.h\:KEY_KP_SUBTRACT}
{\qr KEY_KP_SUBTRACT{\bkmkstart AAAAAAABQT}
{\bkmkend AAAAAAABQT}
\cell }{\cell }{\row }
{\xe \v KEY_KP_ADD\:raylib.h}
{\xe \v raylib.h\:KEY_KP_ADD}
{\qr KEY_KP_ADD{\bkmkstart AAAAAAABQU}
{\bkmkend AAAAAAABQU}
\cell }{\cell }{\row }
{\xe \v KEY_KP_ENTER\:raylib.h}
{\xe \v raylib.h\:KEY_KP_ENTER}
{\qr KEY_KP_ENTER{\bkmkstart AAAAAAABQV}
{\bkmkend AAAAAAABQV}
\cell }{\cell }{\row }
{\xe \v KEY_KP_EQUAL\:raylib.h}
{\xe \v raylib.h\:KEY_KP_EQUAL}
{\qr KEY_KP_EQUAL{\bkmkstart AAAAAAABQW}
{\bkmkend AAAAAAABQW}
\cell }{\cell }{\row }
{\xe \v KEY_BACK\:raylib.h}
{\xe \v raylib.h\:KEY_BACK}
{\qr KEY_BACK{\bkmkstart AAAAAAABQX}
{\bkmkend AAAAAAABQX}
\cell }{\cell }{\row }
{\xe \v KEY_MENU\:raylib.h}
{\xe \v raylib.h\:KEY_MENU}
{\qr KEY_MENU{\bkmkstart AAAAAAABQY}
{\bkmkend AAAAAAABQY}
\cell }{\cell }{\row }
{\xe \v KEY_VOLUME_UP\:raylib.h}
{\xe \v raylib.h\:KEY_VOLUME_UP}
{\qr KEY_VOLUME_UP{\bkmkstart AAAAAAABQZ}
{\bkmkend AAAAAAABQZ}
\cell }{\cell }{\row }
{\xe \v KEY_VOLUME_DOWN\:raylib.h}
{\xe \v raylib.h\:KEY_VOLUME_DOWN}
{\qr KEY_VOLUME_DOWN{\bkmkstart AAAAAAABRA}
{\bkmkend AAAAAAABRA}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 524              \{\par
525     KEY_NULL            = 0,        {\cf20 // Key: NULL, used for no key pressed}\par
526     {\cf20 // Alphanumeric keys}\par
527     KEY_APOSTROPHE      = 39,       {\cf20 // Key: '}\par
528     KEY_COMMA           = 44,       {\cf20 // Key: ,}\par
529     KEY_MINUS           = 45,       {\cf20 // Key: -}\par
530     KEY_PERIOD          = 46,       {\cf20 // Key: .}\par
531     KEY_SLASH           = 47,       {\cf20 // Key: /}\par
532     KEY_ZERO            = 48,       {\cf20 // Key: 0}\par
533     KEY_ONE             = 49,       {\cf20 // Key: 1}\par
534     KEY_TWO             = 50,       {\cf20 // Key: 2}\par
535     KEY_THREE           = 51,       {\cf20 // Key: 3}\par
536     KEY_FOUR            = 52,       {\cf20 // Key: 4}\par
537     KEY_FIVE            = 53,       {\cf20 // Key: 5}\par
538     KEY_SIX             = 54,       {\cf20 // Key: 6}\par
539     KEY_SEVEN           = 55,       {\cf20 // Key: 7}\par
540     KEY_EIGHT           = 56,       {\cf20 // Key: 8}\par
541     KEY_NINE            = 57,       {\cf20 // Key: 9}\par
542     KEY_SEMICOLON       = 59,       {\cf20 // Key: ;}\par
543     KEY_EQUAL           = 61,       {\cf20 // Key: =}\par
544     KEY_A               = 65,       {\cf20 // Key: A | a}\par
545     KEY_B               = 66,       {\cf20 // Key: B | b}\par
546     KEY_C               = 67,       {\cf20 // Key: C | c}\par
547     KEY_D               = 68,       {\cf20 // Key: D | d}\par
548     KEY_E               = 69,       {\cf20 // Key: E | e}\par
549     KEY_F               = 70,       {\cf20 // Key: F | f}\par
550     KEY_G               = 71,       {\cf20 // Key: G | g}\par
551     KEY_H               = 72,       {\cf20 // Key: H | h}\par
552     KEY_I               = 73,       {\cf20 // Key: I | i}\par
553     KEY_J               = 74,       {\cf20 // Key: J | j}\par
554     KEY_K               = 75,       {\cf20 // Key: K | k}\par
555     KEY_L               = 76,       {\cf20 // Key: L | l}\par
556     KEY_M               = 77,       {\cf20 // Key: M | m}\par
557     KEY_N               = 78,       {\cf20 // Key: N | n}\par
558     KEY_O               = 79,       {\cf20 // Key: O | o}\par
559     KEY_P               = 80,       {\cf20 // Key: P | p}\par
560     KEY_Q               = 81,       {\cf20 // Key: Q | q}\par
561     KEY_R               = 82,       {\cf20 // Key: R | r}\par
562     KEY_S               = 83,       {\cf20 // Key: S | s}\par
563     KEY_T               = 84,       {\cf20 // Key: T | t}\par
564     KEY_U               = 85,       {\cf20 // Key: U | u}\par
565     KEY_V               = 86,       {\cf20 // Key: V | v}\par
566     KEY_W               = 87,       {\cf20 // Key: W | w}\par
567     KEY_X               = 88,       {\cf20 // Key: X | x}\par
568     KEY_Y               = 89,       {\cf20 // Key: Y | y}\par
569     KEY_Z               = 90,       {\cf20 // Key: Z | z}\par
570     KEY_LEFT_BRACKET    = 91,       {\cf20 // Key: [}\par
571     KEY_BACKSLASH       = 92,       {\cf20 // Key: '\\'}\par
572     KEY_RIGHT_BRACKET   = 93,       {\cf20 // Key: ]}\par
573     KEY_GRAVE           = 96,       {\cf20 // Key: `}\par
574     {\cf20 // Function keys}\par
575     KEY_SPACE           = 32,       {\cf20 // Key: Space}\par
576     KEY_ESCAPE          = 256,      {\cf20 // Key: Esc}\par
577     KEY_ENTER           = 257,      {\cf20 // Key: Enter}\par
578     KEY_TAB             = 258,      {\cf20 // Key: Tab}\par
579     KEY_BACKSPACE       = 259,      {\cf20 // Key: Backspace}\par
580     KEY_INSERT          = 260,      {\cf20 // Key: Ins}\par
581     KEY_DELETE          = 261,      {\cf20 // Key: Del}\par
582     KEY_RIGHT           = 262,      {\cf20 // Key: Cursor right}\par
583     KEY_LEFT            = 263,      {\cf20 // Key: Cursor left}\par
584     KEY_DOWN            = 264,      {\cf20 // Key: Cursor down}\par
585     KEY_UP              = 265,      {\cf20 // Key: Cursor up}\par
586     KEY_PAGE_UP         = 266,      {\cf20 // Key: Page up}\par
587     KEY_PAGE_DOWN       = 267,      {\cf20 // Key: Page down}\par
588     KEY_HOME            = 268,      {\cf20 // Key: Home}\par
589     KEY_END             = 269,      {\cf20 // Key: End}\par
590     KEY_CAPS_LOCK       = 280,      {\cf20 // Key: Caps lock}\par
591     KEY_SCROLL_LOCK     = 281,      {\cf20 // Key: Scroll down}\par
592     KEY_NUM_LOCK        = 282,      {\cf20 // Key: Num lock}\par
593     KEY_PRINT_SCREEN    = 283,      {\cf20 // Key: Print screen}\par
594     KEY_PAUSE           = 284,      {\cf20 // Key: Pause}\par
595     KEY_F1              = 290,      {\cf20 // Key: F1}\par
596     KEY_F2              = 291,      {\cf20 // Key: F2}\par
597     KEY_F3              = 292,      {\cf20 // Key: F3}\par
598     KEY_F4              = 293,      {\cf20 // Key: F4}\par
599     KEY_F5              = 294,      {\cf20 // Key: F5}\par
600     KEY_F6              = 295,      {\cf20 // Key: F6}\par
601     KEY_F7              = 296,      {\cf20 // Key: F7}\par
602     KEY_F8              = 297,      {\cf20 // Key: F8}\par
603     KEY_F9              = 298,      {\cf20 // Key: F9}\par
604     KEY_F10             = 299,      {\cf20 // Key: F10}\par
605     KEY_F11             = 300,      {\cf20 // Key: F11}\par
606     KEY_F12             = 301,      {\cf20 // Key: F12}\par
607     KEY_LEFT_SHIFT      = 340,      {\cf20 // Key: Shift left}\par
608     KEY_LEFT_CONTROL    = 341,      {\cf20 // Key: Control left}\par
609     KEY_LEFT_ALT        = 342,      {\cf20 // Key: Alt left}\par
610     KEY_LEFT_SUPER      = 343,      {\cf20 // Key: Super left}\par
611     KEY_RIGHT_SHIFT     = 344,      {\cf20 // Key: Shift right}\par
612     KEY_RIGHT_CONTROL   = 345,      {\cf20 // Key: Control right}\par
613     KEY_RIGHT_ALT       = 346,      {\cf20 // Key: Alt right}\par
614     KEY_RIGHT_SUPER     = 347,      {\cf20 // Key: Super right}\par
615     KEY_KB_MENU         = 348,      {\cf20 // Key: KB menu}\par
616     {\cf20 // Keypad keys}\par
617     KEY_KP_0            = 320,      {\cf20 // Key: Keypad 0}\par
618     KEY_KP_1            = 321,      {\cf20 // Key: Keypad 1}\par
619     KEY_KP_2            = 322,      {\cf20 // Key: Keypad 2}\par
620     KEY_KP_3            = 323,      {\cf20 // Key: Keypad 3}\par
621     KEY_KP_4            = 324,      {\cf20 // Key: Keypad 4}\par
622     KEY_KP_5            = 325,      {\cf20 // Key: Keypad 5}\par
623     KEY_KP_6            = 326,      {\cf20 // Key: Keypad 6}\par
624     KEY_KP_7            = 327,      {\cf20 // Key: Keypad 7}\par
625     KEY_KP_8            = 328,      {\cf20 // Key: Keypad 8}\par
626     KEY_KP_9            = 329,      {\cf20 // Key: Keypad 9}\par
627     KEY_KP_DECIMAL      = 330,      {\cf20 // Key: Keypad .}\par
628     KEY_KP_DIVIDE       = 331,      {\cf20 // Key: Keypad /}\par
629     KEY_KP_MULTIPLY     = 332,      {\cf20 // Key: Keypad *}\par
630     KEY_KP_SUBTRACT     = 333,      {\cf20 // Key: Keypad -}\par
631     KEY_KP_ADD          = 334,      {\cf20 // Key: Keypad +}\par
632     KEY_KP_ENTER        = 335,      {\cf20 // Key: Keypad Enter}\par
633     KEY_KP_EQUAL        = 336,      {\cf20 // Key: Keypad =}\par
634     {\cf20 // Android key buttons}\par
635     KEY_BACK            = 4,        {\cf20 // Key: Android back button}\par
636     KEY_MENU            = 82,       {\cf20 // Key: Android menu button}\par
637     KEY_VOLUME_UP       = 24,       {\cf20 // Key: Android volume up button}\par
638     KEY_VOLUME_DOWN     = 25        {\cf20 // Key: Android volume down button}\par
639 \} KeyboardKey;\par
}
}
{\xe \v MaterialMapIndex\:raylib.h}
{\xe \v raylib.h\:MaterialMapIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b MaterialMapIndex}}}
\par
{\bkmkstart AAAAAAABRB}
{\bkmkend AAAAAAABRB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v MATERIAL_MAP_ALBEDO\:raylib.h}
{\xe \v raylib.h\:MATERIAL_MAP_ALBEDO}
{\qr MATERIAL_MAP_ALBEDO{\bkmkstart AAAAAAABRC}
{\bkmkend AAAAAAABRC}
\cell }{\cell }{\row }
{\xe \v MATERIAL_MAP_METALNESS\:raylib.h}
{\xe \v raylib.h\:MATERIAL_MAP_METALNESS}
{\qr MATERIAL_MAP_METALNESS{\bkmkstart AAAAAAABRD}
{\bkmkend AAAAAAABRD}
\cell }{\cell }{\row }
{\xe \v MATERIAL_MAP_NORMAL\:raylib.h}
{\xe \v raylib.h\:MATERIAL_MAP_NORMAL}
{\qr MATERIAL_MAP_NORMAL{\bkmkstart AAAAAAABRE}
{\bkmkend AAAAAAABRE}
\cell }{\cell }{\row }
{\xe \v MATERIAL_MAP_ROUGHNESS\:raylib.h}
{\xe \v raylib.h\:MATERIAL_MAP_ROUGHNESS}
{\qr MATERIAL_MAP_ROUGHNESS{\bkmkstart AAAAAAABRF}
{\bkmkend AAAAAAABRF}
\cell }{\cell }{\row }
{\xe \v MATERIAL_MAP_OCCLUSION\:raylib.h}
{\xe \v raylib.h\:MATERIAL_MAP_OCCLUSION}
{\qr MATERIAL_MAP_OCCLUSION{\bkmkstart AAAAAAABRG}
{\bkmkend AAAAAAABRG}
\cell }{\cell }{\row }
{\xe \v MATERIAL_MAP_EMISSION\:raylib.h}
{\xe \v raylib.h\:MATERIAL_MAP_EMISSION}
{\qr MATERIAL_MAP_EMISSION{\bkmkstart AAAAAAABRH}
{\bkmkend AAAAAAABRH}
\cell }{\cell }{\row }
{\xe \v MATERIAL_MAP_HEIGHT\:raylib.h}
{\xe \v raylib.h\:MATERIAL_MAP_HEIGHT}
{\qr MATERIAL_MAP_HEIGHT{\bkmkstart AAAAAAABRI}
{\bkmkend AAAAAAABRI}
\cell }{\cell }{\row }
{\xe \v MATERIAL_MAP_CUBEMAP\:raylib.h}
{\xe \v raylib.h\:MATERIAL_MAP_CUBEMAP}
{\qr MATERIAL_MAP_CUBEMAP{\bkmkstart AAAAAAABRJ}
{\bkmkend AAAAAAABRJ}
\cell }{\cell }{\row }
{\xe \v MATERIAL_MAP_IRRADIANCE\:raylib.h}
{\xe \v raylib.h\:MATERIAL_MAP_IRRADIANCE}
{\qr MATERIAL_MAP_IRRADIANCE{\bkmkstart AAAAAAABRK}
{\bkmkend AAAAAAABRK}
\cell }{\cell }{\row }
{\xe \v MATERIAL_MAP_PREFILTER\:raylib.h}
{\xe \v raylib.h\:MATERIAL_MAP_PREFILTER}
{\qr MATERIAL_MAP_PREFILTER{\bkmkstart AAAAAAABRL}
{\bkmkend AAAAAAABRL}
\cell }{\cell }{\row }
{\xe \v MATERIAL_MAP_BRDF\:raylib.h}
{\xe \v raylib.h\:MATERIAL_MAP_BRDF}
{\qr MATERIAL_MAP_BRDF{\bkmkstart AAAAAAABRM}
{\bkmkend AAAAAAABRM}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 705              \{\par
706     MATERIAL_MAP_ALBEDO    = 0,     {\cf20 // Albedo material (same as: MATERIAL_MAP_DIFFUSE)}\par
707     MATERIAL_MAP_METALNESS,         {\cf20 // Metalness material (same as: MATERIAL_MAP_SPECULAR)}\par
708     MATERIAL_MAP_NORMAL,            {\cf20 // Normal material}\par
709     MATERIAL_MAP_ROUGHNESS,         {\cf20 // Roughness material}\par
710     MATERIAL_MAP_OCCLUSION,         {\cf20 // Ambient occlusion material}\par
711     MATERIAL_MAP_EMISSION,          {\cf20 // Emission material}\par
712     MATERIAL_MAP_HEIGHT,            {\cf20 // Heightmap material}\par
713     MATERIAL_MAP_CUBEMAP,           {\cf20 // Cubemap material (NOTE: Uses GL_TEXTURE_CUBE_MAP)}\par
714     MATERIAL_MAP_IRRADIANCE,        {\cf20 // Irradiance material (NOTE: Uses GL_TEXTURE_CUBE_MAP)}\par
715     MATERIAL_MAP_PREFILTER,         {\cf20 // Prefilter material (NOTE: Uses GL_TEXTURE_CUBE_MAP)}\par
716     MATERIAL_MAP_BRDF               {\cf20 // Brdf material}\par
717 \} MaterialMapIndex;\par
}
}
{\xe \v MouseButton\:raylib.h}
{\xe \v raylib.h\:MouseButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b MouseButton}}}
\par
{\bkmkstart AAAAAAABRN}
{\bkmkend AAAAAAABRN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v MOUSE_BUTTON_LEFT\:raylib.h}
{\xe \v raylib.h\:MOUSE_BUTTON_LEFT}
{\qr MOUSE_BUTTON_LEFT{\bkmkstart AAAAAAABRO}
{\bkmkend AAAAAAABRO}
\cell }{\cell }{\row }
{\xe \v MOUSE_BUTTON_RIGHT\:raylib.h}
{\xe \v raylib.h\:MOUSE_BUTTON_RIGHT}
{\qr MOUSE_BUTTON_RIGHT{\bkmkstart AAAAAAABRP}
{\bkmkend AAAAAAABRP}
\cell }{\cell }{\row }
{\xe \v MOUSE_BUTTON_MIDDLE\:raylib.h}
{\xe \v raylib.h\:MOUSE_BUTTON_MIDDLE}
{\qr MOUSE_BUTTON_MIDDLE{\bkmkstart AAAAAAABRQ}
{\bkmkend AAAAAAABRQ}
\cell }{\cell }{\row }
{\xe \v MOUSE_BUTTON_SIDE\:raylib.h}
{\xe \v raylib.h\:MOUSE_BUTTON_SIDE}
{\qr MOUSE_BUTTON_SIDE{\bkmkstart AAAAAAABRR}
{\bkmkend AAAAAAABRR}
\cell }{\cell }{\row }
{\xe \v MOUSE_BUTTON_EXTRA\:raylib.h}
{\xe \v raylib.h\:MOUSE_BUTTON_EXTRA}
{\qr MOUSE_BUTTON_EXTRA{\bkmkstart AAAAAAABRS}
{\bkmkend AAAAAAABRS}
\cell }{\cell }{\row }
{\xe \v MOUSE_BUTTON_FORWARD\:raylib.h}
{\xe \v raylib.h\:MOUSE_BUTTON_FORWARD}
{\qr MOUSE_BUTTON_FORWARD{\bkmkstart AAAAAAABRT}
{\bkmkend AAAAAAABRT}
\cell }{\cell }{\row }
{\xe \v MOUSE_BUTTON_BACK\:raylib.h}
{\xe \v raylib.h\:MOUSE_BUTTON_BACK}
{\qr MOUSE_BUTTON_BACK{\bkmkstart AAAAAAABRU}
{\bkmkend AAAAAAABRU}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 647              \{\par
648     MOUSE_BUTTON_LEFT    = 0,       {\cf20 // Mouse button left}\par
649     MOUSE_BUTTON_RIGHT   = 1,       {\cf20 // Mouse button right}\par
650     MOUSE_BUTTON_MIDDLE  = 2,       {\cf20 // Mouse button middle (pressed wheel)}\par
651     MOUSE_BUTTON_SIDE    = 3,       {\cf20 // Mouse button side (advanced mouse device)}\par
652     MOUSE_BUTTON_EXTRA   = 4,       {\cf20 // Mouse button extra (advanced mouse device)}\par
653     MOUSE_BUTTON_FORWARD = 5,       {\cf20 // Mouse button fordward (advanced mouse device)}\par
654     MOUSE_BUTTON_BACK    = 6,       {\cf20 // Mouse button back (advanced mouse device)}\par
655 \} MouseButton;\par
}
}
{\xe \v MouseCursor\:raylib.h}
{\xe \v raylib.h\:MouseCursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b MouseCursor}}}
\par
{\bkmkstart AAAAAAABRV}
{\bkmkend AAAAAAABRV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v MOUSE_CURSOR_DEFAULT\:raylib.h}
{\xe \v raylib.h\:MOUSE_CURSOR_DEFAULT}
{\qr MOUSE_CURSOR_DEFAULT{\bkmkstart AAAAAAABRW}
{\bkmkend AAAAAAABRW}
\cell }{\cell }{\row }
{\xe \v MOUSE_CURSOR_ARROW\:raylib.h}
{\xe \v raylib.h\:MOUSE_CURSOR_ARROW}
{\qr MOUSE_CURSOR_ARROW{\bkmkstart AAAAAAABRX}
{\bkmkend AAAAAAABRX}
\cell }{\cell }{\row }
{\xe \v MOUSE_CURSOR_IBEAM\:raylib.h}
{\xe \v raylib.h\:MOUSE_CURSOR_IBEAM}
{\qr MOUSE_CURSOR_IBEAM{\bkmkstart AAAAAAABRY}
{\bkmkend AAAAAAABRY}
\cell }{\cell }{\row }
{\xe \v MOUSE_CURSOR_CROSSHAIR\:raylib.h}
{\xe \v raylib.h\:MOUSE_CURSOR_CROSSHAIR}
{\qr MOUSE_CURSOR_CROSSHAIR{\bkmkstart AAAAAAABRZ}
{\bkmkend AAAAAAABRZ}
\cell }{\cell }{\row }
{\xe \v MOUSE_CURSOR_POINTING_HAND\:raylib.h}
{\xe \v raylib.h\:MOUSE_CURSOR_POINTING_HAND}
{\qr MOUSE_CURSOR_POINTING_HAND{\bkmkstart AAAAAAABSA}
{\bkmkend AAAAAAABSA}
\cell }{\cell }{\row }
{\xe \v MOUSE_CURSOR_RESIZE_EW\:raylib.h}
{\xe \v raylib.h\:MOUSE_CURSOR_RESIZE_EW}
{\qr MOUSE_CURSOR_RESIZE_EW{\bkmkstart AAAAAAABSB}
{\bkmkend AAAAAAABSB}
\cell }{\cell }{\row }
{\xe \v MOUSE_CURSOR_RESIZE_NS\:raylib.h}
{\xe \v raylib.h\:MOUSE_CURSOR_RESIZE_NS}
{\qr MOUSE_CURSOR_RESIZE_NS{\bkmkstart AAAAAAABSC}
{\bkmkend AAAAAAABSC}
\cell }{\cell }{\row }
{\xe \v MOUSE_CURSOR_RESIZE_NWSE\:raylib.h}
{\xe \v raylib.h\:MOUSE_CURSOR_RESIZE_NWSE}
{\qr MOUSE_CURSOR_RESIZE_NWSE{\bkmkstart AAAAAAABSD}
{\bkmkend AAAAAAABSD}
\cell }{\cell }{\row }
{\xe \v MOUSE_CURSOR_RESIZE_NESW\:raylib.h}
{\xe \v raylib.h\:MOUSE_CURSOR_RESIZE_NESW}
{\qr MOUSE_CURSOR_RESIZE_NESW{\bkmkstart AAAAAAABSE}
{\bkmkend AAAAAAABSE}
\cell }{\cell }{\row }
{\xe \v MOUSE_CURSOR_RESIZE_ALL\:raylib.h}
{\xe \v raylib.h\:MOUSE_CURSOR_RESIZE_ALL}
{\qr MOUSE_CURSOR_RESIZE_ALL{\bkmkstart AAAAAAABSF}
{\bkmkend AAAAAAABSF}
\cell }{\cell }{\row }
{\xe \v MOUSE_CURSOR_NOT_ALLOWED\:raylib.h}
{\xe \v raylib.h\:MOUSE_CURSOR_NOT_ALLOWED}
{\qr MOUSE_CURSOR_NOT_ALLOWED{\bkmkstart AAAAAAABSG}
{\bkmkend AAAAAAABSG}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 658              \{\par
659     MOUSE_CURSOR_DEFAULT       = 0,     {\cf20 // Default pointer shape}\par
660     MOUSE_CURSOR_ARROW         = 1,     {\cf20 // Arrow shape}\par
661     MOUSE_CURSOR_IBEAM         = 2,     {\cf20 // Text writing cursor shape}\par
662     MOUSE_CURSOR_CROSSHAIR     = 3,     {\cf20 // Cross shape}\par
663     MOUSE_CURSOR_POINTING_HAND = 4,     {\cf20 // Pointing hand cursor}\par
664     MOUSE_CURSOR_RESIZE_EW     = 5,     {\cf20 // Horizontal resize/move arrow shape}\par
665     MOUSE_CURSOR_RESIZE_NS     = 6,     {\cf20 // Vertical resize/move arrow shape}\par
666     MOUSE_CURSOR_RESIZE_NWSE   = 7,     {\cf20 // Top-left to bottom-right diagonal resize/move arrow shape}\par
667     MOUSE_CURSOR_RESIZE_NESW   = 8,     {\cf20 // The top-right to bottom-left diagonal resize/move arrow shape}\par
668     MOUSE_CURSOR_RESIZE_ALL    = 9,     {\cf20 // The omni-directional resize/move cursor shape}\par
669     MOUSE_CURSOR_NOT_ALLOWED   = 10     {\cf20 // The operation-not-allowed shape}\par
670 \} MouseCursor;\par
}
}
{\xe \v NPatchLayout\:raylib.h}
{\xe \v raylib.h\:NPatchLayout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b NPatchLayout}}}
\par
{\bkmkstart AAAAAAABSH}
{\bkmkend AAAAAAABSH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v NPATCH_NINE_PATCH\:raylib.h}
{\xe \v raylib.h\:NPATCH_NINE_PATCH}
{\qr NPATCH_NINE_PATCH{\bkmkstart AAAAAAABSI}
{\bkmkend AAAAAAABSI}
\cell }{\cell }{\row }
{\xe \v NPATCH_THREE_PATCH_VERTICAL\:raylib.h}
{\xe \v raylib.h\:NPATCH_THREE_PATCH_VERTICAL}
{\qr NPATCH_THREE_PATCH_VERTICAL{\bkmkstart AAAAAAABSJ}
{\bkmkend AAAAAAABSJ}
\cell }{\cell }{\row }
{\xe \v NPATCH_THREE_PATCH_HORIZONTAL\:raylib.h}
{\xe \v raylib.h\:NPATCH_THREE_PATCH_HORIZONTAL}
{\qr NPATCH_THREE_PATCH_HORIZONTAL{\bkmkstart AAAAAAABSK}
{\bkmkend AAAAAAABSK}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 882              \{\par
883     NPATCH_NINE_PATCH = 0,          {\cf20 // Npatch layout: 3x3 tiles}\par
884     NPATCH_THREE_PATCH_VERTICAL,    {\cf20 // Npatch layout: 1x3 tiles}\par
885     NPATCH_THREE_PATCH_HORIZONTAL   {\cf20 // Npatch layout: 3x1 tiles}\par
886 \} NPatchLayout;\par
}
}
{\xe \v PixelFormat\:raylib.h}
{\xe \v raylib.h\:PixelFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b PixelFormat}}}
\par
{\bkmkstart AAAAAAABSL}
{\bkmkend AAAAAAABSL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v PIXELFORMAT_UNCOMPRESSED_GRAYSCALE\:raylib.h}
{\xe \v raylib.h\:PIXELFORMAT_UNCOMPRESSED_GRAYSCALE}
{\qr PIXELFORMAT_UNCOMPRESSED_GRAYSCALE{\bkmkstart AAAAAAABSM}
{\bkmkend AAAAAAABSM}
\cell }{\cell }{\row }
{\xe \v PIXELFORMAT_UNCOMPRESSED_GRAY_ALPHA\:raylib.h}
{\xe \v raylib.h\:PIXELFORMAT_UNCOMPRESSED_GRAY_ALPHA}
{\qr PIXELFORMAT_UNCOMPRESSED_GRAY_ALPHA{\bkmkstart AAAAAAABSN}
{\bkmkend AAAAAAABSN}
\cell }{\cell }{\row }
{\xe \v PIXELFORMAT_UNCOMPRESSED_R5G6B5\:raylib.h}
{\xe \v raylib.h\:PIXELFORMAT_UNCOMPRESSED_R5G6B5}
{\qr PIXELFORMAT_UNCOMPRESSED_R5G6B5{\bkmkstart AAAAAAABSO}
{\bkmkend AAAAAAABSO}
\cell }{\cell }{\row }
{\xe \v PIXELFORMAT_UNCOMPRESSED_R8G8B8\:raylib.h}
{\xe \v raylib.h\:PIXELFORMAT_UNCOMPRESSED_R8G8B8}
{\qr PIXELFORMAT_UNCOMPRESSED_R8G8B8{\bkmkstart AAAAAAABSP}
{\bkmkend AAAAAAABSP}
\cell }{\cell }{\row }
{\xe \v PIXELFORMAT_UNCOMPRESSED_R5G5B5A1\:raylib.h}
{\xe \v raylib.h\:PIXELFORMAT_UNCOMPRESSED_R5G5B5A1}
{\qr PIXELFORMAT_UNCOMPRESSED_R5G5B5A1{\bkmkstart AAAAAAABSQ}
{\bkmkend AAAAAAABSQ}
\cell }{\cell }{\row }
{\xe \v PIXELFORMAT_UNCOMPRESSED_R4G4B4A4\:raylib.h}
{\xe \v raylib.h\:PIXELFORMAT_UNCOMPRESSED_R4G4B4A4}
{\qr PIXELFORMAT_UNCOMPRESSED_R4G4B4A4{\bkmkstart AAAAAAABSR}
{\bkmkend AAAAAAABSR}
\cell }{\cell }{\row }
{\xe \v PIXELFORMAT_UNCOMPRESSED_R8G8B8A8\:raylib.h}
{\xe \v raylib.h\:PIXELFORMAT_UNCOMPRESSED_R8G8B8A8}
{\qr PIXELFORMAT_UNCOMPRESSED_R8G8B8A8{\bkmkstart AAAAAAABSS}
{\bkmkend AAAAAAABSS}
\cell }{\cell }{\row }
{\xe \v PIXELFORMAT_UNCOMPRESSED_R32\:raylib.h}
{\xe \v raylib.h\:PIXELFORMAT_UNCOMPRESSED_R32}
{\qr PIXELFORMAT_UNCOMPRESSED_R32{\bkmkstart AAAAAAABST}
{\bkmkend AAAAAAABST}
\cell }{\cell }{\row }
{\xe \v PIXELFORMAT_UNCOMPRESSED_R32G32B32\:raylib.h}
{\xe \v raylib.h\:PIXELFORMAT_UNCOMPRESSED_R32G32B32}
{\qr PIXELFORMAT_UNCOMPRESSED_R32G32B32{\bkmkstart AAAAAAABSU}
{\bkmkend AAAAAAABSU}
\cell }{\cell }{\row }
{\xe \v PIXELFORMAT_UNCOMPRESSED_R32G32B32A32\:raylib.h}
{\xe \v raylib.h\:PIXELFORMAT_UNCOMPRESSED_R32G32B32A32}
{\qr PIXELFORMAT_UNCOMPRESSED_R32G32B32A32{\bkmkstart AAAAAAABSV}
{\bkmkend AAAAAAABSV}
\cell }{\cell }{\row }
{\xe \v PIXELFORMAT_COMPRESSED_DXT1_RGB\:raylib.h}
{\xe \v raylib.h\:PIXELFORMAT_COMPRESSED_DXT1_RGB}
{\qr PIXELFORMAT_COMPRESSED_DXT1_RGB{\bkmkstart AAAAAAABSW}
{\bkmkend AAAAAAABSW}
\cell }{\cell }{\row }
{\xe \v PIXELFORMAT_COMPRESSED_DXT1_RGBA\:raylib.h}
{\xe \v raylib.h\:PIXELFORMAT_COMPRESSED_DXT1_RGBA}
{\qr PIXELFORMAT_COMPRESSED_DXT1_RGBA{\bkmkstart AAAAAAABSX}
{\bkmkend AAAAAAABSX}
\cell }{\cell }{\row }
{\xe \v PIXELFORMAT_COMPRESSED_DXT3_RGBA\:raylib.h}
{\xe \v raylib.h\:PIXELFORMAT_COMPRESSED_DXT3_RGBA}
{\qr PIXELFORMAT_COMPRESSED_DXT3_RGBA{\bkmkstart AAAAAAABSY}
{\bkmkend AAAAAAABSY}
\cell }{\cell }{\row }
{\xe \v PIXELFORMAT_COMPRESSED_DXT5_RGBA\:raylib.h}
{\xe \v raylib.h\:PIXELFORMAT_COMPRESSED_DXT5_RGBA}
{\qr PIXELFORMAT_COMPRESSED_DXT5_RGBA{\bkmkstart AAAAAAABSZ}
{\bkmkend AAAAAAABSZ}
\cell }{\cell }{\row }
{\xe \v PIXELFORMAT_COMPRESSED_ETC1_RGB\:raylib.h}
{\xe \v raylib.h\:PIXELFORMAT_COMPRESSED_ETC1_RGB}
{\qr PIXELFORMAT_COMPRESSED_ETC1_RGB{\bkmkstart AAAAAAABTA}
{\bkmkend AAAAAAABTA}
\cell }{\cell }{\row }
{\xe \v PIXELFORMAT_COMPRESSED_ETC2_RGB\:raylib.h}
{\xe \v raylib.h\:PIXELFORMAT_COMPRESSED_ETC2_RGB}
{\qr PIXELFORMAT_COMPRESSED_ETC2_RGB{\bkmkstart AAAAAAABTB}
{\bkmkend AAAAAAABTB}
\cell }{\cell }{\row }
{\xe \v PIXELFORMAT_COMPRESSED_ETC2_EAC_RGBA\:raylib.h}
{\xe \v raylib.h\:PIXELFORMAT_COMPRESSED_ETC2_EAC_RGBA}
{\qr PIXELFORMAT_COMPRESSED_ETC2_EAC_RGBA{\bkmkstart AAAAAAABTC}
{\bkmkend AAAAAAABTC}
\cell }{\cell }{\row }
{\xe \v PIXELFORMAT_COMPRESSED_PVRT_RGB\:raylib.h}
{\xe \v raylib.h\:PIXELFORMAT_COMPRESSED_PVRT_RGB}
{\qr PIXELFORMAT_COMPRESSED_PVRT_RGB{\bkmkstart AAAAAAABTD}
{\bkmkend AAAAAAABTD}
\cell }{\cell }{\row }
{\xe \v PIXELFORMAT_COMPRESSED_PVRT_RGBA\:raylib.h}
{\xe \v raylib.h\:PIXELFORMAT_COMPRESSED_PVRT_RGBA}
{\qr PIXELFORMAT_COMPRESSED_PVRT_RGBA{\bkmkstart AAAAAAABTE}
{\bkmkend AAAAAAABTE}
\cell }{\cell }{\row }
{\xe \v PIXELFORMAT_COMPRESSED_ASTC_4x4_RGBA\:raylib.h}
{\xe \v raylib.h\:PIXELFORMAT_COMPRESSED_ASTC_4x4_RGBA}
{\qr PIXELFORMAT_COMPRESSED_ASTC_4x4_RGBA{\bkmkstart AAAAAAABTF}
{\bkmkend AAAAAAABTF}
\cell }{\cell }{\row }
{\xe \v PIXELFORMAT_COMPRESSED_ASTC_8x8_RGBA\:raylib.h}
{\xe \v raylib.h\:PIXELFORMAT_COMPRESSED_ASTC_8x8_RGBA}
{\qr PIXELFORMAT_COMPRESSED_ASTC_8x8_RGBA{\bkmkstart AAAAAAABTG}
{\bkmkend AAAAAAABTG}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 778              \{\par
779     PIXELFORMAT_UNCOMPRESSED_GRAYSCALE = 1, {\cf20 // 8 bit per pixel (no alpha)}\par
780     PIXELFORMAT_UNCOMPRESSED_GRAY_ALPHA,    {\cf20 // 8*2 bpp (2 channels)}\par
781     PIXELFORMAT_UNCOMPRESSED_R5G6B5,        {\cf20 // 16 bpp}\par
782     PIXELFORMAT_UNCOMPRESSED_R8G8B8,        {\cf20 // 24 bpp}\par
783     PIXELFORMAT_UNCOMPRESSED_R5G5B5A1,      {\cf20 // 16 bpp (1 bit alpha)}\par
784     PIXELFORMAT_UNCOMPRESSED_R4G4B4A4,      {\cf20 // 16 bpp (4 bit alpha)}\par
785     PIXELFORMAT_UNCOMPRESSED_R8G8B8A8,      {\cf20 // 32 bpp}\par
786     PIXELFORMAT_UNCOMPRESSED_R32,           {\cf20 // 32 bpp (1 channel - float)}\par
787     PIXELFORMAT_UNCOMPRESSED_R32G32B32,     {\cf20 // 32*3 bpp (3 channels - float)}\par
788     PIXELFORMAT_UNCOMPRESSED_R32G32B32A32,  {\cf20 // 32*4 bpp (4 channels - float)}\par
789     PIXELFORMAT_COMPRESSED_DXT1_RGB,        {\cf20 // 4 bpp (no alpha)}\par
790     PIXELFORMAT_COMPRESSED_DXT1_RGBA,       {\cf20 // 4 bpp (1 bit alpha)}\par
791     PIXELFORMAT_COMPRESSED_DXT3_RGBA,       {\cf20 // 8 bpp}\par
792     PIXELFORMAT_COMPRESSED_DXT5_RGBA,       {\cf20 // 8 bpp}\par
793     PIXELFORMAT_COMPRESSED_ETC1_RGB,        {\cf20 // 4 bpp}\par
794     PIXELFORMAT_COMPRESSED_ETC2_RGB,        {\cf20 // 4 bpp}\par
795     PIXELFORMAT_COMPRESSED_ETC2_EAC_RGBA,   {\cf20 // 8 bpp}\par
796     PIXELFORMAT_COMPRESSED_PVRT_RGB,        {\cf20 // 4 bpp}\par
797     PIXELFORMAT_COMPRESSED_PVRT_RGBA,       {\cf20 // 4 bpp}\par
798     PIXELFORMAT_COMPRESSED_ASTC_4x4_RGBA,   {\cf20 // 8 bpp}\par
799     PIXELFORMAT_COMPRESSED_ASTC_8x8_RGBA    {\cf20 // 2 bpp}\par
800 \} PixelFormat;\par
}
}
{\xe \v ShaderAttributeDataType\:raylib.h}
{\xe \v raylib.h\:ShaderAttributeDataType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b ShaderAttributeDataType}}}
\par
{\bkmkstart AAAAAAABTH}
{\bkmkend AAAAAAABTH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v SHADER_ATTRIB_FLOAT\:raylib.h}
{\xe \v raylib.h\:SHADER_ATTRIB_FLOAT}
{\qr SHADER_ATTRIB_FLOAT{\bkmkstart AAAAAAABTI}
{\bkmkend AAAAAAABTI}
\cell }{\cell }{\row }
{\xe \v SHADER_ATTRIB_VEC2\:raylib.h}
{\xe \v raylib.h\:SHADER_ATTRIB_VEC2}
{\qr SHADER_ATTRIB_VEC2{\bkmkstart AAAAAAABTJ}
{\bkmkend AAAAAAABTJ}
\cell }{\cell }{\row }
{\xe \v SHADER_ATTRIB_VEC3\:raylib.h}
{\xe \v raylib.h\:SHADER_ATTRIB_VEC3}
{\qr SHADER_ATTRIB_VEC3{\bkmkstart AAAAAAABTK}
{\bkmkend AAAAAAABTK}
\cell }{\cell }{\row }
{\xe \v SHADER_ATTRIB_VEC4\:raylib.h}
{\xe \v raylib.h\:SHADER_ATTRIB_VEC4}
{\qr SHADER_ATTRIB_VEC4{\bkmkstart AAAAAAABTL}
{\bkmkend AAAAAAABTL}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 769              \{\par
770     SHADER_ATTRIB_FLOAT = 0,        {\cf20 // Shader attribute type: float}\par
771     SHADER_ATTRIB_VEC2,             {\cf20 // Shader attribute type: vec2 (2 float)}\par
772     SHADER_ATTRIB_VEC3,             {\cf20 // Shader attribute type: vec3 (3 float)}\par
773     SHADER_ATTRIB_VEC4              {\cf20 // Shader attribute type: vec4 (4 float)}\par
774 \} ShaderAttributeDataType;\par
}
}
{\xe \v ShaderLocationIndex\:raylib.h}
{\xe \v raylib.h\:ShaderLocationIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b ShaderLocationIndex}}}
\par
{\bkmkstart AAAAAAABTM}
{\bkmkend AAAAAAABTM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v SHADER_LOC_VERTEX_POSITION\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_VERTEX_POSITION}
{\qr SHADER_LOC_VERTEX_POSITION{\bkmkstart AAAAAAABTN}
{\bkmkend AAAAAAABTN}
\cell }{\cell }{\row }
{\xe \v SHADER_LOC_VERTEX_TEXCOORD01\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_VERTEX_TEXCOORD01}
{\qr SHADER_LOC_VERTEX_TEXCOORD01{\bkmkstart AAAAAAABTO}
{\bkmkend AAAAAAABTO}
\cell }{\cell }{\row }
{\xe \v SHADER_LOC_VERTEX_TEXCOORD02\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_VERTEX_TEXCOORD02}
{\qr SHADER_LOC_VERTEX_TEXCOORD02{\bkmkstart AAAAAAABTP}
{\bkmkend AAAAAAABTP}
\cell }{\cell }{\row }
{\xe \v SHADER_LOC_VERTEX_NORMAL\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_VERTEX_NORMAL}
{\qr SHADER_LOC_VERTEX_NORMAL{\bkmkstart AAAAAAABTQ}
{\bkmkend AAAAAAABTQ}
\cell }{\cell }{\row }
{\xe \v SHADER_LOC_VERTEX_TANGENT\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_VERTEX_TANGENT}
{\qr SHADER_LOC_VERTEX_TANGENT{\bkmkstart AAAAAAABTR}
{\bkmkend AAAAAAABTR}
\cell }{\cell }{\row }
{\xe \v SHADER_LOC_VERTEX_COLOR\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_VERTEX_COLOR}
{\qr SHADER_LOC_VERTEX_COLOR{\bkmkstart AAAAAAABTS}
{\bkmkend AAAAAAABTS}
\cell }{\cell }{\row }
{\xe \v SHADER_LOC_MATRIX_MVP\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_MATRIX_MVP}
{\qr SHADER_LOC_MATRIX_MVP{\bkmkstart AAAAAAABTT}
{\bkmkend AAAAAAABTT}
\cell }{\cell }{\row }
{\xe \v SHADER_LOC_MATRIX_VIEW\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_MATRIX_VIEW}
{\qr SHADER_LOC_MATRIX_VIEW{\bkmkstart AAAAAAABTU}
{\bkmkend AAAAAAABTU}
\cell }{\cell }{\row }
{\xe \v SHADER_LOC_MATRIX_PROJECTION\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_MATRIX_PROJECTION}
{\qr SHADER_LOC_MATRIX_PROJECTION{\bkmkstart AAAAAAABTV}
{\bkmkend AAAAAAABTV}
\cell }{\cell }{\row }
{\xe \v SHADER_LOC_MATRIX_MODEL\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_MATRIX_MODEL}
{\qr SHADER_LOC_MATRIX_MODEL{\bkmkstart AAAAAAABTW}
{\bkmkend AAAAAAABTW}
\cell }{\cell }{\row }
{\xe \v SHADER_LOC_MATRIX_NORMAL\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_MATRIX_NORMAL}
{\qr SHADER_LOC_MATRIX_NORMAL{\bkmkstart AAAAAAABTX}
{\bkmkend AAAAAAABTX}
\cell }{\cell }{\row }
{\xe \v SHADER_LOC_VECTOR_VIEW\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_VECTOR_VIEW}
{\qr SHADER_LOC_VECTOR_VIEW{\bkmkstart AAAAAAABTY}
{\bkmkend AAAAAAABTY}
\cell }{\cell }{\row }
{\xe \v SHADER_LOC_COLOR_DIFFUSE\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_COLOR_DIFFUSE}
{\qr SHADER_LOC_COLOR_DIFFUSE{\bkmkstart AAAAAAABTZ}
{\bkmkend AAAAAAABTZ}
\cell }{\cell }{\row }
{\xe \v SHADER_LOC_COLOR_SPECULAR\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_COLOR_SPECULAR}
{\qr SHADER_LOC_COLOR_SPECULAR{\bkmkstart AAAAAAABUA}
{\bkmkend AAAAAAABUA}
\cell }{\cell }{\row }
{\xe \v SHADER_LOC_COLOR_AMBIENT\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_COLOR_AMBIENT}
{\qr SHADER_LOC_COLOR_AMBIENT{\bkmkstart AAAAAAABUB}
{\bkmkend AAAAAAABUB}
\cell }{\cell }{\row }
{\xe \v SHADER_LOC_MAP_ALBEDO\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_MAP_ALBEDO}
{\qr SHADER_LOC_MAP_ALBEDO{\bkmkstart AAAAAAABUC}
{\bkmkend AAAAAAABUC}
\cell }{\cell }{\row }
{\xe \v SHADER_LOC_MAP_METALNESS\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_MAP_METALNESS}
{\qr SHADER_LOC_MAP_METALNESS{\bkmkstart AAAAAAABUD}
{\bkmkend AAAAAAABUD}
\cell }{\cell }{\row }
{\xe \v SHADER_LOC_MAP_NORMAL\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_MAP_NORMAL}
{\qr SHADER_LOC_MAP_NORMAL{\bkmkstart AAAAAAABUE}
{\bkmkend AAAAAAABUE}
\cell }{\cell }{\row }
{\xe \v SHADER_LOC_MAP_ROUGHNESS\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_MAP_ROUGHNESS}
{\qr SHADER_LOC_MAP_ROUGHNESS{\bkmkstart AAAAAAABUF}
{\bkmkend AAAAAAABUF}
\cell }{\cell }{\row }
{\xe \v SHADER_LOC_MAP_OCCLUSION\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_MAP_OCCLUSION}
{\qr SHADER_LOC_MAP_OCCLUSION{\bkmkstart AAAAAAABUG}
{\bkmkend AAAAAAABUG}
\cell }{\cell }{\row }
{\xe \v SHADER_LOC_MAP_EMISSION\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_MAP_EMISSION}
{\qr SHADER_LOC_MAP_EMISSION{\bkmkstart AAAAAAABUH}
{\bkmkend AAAAAAABUH}
\cell }{\cell }{\row }
{\xe \v SHADER_LOC_MAP_HEIGHT\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_MAP_HEIGHT}
{\qr SHADER_LOC_MAP_HEIGHT{\bkmkstart AAAAAAABUI}
{\bkmkend AAAAAAABUI}
\cell }{\cell }{\row }
{\xe \v SHADER_LOC_MAP_CUBEMAP\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_MAP_CUBEMAP}
{\qr SHADER_LOC_MAP_CUBEMAP{\bkmkstart AAAAAAABUJ}
{\bkmkend AAAAAAABUJ}
\cell }{\cell }{\row }
{\xe \v SHADER_LOC_MAP_IRRADIANCE\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_MAP_IRRADIANCE}
{\qr SHADER_LOC_MAP_IRRADIANCE{\bkmkstart AAAAAAABUK}
{\bkmkend AAAAAAABUK}
\cell }{\cell }{\row }
{\xe \v SHADER_LOC_MAP_PREFILTER\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_MAP_PREFILTER}
{\qr SHADER_LOC_MAP_PREFILTER{\bkmkstart AAAAAAABUL}
{\bkmkend AAAAAAABUL}
\cell }{\cell }{\row }
{\xe \v SHADER_LOC_MAP_BRDF\:raylib.h}
{\xe \v raylib.h\:SHADER_LOC_MAP_BRDF}
{\qr SHADER_LOC_MAP_BRDF{\bkmkstart AAAAAAABUM}
{\bkmkend AAAAAAABUM}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 723              \{\par
724     SHADER_LOC_VERTEX_POSITION = 0, {\cf20 // Shader location: vertex attribute: position}\par
725     SHADER_LOC_VERTEX_TEXCOORD01,   {\cf20 // Shader location: vertex attribute: texcoord01}\par
726     SHADER_LOC_VERTEX_TEXCOORD02,   {\cf20 // Shader location: vertex attribute: texcoord02}\par
727     SHADER_LOC_VERTEX_NORMAL,       {\cf20 // Shader location: vertex attribute: normal}\par
728     SHADER_LOC_VERTEX_TANGENT,      {\cf20 // Shader location: vertex attribute: tangent}\par
729     SHADER_LOC_VERTEX_COLOR,        {\cf20 // Shader location: vertex attribute: color}\par
730     SHADER_LOC_MATRIX_MVP,          {\cf20 // Shader location: matrix uniform: model-view-projection}\par
731     SHADER_LOC_MATRIX_VIEW,         {\cf20 // Shader location: matrix uniform: view (camera transform)}\par
732     SHADER_LOC_MATRIX_PROJECTION,   {\cf20 // Shader location: matrix uniform: projection}\par
733     SHADER_LOC_MATRIX_MODEL,        {\cf20 // Shader location: matrix uniform: model (transform)}\par
734     SHADER_LOC_MATRIX_NORMAL,       {\cf20 // Shader location: matrix uniform: normal}\par
735     SHADER_LOC_VECTOR_VIEW,         {\cf20 // Shader location: vector uniform: view}\par
736     SHADER_LOC_COLOR_DIFFUSE,       {\cf20 // Shader location: vector uniform: diffuse color}\par
737     SHADER_LOC_COLOR_SPECULAR,      {\cf20 // Shader location: vector uniform: specular color}\par
738     SHADER_LOC_COLOR_AMBIENT,       {\cf20 // Shader location: vector uniform: ambient color}\par
739     SHADER_LOC_MAP_ALBEDO,          {\cf20 // Shader location: sampler2d texture: albedo (same as: SHADER_LOC_MAP_DIFFUSE)}\par
740     SHADER_LOC_MAP_METALNESS,       {\cf20 // Shader location: sampler2d texture: metalness (same as: SHADER_LOC_MAP_SPECULAR)}\par
741     SHADER_LOC_MAP_NORMAL,          {\cf20 // Shader location: sampler2d texture: normal}\par
742     SHADER_LOC_MAP_ROUGHNESS,       {\cf20 // Shader location: sampler2d texture: roughness}\par
743     SHADER_LOC_MAP_OCCLUSION,       {\cf20 // Shader location: sampler2d texture: occlusion}\par
744     SHADER_LOC_MAP_EMISSION,        {\cf20 // Shader location: sampler2d texture: emission}\par
745     SHADER_LOC_MAP_HEIGHT,          {\cf20 // Shader location: sampler2d texture: height}\par
746     SHADER_LOC_MAP_CUBEMAP,         {\cf20 // Shader location: samplerCube texture: cubemap}\par
747     SHADER_LOC_MAP_IRRADIANCE,      {\cf20 // Shader location: samplerCube texture: irradiance}\par
748     SHADER_LOC_MAP_PREFILTER,       {\cf20 // Shader location: samplerCube texture: prefilter}\par
749     SHADER_LOC_MAP_BRDF             {\cf20 // Shader location: sampler2d texture: brdf}\par
750 \} ShaderLocationIndex;\par
}
}
{\xe \v ShaderUniformDataType\:raylib.h}
{\xe \v raylib.h\:ShaderUniformDataType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b ShaderUniformDataType}}}
\par
{\bkmkstart AAAAAAABUN}
{\bkmkend AAAAAAABUN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v SHADER_UNIFORM_FLOAT\:raylib.h}
{\xe \v raylib.h\:SHADER_UNIFORM_FLOAT}
{\qr SHADER_UNIFORM_FLOAT{\bkmkstart AAAAAAABUO}
{\bkmkend AAAAAAABUO}
\cell }{\cell }{\row }
{\xe \v SHADER_UNIFORM_VEC2\:raylib.h}
{\xe \v raylib.h\:SHADER_UNIFORM_VEC2}
{\qr SHADER_UNIFORM_VEC2{\bkmkstart AAAAAAABUP}
{\bkmkend AAAAAAABUP}
\cell }{\cell }{\row }
{\xe \v SHADER_UNIFORM_VEC3\:raylib.h}
{\xe \v raylib.h\:SHADER_UNIFORM_VEC3}
{\qr SHADER_UNIFORM_VEC3{\bkmkstart AAAAAAABUQ}
{\bkmkend AAAAAAABUQ}
\cell }{\cell }{\row }
{\xe \v SHADER_UNIFORM_VEC4\:raylib.h}
{\xe \v raylib.h\:SHADER_UNIFORM_VEC4}
{\qr SHADER_UNIFORM_VEC4{\bkmkstart AAAAAAABUR}
{\bkmkend AAAAAAABUR}
\cell }{\cell }{\row }
{\xe \v SHADER_UNIFORM_INT\:raylib.h}
{\xe \v raylib.h\:SHADER_UNIFORM_INT}
{\qr SHADER_UNIFORM_INT{\bkmkstart AAAAAAABUS}
{\bkmkend AAAAAAABUS}
\cell }{\cell }{\row }
{\xe \v SHADER_UNIFORM_IVEC2\:raylib.h}
{\xe \v raylib.h\:SHADER_UNIFORM_IVEC2}
{\qr SHADER_UNIFORM_IVEC2{\bkmkstart AAAAAAABUT}
{\bkmkend AAAAAAABUT}
\cell }{\cell }{\row }
{\xe \v SHADER_UNIFORM_IVEC3\:raylib.h}
{\xe \v raylib.h\:SHADER_UNIFORM_IVEC3}
{\qr SHADER_UNIFORM_IVEC3{\bkmkstart AAAAAAABUU}
{\bkmkend AAAAAAABUU}
\cell }{\cell }{\row }
{\xe \v SHADER_UNIFORM_IVEC4\:raylib.h}
{\xe \v raylib.h\:SHADER_UNIFORM_IVEC4}
{\qr SHADER_UNIFORM_IVEC4{\bkmkstart AAAAAAABUV}
{\bkmkend AAAAAAABUV}
\cell }{\cell }{\row }
{\xe \v SHADER_UNIFORM_SAMPLER2D\:raylib.h}
{\xe \v raylib.h\:SHADER_UNIFORM_SAMPLER2D}
{\qr SHADER_UNIFORM_SAMPLER2D{\bkmkstart AAAAAAABUW}
{\bkmkend AAAAAAABUW}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 756              \{\par
757     SHADER_UNIFORM_FLOAT = 0,       {\cf20 // Shader uniform type: float}\par
758     SHADER_UNIFORM_VEC2,            {\cf20 // Shader uniform type: vec2 (2 float)}\par
759     SHADER_UNIFORM_VEC3,            {\cf20 // Shader uniform type: vec3 (3 float)}\par
760     SHADER_UNIFORM_VEC4,            {\cf20 // Shader uniform type: vec4 (4 float)}\par
761     SHADER_UNIFORM_INT,             {\cf20 // Shader uniform type: int}\par
762     SHADER_UNIFORM_IVEC2,           {\cf20 // Shader uniform type: ivec2 (2 int)}\par
763     SHADER_UNIFORM_IVEC3,           {\cf20 // Shader uniform type: ivec3 (3 int)}\par
764     SHADER_UNIFORM_IVEC4,           {\cf20 // Shader uniform type: ivec4 (4 int)}\par
765     SHADER_UNIFORM_SAMPLER2D        {\cf20 // Shader uniform type: sampler2d}\par
766 \} ShaderUniformDataType;\par
}
}
{\xe \v TextureFilter\:raylib.h}
{\xe \v raylib.h\:TextureFilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b TextureFilter}}}
\par
{\bkmkstart AAAAAAABUX}
{\bkmkend AAAAAAABUX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v TEXTURE_FILTER_POINT\:raylib.h}
{\xe \v raylib.h\:TEXTURE_FILTER_POINT}
{\qr TEXTURE_FILTER_POINT{\bkmkstart AAAAAAABUY}
{\bkmkend AAAAAAABUY}
\cell }{\cell }{\row }
{\xe \v TEXTURE_FILTER_BILINEAR\:raylib.h}
{\xe \v raylib.h\:TEXTURE_FILTER_BILINEAR}
{\qr TEXTURE_FILTER_BILINEAR{\bkmkstart AAAAAAABUZ}
{\bkmkend AAAAAAABUZ}
\cell }{\cell }{\row }
{\xe \v TEXTURE_FILTER_TRILINEAR\:raylib.h}
{\xe \v raylib.h\:TEXTURE_FILTER_TRILINEAR}
{\qr TEXTURE_FILTER_TRILINEAR{\bkmkstart AAAAAAABVA}
{\bkmkend AAAAAAABVA}
\cell }{\cell }{\row }
{\xe \v TEXTURE_FILTER_ANISOTROPIC_4X\:raylib.h}
{\xe \v raylib.h\:TEXTURE_FILTER_ANISOTROPIC_4X}
{\qr TEXTURE_FILTER_ANISOTROPIC_4X{\bkmkstart AAAAAAABVB}
{\bkmkend AAAAAAABVB}
\cell }{\cell }{\row }
{\xe \v TEXTURE_FILTER_ANISOTROPIC_8X\:raylib.h}
{\xe \v raylib.h\:TEXTURE_FILTER_ANISOTROPIC_8X}
{\qr TEXTURE_FILTER_ANISOTROPIC_8X{\bkmkstart AAAAAAABVC}
{\bkmkend AAAAAAABVC}
\cell }{\cell }{\row }
{\xe \v TEXTURE_FILTER_ANISOTROPIC_16X\:raylib.h}
{\xe \v raylib.h\:TEXTURE_FILTER_ANISOTROPIC_16X}
{\qr TEXTURE_FILTER_ANISOTROPIC_16X{\bkmkstart AAAAAAABVD}
{\bkmkend AAAAAAABVD}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 805              \{\par
806     TEXTURE_FILTER_POINT = 0,               {\cf20 // No filter, just pixel approximation}\par
807     TEXTURE_FILTER_BILINEAR,                {\cf20 // Linear filtering}\par
808     TEXTURE_FILTER_TRILINEAR,               {\cf20 // Trilinear filtering (linear with mipmaps)}\par
809     TEXTURE_FILTER_ANISOTROPIC_4X,          {\cf20 // Anisotropic filtering 4x}\par
810     TEXTURE_FILTER_ANISOTROPIC_8X,          {\cf20 // Anisotropic filtering 8x}\par
811     TEXTURE_FILTER_ANISOTROPIC_16X,         {\cf20 // Anisotropic filtering 16x}\par
812 \} TextureFilter;\par
}
}
{\xe \v TextureWrap\:raylib.h}
{\xe \v raylib.h\:TextureWrap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b TextureWrap}}}
\par
{\bkmkstart AAAAAAABVE}
{\bkmkend AAAAAAABVE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v TEXTURE_WRAP_REPEAT\:raylib.h}
{\xe \v raylib.h\:TEXTURE_WRAP_REPEAT}
{\qr TEXTURE_WRAP_REPEAT{\bkmkstart AAAAAAABVF}
{\bkmkend AAAAAAABVF}
\cell }{\cell }{\row }
{\xe \v TEXTURE_WRAP_CLAMP\:raylib.h}
{\xe \v raylib.h\:TEXTURE_WRAP_CLAMP}
{\qr TEXTURE_WRAP_CLAMP{\bkmkstart AAAAAAABVG}
{\bkmkend AAAAAAABVG}
\cell }{\cell }{\row }
{\xe \v TEXTURE_WRAP_MIRROR_REPEAT\:raylib.h}
{\xe \v raylib.h\:TEXTURE_WRAP_MIRROR_REPEAT}
{\qr TEXTURE_WRAP_MIRROR_REPEAT{\bkmkstart AAAAAAABVH}
{\bkmkend AAAAAAABVH}
\cell }{\cell }{\row }
{\xe \v TEXTURE_WRAP_MIRROR_CLAMP\:raylib.h}
{\xe \v raylib.h\:TEXTURE_WRAP_MIRROR_CLAMP}
{\qr TEXTURE_WRAP_MIRROR_CLAMP{\bkmkstart AAAAAAABVI}
{\bkmkend AAAAAAABVI}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 815              \{\par
816     TEXTURE_WRAP_REPEAT = 0,                {\cf20 // Repeats texture in tiled mode}\par
817     TEXTURE_WRAP_CLAMP,                     {\cf20 // Clamps texture to edge pixel in tiled mode}\par
818     TEXTURE_WRAP_MIRROR_REPEAT,             {\cf20 // Mirrors and repeats the texture in tiled mode}\par
819     TEXTURE_WRAP_MIRROR_CLAMP               {\cf20 // Mirrors and clamps to border the texture in tiled mode}\par
820 \} TextureWrap;\par
}
}
{\xe \v TraceLogLevel\:raylib.h}
{\xe \v raylib.h\:TraceLogLevel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b TraceLogLevel}}}
\par
{\bkmkstart AAAAAAABVJ}
{\bkmkend AAAAAAABVJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v LOG_ALL\:raylib.h}
{\xe \v raylib.h\:LOG_ALL}
{\qr LOG_ALL{\bkmkstart AAAAAAABVK}
{\bkmkend AAAAAAABVK}
\cell }{\cell }{\row }
{\xe \v LOG_TRACE\:raylib.h}
{\xe \v raylib.h\:LOG_TRACE}
{\qr LOG_TRACE{\bkmkstart AAAAAAABVL}
{\bkmkend AAAAAAABVL}
\cell }{\cell }{\row }
{\xe \v LOG_DEBUG\:raylib.h}
{\xe \v raylib.h\:LOG_DEBUG}
{\qr LOG_DEBUG{\bkmkstart AAAAAAABVM}
{\bkmkend AAAAAAABVM}
\cell }{\cell }{\row }
{\xe \v LOG_INFO\:raylib.h}
{\xe \v raylib.h\:LOG_INFO}
{\qr LOG_INFO{\bkmkstart AAAAAAABVN}
{\bkmkend AAAAAAABVN}
\cell }{\cell }{\row }
{\xe \v LOG_WARNING\:raylib.h}
{\xe \v raylib.h\:LOG_WARNING}
{\qr LOG_WARNING{\bkmkstart AAAAAAABVO}
{\bkmkend AAAAAAABVO}
\cell }{\cell }{\row }
{\xe \v LOG_ERROR\:raylib.h}
{\xe \v raylib.h\:LOG_ERROR}
{\qr LOG_ERROR{\bkmkstart AAAAAAABVP}
{\bkmkend AAAAAAABVP}
\cell }{\cell }{\row }
{\xe \v LOG_FATAL\:raylib.h}
{\xe \v raylib.h\:LOG_FATAL}
{\qr LOG_FATAL{\bkmkstart AAAAAAABVQ}
{\bkmkend AAAAAAABVQ}
\cell }{\cell }{\row }
{\xe \v LOG_NONE\:raylib.h}
{\xe \v raylib.h\:LOG_NONE}
{\qr LOG_NONE{\bkmkstart AAAAAAABVR}
{\bkmkend AAAAAAABVR}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 510              \{\par
511     LOG_ALL = 0,        {\cf20 // Display all logs}\par
512     LOG_TRACE,          {\cf20 // Trace logging, intended for internal use only}\par
513     LOG_DEBUG,          {\cf20 // Debug logging, used for internal debugging, it should be disabled on release builds}\par
514     LOG_INFO,           {\cf20 // Info logging, used for program execution info}\par
515     LOG_WARNING,        {\cf20 // Warning logging, used on recoverable failures}\par
516     LOG_ERROR,          {\cf20 // Error logging, used on unrecoverable failures}\par
517     LOG_FATAL,          {\cf20 // Fatal logging, used to abort program: exit(EXIT_FAILURE)}\par
518     LOG_NONE            {\cf20 // Disable logging}\par
519 \} TraceLogLevel;\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v AttachAudioStreamProcessor\:raylib.h}
{\xe \v raylib.h\:AttachAudioStreamProcessor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void AttachAudioStreamProcessor ({\b AudioStream}  {\i stream}, {\b AudioCallback}  {\i processor})}}
\par
{\bkmkstart AAAAAAABVS}
{\bkmkend AAAAAAABVS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BeginBlendMode\:raylib.h}
{\xe \v raylib.h\:BeginBlendMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void BeginBlendMode (int  {\i mode})}}
\par
{\bkmkstart AAAAAAABVT}
{\bkmkend AAAAAAABVT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BeginDrawing\:raylib.h}
{\xe \v raylib.h\:BeginDrawing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void BeginDrawing (void )}}
\par
{\bkmkstart AAAAAAABVU}
{\bkmkend AAAAAAABVU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BeginMode2D\:raylib.h}
{\xe \v raylib.h\:BeginMode2D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void BeginMode2D ({\b Camera2D}  {\i camera})}}
\par
{\bkmkstart AAAAAAABVV}
{\bkmkend AAAAAAABVV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BeginMode3D\:raylib.h}
{\xe \v raylib.h\:BeginMode3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void BeginMode3D ({\b Camera3D}  {\i camera})}}
\par
{\bkmkstart AAAAAAABVW}
{\bkmkend AAAAAAABVW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BeginScissorMode\:raylib.h}
{\xe \v raylib.h\:BeginScissorMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void BeginScissorMode (int  {\i x}, int  {\i y}, int  {\i width}, int  {\i height})}}
\par
{\bkmkstart AAAAAAABVX}
{\bkmkend AAAAAAABVX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BeginShaderMode\:raylib.h}
{\xe \v raylib.h\:BeginShaderMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void BeginShaderMode ({\b Shader}  {\i shader})}}
\par
{\bkmkstart AAAAAAABVY}
{\bkmkend AAAAAAABVY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BeginTextureMode\:raylib.h}
{\xe \v raylib.h\:BeginTextureMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void BeginTextureMode ({\b RenderTexture2D}  {\i target})}}
\par
{\bkmkstart AAAAAAABVZ}
{\bkmkend AAAAAAABVZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BeginVrStereoMode\:raylib.h}
{\xe \v raylib.h\:BeginVrStereoMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void BeginVrStereoMode ({\b VrStereoConfig}  {\i config})}}
\par
{\bkmkstart AAAAAAABWA}
{\bkmkend AAAAAAABWA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ChangeDirectory\:raylib.h}
{\xe \v raylib.h\:ChangeDirectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} ChangeDirectory (const char *  {\i dir})}}
\par
{\bkmkstart AAAAAAABWB}
{\bkmkend AAAAAAABWB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CheckCollisionBoxes\:raylib.h}
{\xe \v raylib.h\:CheckCollisionBoxes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} CheckCollisionBoxes ({\b BoundingBox}  {\i box1}, {\b BoundingBox}  {\i box2})}}
\par
{\bkmkstart AAAAAAABWC}
{\bkmkend AAAAAAABWC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CheckCollisionBoxSphere\:raylib.h}
{\xe \v raylib.h\:CheckCollisionBoxSphere}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} CheckCollisionBoxSphere ({\b BoundingBox}  {\i box}, {\b Vector3}  {\i center}, float  {\i radius})}}
\par
{\bkmkstart AAAAAAABWD}
{\bkmkend AAAAAAABWD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CheckCollisionCircleRec\:raylib.h}
{\xe \v raylib.h\:CheckCollisionCircleRec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} CheckCollisionCircleRec ({\b Vector2}  {\i center}, float  {\i radius}, {\b Rectangle}  {\i rec})}}
\par
{\bkmkstart AAAAAAABWE}
{\bkmkend AAAAAAABWE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CheckCollisionCircles\:raylib.h}
{\xe \v raylib.h\:CheckCollisionCircles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} CheckCollisionCircles ({\b Vector2}  {\i center1}, float  {\i radius1}, {\b Vector2}  {\i center2}, float  {\i radius2})}}
\par
{\bkmkstart AAAAAAABWF}
{\bkmkend AAAAAAABWF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CheckCollisionLines\:raylib.h}
{\xe \v raylib.h\:CheckCollisionLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} CheckCollisionLines ({\b Vector2}  {\i startPos1}, {\b Vector2}  {\i endPos1}, {\b Vector2}  {\i startPos2}, {\b Vector2}  {\i endPos2}, {\b Vector2} *  {\i collisionPoint})}}
\par
{\bkmkstart AAAAAAABWG}
{\bkmkend AAAAAAABWG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CheckCollisionPointCircle\:raylib.h}
{\xe \v raylib.h\:CheckCollisionPointCircle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} CheckCollisionPointCircle ({\b Vector2}  {\i point}, {\b Vector2}  {\i center}, float  {\i radius})}}
\par
{\bkmkstart AAAAAAABWH}
{\bkmkend AAAAAAABWH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CheckCollisionPointLine\:raylib.h}
{\xe \v raylib.h\:CheckCollisionPointLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} CheckCollisionPointLine ({\b Vector2}  {\i point}, {\b Vector2}  {\i p1}, {\b Vector2}  {\i p2}, int  {\i threshold})}}
\par
{\bkmkstart AAAAAAABWI}
{\bkmkend AAAAAAABWI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CheckCollisionPointRec\:raylib.h}
{\xe \v raylib.h\:CheckCollisionPointRec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} CheckCollisionPointRec ({\b Vector2}  {\i point}, {\b Rectangle}  {\i rec})}}
\par
{\bkmkstart AAAAAAABWJ}
{\bkmkend AAAAAAABWJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CheckCollisionPointTriangle\:raylib.h}
{\xe \v raylib.h\:CheckCollisionPointTriangle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} CheckCollisionPointTriangle ({\b Vector2}  {\i point}, {\b Vector2}  {\i p1}, {\b Vector2}  {\i p2}, {\b Vector2}  {\i p3})}}
\par
{\bkmkstart AAAAAAABWK}
{\bkmkend AAAAAAABWK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CheckCollisionRecs\:raylib.h}
{\xe \v raylib.h\:CheckCollisionRecs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} CheckCollisionRecs ({\b Rectangle}  {\i rec1}, {\b Rectangle}  {\i rec2})}}
\par
{\bkmkstart AAAAAAABWL}
{\bkmkend AAAAAAABWL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CheckCollisionSpheres\:raylib.h}
{\xe \v raylib.h\:CheckCollisionSpheres}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} CheckCollisionSpheres ({\b Vector3}  {\i center1}, float  {\i radius1}, {\b Vector3}  {\i center2}, float  {\i radius2})}}
\par
{\bkmkstart AAAAAAABWM}
{\bkmkend AAAAAAABWM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ClearBackground\:raylib.h}
{\xe \v raylib.h\:ClearBackground}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ClearBackground ({\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABWN}
{\bkmkend AAAAAAABWN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ClearDirectoryFiles\:raylib.h}
{\xe \v raylib.h\:ClearDirectoryFiles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ClearDirectoryFiles (void )}}
\par
{\bkmkstart AAAAAAABWO}
{\bkmkend AAAAAAABWO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ClearDroppedFiles\:raylib.h}
{\xe \v raylib.h\:ClearDroppedFiles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ClearDroppedFiles (void )}}
\par
{\bkmkstart AAAAAAABWP}
{\bkmkend AAAAAAABWP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ClearWindowState\:raylib.h}
{\xe \v raylib.h\:ClearWindowState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ClearWindowState (unsigned int  {\i flags})}}
\par
{\bkmkstart AAAAAAABWQ}
{\bkmkend AAAAAAABWQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CloseAudioDevice\:raylib.h}
{\xe \v raylib.h\:CloseAudioDevice}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void CloseAudioDevice (void )}}
\par
{\bkmkstart AAAAAAABWR}
{\bkmkend AAAAAAABWR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CloseWindow\:raylib.h}
{\xe \v raylib.h\:CloseWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void CloseWindow (void )}}
\par
{\bkmkstart AAAAAAABWS}
{\bkmkend AAAAAAABWS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CodepointToUTF8\:raylib.h}
{\xe \v raylib.h\:CodepointToUTF8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} const char * CodepointToUTF8 (int  {\i codepoint}, int *  {\i byteSize})}}
\par
{\bkmkstart AAAAAAABWT}
{\bkmkend AAAAAAABWT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ColorAlpha\:raylib.h}
{\xe \v raylib.h\:ColorAlpha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Color} ColorAlpha ({\b Color}  {\i color}, float  {\i alpha})}}
\par
{\bkmkstart AAAAAAABWU}
{\bkmkend AAAAAAABWU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ColorAlphaBlend\:raylib.h}
{\xe \v raylib.h\:ColorAlphaBlend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Color} ColorAlphaBlend ({\b Color}  {\i dst}, {\b Color}  {\i src}, {\b Color}  {\i tint})}}
\par
{\bkmkstart AAAAAAABWV}
{\bkmkend AAAAAAABWV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ColorFromHSV\:raylib.h}
{\xe \v raylib.h\:ColorFromHSV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Color} ColorFromHSV (float  {\i hue}, float  {\i saturation}, float  {\i value})}}
\par
{\bkmkstart AAAAAAABWW}
{\bkmkend AAAAAAABWW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ColorFromNormalized\:raylib.h}
{\xe \v raylib.h\:ColorFromNormalized}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Color} ColorFromNormalized ({\b Vector4}  {\i normalized})}}
\par
{\bkmkstart AAAAAAABWX}
{\bkmkend AAAAAAABWX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ColorNormalize\:raylib.h}
{\xe \v raylib.h\:ColorNormalize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Vector4} ColorNormalize ({\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABWY}
{\bkmkend AAAAAAABWY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ColorToHSV\:raylib.h}
{\xe \v raylib.h\:ColorToHSV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Vector3} ColorToHSV ({\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABWZ}
{\bkmkend AAAAAAABWZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ColorToInt\:raylib.h}
{\xe \v raylib.h\:ColorToInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int ColorToInt ({\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABXA}
{\bkmkend AAAAAAABXA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CompressData\:raylib.h}
{\xe \v raylib.h\:CompressData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} unsigned char * CompressData (const unsigned char *  {\i data}, int  {\i dataSize}, int *  {\i compDataSize})}}
\par
{\bkmkstart AAAAAAABXB}
{\bkmkend AAAAAAABXB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DecodeDataBase64\:raylib.h}
{\xe \v raylib.h\:DecodeDataBase64}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} unsigned char * DecodeDataBase64 (const unsigned char *  {\i data}, int *  {\i outputSize})}}
\par
{\bkmkstart AAAAAAABXC}
{\bkmkend AAAAAAABXC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DecompressData\:raylib.h}
{\xe \v raylib.h\:DecompressData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} unsigned char * DecompressData (const unsigned char *  {\i compData}, int  {\i compDataSize}, int *  {\i dataSize})}}
\par
{\bkmkstart AAAAAAABXD}
{\bkmkend AAAAAAABXD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DetachAudioStreamProcessor\:raylib.h}
{\xe \v raylib.h\:DetachAudioStreamProcessor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DetachAudioStreamProcessor ({\b AudioStream}  {\i stream}, {\b AudioCallback}  {\i processor})}}
\par
{\bkmkstart AAAAAAABXE}
{\bkmkend AAAAAAABXE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DirectoryExists\:raylib.h}
{\xe \v raylib.h\:DirectoryExists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} DirectoryExists (const char *  {\i dirPath})}}
\par
{\bkmkstart AAAAAAABXF}
{\bkmkend AAAAAAABXF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DisableCursor\:raylib.h}
{\xe \v raylib.h\:DisableCursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DisableCursor (void )}}
\par
{\bkmkstart AAAAAAABXG}
{\bkmkend AAAAAAABXG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DisableEventWaiting\:raylib.h}
{\xe \v raylib.h\:DisableEventWaiting}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DisableEventWaiting (void )}}
\par
{\bkmkstart AAAAAAABXH}
{\bkmkend AAAAAAABXH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawBillboard\:raylib.h}
{\xe \v raylib.h\:DrawBillboard}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawBillboard ({\b Camera}  {\i camera}, {\b Texture2D}  {\i texture}, {\b Vector3}  {\i position}, float  {\i size}, {\b Color}  {\i tint})}}
\par
{\bkmkstart AAAAAAABXI}
{\bkmkend AAAAAAABXI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawBillboardPro\:raylib.h}
{\xe \v raylib.h\:DrawBillboardPro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawBillboardPro ({\b Camera}  {\i camera}, {\b Texture2D}  {\i texture}, {\b Rectangle}  {\i source}, {\b Vector3}  {\i position}, {\b Vector3}  {\i up}, {\b Vector2}  {\i size}, {\b Vector2}  {\i origin}, float  {\i rotation}, {\b Color}  {\i tint})}}
\par
{\bkmkstart AAAAAAABXJ}
{\bkmkend AAAAAAABXJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawBillboardRec\:raylib.h}
{\xe \v raylib.h\:DrawBillboardRec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawBillboardRec ({\b Camera}  {\i camera}, {\b Texture2D}  {\i texture}, {\b Rectangle}  {\i source}, {\b Vector3}  {\i position}, {\b Vector2}  {\i size}, {\b Color}  {\i tint})}}
\par
{\bkmkstart AAAAAAABXK}
{\bkmkend AAAAAAABXK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawBoundingBox\:raylib.h}
{\xe \v raylib.h\:DrawBoundingBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawBoundingBox ({\b BoundingBox}  {\i box}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABXL}
{\bkmkend AAAAAAABXL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawCircle\:raylib.h}
{\xe \v raylib.h\:DrawCircle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawCircle (int  {\i centerX}, int  {\i centerY}, float  {\i radius}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABXM}
{\bkmkend AAAAAAABXM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawCircle3D\:raylib.h}
{\xe \v raylib.h\:DrawCircle3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawCircle3D ({\b Vector3}  {\i center}, float  {\i radius}, {\b Vector3}  {\i rotationAxis}, float  {\i rotationAngle}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABXN}
{\bkmkend AAAAAAABXN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawCircleGradient\:raylib.h}
{\xe \v raylib.h\:DrawCircleGradient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawCircleGradient (int  {\i centerX}, int  {\i centerY}, float  {\i radius}, {\b Color}  {\i color1}, {\b Color}  {\i color2})}}
\par
{\bkmkstart AAAAAAABXO}
{\bkmkend AAAAAAABXO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawCircleLines\:raylib.h}
{\xe \v raylib.h\:DrawCircleLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawCircleLines (int  {\i centerX}, int  {\i centerY}, float  {\i radius}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABXP}
{\bkmkend AAAAAAABXP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawCircleSector\:raylib.h}
{\xe \v raylib.h\:DrawCircleSector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawCircleSector ({\b Vector2}  {\i center}, float  {\i radius}, float  {\i startAngle}, float  {\i endAngle}, int  {\i segments}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABXQ}
{\bkmkend AAAAAAABXQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawCircleSectorLines\:raylib.h}
{\xe \v raylib.h\:DrawCircleSectorLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawCircleSectorLines ({\b Vector2}  {\i center}, float  {\i radius}, float  {\i startAngle}, float  {\i endAngle}, int  {\i segments}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABXR}
{\bkmkend AAAAAAABXR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawCircleV\:raylib.h}
{\xe \v raylib.h\:DrawCircleV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawCircleV ({\b Vector2}  {\i center}, float  {\i radius}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABXS}
{\bkmkend AAAAAAABXS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawCube\:raylib.h}
{\xe \v raylib.h\:DrawCube}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawCube ({\b Vector3}  {\i position}, float  {\i width}, float  {\i height}, float  {\i length}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABXT}
{\bkmkend AAAAAAABXT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawCubeTexture\:raylib.h}
{\xe \v raylib.h\:DrawCubeTexture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawCubeTexture ({\b Texture2D}  {\i texture}, {\b Vector3}  {\i position}, float  {\i width}, float  {\i height}, float  {\i length}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABXU}
{\bkmkend AAAAAAABXU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawCubeTextureRec\:raylib.h}
{\xe \v raylib.h\:DrawCubeTextureRec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawCubeTextureRec ({\b Texture2D}  {\i texture}, {\b Rectangle}  {\i source}, {\b Vector3}  {\i position}, float  {\i width}, float  {\i height}, float  {\i length}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABXV}
{\bkmkend AAAAAAABXV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawCubeV\:raylib.h}
{\xe \v raylib.h\:DrawCubeV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawCubeV ({\b Vector3}  {\i position}, {\b Vector3}  {\i size}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABXW}
{\bkmkend AAAAAAABXW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawCubeWires\:raylib.h}
{\xe \v raylib.h\:DrawCubeWires}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawCubeWires ({\b Vector3}  {\i position}, float  {\i width}, float  {\i height}, float  {\i length}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABXX}
{\bkmkend AAAAAAABXX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawCubeWiresV\:raylib.h}
{\xe \v raylib.h\:DrawCubeWiresV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawCubeWiresV ({\b Vector3}  {\i position}, {\b Vector3}  {\i size}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABXY}
{\bkmkend AAAAAAABXY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawCylinder\:raylib.h}
{\xe \v raylib.h\:DrawCylinder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawCylinder ({\b Vector3}  {\i position}, float  {\i radiusTop}, float  {\i radiusBottom}, float  {\i height}, int  {\i slices}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABXZ}
{\bkmkend AAAAAAABXZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawCylinderEx\:raylib.h}
{\xe \v raylib.h\:DrawCylinderEx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawCylinderEx ({\b Vector3}  {\i startPos}, {\b Vector3}  {\i endPos}, float  {\i startRadius}, float  {\i endRadius}, int  {\i sides}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABYA}
{\bkmkend AAAAAAABYA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawCylinderWires\:raylib.h}
{\xe \v raylib.h\:DrawCylinderWires}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawCylinderWires ({\b Vector3}  {\i position}, float  {\i radiusTop}, float  {\i radiusBottom}, float  {\i height}, int  {\i slices}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABYB}
{\bkmkend AAAAAAABYB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawCylinderWiresEx\:raylib.h}
{\xe \v raylib.h\:DrawCylinderWiresEx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawCylinderWiresEx ({\b Vector3}  {\i startPos}, {\b Vector3}  {\i endPos}, float  {\i startRadius}, float  {\i endRadius}, int  {\i sides}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABYC}
{\bkmkend AAAAAAABYC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawEllipse\:raylib.h}
{\xe \v raylib.h\:DrawEllipse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawEllipse (int  {\i centerX}, int  {\i centerY}, float  {\i radiusH}, float  {\i radiusV}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABYD}
{\bkmkend AAAAAAABYD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawEllipseLines\:raylib.h}
{\xe \v raylib.h\:DrawEllipseLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawEllipseLines (int  {\i centerX}, int  {\i centerY}, float  {\i radiusH}, float  {\i radiusV}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABYE}
{\bkmkend AAAAAAABYE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawFPS\:raylib.h}
{\xe \v raylib.h\:DrawFPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawFPS (int  {\i posX}, int  {\i posY})}}
\par
{\bkmkstart AAAAAAABYF}
{\bkmkend AAAAAAABYF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawGrid\:raylib.h}
{\xe \v raylib.h\:DrawGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawGrid (int  {\i slices}, float  {\i spacing})}}
\par
{\bkmkstart AAAAAAABYG}
{\bkmkend AAAAAAABYG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawLine\:raylib.h}
{\xe \v raylib.h\:DrawLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawLine (int  {\i startPosX}, int  {\i startPosY}, int  {\i endPosX}, int  {\i endPosY}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABYH}
{\bkmkend AAAAAAABYH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawLine3D\:raylib.h}
{\xe \v raylib.h\:DrawLine3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawLine3D ({\b Vector3}  {\i startPos}, {\b Vector3}  {\i endPos}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABYI}
{\bkmkend AAAAAAABYI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawLineBezier\:raylib.h}
{\xe \v raylib.h\:DrawLineBezier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawLineBezier ({\b Vector2}  {\i startPos}, {\b Vector2}  {\i endPos}, float  {\i thick}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABYJ}
{\bkmkend AAAAAAABYJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawLineBezierCubic\:raylib.h}
{\xe \v raylib.h\:DrawLineBezierCubic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawLineBezierCubic ({\b Vector2}  {\i startPos}, {\b Vector2}  {\i endPos}, {\b Vector2}  {\i startControlPos}, {\b Vector2}  {\i endControlPos}, float  {\i thick}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABYK}
{\bkmkend AAAAAAABYK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawLineBezierQuad\:raylib.h}
{\xe \v raylib.h\:DrawLineBezierQuad}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawLineBezierQuad ({\b Vector2}  {\i startPos}, {\b Vector2}  {\i endPos}, {\b Vector2}  {\i controlPos}, float  {\i thick}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABYL}
{\bkmkend AAAAAAABYL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawLineEx\:raylib.h}
{\xe \v raylib.h\:DrawLineEx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawLineEx ({\b Vector2}  {\i startPos}, {\b Vector2}  {\i endPos}, float  {\i thick}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABYM}
{\bkmkend AAAAAAABYM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawLineStrip\:raylib.h}
{\xe \v raylib.h\:DrawLineStrip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawLineStrip ({\b Vector2} *  {\i points}, int  {\i pointCount}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABYN}
{\bkmkend AAAAAAABYN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawLineV\:raylib.h}
{\xe \v raylib.h\:DrawLineV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawLineV ({\b Vector2}  {\i startPos}, {\b Vector2}  {\i endPos}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABYO}
{\bkmkend AAAAAAABYO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawMesh\:raylib.h}
{\xe \v raylib.h\:DrawMesh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawMesh ({\b Mesh}  {\i mesh}, {\b Material}  {\i material}, {\b Matrix}  {\i transform})}}
\par
{\bkmkstart AAAAAAABYP}
{\bkmkend AAAAAAABYP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawMeshInstanced\:raylib.h}
{\xe \v raylib.h\:DrawMeshInstanced}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawMeshInstanced ({\b Mesh}  {\i mesh}, {\b Material}  {\i material}, const {\b Matrix} *  {\i transforms}, int  {\i instances})}}
\par
{\bkmkstart AAAAAAABYQ}
{\bkmkend AAAAAAABYQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawModel\:raylib.h}
{\xe \v raylib.h\:DrawModel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawModel ({\b Model}  {\i model}, {\b Vector3}  {\i position}, float  {\i scale}, {\b Color}  {\i tint})}}
\par
{\bkmkstart AAAAAAABYR}
{\bkmkend AAAAAAABYR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawModelEx\:raylib.h}
{\xe \v raylib.h\:DrawModelEx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawModelEx ({\b Model}  {\i model}, {\b Vector3}  {\i position}, {\b Vector3}  {\i rotationAxis}, float  {\i rotationAngle}, {\b Vector3}  {\i scale}, {\b Color}  {\i tint})}}
\par
{\bkmkstart AAAAAAABYS}
{\bkmkend AAAAAAABYS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawModelWires\:raylib.h}
{\xe \v raylib.h\:DrawModelWires}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawModelWires ({\b Model}  {\i model}, {\b Vector3}  {\i position}, float  {\i scale}, {\b Color}  {\i tint})}}
\par
{\bkmkstart AAAAAAABYT}
{\bkmkend AAAAAAABYT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawModelWiresEx\:raylib.h}
{\xe \v raylib.h\:DrawModelWiresEx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawModelWiresEx ({\b Model}  {\i model}, {\b Vector3}  {\i position}, {\b Vector3}  {\i rotationAxis}, float  {\i rotationAngle}, {\b Vector3}  {\i scale}, {\b Color}  {\i tint})}}
\par
{\bkmkstart AAAAAAABYU}
{\bkmkend AAAAAAABYU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawPixel\:raylib.h}
{\xe \v raylib.h\:DrawPixel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawPixel (int  {\i posX}, int  {\i posY}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABYV}
{\bkmkend AAAAAAABYV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawPixelV\:raylib.h}
{\xe \v raylib.h\:DrawPixelV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawPixelV ({\b Vector2}  {\i position}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABYW}
{\bkmkend AAAAAAABYW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawPlane\:raylib.h}
{\xe \v raylib.h\:DrawPlane}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawPlane ({\b Vector3}  {\i centerPos}, {\b Vector2}  {\i size}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABYX}
{\bkmkend AAAAAAABYX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawPoint3D\:raylib.h}
{\xe \v raylib.h\:DrawPoint3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawPoint3D ({\b Vector3}  {\i position}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABYY}
{\bkmkend AAAAAAABYY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawPoly\:raylib.h}
{\xe \v raylib.h\:DrawPoly}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawPoly ({\b Vector2}  {\i center}, int  {\i sides}, float  {\i radius}, float  {\i rotation}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABYZ}
{\bkmkend AAAAAAABYZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawPolyLines\:raylib.h}
{\xe \v raylib.h\:DrawPolyLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawPolyLines ({\b Vector2}  {\i center}, int  {\i sides}, float  {\i radius}, float  {\i rotation}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABZA}
{\bkmkend AAAAAAABZA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawPolyLinesEx\:raylib.h}
{\xe \v raylib.h\:DrawPolyLinesEx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawPolyLinesEx ({\b Vector2}  {\i center}, int  {\i sides}, float  {\i radius}, float  {\i rotation}, float  {\i lineThick}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABZB}
{\bkmkend AAAAAAABZB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawRay\:raylib.h}
{\xe \v raylib.h\:DrawRay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawRay ({\b Ray}  {\i ray}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABZC}
{\bkmkend AAAAAAABZC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawRectangle\:raylib.h}
{\xe \v raylib.h\:DrawRectangle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawRectangle (int  {\i posX}, int  {\i posY}, int  {\i width}, int  {\i height}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABZD}
{\bkmkend AAAAAAABZD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawRectangleGradientEx\:raylib.h}
{\xe \v raylib.h\:DrawRectangleGradientEx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawRectangleGradientEx ({\b Rectangle}  {\i rec}, {\b Color}  {\i col1}, {\b Color}  {\i col2}, {\b Color}  {\i col3}, {\b Color}  {\i col4})}}
\par
{\bkmkstart AAAAAAABZE}
{\bkmkend AAAAAAABZE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawRectangleGradientH\:raylib.h}
{\xe \v raylib.h\:DrawRectangleGradientH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawRectangleGradientH (int  {\i posX}, int  {\i posY}, int  {\i width}, int  {\i height}, {\b Color}  {\i color1}, {\b Color}  {\i color2})}}
\par
{\bkmkstart AAAAAAABZF}
{\bkmkend AAAAAAABZF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawRectangleGradientV\:raylib.h}
{\xe \v raylib.h\:DrawRectangleGradientV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawRectangleGradientV (int  {\i posX}, int  {\i posY}, int  {\i width}, int  {\i height}, {\b Color}  {\i color1}, {\b Color}  {\i color2})}}
\par
{\bkmkstart AAAAAAABZG}
{\bkmkend AAAAAAABZG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawRectangleLines\:raylib.h}
{\xe \v raylib.h\:DrawRectangleLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawRectangleLines (int  {\i posX}, int  {\i posY}, int  {\i width}, int  {\i height}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABZH}
{\bkmkend AAAAAAABZH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawRectangleLinesEx\:raylib.h}
{\xe \v raylib.h\:DrawRectangleLinesEx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawRectangleLinesEx ({\b Rectangle}  {\i rec}, float  {\i lineThick}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABZI}
{\bkmkend AAAAAAABZI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawRectanglePro\:raylib.h}
{\xe \v raylib.h\:DrawRectanglePro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawRectanglePro ({\b Rectangle}  {\i rec}, {\b Vector2}  {\i origin}, float  {\i rotation}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABZJ}
{\bkmkend AAAAAAABZJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawRectangleRec\:raylib.h}
{\xe \v raylib.h\:DrawRectangleRec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawRectangleRec ({\b Rectangle}  {\i rec}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABZK}
{\bkmkend AAAAAAABZK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawRectangleRounded\:raylib.h}
{\xe \v raylib.h\:DrawRectangleRounded}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawRectangleRounded ({\b Rectangle}  {\i rec}, float  {\i roundness}, int  {\i segments}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABZL}
{\bkmkend AAAAAAABZL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawRectangleRoundedLines\:raylib.h}
{\xe \v raylib.h\:DrawRectangleRoundedLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawRectangleRoundedLines ({\b Rectangle}  {\i rec}, float  {\i roundness}, int  {\i segments}, float  {\i lineThick}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABZM}
{\bkmkend AAAAAAABZM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawRectangleV\:raylib.h}
{\xe \v raylib.h\:DrawRectangleV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawRectangleV ({\b Vector2}  {\i position}, {\b Vector2}  {\i size}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABZN}
{\bkmkend AAAAAAABZN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawRing\:raylib.h}
{\xe \v raylib.h\:DrawRing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawRing ({\b Vector2}  {\i center}, float  {\i innerRadius}, float  {\i outerRadius}, float  {\i startAngle}, float  {\i endAngle}, int  {\i segments}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABZO}
{\bkmkend AAAAAAABZO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawRingLines\:raylib.h}
{\xe \v raylib.h\:DrawRingLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawRingLines ({\b Vector2}  {\i center}, float  {\i innerRadius}, float  {\i outerRadius}, float  {\i startAngle}, float  {\i endAngle}, int  {\i segments}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABZP}
{\bkmkend AAAAAAABZP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawSphere\:raylib.h}
{\xe \v raylib.h\:DrawSphere}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawSphere ({\b Vector3}  {\i centerPos}, float  {\i radius}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABZQ}
{\bkmkend AAAAAAABZQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawSphereEx\:raylib.h}
{\xe \v raylib.h\:DrawSphereEx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawSphereEx ({\b Vector3}  {\i centerPos}, float  {\i radius}, int  {\i rings}, int  {\i slices}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABZR}
{\bkmkend AAAAAAABZR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawSphereWires\:raylib.h}
{\xe \v raylib.h\:DrawSphereWires}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawSphereWires ({\b Vector3}  {\i centerPos}, float  {\i radius}, int  {\i rings}, int  {\i slices}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABZS}
{\bkmkend AAAAAAABZS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawText\:raylib.h}
{\xe \v raylib.h\:DrawText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawText (const char *  {\i text}, int  {\i posX}, int  {\i posY}, int  {\i fontSize}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAABZT}
{\bkmkend AAAAAAABZT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawTextCodepoint\:raylib.h}
{\xe \v raylib.h\:DrawTextCodepoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawTextCodepoint ({\b Font}  {\i font}, int  {\i codepoint}, {\b Vector2}  {\i position}, float  {\i fontSize}, {\b Color}  {\i tint})}}
\par
{\bkmkstart AAAAAAABZU}
{\bkmkend AAAAAAABZU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawTextCodepoints\:raylib.h}
{\xe \v raylib.h\:DrawTextCodepoints}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawTextCodepoints ({\b Font}  {\i font}, const int *  {\i codepoints}, int  {\i count}, {\b Vector2}  {\i position}, float  {\i fontSize}, float  {\i spacing}, {\b Color}  {\i tint})}}
\par
{\bkmkstart AAAAAAABZV}
{\bkmkend AAAAAAABZV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawTextEx\:raylib.h}
{\xe \v raylib.h\:DrawTextEx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawTextEx ({\b Font}  {\i font}, const char *  {\i text}, {\b Vector2}  {\i position}, float  {\i fontSize}, float  {\i spacing}, {\b Color}  {\i tint})}}
\par
{\bkmkstart AAAAAAABZW}
{\bkmkend AAAAAAABZW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawTextPro\:raylib.h}
{\xe \v raylib.h\:DrawTextPro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawTextPro ({\b Font}  {\i font}, const char *  {\i text}, {\b Vector2}  {\i position}, {\b Vector2}  {\i origin}, float  {\i rotation}, float  {\i fontSize}, float  {\i spacing}, {\b Color}  {\i tint})}}
\par
{\bkmkstart AAAAAAABZX}
{\bkmkend AAAAAAABZX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawTexture\:raylib.h}
{\xe \v raylib.h\:DrawTexture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawTexture ({\b Texture2D}  {\i texture}, int  {\i posX}, int  {\i posY}, {\b Color}  {\i tint})}}
\par
{\bkmkstart AAAAAAABZY}
{\bkmkend AAAAAAABZY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawTextureEx\:raylib.h}
{\xe \v raylib.h\:DrawTextureEx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawTextureEx ({\b Texture2D}  {\i texture}, {\b Vector2}  {\i position}, float  {\i rotation}, float  {\i scale}, {\b Color}  {\i tint})}}
\par
{\bkmkstart AAAAAAABZZ}
{\bkmkend AAAAAAABZZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawTextureNPatch\:raylib.h}
{\xe \v raylib.h\:DrawTextureNPatch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawTextureNPatch ({\b Texture2D}  {\i texture}, {\b NPatchInfo}  {\i nPatchInfo}, {\b Rectangle}  {\i dest}, {\b Vector2}  {\i origin}, float  {\i rotation}, {\b Color}  {\i tint})}}
\par
{\bkmkstart AAAAAAACAA}
{\bkmkend AAAAAAACAA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawTexturePoly\:raylib.h}
{\xe \v raylib.h\:DrawTexturePoly}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawTexturePoly ({\b Texture2D}  {\i texture}, {\b Vector2}  {\i center}, {\b Vector2} *  {\i points}, {\b Vector2} *  {\i texcoords}, int  {\i pointCount}, {\b Color}  {\i tint})}}
\par
{\bkmkstart AAAAAAACAB}
{\bkmkend AAAAAAACAB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawTexturePro\:raylib.h}
{\xe \v raylib.h\:DrawTexturePro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawTexturePro ({\b Texture2D}  {\i texture}, {\b Rectangle}  {\i source}, {\b Rectangle}  {\i dest}, {\b Vector2}  {\i origin}, float  {\i rotation}, {\b Color}  {\i tint})}}
\par
{\bkmkstart AAAAAAACAC}
{\bkmkend AAAAAAACAC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawTextureQuad\:raylib.h}
{\xe \v raylib.h\:DrawTextureQuad}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawTextureQuad ({\b Texture2D}  {\i texture}, {\b Vector2}  {\i tiling}, {\b Vector2}  {\i offset}, {\b Rectangle}  {\i quad}, {\b Color}  {\i tint})}}
\par
{\bkmkstart AAAAAAACAD}
{\bkmkend AAAAAAACAD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawTextureRec\:raylib.h}
{\xe \v raylib.h\:DrawTextureRec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawTextureRec ({\b Texture2D}  {\i texture}, {\b Rectangle}  {\i source}, {\b Vector2}  {\i position}, {\b Color}  {\i tint})}}
\par
{\bkmkstart AAAAAAACAE}
{\bkmkend AAAAAAACAE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawTextureTiled\:raylib.h}
{\xe \v raylib.h\:DrawTextureTiled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawTextureTiled ({\b Texture2D}  {\i texture}, {\b Rectangle}  {\i source}, {\b Rectangle}  {\i dest}, {\b Vector2}  {\i origin}, float  {\i rotation}, float  {\i scale}, {\b Color}  {\i tint})}}
\par
{\bkmkstart AAAAAAACAF}
{\bkmkend AAAAAAACAF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawTextureV\:raylib.h}
{\xe \v raylib.h\:DrawTextureV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawTextureV ({\b Texture2D}  {\i texture}, {\b Vector2}  {\i position}, {\b Color}  {\i tint})}}
\par
{\bkmkstart AAAAAAACAG}
{\bkmkend AAAAAAACAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawTriangle\:raylib.h}
{\xe \v raylib.h\:DrawTriangle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawTriangle ({\b Vector2}  {\i v1}, {\b Vector2}  {\i v2}, {\b Vector2}  {\i v3}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAACAH}
{\bkmkend AAAAAAACAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawTriangle3D\:raylib.h}
{\xe \v raylib.h\:DrawTriangle3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawTriangle3D ({\b Vector3}  {\i v1}, {\b Vector3}  {\i v2}, {\b Vector3}  {\i v3}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAACAI}
{\bkmkend AAAAAAACAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawTriangleFan\:raylib.h}
{\xe \v raylib.h\:DrawTriangleFan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawTriangleFan ({\b Vector2} *  {\i points}, int  {\i pointCount}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAACAJ}
{\bkmkend AAAAAAACAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawTriangleLines\:raylib.h}
{\xe \v raylib.h\:DrawTriangleLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawTriangleLines ({\b Vector2}  {\i v1}, {\b Vector2}  {\i v2}, {\b Vector2}  {\i v3}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAACAK}
{\bkmkend AAAAAAACAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawTriangleStrip\:raylib.h}
{\xe \v raylib.h\:DrawTriangleStrip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawTriangleStrip ({\b Vector2} *  {\i points}, int  {\i pointCount}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAACAL}
{\bkmkend AAAAAAACAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DrawTriangleStrip3D\:raylib.h}
{\xe \v raylib.h\:DrawTriangleStrip3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void DrawTriangleStrip3D ({\b Vector3} *  {\i points}, int  {\i pointCount}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAACAM}
{\bkmkend AAAAAAACAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EnableCursor\:raylib.h}
{\xe \v raylib.h\:EnableCursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void EnableCursor (void )}}
\par
{\bkmkstart AAAAAAACAN}
{\bkmkend AAAAAAACAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EnableEventWaiting\:raylib.h}
{\xe \v raylib.h\:EnableEventWaiting}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void EnableEventWaiting (void )}}
\par
{\bkmkstart AAAAAAACAO}
{\bkmkend AAAAAAACAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EncodeDataBase64\:raylib.h}
{\xe \v raylib.h\:EncodeDataBase64}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} char * EncodeDataBase64 (const unsigned char *  {\i data}, int  {\i dataSize}, int *  {\i outputSize})}}
\par
{\bkmkstart AAAAAAACAP}
{\bkmkend AAAAAAACAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EndBlendMode\:raylib.h}
{\xe \v raylib.h\:EndBlendMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void EndBlendMode (void )}}
\par
{\bkmkstart AAAAAAACAQ}
{\bkmkend AAAAAAACAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EndDrawing\:raylib.h}
{\xe \v raylib.h\:EndDrawing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void EndDrawing (void )}}
\par
{\bkmkstart AAAAAAACAR}
{\bkmkend AAAAAAACAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EndMode2D\:raylib.h}
{\xe \v raylib.h\:EndMode2D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void EndMode2D (void )}}
\par
{\bkmkstart AAAAAAACAS}
{\bkmkend AAAAAAACAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EndMode3D\:raylib.h}
{\xe \v raylib.h\:EndMode3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void EndMode3D (void )}}
\par
{\bkmkstart AAAAAAACAT}
{\bkmkend AAAAAAACAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EndScissorMode\:raylib.h}
{\xe \v raylib.h\:EndScissorMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void EndScissorMode (void )}}
\par
{\bkmkstart AAAAAAACAU}
{\bkmkend AAAAAAACAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EndShaderMode\:raylib.h}
{\xe \v raylib.h\:EndShaderMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void EndShaderMode (void )}}
\par
{\bkmkstart AAAAAAACAV}
{\bkmkend AAAAAAACAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EndTextureMode\:raylib.h}
{\xe \v raylib.h\:EndTextureMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void EndTextureMode (void )}}
\par
{\bkmkstart AAAAAAACAW}
{\bkmkend AAAAAAACAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EndVrStereoMode\:raylib.h}
{\xe \v raylib.h\:EndVrStereoMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void EndVrStereoMode (void )}}
\par
{\bkmkstart AAAAAAACAX}
{\bkmkend AAAAAAACAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ExportDataAsCode\:raylib.h}
{\xe \v raylib.h\:ExportDataAsCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} ExportDataAsCode (const char *  {\i data}, unsigned int  {\i size}, const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAACAY}
{\bkmkend AAAAAAACAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ExportFontAsCode\:raylib.h}
{\xe \v raylib.h\:ExportFontAsCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} ExportFontAsCode ({\b Font}  {\i font}, const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAACAZ}
{\bkmkend AAAAAAACAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ExportImage\:raylib.h}
{\xe \v raylib.h\:ExportImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} ExportImage ({\b Image}  {\i image}, const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAACBA}
{\bkmkend AAAAAAACBA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ExportImageAsCode\:raylib.h}
{\xe \v raylib.h\:ExportImageAsCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} ExportImageAsCode ({\b Image}  {\i image}, const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAACBB}
{\bkmkend AAAAAAACBB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ExportMesh\:raylib.h}
{\xe \v raylib.h\:ExportMesh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} ExportMesh ({\b Mesh}  {\i mesh}, const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAACBC}
{\bkmkend AAAAAAACBC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ExportWave\:raylib.h}
{\xe \v raylib.h\:ExportWave}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} ExportWave ({\b Wave}  {\i wave}, const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAACBD}
{\bkmkend AAAAAAACBD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ExportWaveAsCode\:raylib.h}
{\xe \v raylib.h\:ExportWaveAsCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} ExportWaveAsCode ({\b Wave}  {\i wave}, const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAACBE}
{\bkmkend AAAAAAACBE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Fade\:raylib.h}
{\xe \v raylib.h\:Fade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Color} Fade ({\b Color}  {\i color}, float  {\i alpha})}}
\par
{\bkmkstart AAAAAAACBF}
{\bkmkend AAAAAAACBF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FileExists\:raylib.h}
{\xe \v raylib.h\:FileExists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} FileExists (const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAACBG}
{\bkmkend AAAAAAACBG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GenImageCellular\:raylib.h}
{\xe \v raylib.h\:GenImageCellular}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Image} GenImageCellular (int  {\i width}, int  {\i height}, int  {\i tileSize})}}
\par
{\bkmkstart AAAAAAACBH}
{\bkmkend AAAAAAACBH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GenImageChecked\:raylib.h}
{\xe \v raylib.h\:GenImageChecked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Image} GenImageChecked (int  {\i width}, int  {\i height}, int  {\i checksX}, int  {\i checksY}, {\b Color}  {\i col1}, {\b Color}  {\i col2})}}
\par
{\bkmkstart AAAAAAACBI}
{\bkmkend AAAAAAACBI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GenImageColor\:raylib.h}
{\xe \v raylib.h\:GenImageColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Image} GenImageColor (int  {\i width}, int  {\i height}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAACBJ}
{\bkmkend AAAAAAACBJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GenImageFontAtlas\:raylib.h}
{\xe \v raylib.h\:GenImageFontAtlas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Image} GenImageFontAtlas (const {\b GlyphInfo} *  {\i chars}, {\b Rectangle} **  {\i recs}, int  {\i glyphCount}, int  {\i fontSize}, int  {\i padding}, int  {\i packMethod})}}
\par
{\bkmkstart AAAAAAACBK}
{\bkmkend AAAAAAACBK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GenImageGradientH\:raylib.h}
{\xe \v raylib.h\:GenImageGradientH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Image} GenImageGradientH (int  {\i width}, int  {\i height}, {\b Color}  {\i left}, {\b Color}  {\i right})}}
\par
{\bkmkstart AAAAAAACBL}
{\bkmkend AAAAAAACBL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GenImageGradientRadial\:raylib.h}
{\xe \v raylib.h\:GenImageGradientRadial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Image} GenImageGradientRadial (int  {\i width}, int  {\i height}, float  {\i density}, {\b Color}  {\i inner}, {\b Color}  {\i outer})}}
\par
{\bkmkstart AAAAAAACBM}
{\bkmkend AAAAAAACBM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GenImageGradientV\:raylib.h}
{\xe \v raylib.h\:GenImageGradientV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Image} GenImageGradientV (int  {\i width}, int  {\i height}, {\b Color}  {\i top}, {\b Color}  {\i bottom})}}
\par
{\bkmkstart AAAAAAACBN}
{\bkmkend AAAAAAACBN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GenImageWhiteNoise\:raylib.h}
{\xe \v raylib.h\:GenImageWhiteNoise}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Image} GenImageWhiteNoise (int  {\i width}, int  {\i height}, float  {\i factor})}}
\par
{\bkmkstart AAAAAAACBO}
{\bkmkend AAAAAAACBO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GenMeshBinormals\:raylib.h}
{\xe \v raylib.h\:GenMeshBinormals}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void GenMeshBinormals ({\b Mesh} *  {\i mesh})}}
\par
{\bkmkstart AAAAAAACBP}
{\bkmkend AAAAAAACBP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GenMeshCone\:raylib.h}
{\xe \v raylib.h\:GenMeshCone}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Mesh} GenMeshCone (float  {\i radius}, float  {\i height}, int  {\i slices})}}
\par
{\bkmkstart AAAAAAACBQ}
{\bkmkend AAAAAAACBQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GenMeshCube\:raylib.h}
{\xe \v raylib.h\:GenMeshCube}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Mesh} GenMeshCube (float  {\i width}, float  {\i height}, float  {\i length})}}
\par
{\bkmkstart AAAAAAACBR}
{\bkmkend AAAAAAACBR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GenMeshCubicmap\:raylib.h}
{\xe \v raylib.h\:GenMeshCubicmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Mesh} GenMeshCubicmap ({\b Image}  {\i cubicmap}, {\b Vector3}  {\i cubeSize})}}
\par
{\bkmkstart AAAAAAACBS}
{\bkmkend AAAAAAACBS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GenMeshCylinder\:raylib.h}
{\xe \v raylib.h\:GenMeshCylinder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Mesh} GenMeshCylinder (float  {\i radius}, float  {\i height}, int  {\i slices})}}
\par
{\bkmkstart AAAAAAACBT}
{\bkmkend AAAAAAACBT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GenMeshHeightmap\:raylib.h}
{\xe \v raylib.h\:GenMeshHeightmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Mesh} GenMeshHeightmap ({\b Image}  {\i heightmap}, {\b Vector3}  {\i size})}}
\par
{\bkmkstart AAAAAAACBU}
{\bkmkend AAAAAAACBU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GenMeshHemiSphere\:raylib.h}
{\xe \v raylib.h\:GenMeshHemiSphere}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Mesh} GenMeshHemiSphere (float  {\i radius}, int  {\i rings}, int  {\i slices})}}
\par
{\bkmkstart AAAAAAACBV}
{\bkmkend AAAAAAACBV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GenMeshKnot\:raylib.h}
{\xe \v raylib.h\:GenMeshKnot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Mesh} GenMeshKnot (float  {\i radius}, float  {\i size}, int  {\i radSeg}, int  {\i sides})}}
\par
{\bkmkstart AAAAAAACBW}
{\bkmkend AAAAAAACBW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GenMeshPlane\:raylib.h}
{\xe \v raylib.h\:GenMeshPlane}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Mesh} GenMeshPlane (float  {\i width}, float  {\i length}, int  {\i resX}, int  {\i resZ})}}
\par
{\bkmkstart AAAAAAACBX}
{\bkmkend AAAAAAACBX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GenMeshPoly\:raylib.h}
{\xe \v raylib.h\:GenMeshPoly}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Mesh} GenMeshPoly (int  {\i sides}, float  {\i radius})}}
\par
{\bkmkstart AAAAAAACBY}
{\bkmkend AAAAAAACBY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GenMeshSphere\:raylib.h}
{\xe \v raylib.h\:GenMeshSphere}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Mesh} GenMeshSphere (float  {\i radius}, int  {\i rings}, int  {\i slices})}}
\par
{\bkmkstart AAAAAAACBZ}
{\bkmkend AAAAAAACBZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GenMeshTangents\:raylib.h}
{\xe \v raylib.h\:GenMeshTangents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void GenMeshTangents ({\b Mesh} *  {\i mesh})}}
\par
{\bkmkstart AAAAAAACCA}
{\bkmkend AAAAAAACCA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GenMeshTorus\:raylib.h}
{\xe \v raylib.h\:GenMeshTorus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Mesh} GenMeshTorus (float  {\i radius}, float  {\i size}, int  {\i radSeg}, int  {\i sides})}}
\par
{\bkmkstart AAAAAAACCB}
{\bkmkend AAAAAAACCB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GenTextureMipmaps\:raylib.h}
{\xe \v raylib.h\:GenTextureMipmaps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void GenTextureMipmaps ({\b Texture2D} *  {\i texture})}}
\par
{\bkmkstart AAAAAAACCC}
{\bkmkend AAAAAAACCC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetApplicationDirectory\:raylib.h}
{\xe \v raylib.h\:GetApplicationDirectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} const char * GetApplicationDirectory (void )}}
\par
{\bkmkstart AAAAAAACCD}
{\bkmkend AAAAAAACCD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetCameraMatrix\:raylib.h}
{\xe \v raylib.h\:GetCameraMatrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Matrix} GetCameraMatrix ({\b Camera}  {\i camera})}}
\par
{\bkmkstart AAAAAAACCE}
{\bkmkend AAAAAAACCE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetCameraMatrix2D\:raylib.h}
{\xe \v raylib.h\:GetCameraMatrix2D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Matrix} GetCameraMatrix2D ({\b Camera2D}  {\i camera})}}
\par
{\bkmkstart AAAAAAACCF}
{\bkmkend AAAAAAACCF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetCharPressed\:raylib.h}
{\xe \v raylib.h\:GetCharPressed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetCharPressed (void )}}
\par
{\bkmkstart AAAAAAACCG}
{\bkmkend AAAAAAACCG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetClipboardText\:raylib.h}
{\xe \v raylib.h\:GetClipboardText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} const char * GetClipboardText (void )}}
\par
{\bkmkstart AAAAAAACCH}
{\bkmkend AAAAAAACCH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetCodepoint\:raylib.h}
{\xe \v raylib.h\:GetCodepoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetCodepoint (const char *  {\i text}, int *  {\i bytesProcessed})}}
\par
{\bkmkstart AAAAAAACCI}
{\bkmkend AAAAAAACCI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetCodepointCount\:raylib.h}
{\xe \v raylib.h\:GetCodepointCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetCodepointCount (const char *  {\i text})}}
\par
{\bkmkstart AAAAAAACCJ}
{\bkmkend AAAAAAACCJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetCollisionRec\:raylib.h}
{\xe \v raylib.h\:GetCollisionRec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Rectangle} GetCollisionRec ({\b Rectangle}  {\i rec1}, {\b Rectangle}  {\i rec2})}}
\par
{\bkmkstart AAAAAAACCK}
{\bkmkend AAAAAAACCK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetColor\:raylib.h}
{\xe \v raylib.h\:GetColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Color} GetColor (unsigned int  {\i hexValue})}}
\par
{\bkmkstart AAAAAAACCL}
{\bkmkend AAAAAAACCL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetCurrentMonitor\:raylib.h}
{\xe \v raylib.h\:GetCurrentMonitor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetCurrentMonitor (void )}}
\par
{\bkmkstart AAAAAAACCM}
{\bkmkend AAAAAAACCM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetDirectoryFiles\:raylib.h}
{\xe \v raylib.h\:GetDirectoryFiles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} char ** GetDirectoryFiles (const char *  {\i dirPath}, int *  {\i count})}}
\par
{\bkmkstart AAAAAAACCN}
{\bkmkend AAAAAAACCN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetDirectoryPath\:raylib.h}
{\xe \v raylib.h\:GetDirectoryPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} const char * GetDirectoryPath (const char *  {\i filePath})}}
\par
{\bkmkstart AAAAAAACCO}
{\bkmkend AAAAAAACCO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetDroppedFiles\:raylib.h}
{\xe \v raylib.h\:GetDroppedFiles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} char ** GetDroppedFiles (int *  {\i count})}}
\par
{\bkmkstart AAAAAAACCP}
{\bkmkend AAAAAAACCP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetFileExtension\:raylib.h}
{\xe \v raylib.h\:GetFileExtension}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} const char * GetFileExtension (const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAACCQ}
{\bkmkend AAAAAAACCQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetFileLength\:raylib.h}
{\xe \v raylib.h\:GetFileLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetFileLength (const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAACCR}
{\bkmkend AAAAAAACCR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetFileModTime\:raylib.h}
{\xe \v raylib.h\:GetFileModTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} long GetFileModTime (const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAACCS}
{\bkmkend AAAAAAACCS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetFileName\:raylib.h}
{\xe \v raylib.h\:GetFileName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} const char * GetFileName (const char *  {\i filePath})}}
\par
{\bkmkstart AAAAAAACCT}
{\bkmkend AAAAAAACCT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetFileNameWithoutExt\:raylib.h}
{\xe \v raylib.h\:GetFileNameWithoutExt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} const char * GetFileNameWithoutExt (const char *  {\i filePath})}}
\par
{\bkmkstart AAAAAAACCU}
{\bkmkend AAAAAAACCU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetFontDefault\:raylib.h}
{\xe \v raylib.h\:GetFontDefault}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Font} GetFontDefault (void )}}
\par
{\bkmkstart AAAAAAACCV}
{\bkmkend AAAAAAACCV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetFPS\:raylib.h}
{\xe \v raylib.h\:GetFPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetFPS (void )}}
\par
{\bkmkstart AAAAAAACCW}
{\bkmkend AAAAAAACCW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetFrameTime\:raylib.h}
{\xe \v raylib.h\:GetFrameTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} float GetFrameTime (void )}}
\par
{\bkmkstart AAAAAAACCX}
{\bkmkend AAAAAAACCX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetGamepadAxisCount\:raylib.h}
{\xe \v raylib.h\:GetGamepadAxisCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetGamepadAxisCount (int  {\i gamepad})}}
\par
{\bkmkstart AAAAAAACCY}
{\bkmkend AAAAAAACCY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetGamepadAxisMovement\:raylib.h}
{\xe \v raylib.h\:GetGamepadAxisMovement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} float GetGamepadAxisMovement (int  {\i gamepad}, int  {\i axis})}}
\par
{\bkmkstart AAAAAAACCZ}
{\bkmkend AAAAAAACCZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetGamepadButtonPressed\:raylib.h}
{\xe \v raylib.h\:GetGamepadButtonPressed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetGamepadButtonPressed (void )}}
\par
{\bkmkstart AAAAAAACDA}
{\bkmkend AAAAAAACDA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetGamepadName\:raylib.h}
{\xe \v raylib.h\:GetGamepadName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} const char * GetGamepadName (int  {\i gamepad})}}
\par
{\bkmkstart AAAAAAACDB}
{\bkmkend AAAAAAACDB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetGestureDetected\:raylib.h}
{\xe \v raylib.h\:GetGestureDetected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetGestureDetected (void )}}
\par
{\bkmkstart AAAAAAACDC}
{\bkmkend AAAAAAACDC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetGestureDragAngle\:raylib.h}
{\xe \v raylib.h\:GetGestureDragAngle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} float GetGestureDragAngle (void )}}
\par
{\bkmkstart AAAAAAACDD}
{\bkmkend AAAAAAACDD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetGestureDragVector\:raylib.h}
{\xe \v raylib.h\:GetGestureDragVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Vector2} GetGestureDragVector (void )}}
\par
{\bkmkstart AAAAAAACDE}
{\bkmkend AAAAAAACDE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetGestureHoldDuration\:raylib.h}
{\xe \v raylib.h\:GetGestureHoldDuration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} float GetGestureHoldDuration (void )}}
\par
{\bkmkstart AAAAAAACDF}
{\bkmkend AAAAAAACDF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetGesturePinchAngle\:raylib.h}
{\xe \v raylib.h\:GetGesturePinchAngle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} float GetGesturePinchAngle (void )}}
\par
{\bkmkstart AAAAAAACDG}
{\bkmkend AAAAAAACDG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetGesturePinchVector\:raylib.h}
{\xe \v raylib.h\:GetGesturePinchVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Vector2} GetGesturePinchVector (void )}}
\par
{\bkmkstart AAAAAAACDH}
{\bkmkend AAAAAAACDH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetGlyphAtlasRec\:raylib.h}
{\xe \v raylib.h\:GetGlyphAtlasRec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Rectangle} GetGlyphAtlasRec ({\b Font}  {\i font}, int  {\i codepoint})}}
\par
{\bkmkstart AAAAAAACDI}
{\bkmkend AAAAAAACDI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetGlyphIndex\:raylib.h}
{\xe \v raylib.h\:GetGlyphIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetGlyphIndex ({\b Font}  {\i font}, int  {\i codepoint})}}
\par
{\bkmkstart AAAAAAACDJ}
{\bkmkend AAAAAAACDJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetGlyphInfo\:raylib.h}
{\xe \v raylib.h\:GetGlyphInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b GlyphInfo} GetGlyphInfo ({\b Font}  {\i font}, int  {\i codepoint})}}
\par
{\bkmkstart AAAAAAACDK}
{\bkmkend AAAAAAACDK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetImageAlphaBorder\:raylib.h}
{\xe \v raylib.h\:GetImageAlphaBorder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Rectangle} GetImageAlphaBorder ({\b Image}  {\i image}, float  {\i threshold})}}
\par
{\bkmkstart AAAAAAACDL}
{\bkmkend AAAAAAACDL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetImageColor\:raylib.h}
{\xe \v raylib.h\:GetImageColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Color} GetImageColor ({\b Image}  {\i image}, int  {\i x}, int  {\i y})}}
\par
{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetKeyPressed\:raylib.h}
{\xe \v raylib.h\:GetKeyPressed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetKeyPressed (void )}}
\par
{\bkmkstart AAAAAAACDN}
{\bkmkend AAAAAAACDN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetMeshBoundingBox\:raylib.h}
{\xe \v raylib.h\:GetMeshBoundingBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b BoundingBox} GetMeshBoundingBox ({\b Mesh}  {\i mesh})}}
\par
{\bkmkstart AAAAAAACDO}
{\bkmkend AAAAAAACDO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetModelBoundingBox\:raylib.h}
{\xe \v raylib.h\:GetModelBoundingBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b BoundingBox} GetModelBoundingBox ({\b Model}  {\i model})}}
\par
{\bkmkstart AAAAAAACDP}
{\bkmkend AAAAAAACDP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetMonitorCount\:raylib.h}
{\xe \v raylib.h\:GetMonitorCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetMonitorCount (void )}}
\par
{\bkmkstart AAAAAAACDQ}
{\bkmkend AAAAAAACDQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetMonitorHeight\:raylib.h}
{\xe \v raylib.h\:GetMonitorHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetMonitorHeight (int  {\i monitor})}}
\par
{\bkmkstart AAAAAAACDR}
{\bkmkend AAAAAAACDR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetMonitorName\:raylib.h}
{\xe \v raylib.h\:GetMonitorName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} const char * GetMonitorName (int  {\i monitor})}}
\par
{\bkmkstart AAAAAAACDS}
{\bkmkend AAAAAAACDS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetMonitorPhysicalHeight\:raylib.h}
{\xe \v raylib.h\:GetMonitorPhysicalHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetMonitorPhysicalHeight (int  {\i monitor})}}
\par
{\bkmkstart AAAAAAACDT}
{\bkmkend AAAAAAACDT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetMonitorPhysicalWidth\:raylib.h}
{\xe \v raylib.h\:GetMonitorPhysicalWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetMonitorPhysicalWidth (int  {\i monitor})}}
\par
{\bkmkstart AAAAAAACDU}
{\bkmkend AAAAAAACDU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetMonitorPosition\:raylib.h}
{\xe \v raylib.h\:GetMonitorPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Vector2} GetMonitorPosition (int  {\i monitor})}}
\par
{\bkmkstart AAAAAAACDV}
{\bkmkend AAAAAAACDV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetMonitorRefreshRate\:raylib.h}
{\xe \v raylib.h\:GetMonitorRefreshRate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetMonitorRefreshRate (int  {\i monitor})}}
\par
{\bkmkstart AAAAAAACDW}
{\bkmkend AAAAAAACDW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetMonitorWidth\:raylib.h}
{\xe \v raylib.h\:GetMonitorWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetMonitorWidth (int  {\i monitor})}}
\par
{\bkmkstart AAAAAAACDX}
{\bkmkend AAAAAAACDX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetMouseDelta\:raylib.h}
{\xe \v raylib.h\:GetMouseDelta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Vector2} GetMouseDelta (void )}}
\par
{\bkmkstart AAAAAAACDY}
{\bkmkend AAAAAAACDY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetMousePosition\:raylib.h}
{\xe \v raylib.h\:GetMousePosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Vector2} GetMousePosition (void )}}
\par
{\bkmkstart AAAAAAACDZ}
{\bkmkend AAAAAAACDZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetMouseRay\:raylib.h}
{\xe \v raylib.h\:GetMouseRay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Ray} GetMouseRay ({\b Vector2}  {\i mousePosition}, {\b Camera}  {\i camera})}}
\par
{\bkmkstart AAAAAAACEA}
{\bkmkend AAAAAAACEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetMouseWheelMove\:raylib.h}
{\xe \v raylib.h\:GetMouseWheelMove}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} float GetMouseWheelMove (void )}}
\par
{\bkmkstart AAAAAAACEB}
{\bkmkend AAAAAAACEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetMouseX\:raylib.h}
{\xe \v raylib.h\:GetMouseX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetMouseX (void )}}
\par
{\bkmkstart AAAAAAACEC}
{\bkmkend AAAAAAACEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetMouseY\:raylib.h}
{\xe \v raylib.h\:GetMouseY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetMouseY (void )}}
\par
{\bkmkstart AAAAAAACED}
{\bkmkend AAAAAAACED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetMusicTimeLength\:raylib.h}
{\xe \v raylib.h\:GetMusicTimeLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} float GetMusicTimeLength ({\b Music}  {\i music})}}
\par
{\bkmkstart AAAAAAACEE}
{\bkmkend AAAAAAACEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetMusicTimePlayed\:raylib.h}
{\xe \v raylib.h\:GetMusicTimePlayed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} float GetMusicTimePlayed ({\b Music}  {\i music})}}
\par
{\bkmkstart AAAAAAACEF}
{\bkmkend AAAAAAACEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetPixelColor\:raylib.h}
{\xe \v raylib.h\:GetPixelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Color} GetPixelColor (void *  {\i srcPtr}, int  {\i format})}}
\par
{\bkmkstart AAAAAAACEG}
{\bkmkend AAAAAAACEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetPixelDataSize\:raylib.h}
{\xe \v raylib.h\:GetPixelDataSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetPixelDataSize (int  {\i width}, int  {\i height}, int  {\i format})}}
\par
{\bkmkstart AAAAAAACEH}
{\bkmkend AAAAAAACEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetPrevDirectoryPath\:raylib.h}
{\xe \v raylib.h\:GetPrevDirectoryPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} const char * GetPrevDirectoryPath (const char *  {\i dirPath})}}
\par
{\bkmkstart AAAAAAACEI}
{\bkmkend AAAAAAACEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetRandomValue\:raylib.h}
{\xe \v raylib.h\:GetRandomValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetRandomValue (int  {\i min}, int  {\i max})}}
\par
{\bkmkstart AAAAAAACEJ}
{\bkmkend AAAAAAACEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetRayCollisionBox\:raylib.h}
{\xe \v raylib.h\:GetRayCollisionBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b RayCollision} GetRayCollisionBox ({\b Ray}  {\i ray}, {\b BoundingBox}  {\i box})}}
\par
{\bkmkstart AAAAAAACEK}
{\bkmkend AAAAAAACEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetRayCollisionMesh\:raylib.h}
{\xe \v raylib.h\:GetRayCollisionMesh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b RayCollision} GetRayCollisionMesh ({\b Ray}  {\i ray}, {\b Mesh}  {\i mesh}, {\b Matrix}  {\i transform})}}
\par
{\bkmkstart AAAAAAACEL}
{\bkmkend AAAAAAACEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetRayCollisionQuad\:raylib.h}
{\xe \v raylib.h\:GetRayCollisionQuad}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b RayCollision} GetRayCollisionQuad ({\b Ray}  {\i ray}, {\b Vector3}  {\i p1}, {\b Vector3}  {\i p2}, {\b Vector3}  {\i p3}, {\b Vector3}  {\i p4})}}
\par
{\bkmkstart AAAAAAACEM}
{\bkmkend AAAAAAACEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetRayCollisionSphere\:raylib.h}
{\xe \v raylib.h\:GetRayCollisionSphere}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b RayCollision} GetRayCollisionSphere ({\b Ray}  {\i ray}, {\b Vector3}  {\i center}, float  {\i radius})}}
\par
{\bkmkstart AAAAAAACEN}
{\bkmkend AAAAAAACEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetRayCollisionTriangle\:raylib.h}
{\xe \v raylib.h\:GetRayCollisionTriangle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b RayCollision} GetRayCollisionTriangle ({\b Ray}  {\i ray}, {\b Vector3}  {\i p1}, {\b Vector3}  {\i p2}, {\b Vector3}  {\i p3})}}
\par
{\bkmkstart AAAAAAACEO}
{\bkmkend AAAAAAACEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetRenderHeight\:raylib.h}
{\xe \v raylib.h\:GetRenderHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetRenderHeight (void )}}
\par
{\bkmkstart AAAAAAACEP}
{\bkmkend AAAAAAACEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetRenderWidth\:raylib.h}
{\xe \v raylib.h\:GetRenderWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetRenderWidth (void )}}
\par
{\bkmkstart AAAAAAACEQ}
{\bkmkend AAAAAAACEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetScreenHeight\:raylib.h}
{\xe \v raylib.h\:GetScreenHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetScreenHeight (void )}}
\par
{\bkmkstart AAAAAAACER}
{\bkmkend AAAAAAACER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetScreenToWorld2D\:raylib.h}
{\xe \v raylib.h\:GetScreenToWorld2D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Vector2} GetScreenToWorld2D ({\b Vector2}  {\i position}, {\b Camera2D}  {\i camera})}}
\par
{\bkmkstart AAAAAAACES}
{\bkmkend AAAAAAACES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetScreenWidth\:raylib.h}
{\xe \v raylib.h\:GetScreenWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetScreenWidth (void )}}
\par
{\bkmkstart AAAAAAACET}
{\bkmkend AAAAAAACET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetShaderLocation\:raylib.h}
{\xe \v raylib.h\:GetShaderLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetShaderLocation ({\b Shader}  {\i shader}, const char *  {\i uniformName})}}
\par
{\bkmkstart AAAAAAACEU}
{\bkmkend AAAAAAACEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetShaderLocationAttrib\:raylib.h}
{\xe \v raylib.h\:GetShaderLocationAttrib}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetShaderLocationAttrib ({\b Shader}  {\i shader}, const char *  {\i attribName})}}
\par
{\bkmkstart AAAAAAACEV}
{\bkmkend AAAAAAACEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetSoundsPlaying\:raylib.h}
{\xe \v raylib.h\:GetSoundsPlaying}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetSoundsPlaying (void )}}
\par
{\bkmkstart AAAAAAACEW}
{\bkmkend AAAAAAACEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetTime\:raylib.h}
{\xe \v raylib.h\:GetTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} double GetTime (void )}}
\par
{\bkmkstart AAAAAAACEX}
{\bkmkend AAAAAAACEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetTouchPointCount\:raylib.h}
{\xe \v raylib.h\:GetTouchPointCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetTouchPointCount (void )}}
\par
{\bkmkstart AAAAAAACEY}
{\bkmkend AAAAAAACEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetTouchPointId\:raylib.h}
{\xe \v raylib.h\:GetTouchPointId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetTouchPointId (int  {\i index})}}
\par
{\bkmkstart AAAAAAACEZ}
{\bkmkend AAAAAAACEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetTouchPosition\:raylib.h}
{\xe \v raylib.h\:GetTouchPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Vector2} GetTouchPosition (int  {\i index})}}
\par
{\bkmkstart AAAAAAACFA}
{\bkmkend AAAAAAACFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetTouchX\:raylib.h}
{\xe \v raylib.h\:GetTouchX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetTouchX (void )}}
\par
{\bkmkstart AAAAAAACFB}
{\bkmkend AAAAAAACFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetTouchY\:raylib.h}
{\xe \v raylib.h\:GetTouchY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int GetTouchY (void )}}
\par
{\bkmkstart AAAAAAACFC}
{\bkmkend AAAAAAACFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetWindowHandle\:raylib.h}
{\xe \v raylib.h\:GetWindowHandle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void * GetWindowHandle (void )}}
\par
{\bkmkstart AAAAAAACFD}
{\bkmkend AAAAAAACFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetWindowPosition\:raylib.h}
{\xe \v raylib.h\:GetWindowPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Vector2} GetWindowPosition (void )}}
\par
{\bkmkstart AAAAAAACFE}
{\bkmkend AAAAAAACFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetWindowScaleDPI\:raylib.h}
{\xe \v raylib.h\:GetWindowScaleDPI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Vector2} GetWindowScaleDPI (void )}}
\par
{\bkmkstart AAAAAAACFF}
{\bkmkend AAAAAAACFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetWorkingDirectory\:raylib.h}
{\xe \v raylib.h\:GetWorkingDirectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} const char * GetWorkingDirectory (void )}}
\par
{\bkmkstart AAAAAAACFG}
{\bkmkend AAAAAAACFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetWorldToScreen\:raylib.h}
{\xe \v raylib.h\:GetWorldToScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Vector2} GetWorldToScreen ({\b Vector3}  {\i position}, {\b Camera}  {\i camera})}}
\par
{\bkmkstart AAAAAAACFH}
{\bkmkend AAAAAAACFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetWorldToScreen2D\:raylib.h}
{\xe \v raylib.h\:GetWorldToScreen2D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Vector2} GetWorldToScreen2D ({\b Vector2}  {\i position}, {\b Camera2D}  {\i camera})}}
\par
{\bkmkstart AAAAAAACFI}
{\bkmkend AAAAAAACFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetWorldToScreenEx\:raylib.h}
{\xe \v raylib.h\:GetWorldToScreenEx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Vector2} GetWorldToScreenEx ({\b Vector3}  {\i position}, {\b Camera}  {\i camera}, int  {\i width}, int  {\i height})}}
\par
{\bkmkstart AAAAAAACFJ}
{\bkmkend AAAAAAACFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v HideCursor\:raylib.h}
{\xe \v raylib.h\:HideCursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void HideCursor (void )}}
\par
{\bkmkstart AAAAAAACFK}
{\bkmkend AAAAAAACFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageAlphaClear\:raylib.h}
{\xe \v raylib.h\:ImageAlphaClear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageAlphaClear ({\b Image} *  {\i image}, {\b Color}  {\i color}, float  {\i threshold})}}
\par
{\bkmkstart AAAAAAACFL}
{\bkmkend AAAAAAACFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageAlphaCrop\:raylib.h}
{\xe \v raylib.h\:ImageAlphaCrop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageAlphaCrop ({\b Image} *  {\i image}, float  {\i threshold})}}
\par
{\bkmkstart AAAAAAACFM}
{\bkmkend AAAAAAACFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageAlphaMask\:raylib.h}
{\xe \v raylib.h\:ImageAlphaMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageAlphaMask ({\b Image} *  {\i image}, {\b Image}  {\i alphaMask})}}
\par
{\bkmkstart AAAAAAACFN}
{\bkmkend AAAAAAACFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageAlphaPremultiply\:raylib.h}
{\xe \v raylib.h\:ImageAlphaPremultiply}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageAlphaPremultiply ({\b Image} *  {\i image})}}
\par
{\bkmkstart AAAAAAACFO}
{\bkmkend AAAAAAACFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageClearBackground\:raylib.h}
{\xe \v raylib.h\:ImageClearBackground}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageClearBackground ({\b Image} *  {\i dst}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAACFP}
{\bkmkend AAAAAAACFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageColorBrightness\:raylib.h}
{\xe \v raylib.h\:ImageColorBrightness}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageColorBrightness ({\b Image} *  {\i image}, int  {\i brightness})}}
\par
{\bkmkstart AAAAAAACFQ}
{\bkmkend AAAAAAACFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageColorContrast\:raylib.h}
{\xe \v raylib.h\:ImageColorContrast}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageColorContrast ({\b Image} *  {\i image}, float  {\i contrast})}}
\par
{\bkmkstart AAAAAAACFR}
{\bkmkend AAAAAAACFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageColorGrayscale\:raylib.h}
{\xe \v raylib.h\:ImageColorGrayscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageColorGrayscale ({\b Image} *  {\i image})}}
\par
{\bkmkstart AAAAAAACFS}
{\bkmkend AAAAAAACFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageColorInvert\:raylib.h}
{\xe \v raylib.h\:ImageColorInvert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageColorInvert ({\b Image} *  {\i image})}}
\par
{\bkmkstart AAAAAAACFT}
{\bkmkend AAAAAAACFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageColorReplace\:raylib.h}
{\xe \v raylib.h\:ImageColorReplace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageColorReplace ({\b Image} *  {\i image}, {\b Color}  {\i color}, {\b Color}  {\i replace})}}
\par
{\bkmkstart AAAAAAACFU}
{\bkmkend AAAAAAACFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageColorTint\:raylib.h}
{\xe \v raylib.h\:ImageColorTint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageColorTint ({\b Image} *  {\i image}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAACFV}
{\bkmkend AAAAAAACFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageCopy\:raylib.h}
{\xe \v raylib.h\:ImageCopy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Image} ImageCopy ({\b Image}  {\i image})}}
\par
{\bkmkstart AAAAAAACFW}
{\bkmkend AAAAAAACFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageCrop\:raylib.h}
{\xe \v raylib.h\:ImageCrop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageCrop ({\b Image} *  {\i image}, {\b Rectangle}  {\i crop})}}
\par
{\bkmkstart AAAAAAACFX}
{\bkmkend AAAAAAACFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageDither\:raylib.h}
{\xe \v raylib.h\:ImageDither}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageDither ({\b Image} *  {\i image}, int  {\i rBpp}, int  {\i gBpp}, int  {\i bBpp}, int  {\i aBpp})}}
\par
{\bkmkstart AAAAAAACFY}
{\bkmkend AAAAAAACFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageDraw\:raylib.h}
{\xe \v raylib.h\:ImageDraw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageDraw ({\b Image} *  {\i dst}, {\b Image}  {\i src}, {\b Rectangle}  {\i srcRec}, {\b Rectangle}  {\i dstRec}, {\b Color}  {\i tint})}}
\par
{\bkmkstart AAAAAAACFZ}
{\bkmkend AAAAAAACFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageDrawCircle\:raylib.h}
{\xe \v raylib.h\:ImageDrawCircle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageDrawCircle ({\b Image} *  {\i dst}, int  {\i centerX}, int  {\i centerY}, int  {\i radius}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAACGA}
{\bkmkend AAAAAAACGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageDrawCircleV\:raylib.h}
{\xe \v raylib.h\:ImageDrawCircleV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageDrawCircleV ({\b Image} *  {\i dst}, {\b Vector2}  {\i center}, int  {\i radius}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAACGB}
{\bkmkend AAAAAAACGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageDrawLine\:raylib.h}
{\xe \v raylib.h\:ImageDrawLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageDrawLine ({\b Image} *  {\i dst}, int  {\i startPosX}, int  {\i startPosY}, int  {\i endPosX}, int  {\i endPosY}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAACGC}
{\bkmkend AAAAAAACGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageDrawLineV\:raylib.h}
{\xe \v raylib.h\:ImageDrawLineV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageDrawLineV ({\b Image} *  {\i dst}, {\b Vector2}  {\i start}, {\b Vector2}  {\i end}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAACGD}
{\bkmkend AAAAAAACGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageDrawPixel\:raylib.h}
{\xe \v raylib.h\:ImageDrawPixel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageDrawPixel ({\b Image} *  {\i dst}, int  {\i posX}, int  {\i posY}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAACGE}
{\bkmkend AAAAAAACGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageDrawPixelV\:raylib.h}
{\xe \v raylib.h\:ImageDrawPixelV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageDrawPixelV ({\b Image} *  {\i dst}, {\b Vector2}  {\i position}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAACGF}
{\bkmkend AAAAAAACGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageDrawRectangle\:raylib.h}
{\xe \v raylib.h\:ImageDrawRectangle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageDrawRectangle ({\b Image} *  {\i dst}, int  {\i posX}, int  {\i posY}, int  {\i width}, int  {\i height}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAACGG}
{\bkmkend AAAAAAACGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageDrawRectangleLines\:raylib.h}
{\xe \v raylib.h\:ImageDrawRectangleLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageDrawRectangleLines ({\b Image} *  {\i dst}, {\b Rectangle}  {\i rec}, int  {\i thick}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAACGH}
{\bkmkend AAAAAAACGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageDrawRectangleRec\:raylib.h}
{\xe \v raylib.h\:ImageDrawRectangleRec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageDrawRectangleRec ({\b Image} *  {\i dst}, {\b Rectangle}  {\i rec}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAACGI}
{\bkmkend AAAAAAACGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageDrawRectangleV\:raylib.h}
{\xe \v raylib.h\:ImageDrawRectangleV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageDrawRectangleV ({\b Image} *  {\i dst}, {\b Vector2}  {\i position}, {\b Vector2}  {\i size}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAACGJ}
{\bkmkend AAAAAAACGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageDrawText\:raylib.h}
{\xe \v raylib.h\:ImageDrawText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageDrawText ({\b Image} *  {\i dst}, const char *  {\i text}, int  {\i posX}, int  {\i posY}, int  {\i fontSize}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAACGK}
{\bkmkend AAAAAAACGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageDrawTextEx\:raylib.h}
{\xe \v raylib.h\:ImageDrawTextEx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageDrawTextEx ({\b Image} *  {\i dst}, {\b Font}  {\i font}, const char *  {\i text}, {\b Vector2}  {\i position}, float  {\i fontSize}, float  {\i spacing}, {\b Color}  {\i tint})}}
\par
{\bkmkstart AAAAAAACGL}
{\bkmkend AAAAAAACGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageFlipHorizontal\:raylib.h}
{\xe \v raylib.h\:ImageFlipHorizontal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageFlipHorizontal ({\b Image} *  {\i image})}}
\par
{\bkmkstart AAAAAAACGM}
{\bkmkend AAAAAAACGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageFlipVertical\:raylib.h}
{\xe \v raylib.h\:ImageFlipVertical}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageFlipVertical ({\b Image} *  {\i image})}}
\par
{\bkmkstart AAAAAAACGN}
{\bkmkend AAAAAAACGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageFormat\:raylib.h}
{\xe \v raylib.h\:ImageFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageFormat ({\b Image} *  {\i image}, int  {\i newFormat})}}
\par
{\bkmkstart AAAAAAACGO}
{\bkmkend AAAAAAACGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageFromImage\:raylib.h}
{\xe \v raylib.h\:ImageFromImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Image} ImageFromImage ({\b Image}  {\i image}, {\b Rectangle}  {\i rec})}}
\par
{\bkmkstart AAAAAAACGP}
{\bkmkend AAAAAAACGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageMipmaps\:raylib.h}
{\xe \v raylib.h\:ImageMipmaps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageMipmaps ({\b Image} *  {\i image})}}
\par
{\bkmkstart AAAAAAACGQ}
{\bkmkend AAAAAAACGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageResize\:raylib.h}
{\xe \v raylib.h\:ImageResize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageResize ({\b Image} *  {\i image}, int  {\i newWidth}, int  {\i newHeight})}}
\par
{\bkmkstart AAAAAAACGR}
{\bkmkend AAAAAAACGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageResizeCanvas\:raylib.h}
{\xe \v raylib.h\:ImageResizeCanvas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageResizeCanvas ({\b Image} *  {\i image}, int  {\i newWidth}, int  {\i newHeight}, int  {\i offsetX}, int  {\i offsetY}, {\b Color}  {\i fill})}}
\par
{\bkmkstart AAAAAAACGS}
{\bkmkend AAAAAAACGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageResizeNN\:raylib.h}
{\xe \v raylib.h\:ImageResizeNN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageResizeNN ({\b Image} *  {\i image}, int  {\i newWidth}, int  {\i newHeight})}}
\par
{\bkmkstart AAAAAAACGT}
{\bkmkend AAAAAAACGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageRotateCCW\:raylib.h}
{\xe \v raylib.h\:ImageRotateCCW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageRotateCCW ({\b Image} *  {\i image})}}
\par
{\bkmkstart AAAAAAACGU}
{\bkmkend AAAAAAACGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageRotateCW\:raylib.h}
{\xe \v raylib.h\:ImageRotateCW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageRotateCW ({\b Image} *  {\i image})}}
\par
{\bkmkstart AAAAAAACGV}
{\bkmkend AAAAAAACGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageText\:raylib.h}
{\xe \v raylib.h\:ImageText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Image} ImageText (const char *  {\i text}, int  {\i fontSize}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAACGW}
{\bkmkend AAAAAAACGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageTextEx\:raylib.h}
{\xe \v raylib.h\:ImageTextEx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Image} ImageTextEx ({\b Font}  {\i font}, const char *  {\i text}, float  {\i fontSize}, float  {\i spacing}, {\b Color}  {\i tint})}}
\par
{\bkmkstart AAAAAAACGX}
{\bkmkend AAAAAAACGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImageToPOT\:raylib.h}
{\xe \v raylib.h\:ImageToPOT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ImageToPOT ({\b Image} *  {\i image}, {\b Color}  {\i fill})}}
\par
{\bkmkstart AAAAAAACGY}
{\bkmkend AAAAAAACGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v InitAudioDevice\:raylib.h}
{\xe \v raylib.h\:InitAudioDevice}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void InitAudioDevice (void )}}
\par
{\bkmkstart AAAAAAACGZ}
{\bkmkend AAAAAAACGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v InitWindow\:raylib.h}
{\xe \v raylib.h\:InitWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void InitWindow (int  {\i width}, int  {\i height}, const char *  {\i title})}}
\par
{\bkmkstart AAAAAAACHA}
{\bkmkend AAAAAAACHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsAudioDeviceReady\:raylib.h}
{\xe \v raylib.h\:IsAudioDeviceReady}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsAudioDeviceReady (void )}}
\par
{\bkmkstart AAAAAAACHB}
{\bkmkend AAAAAAACHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsAudioStreamPlaying\:raylib.h}
{\xe \v raylib.h\:IsAudioStreamPlaying}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsAudioStreamPlaying ({\b AudioStream}  {\i stream})}}
\par
{\bkmkstart AAAAAAACHC}
{\bkmkend AAAAAAACHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsAudioStreamProcessed\:raylib.h}
{\xe \v raylib.h\:IsAudioStreamProcessed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsAudioStreamProcessed ({\b AudioStream}  {\i stream})}}
\par
{\bkmkstart AAAAAAACHD}
{\bkmkend AAAAAAACHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsCursorHidden\:raylib.h}
{\xe \v raylib.h\:IsCursorHidden}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsCursorHidden (void )}}
\par
{\bkmkstart AAAAAAACHE}
{\bkmkend AAAAAAACHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsCursorOnScreen\:raylib.h}
{\xe \v raylib.h\:IsCursorOnScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsCursorOnScreen (void )}}
\par
{\bkmkstart AAAAAAACHF}
{\bkmkend AAAAAAACHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsFileDropped\:raylib.h}
{\xe \v raylib.h\:IsFileDropped}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsFileDropped (void )}}
\par
{\bkmkstart AAAAAAACHG}
{\bkmkend AAAAAAACHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsFileExtension\:raylib.h}
{\xe \v raylib.h\:IsFileExtension}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsFileExtension (const char *  {\i fileName}, const char *  {\i ext})}}
\par
{\bkmkstart AAAAAAACHH}
{\bkmkend AAAAAAACHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsGamepadAvailable\:raylib.h}
{\xe \v raylib.h\:IsGamepadAvailable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsGamepadAvailable (int  {\i gamepad})}}
\par
{\bkmkstart AAAAAAACHI}
{\bkmkend AAAAAAACHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsGamepadButtonDown\:raylib.h}
{\xe \v raylib.h\:IsGamepadButtonDown}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsGamepadButtonDown (int  {\i gamepad}, int  {\i button})}}
\par
{\bkmkstart AAAAAAACHJ}
{\bkmkend AAAAAAACHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsGamepadButtonPressed\:raylib.h}
{\xe \v raylib.h\:IsGamepadButtonPressed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsGamepadButtonPressed (int  {\i gamepad}, int  {\i button})}}
\par
{\bkmkstart AAAAAAACHK}
{\bkmkend AAAAAAACHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsGamepadButtonReleased\:raylib.h}
{\xe \v raylib.h\:IsGamepadButtonReleased}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsGamepadButtonReleased (int  {\i gamepad}, int  {\i button})}}
\par
{\bkmkstart AAAAAAACHL}
{\bkmkend AAAAAAACHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsGamepadButtonUp\:raylib.h}
{\xe \v raylib.h\:IsGamepadButtonUp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsGamepadButtonUp (int  {\i gamepad}, int  {\i button})}}
\par
{\bkmkstart AAAAAAACHM}
{\bkmkend AAAAAAACHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsGestureDetected\:raylib.h}
{\xe \v raylib.h\:IsGestureDetected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsGestureDetected (int  {\i gesture})}}
\par
{\bkmkstart AAAAAAACHN}
{\bkmkend AAAAAAACHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsKeyDown\:raylib.h}
{\xe \v raylib.h\:IsKeyDown}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsKeyDown (int  {\i key})}}
\par
{\bkmkstart AAAAAAACHO}
{\bkmkend AAAAAAACHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsKeyPressed\:raylib.h}
{\xe \v raylib.h\:IsKeyPressed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsKeyPressed (int  {\i key})}}
\par
{\bkmkstart AAAAAAACHP}
{\bkmkend AAAAAAACHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsKeyReleased\:raylib.h}
{\xe \v raylib.h\:IsKeyReleased}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsKeyReleased (int  {\i key})}}
\par
{\bkmkstart AAAAAAACHQ}
{\bkmkend AAAAAAACHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsKeyUp\:raylib.h}
{\xe \v raylib.h\:IsKeyUp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsKeyUp (int  {\i key})}}
\par
{\bkmkstart AAAAAAACHR}
{\bkmkend AAAAAAACHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsModelAnimationValid\:raylib.h}
{\xe \v raylib.h\:IsModelAnimationValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsModelAnimationValid ({\b Model}  {\i model}, {\b ModelAnimation}  {\i anim})}}
\par
{\bkmkstart AAAAAAACHS}
{\bkmkend AAAAAAACHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsMouseButtonDown\:raylib.h}
{\xe \v raylib.h\:IsMouseButtonDown}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsMouseButtonDown (int  {\i button})}}
\par
{\bkmkstart AAAAAAACHT}
{\bkmkend AAAAAAACHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsMouseButtonPressed\:raylib.h}
{\xe \v raylib.h\:IsMouseButtonPressed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsMouseButtonPressed (int  {\i button})}}
\par
{\bkmkstart AAAAAAACHU}
{\bkmkend AAAAAAACHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsMouseButtonReleased\:raylib.h}
{\xe \v raylib.h\:IsMouseButtonReleased}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsMouseButtonReleased (int  {\i button})}}
\par
{\bkmkstart AAAAAAACHV}
{\bkmkend AAAAAAACHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsMouseButtonUp\:raylib.h}
{\xe \v raylib.h\:IsMouseButtonUp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsMouseButtonUp (int  {\i button})}}
\par
{\bkmkstart AAAAAAACHW}
{\bkmkend AAAAAAACHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsMusicStreamPlaying\:raylib.h}
{\xe \v raylib.h\:IsMusicStreamPlaying}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsMusicStreamPlaying ({\b Music}  {\i music})}}
\par
{\bkmkstart AAAAAAACHX}
{\bkmkend AAAAAAACHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsSoundPlaying\:raylib.h}
{\xe \v raylib.h\:IsSoundPlaying}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsSoundPlaying ({\b Sound}  {\i sound})}}
\par
{\bkmkstart AAAAAAACHY}
{\bkmkend AAAAAAACHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsWindowFocused\:raylib.h}
{\xe \v raylib.h\:IsWindowFocused}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsWindowFocused (void )}}
\par
{\bkmkstart AAAAAAACHZ}
{\bkmkend AAAAAAACHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsWindowFullscreen\:raylib.h}
{\xe \v raylib.h\:IsWindowFullscreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsWindowFullscreen (void )}}
\par
{\bkmkstart AAAAAAACIA}
{\bkmkend AAAAAAACIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsWindowHidden\:raylib.h}
{\xe \v raylib.h\:IsWindowHidden}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsWindowHidden (void )}}
\par
{\bkmkstart AAAAAAACIB}
{\bkmkend AAAAAAACIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsWindowMaximized\:raylib.h}
{\xe \v raylib.h\:IsWindowMaximized}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsWindowMaximized (void )}}
\par
{\bkmkstart AAAAAAACIC}
{\bkmkend AAAAAAACIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsWindowMinimized\:raylib.h}
{\xe \v raylib.h\:IsWindowMinimized}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsWindowMinimized (void )}}
\par
{\bkmkstart AAAAAAACID}
{\bkmkend AAAAAAACID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsWindowReady\:raylib.h}
{\xe \v raylib.h\:IsWindowReady}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsWindowReady (void )}}
\par
{\bkmkstart AAAAAAACIE}
{\bkmkend AAAAAAACIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsWindowResized\:raylib.h}
{\xe \v raylib.h\:IsWindowResized}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsWindowResized (void )}}
\par
{\bkmkstart AAAAAAACIF}
{\bkmkend AAAAAAACIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsWindowState\:raylib.h}
{\xe \v raylib.h\:IsWindowState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} IsWindowState (unsigned int  {\i flag})}}
\par
{\bkmkstart AAAAAAACIG}
{\bkmkend AAAAAAACIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadAudioStream\:raylib.h}
{\xe \v raylib.h\:LoadAudioStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b AudioStream} LoadAudioStream (unsigned int  {\i sampleRate}, unsigned int  {\i sampleSize}, unsigned int  {\i channels})}}
\par
{\bkmkstart AAAAAAACIH}
{\bkmkend AAAAAAACIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadCodepoints\:raylib.h}
{\xe \v raylib.h\:LoadCodepoints}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int * LoadCodepoints (const char *  {\i text}, int *  {\i count})}}
\par
{\bkmkstart AAAAAAACII}
{\bkmkend AAAAAAACII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadFileData\:raylib.h}
{\xe \v raylib.h\:LoadFileData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} unsigned char * LoadFileData (const char *  {\i fileName}, unsigned int *  {\i bytesRead})}}
\par
{\bkmkstart AAAAAAACIJ}
{\bkmkend AAAAAAACIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadFileText\:raylib.h}
{\xe \v raylib.h\:LoadFileText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} char * LoadFileText (const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAACIK}
{\bkmkend AAAAAAACIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadFont\:raylib.h}
{\xe \v raylib.h\:LoadFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Font} LoadFont (const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAACIL}
{\bkmkend AAAAAAACIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadFontData\:raylib.h}
{\xe \v raylib.h\:LoadFontData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b GlyphInfo} * LoadFontData (const unsigned char *  {\i fileData}, int  {\i dataSize}, int  {\i fontSize}, int *  {\i fontChars}, int  {\i glyphCount}, int  {\i type})}}
\par
{\bkmkstart AAAAAAACIM}
{\bkmkend AAAAAAACIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadFontEx\:raylib.h}
{\xe \v raylib.h\:LoadFontEx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Font} LoadFontEx (const char *  {\i fileName}, int  {\i fontSize}, int *  {\i fontChars}, int  {\i glyphCount})}}
\par
{\bkmkstart AAAAAAACIN}
{\bkmkend AAAAAAACIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadFontFromImage\:raylib.h}
{\xe \v raylib.h\:LoadFontFromImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Font} LoadFontFromImage ({\b Image}  {\i image}, {\b Color}  {\i key}, int  {\i firstChar})}}
\par
{\bkmkstart AAAAAAACIO}
{\bkmkend AAAAAAACIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadFontFromMemory\:raylib.h}
{\xe \v raylib.h\:LoadFontFromMemory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Font} LoadFontFromMemory (const char *  {\i fileType}, const unsigned char *  {\i fileData}, int  {\i dataSize}, int  {\i fontSize}, int *  {\i fontChars}, int  {\i glyphCount})}}
\par
{\bkmkstart AAAAAAACIP}
{\bkmkend AAAAAAACIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadImage\:raylib.h}
{\xe \v raylib.h\:LoadImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Image} LoadImage (const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAACIQ}
{\bkmkend AAAAAAACIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadImageAnim\:raylib.h}
{\xe \v raylib.h\:LoadImageAnim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Image} LoadImageAnim (const char *  {\i fileName}, int *  {\i frames})}}
\par
{\bkmkstart AAAAAAACIR}
{\bkmkend AAAAAAACIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadImageColors\:raylib.h}
{\xe \v raylib.h\:LoadImageColors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Color} * LoadImageColors ({\b Image}  {\i image})}}
\par
{\bkmkstart AAAAAAACIS}
{\bkmkend AAAAAAACIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadImageFromMemory\:raylib.h}
{\xe \v raylib.h\:LoadImageFromMemory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Image} LoadImageFromMemory (const char *  {\i fileType}, const unsigned char *  {\i fileData}, int  {\i dataSize})}}
\par
{\bkmkstart AAAAAAACIT}
{\bkmkend AAAAAAACIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadImageFromScreen\:raylib.h}
{\xe \v raylib.h\:LoadImageFromScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Image} LoadImageFromScreen (void )}}
\par
{\bkmkstart AAAAAAACIU}
{\bkmkend AAAAAAACIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadImageFromTexture\:raylib.h}
{\xe \v raylib.h\:LoadImageFromTexture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Image} LoadImageFromTexture ({\b Texture2D}  {\i texture})}}
\par
{\bkmkstart AAAAAAACIV}
{\bkmkend AAAAAAACIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadImagePalette\:raylib.h}
{\xe \v raylib.h\:LoadImagePalette}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Color} * LoadImagePalette ({\b Image}  {\i image}, int  {\i maxPaletteSize}, int *  {\i colorCount})}}
\par
{\bkmkstart AAAAAAACIW}
{\bkmkend AAAAAAACIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadImageRaw\:raylib.h}
{\xe \v raylib.h\:LoadImageRaw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Image} LoadImageRaw (const char *  {\i fileName}, int  {\i width}, int  {\i height}, int  {\i format}, int  {\i headerSize})}}
\par
{\bkmkstart AAAAAAACIX}
{\bkmkend AAAAAAACIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadMaterialDefault\:raylib.h}
{\xe \v raylib.h\:LoadMaterialDefault}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Material} LoadMaterialDefault (void )}}
\par
{\bkmkstart AAAAAAACIY}
{\bkmkend AAAAAAACIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadMaterials\:raylib.h}
{\xe \v raylib.h\:LoadMaterials}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Material} * LoadMaterials (const char *  {\i fileName}, int *  {\i materialCount})}}
\par
{\bkmkstart AAAAAAACIZ}
{\bkmkend AAAAAAACIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadModel\:raylib.h}
{\xe \v raylib.h\:LoadModel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Model} LoadModel (const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAACJA}
{\bkmkend AAAAAAACJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadModelAnimations\:raylib.h}
{\xe \v raylib.h\:LoadModelAnimations}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b ModelAnimation} * LoadModelAnimations (const char *  {\i fileName}, unsigned int *  {\i animCount})}}
\par
{\bkmkstart AAAAAAACJB}
{\bkmkend AAAAAAACJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadModelFromMesh\:raylib.h}
{\xe \v raylib.h\:LoadModelFromMesh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Model} LoadModelFromMesh ({\b Mesh}  {\i mesh})}}
\par
{\bkmkstart AAAAAAACJC}
{\bkmkend AAAAAAACJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadMusicStream\:raylib.h}
{\xe \v raylib.h\:LoadMusicStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Music} LoadMusicStream (const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAACJD}
{\bkmkend AAAAAAACJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadMusicStreamFromMemory\:raylib.h}
{\xe \v raylib.h\:LoadMusicStreamFromMemory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Music} LoadMusicStreamFromMemory (const char *  {\i fileType}, const unsigned char *  {\i data}, int  {\i dataSize})}}
\par
{\bkmkstart AAAAAAACJE}
{\bkmkend AAAAAAACJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadRenderTexture\:raylib.h}
{\xe \v raylib.h\:LoadRenderTexture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b RenderTexture2D} LoadRenderTexture (int  {\i width}, int  {\i height})}}
\par
{\bkmkstart AAAAAAACJF}
{\bkmkend AAAAAAACJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadShader\:raylib.h}
{\xe \v raylib.h\:LoadShader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Shader} LoadShader (const char *  {\i vsFileName}, const char *  {\i fsFileName})}}
\par
{\bkmkstart AAAAAAACJG}
{\bkmkend AAAAAAACJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadShaderFromMemory\:raylib.h}
{\xe \v raylib.h\:LoadShaderFromMemory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Shader} LoadShaderFromMemory (const char *  {\i vsCode}, const char *  {\i fsCode})}}
\par
{\bkmkstart AAAAAAACJH}
{\bkmkend AAAAAAACJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadSound\:raylib.h}
{\xe \v raylib.h\:LoadSound}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Sound} LoadSound (const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAACJI}
{\bkmkend AAAAAAACJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadSoundFromWave\:raylib.h}
{\xe \v raylib.h\:LoadSoundFromWave}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Sound} LoadSoundFromWave ({\b Wave}  {\i wave})}}
\par
{\bkmkstart AAAAAAACJJ}
{\bkmkend AAAAAAACJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadStorageValue\:raylib.h}
{\xe \v raylib.h\:LoadStorageValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int LoadStorageValue (unsigned int  {\i position})}}
\par
{\bkmkstart AAAAAAACJK}
{\bkmkend AAAAAAACJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadTexture\:raylib.h}
{\xe \v raylib.h\:LoadTexture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Texture2D} LoadTexture (const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAACJL}
{\bkmkend AAAAAAACJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadTextureCubemap\:raylib.h}
{\xe \v raylib.h\:LoadTextureCubemap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b TextureCubemap} LoadTextureCubemap ({\b Image}  {\i image}, int  {\i layout})}}
\par
{\bkmkstart AAAAAAACJM}
{\bkmkend AAAAAAACJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadTextureFromImage\:raylib.h}
{\xe \v raylib.h\:LoadTextureFromImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Texture2D} LoadTextureFromImage ({\b Image}  {\i image})}}
\par
{\bkmkstart AAAAAAACJN}
{\bkmkend AAAAAAACJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadVrStereoConfig\:raylib.h}
{\xe \v raylib.h\:LoadVrStereoConfig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b VrStereoConfig} LoadVrStereoConfig ({\b VrDeviceInfo}  {\i device})}}
\par
{\bkmkstart AAAAAAACJO}
{\bkmkend AAAAAAACJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadWave\:raylib.h}
{\xe \v raylib.h\:LoadWave}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Wave} LoadWave (const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAACJP}
{\bkmkend AAAAAAACJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadWaveFromMemory\:raylib.h}
{\xe \v raylib.h\:LoadWaveFromMemory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Wave} LoadWaveFromMemory (const char *  {\i fileType}, const unsigned char *  {\i fileData}, int  {\i dataSize})}}
\par
{\bkmkstart AAAAAAACJQ}
{\bkmkend AAAAAAACJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadWaveSamples\:raylib.h}
{\xe \v raylib.h\:LoadWaveSamples}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} float * LoadWaveSamples ({\b Wave}  {\i wave})}}
\par
{\bkmkstart AAAAAAACJR}
{\bkmkend AAAAAAACJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MaximizeWindow\:raylib.h}
{\xe \v raylib.h\:MaximizeWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void MaximizeWindow (void )}}
\par
{\bkmkstart AAAAAAACJS}
{\bkmkend AAAAAAACJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MeasureText\:raylib.h}
{\xe \v raylib.h\:MeasureText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int MeasureText (const char *  {\i text}, int  {\i fontSize})}}
\par
{\bkmkstart AAAAAAACJT}
{\bkmkend AAAAAAACJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MeasureTextEx\:raylib.h}
{\xe \v raylib.h\:MeasureTextEx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Vector2} MeasureTextEx ({\b Font}  {\i font}, const char *  {\i text}, float  {\i fontSize}, float  {\i spacing})}}
\par
{\bkmkstart AAAAAAACJU}
{\bkmkend AAAAAAACJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MemAlloc\:raylib.h}
{\xe \v raylib.h\:MemAlloc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void * MemAlloc (int  {\i size})}}
\par
{\bkmkstart AAAAAAACJV}
{\bkmkend AAAAAAACJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MemFree\:raylib.h}
{\xe \v raylib.h\:MemFree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void MemFree (void *  {\i ptr})}}
\par
{\bkmkstart AAAAAAACJW}
{\bkmkend AAAAAAACJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MemRealloc\:raylib.h}
{\xe \v raylib.h\:MemRealloc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void * MemRealloc (void *  {\i ptr}, int  {\i size})}}
\par
{\bkmkstart AAAAAAACJX}
{\bkmkend AAAAAAACJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MinimizeWindow\:raylib.h}
{\xe \v raylib.h\:MinimizeWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void MinimizeWindow (void )}}
\par
{\bkmkstart AAAAAAACJY}
{\bkmkend AAAAAAACJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v OpenURL\:raylib.h}
{\xe \v raylib.h\:OpenURL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void OpenURL (const char *  {\i url})}}
\par
{\bkmkstart AAAAAAACJZ}
{\bkmkend AAAAAAACJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PauseAudioStream\:raylib.h}
{\xe \v raylib.h\:PauseAudioStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void PauseAudioStream ({\b AudioStream}  {\i stream})}}
\par
{\bkmkstart AAAAAAACKA}
{\bkmkend AAAAAAACKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PauseMusicStream\:raylib.h}
{\xe \v raylib.h\:PauseMusicStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void PauseMusicStream ({\b Music}  {\i music})}}
\par
{\bkmkstart AAAAAAACKB}
{\bkmkend AAAAAAACKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PauseSound\:raylib.h}
{\xe \v raylib.h\:PauseSound}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void PauseSound ({\b Sound}  {\i sound})}}
\par
{\bkmkstart AAAAAAACKC}
{\bkmkend AAAAAAACKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PlayAudioStream\:raylib.h}
{\xe \v raylib.h\:PlayAudioStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void PlayAudioStream ({\b AudioStream}  {\i stream})}}
\par
{\bkmkstart AAAAAAACKD}
{\bkmkend AAAAAAACKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PlayMusicStream\:raylib.h}
{\xe \v raylib.h\:PlayMusicStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void PlayMusicStream ({\b Music}  {\i music})}}
\par
{\bkmkstart AAAAAAACKE}
{\bkmkend AAAAAAACKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PlaySound\:raylib.h}
{\xe \v raylib.h\:PlaySound}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void PlaySound ({\b Sound}  {\i sound})}}
\par
{\bkmkstart AAAAAAACKF}
{\bkmkend AAAAAAACKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PlaySoundMulti\:raylib.h}
{\xe \v raylib.h\:PlaySoundMulti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void PlaySoundMulti ({\b Sound}  {\i sound})}}
\par
{\bkmkstart AAAAAAACKG}
{\bkmkend AAAAAAACKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PollInputEvents\:raylib.h}
{\xe \v raylib.h\:PollInputEvents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void PollInputEvents (void )}}
\par
{\bkmkstart AAAAAAACKH}
{\bkmkend AAAAAAACKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RestoreWindow\:raylib.h}
{\xe \v raylib.h\:RestoreWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void RestoreWindow (void )}}
\par
{\bkmkstart AAAAAAACKI}
{\bkmkend AAAAAAACKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ResumeAudioStream\:raylib.h}
{\xe \v raylib.h\:ResumeAudioStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ResumeAudioStream ({\b AudioStream}  {\i stream})}}
\par
{\bkmkstart AAAAAAACKJ}
{\bkmkend AAAAAAACKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ResumeMusicStream\:raylib.h}
{\xe \v raylib.h\:ResumeMusicStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ResumeMusicStream ({\b Music}  {\i music})}}
\par
{\bkmkstart AAAAAAACKK}
{\bkmkend AAAAAAACKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ResumeSound\:raylib.h}
{\xe \v raylib.h\:ResumeSound}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ResumeSound ({\b Sound}  {\i sound})}}
\par
{\bkmkstart AAAAAAACKL}
{\bkmkend AAAAAAACKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SaveFileData\:raylib.h}
{\xe \v raylib.h\:SaveFileData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} SaveFileData (const char *  {\i fileName}, void *  {\i data}, unsigned int  {\i bytesToWrite})}}
\par
{\bkmkstart AAAAAAACKM}
{\bkmkend AAAAAAACKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SaveFileText\:raylib.h}
{\xe \v raylib.h\:SaveFileText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} SaveFileText (const char *  {\i fileName}, char *  {\i text})}}
\par
{\bkmkstart AAAAAAACKN}
{\bkmkend AAAAAAACKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SaveStorageValue\:raylib.h}
{\xe \v raylib.h\:SaveStorageValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} SaveStorageValue (unsigned int  {\i position}, int  {\i value})}}
\par
{\bkmkstart AAAAAAACKO}
{\bkmkend AAAAAAACKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SeekMusicStream\:raylib.h}
{\xe \v raylib.h\:SeekMusicStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SeekMusicStream ({\b Music}  {\i music}, float  {\i position})}}
\par
{\bkmkstart AAAAAAACKP}
{\bkmkend AAAAAAACKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetAudioStreamBufferSizeDefault\:raylib.h}
{\xe \v raylib.h\:SetAudioStreamBufferSizeDefault}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetAudioStreamBufferSizeDefault (int  {\i size})}}
\par
{\bkmkstart AAAAAAACKQ}
{\bkmkend AAAAAAACKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetAudioStreamCallback\:raylib.h}
{\xe \v raylib.h\:SetAudioStreamCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetAudioStreamCallback ({\b AudioStream}  {\i stream}, {\b AudioCallback}  {\i callback})}}
\par
{\bkmkstart AAAAAAACKR}
{\bkmkend AAAAAAACKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetAudioStreamPan\:raylib.h}
{\xe \v raylib.h\:SetAudioStreamPan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetAudioStreamPan ({\b AudioStream}  {\i stream}, float  {\i pan})}}
\par
{\bkmkstart AAAAAAACKS}
{\bkmkend AAAAAAACKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetAudioStreamPitch\:raylib.h}
{\xe \v raylib.h\:SetAudioStreamPitch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetAudioStreamPitch ({\b AudioStream}  {\i stream}, float  {\i pitch})}}
\par
{\bkmkstart AAAAAAACKT}
{\bkmkend AAAAAAACKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetAudioStreamVolume\:raylib.h}
{\xe \v raylib.h\:SetAudioStreamVolume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetAudioStreamVolume ({\b AudioStream}  {\i stream}, float  {\i volume})}}
\par
{\bkmkstart AAAAAAACKU}
{\bkmkend AAAAAAACKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetCameraAltControl\:raylib.h}
{\xe \v raylib.h\:SetCameraAltControl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetCameraAltControl (int  {\i keyAlt})}}
\par
{\bkmkstart AAAAAAACKV}
{\bkmkend AAAAAAACKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetCameraMode\:raylib.h}
{\xe \v raylib.h\:SetCameraMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetCameraMode ({\b Camera}  {\i camera}, int  {\i mode})}}
\par
{\bkmkstart AAAAAAACKW}
{\bkmkend AAAAAAACKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetCameraMoveControls\:raylib.h}
{\xe \v raylib.h\:SetCameraMoveControls}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetCameraMoveControls (int  {\i keyFront}, int  {\i keyBack}, int  {\i keyRight}, int  {\i keyLeft}, int  {\i keyUp}, int  {\i keyDown})}}
\par
{\bkmkstart AAAAAAACKX}
{\bkmkend AAAAAAACKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetCameraPanControl\:raylib.h}
{\xe \v raylib.h\:SetCameraPanControl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetCameraPanControl (int  {\i keyPan})}}
\par
{\bkmkstart AAAAAAACKY}
{\bkmkend AAAAAAACKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetCameraSmoothZoomControl\:raylib.h}
{\xe \v raylib.h\:SetCameraSmoothZoomControl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetCameraSmoothZoomControl (int  {\i keySmoothZoom})}}
\par
{\bkmkstart AAAAAAACKZ}
{\bkmkend AAAAAAACKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetClipboardText\:raylib.h}
{\xe \v raylib.h\:SetClipboardText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetClipboardText (const char *  {\i text})}}
\par
{\bkmkstart AAAAAAACLA}
{\bkmkend AAAAAAACLA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetConfigFlags\:raylib.h}
{\xe \v raylib.h\:SetConfigFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetConfigFlags (unsigned int  {\i flags})}}
\par
{\bkmkstart AAAAAAACLB}
{\bkmkend AAAAAAACLB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetExitKey\:raylib.h}
{\xe \v raylib.h\:SetExitKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetExitKey (int  {\i key})}}
\par
{\bkmkstart AAAAAAACLC}
{\bkmkend AAAAAAACLC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetGamepadMappings\:raylib.h}
{\xe \v raylib.h\:SetGamepadMappings}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int SetGamepadMappings (const char *  {\i mappings})}}
\par
{\bkmkstart AAAAAAACLD}
{\bkmkend AAAAAAACLD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetGesturesEnabled\:raylib.h}
{\xe \v raylib.h\:SetGesturesEnabled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetGesturesEnabled (unsigned int  {\i flags})}}
\par
{\bkmkstart AAAAAAACLE}
{\bkmkend AAAAAAACLE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetLoadFileDataCallback\:raylib.h}
{\xe \v raylib.h\:SetLoadFileDataCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetLoadFileDataCallback ({\b LoadFileDataCallback}  {\i callback})}}
\par
{\bkmkstart AAAAAAACLF}
{\bkmkend AAAAAAACLF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetLoadFileTextCallback\:raylib.h}
{\xe \v raylib.h\:SetLoadFileTextCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetLoadFileTextCallback ({\b LoadFileTextCallback}  {\i callback})}}
\par
{\bkmkstart AAAAAAACLG}
{\bkmkend AAAAAAACLG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetMasterVolume\:raylib.h}
{\xe \v raylib.h\:SetMasterVolume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetMasterVolume (float  {\i volume})}}
\par
{\bkmkstart AAAAAAACLH}
{\bkmkend AAAAAAACLH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetMaterialTexture\:raylib.h}
{\xe \v raylib.h\:SetMaterialTexture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetMaterialTexture ({\b Material} *  {\i material}, int  {\i mapType}, {\b Texture2D}  {\i texture})}}
\par
{\bkmkstart AAAAAAACLI}
{\bkmkend AAAAAAACLI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetModelMeshMaterial\:raylib.h}
{\xe \v raylib.h\:SetModelMeshMaterial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetModelMeshMaterial ({\b Model} *  {\i model}, int  {\i meshId}, int  {\i materialId})}}
\par
{\bkmkstart AAAAAAACLJ}
{\bkmkend AAAAAAACLJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetMouseCursor\:raylib.h}
{\xe \v raylib.h\:SetMouseCursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetMouseCursor (int  {\i cursor})}}
\par
{\bkmkstart AAAAAAACLK}
{\bkmkend AAAAAAACLK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetMouseOffset\:raylib.h}
{\xe \v raylib.h\:SetMouseOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetMouseOffset (int  {\i offsetX}, int  {\i offsetY})}}
\par
{\bkmkstart AAAAAAACLL}
{\bkmkend AAAAAAACLL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetMousePosition\:raylib.h}
{\xe \v raylib.h\:SetMousePosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetMousePosition (int  {\i x}, int  {\i y})}}
\par
{\bkmkstart AAAAAAACLM}
{\bkmkend AAAAAAACLM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetMouseScale\:raylib.h}
{\xe \v raylib.h\:SetMouseScale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetMouseScale (float  {\i scaleX}, float  {\i scaleY})}}
\par
{\bkmkstart AAAAAAACLN}
{\bkmkend AAAAAAACLN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetMusicPan\:raylib.h}
{\xe \v raylib.h\:SetMusicPan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetMusicPan ({\b Music}  {\i music}, float  {\i pan})}}
\par
{\bkmkstart AAAAAAACLO}
{\bkmkend AAAAAAACLO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetMusicPitch\:raylib.h}
{\xe \v raylib.h\:SetMusicPitch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetMusicPitch ({\b Music}  {\i music}, float  {\i pitch})}}
\par
{\bkmkstart AAAAAAACLP}
{\bkmkend AAAAAAACLP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetMusicVolume\:raylib.h}
{\xe \v raylib.h\:SetMusicVolume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetMusicVolume ({\b Music}  {\i music}, float  {\i volume})}}
\par
{\bkmkstart AAAAAAACLQ}
{\bkmkend AAAAAAACLQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetPixelColor\:raylib.h}
{\xe \v raylib.h\:SetPixelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetPixelColor (void *  {\i dstPtr}, {\b Color}  {\i color}, int  {\i format})}}
\par
{\bkmkstart AAAAAAACLR}
{\bkmkend AAAAAAACLR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetRandomSeed\:raylib.h}
{\xe \v raylib.h\:SetRandomSeed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetRandomSeed (unsigned int  {\i seed})}}
\par
{\bkmkstart AAAAAAACLS}
{\bkmkend AAAAAAACLS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetSaveFileDataCallback\:raylib.h}
{\xe \v raylib.h\:SetSaveFileDataCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetSaveFileDataCallback ({\b SaveFileDataCallback}  {\i callback})}}
\par
{\bkmkstart AAAAAAACLT}
{\bkmkend AAAAAAACLT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetSaveFileTextCallback\:raylib.h}
{\xe \v raylib.h\:SetSaveFileTextCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetSaveFileTextCallback ({\b SaveFileTextCallback}  {\i callback})}}
\par
{\bkmkstart AAAAAAACLU}
{\bkmkend AAAAAAACLU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetShaderValue\:raylib.h}
{\xe \v raylib.h\:SetShaderValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetShaderValue ({\b Shader}  {\i shader}, int  {\i locIndex}, const void *  {\i value}, int  {\i uniformType})}}
\par
{\bkmkstart AAAAAAACLV}
{\bkmkend AAAAAAACLV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetShaderValueMatrix\:raylib.h}
{\xe \v raylib.h\:SetShaderValueMatrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetShaderValueMatrix ({\b Shader}  {\i shader}, int  {\i locIndex}, {\b Matrix}  {\i mat})}}
\par
{\bkmkstart AAAAAAACLW}
{\bkmkend AAAAAAACLW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetShaderValueTexture\:raylib.h}
{\xe \v raylib.h\:SetShaderValueTexture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetShaderValueTexture ({\b Shader}  {\i shader}, int  {\i locIndex}, {\b Texture2D}  {\i texture})}}
\par
{\bkmkstart AAAAAAACLX}
{\bkmkend AAAAAAACLX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetShaderValueV\:raylib.h}
{\xe \v raylib.h\:SetShaderValueV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetShaderValueV ({\b Shader}  {\i shader}, int  {\i locIndex}, const void *  {\i value}, int  {\i uniformType}, int  {\i count})}}
\par
{\bkmkstart AAAAAAACLY}
{\bkmkend AAAAAAACLY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetShapesTexture\:raylib.h}
{\xe \v raylib.h\:SetShapesTexture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetShapesTexture ({\b Texture2D}  {\i texture}, {\b Rectangle}  {\i source})}}
\par
{\bkmkstart AAAAAAACLZ}
{\bkmkend AAAAAAACLZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetSoundPan\:raylib.h}
{\xe \v raylib.h\:SetSoundPan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetSoundPan ({\b Sound}  {\i sound}, float  {\i pan})}}
\par
{\bkmkstart AAAAAAACMA}
{\bkmkend AAAAAAACMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetSoundPitch\:raylib.h}
{\xe \v raylib.h\:SetSoundPitch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetSoundPitch ({\b Sound}  {\i sound}, float  {\i pitch})}}
\par
{\bkmkstart AAAAAAACMB}
{\bkmkend AAAAAAACMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetSoundVolume\:raylib.h}
{\xe \v raylib.h\:SetSoundVolume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetSoundVolume ({\b Sound}  {\i sound}, float  {\i volume})}}
\par
{\bkmkstart AAAAAAACMC}
{\bkmkend AAAAAAACMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetTargetFPS\:raylib.h}
{\xe \v raylib.h\:SetTargetFPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetTargetFPS (int  {\i fps})}}
\par
{\bkmkstart AAAAAAACMD}
{\bkmkend AAAAAAACMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetTextureFilter\:raylib.h}
{\xe \v raylib.h\:SetTextureFilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetTextureFilter ({\b Texture2D}  {\i texture}, int  {\i filter})}}
\par
{\bkmkstart AAAAAAACME}
{\bkmkend AAAAAAACME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetTextureWrap\:raylib.h}
{\xe \v raylib.h\:SetTextureWrap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetTextureWrap ({\b Texture2D}  {\i texture}, int  {\i wrap})}}
\par
{\bkmkstart AAAAAAACMF}
{\bkmkend AAAAAAACMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetTraceLogCallback\:raylib.h}
{\xe \v raylib.h\:SetTraceLogCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetTraceLogCallback ({\b TraceLogCallback}  {\i callback})}}
\par
{\bkmkstart AAAAAAACMG}
{\bkmkend AAAAAAACMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetTraceLogLevel\:raylib.h}
{\xe \v raylib.h\:SetTraceLogLevel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetTraceLogLevel (int  {\i logLevel})}}
\par
{\bkmkstart AAAAAAACMH}
{\bkmkend AAAAAAACMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetWindowIcon\:raylib.h}
{\xe \v raylib.h\:SetWindowIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetWindowIcon ({\b Image}  {\i image})}}
\par
{\bkmkstart AAAAAAACMI}
{\bkmkend AAAAAAACMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetWindowMinSize\:raylib.h}
{\xe \v raylib.h\:SetWindowMinSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetWindowMinSize (int  {\i width}, int  {\i height})}}
\par
{\bkmkstart AAAAAAACMJ}
{\bkmkend AAAAAAACMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetWindowMonitor\:raylib.h}
{\xe \v raylib.h\:SetWindowMonitor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetWindowMonitor (int  {\i monitor})}}
\par
{\bkmkstart AAAAAAACMK}
{\bkmkend AAAAAAACMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetWindowOpacity\:raylib.h}
{\xe \v raylib.h\:SetWindowOpacity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetWindowOpacity (float  {\i opacity})}}
\par
{\bkmkstart AAAAAAACML}
{\bkmkend AAAAAAACML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetWindowPosition\:raylib.h}
{\xe \v raylib.h\:SetWindowPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetWindowPosition (int  {\i x}, int  {\i y})}}
\par
{\bkmkstart AAAAAAACMM}
{\bkmkend AAAAAAACMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetWindowSize\:raylib.h}
{\xe \v raylib.h\:SetWindowSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetWindowSize (int  {\i width}, int  {\i height})}}
\par
{\bkmkstart AAAAAAACMN}
{\bkmkend AAAAAAACMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetWindowState\:raylib.h}
{\xe \v raylib.h\:SetWindowState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetWindowState (unsigned int  {\i flags})}}
\par
{\bkmkstart AAAAAAACMO}
{\bkmkend AAAAAAACMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetWindowTitle\:raylib.h}
{\xe \v raylib.h\:SetWindowTitle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SetWindowTitle (const char *  {\i title})}}
\par
{\bkmkstart AAAAAAACMP}
{\bkmkend AAAAAAACMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ShowCursor\:raylib.h}
{\xe \v raylib.h\:ShowCursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ShowCursor (void )}}
\par
{\bkmkstart AAAAAAACMQ}
{\bkmkend AAAAAAACMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v StopAudioStream\:raylib.h}
{\xe \v raylib.h\:StopAudioStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void StopAudioStream ({\b AudioStream}  {\i stream})}}
\par
{\bkmkstart AAAAAAACMR}
{\bkmkend AAAAAAACMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v StopMusicStream\:raylib.h}
{\xe \v raylib.h\:StopMusicStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void StopMusicStream ({\b Music}  {\i music})}}
\par
{\bkmkstart AAAAAAACMS}
{\bkmkend AAAAAAACMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v StopSound\:raylib.h}
{\xe \v raylib.h\:StopSound}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void StopSound ({\b Sound}  {\i sound})}}
\par
{\bkmkstart AAAAAAACMT}
{\bkmkend AAAAAAACMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v StopSoundMulti\:raylib.h}
{\xe \v raylib.h\:StopSoundMulti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void StopSoundMulti (void )}}
\par
{\bkmkstart AAAAAAACMU}
{\bkmkend AAAAAAACMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SwapScreenBuffer\:raylib.h}
{\xe \v raylib.h\:SwapScreenBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void SwapScreenBuffer (void )}}
\par
{\bkmkstart AAAAAAACMV}
{\bkmkend AAAAAAACMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TakeScreenshot\:raylib.h}
{\xe \v raylib.h\:TakeScreenshot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void TakeScreenshot (const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAACMW}
{\bkmkend AAAAAAACMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TextAppend\:raylib.h}
{\xe \v raylib.h\:TextAppend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void TextAppend (char *  {\i text}, const char *  {\i append}, int *  {\i position})}}
\par
{\bkmkstart AAAAAAACMX}
{\bkmkend AAAAAAACMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TextCodepointsToUTF8\:raylib.h}
{\xe \v raylib.h\:TextCodepointsToUTF8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} char * TextCodepointsToUTF8 (const int *  {\i codepoints}, int  {\i length})}}
\par
{\bkmkstart AAAAAAACMY}
{\bkmkend AAAAAAACMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TextCopy\:raylib.h}
{\xe \v raylib.h\:TextCopy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int TextCopy (char *  {\i dst}, const char *  {\i src})}}
\par
{\bkmkstart AAAAAAACMZ}
{\bkmkend AAAAAAACMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TextFindIndex\:raylib.h}
{\xe \v raylib.h\:TextFindIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int TextFindIndex (const char *  {\i text}, const char *  {\i find})}}
\par
{\bkmkstart AAAAAAACNA}
{\bkmkend AAAAAAACNA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TextFormat\:raylib.h}
{\xe \v raylib.h\:TextFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} const char * TextFormat (const char *  {\i text},   {\i ...})}}
\par
{\bkmkstart AAAAAAACNB}
{\bkmkend AAAAAAACNB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TextInsert\:raylib.h}
{\xe \v raylib.h\:TextInsert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} char * TextInsert (const char *  {\i text}, const char *  {\i insert}, int  {\i position})}}
\par
{\bkmkstart AAAAAAACNC}
{\bkmkend AAAAAAACNC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TextIsEqual\:raylib.h}
{\xe \v raylib.h\:TextIsEqual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} TextIsEqual (const char *  {\i text1}, const char *  {\i text2})}}
\par
{\bkmkstart AAAAAAACND}
{\bkmkend AAAAAAACND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TextJoin\:raylib.h}
{\xe \v raylib.h\:TextJoin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} const char * TextJoin (const char **  {\i textList}, int  {\i count}, const char *  {\i delimiter})}}
\par
{\bkmkstart AAAAAAACNE}
{\bkmkend AAAAAAACNE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TextLength\:raylib.h}
{\xe \v raylib.h\:TextLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} unsigned int TextLength (const char *  {\i text})}}
\par
{\bkmkstart AAAAAAACNF}
{\bkmkend AAAAAAACNF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TextReplace\:raylib.h}
{\xe \v raylib.h\:TextReplace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} char * TextReplace (char *  {\i text}, const char *  {\i replace}, const char *  {\i by})}}
\par
{\bkmkstart AAAAAAACNG}
{\bkmkend AAAAAAACNG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TextSplit\:raylib.h}
{\xe \v raylib.h\:TextSplit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} const char ** TextSplit (const char *  {\i text}, char  {\i delimiter}, int *  {\i count})}}
\par
{\bkmkstart AAAAAAACNH}
{\bkmkend AAAAAAACNH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TextSubtext\:raylib.h}
{\xe \v raylib.h\:TextSubtext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} const char * TextSubtext (const char *  {\i text}, int  {\i position}, int  {\i length})}}
\par
{\bkmkstart AAAAAAACNI}
{\bkmkend AAAAAAACNI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TextToInteger\:raylib.h}
{\xe \v raylib.h\:TextToInteger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} int TextToInteger (const char *  {\i text})}}
\par
{\bkmkstart AAAAAAACNJ}
{\bkmkend AAAAAAACNJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TextToLower\:raylib.h}
{\xe \v raylib.h\:TextToLower}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} const char * TextToLower (const char *  {\i text})}}
\par
{\bkmkstart AAAAAAACNK}
{\bkmkend AAAAAAACNK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TextToPascal\:raylib.h}
{\xe \v raylib.h\:TextToPascal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} const char * TextToPascal (const char *  {\i text})}}
\par
{\bkmkstart AAAAAAACNL}
{\bkmkend AAAAAAACNL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TextToUpper\:raylib.h}
{\xe \v raylib.h\:TextToUpper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} const char * TextToUpper (const char *  {\i text})}}
\par
{\bkmkstart AAAAAAACNM}
{\bkmkend AAAAAAACNM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ToggleFullscreen\:raylib.h}
{\xe \v raylib.h\:ToggleFullscreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void ToggleFullscreen (void )}}
\par
{\bkmkstart AAAAAAACNN}
{\bkmkend AAAAAAACNN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TraceLog\:raylib.h}
{\xe \v raylib.h\:TraceLog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void TraceLog (int  {\i logLevel}, const char *  {\i text},   {\i ...})}}
\par
{\bkmkstart AAAAAAACNO}
{\bkmkend AAAAAAACNO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UnloadAudioStream\:raylib.h}
{\xe \v raylib.h\:UnloadAudioStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UnloadAudioStream ({\b AudioStream}  {\i stream})}}
\par
{\bkmkstart AAAAAAACNP}
{\bkmkend AAAAAAACNP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UnloadCodepoints\:raylib.h}
{\xe \v raylib.h\:UnloadCodepoints}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UnloadCodepoints (int *  {\i codepoints})}}
\par
{\bkmkstart AAAAAAACNQ}
{\bkmkend AAAAAAACNQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UnloadFileData\:raylib.h}
{\xe \v raylib.h\:UnloadFileData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UnloadFileData (unsigned char *  {\i data})}}
\par
{\bkmkstart AAAAAAACNR}
{\bkmkend AAAAAAACNR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UnloadFileText\:raylib.h}
{\xe \v raylib.h\:UnloadFileText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UnloadFileText (char *  {\i text})}}
\par
{\bkmkstart AAAAAAACNS}
{\bkmkend AAAAAAACNS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UnloadFont\:raylib.h}
{\xe \v raylib.h\:UnloadFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UnloadFont ({\b Font}  {\i font})}}
\par
{\bkmkstart AAAAAAACNT}
{\bkmkend AAAAAAACNT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UnloadFontData\:raylib.h}
{\xe \v raylib.h\:UnloadFontData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UnloadFontData ({\b GlyphInfo} *  {\i chars}, int  {\i glyphCount})}}
\par
{\bkmkstart AAAAAAACNU}
{\bkmkend AAAAAAACNU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UnloadImage\:raylib.h}
{\xe \v raylib.h\:UnloadImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UnloadImage ({\b Image}  {\i image})}}
\par
{\bkmkstart AAAAAAACNV}
{\bkmkend AAAAAAACNV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UnloadImageColors\:raylib.h}
{\xe \v raylib.h\:UnloadImageColors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UnloadImageColors ({\b Color} *  {\i colors})}}
\par
{\bkmkstart AAAAAAACNW}
{\bkmkend AAAAAAACNW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UnloadImagePalette\:raylib.h}
{\xe \v raylib.h\:UnloadImagePalette}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UnloadImagePalette ({\b Color} *  {\i colors})}}
\par
{\bkmkstart AAAAAAACNX}
{\bkmkend AAAAAAACNX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UnloadMaterial\:raylib.h}
{\xe \v raylib.h\:UnloadMaterial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UnloadMaterial ({\b Material}  {\i material})}}
\par
{\bkmkstart AAAAAAACNY}
{\bkmkend AAAAAAACNY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UnloadMesh\:raylib.h}
{\xe \v raylib.h\:UnloadMesh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UnloadMesh ({\b Mesh}  {\i mesh})}}
\par
{\bkmkstart AAAAAAACNZ}
{\bkmkend AAAAAAACNZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UnloadModel\:raylib.h}
{\xe \v raylib.h\:UnloadModel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UnloadModel ({\b Model}  {\i model})}}
\par
{\bkmkstart AAAAAAACOA}
{\bkmkend AAAAAAACOA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UnloadModelAnimation\:raylib.h}
{\xe \v raylib.h\:UnloadModelAnimation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UnloadModelAnimation ({\b ModelAnimation}  {\i anim})}}
\par
{\bkmkstart AAAAAAACOB}
{\bkmkend AAAAAAACOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UnloadModelAnimations\:raylib.h}
{\xe \v raylib.h\:UnloadModelAnimations}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UnloadModelAnimations ({\b ModelAnimation} *  {\i animations}, unsigned int  {\i count})}}
\par
{\bkmkstart AAAAAAACOC}
{\bkmkend AAAAAAACOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UnloadModelKeepMeshes\:raylib.h}
{\xe \v raylib.h\:UnloadModelKeepMeshes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UnloadModelKeepMeshes ({\b Model}  {\i model})}}
\par
{\bkmkstart AAAAAAACOD}
{\bkmkend AAAAAAACOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UnloadMusicStream\:raylib.h}
{\xe \v raylib.h\:UnloadMusicStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UnloadMusicStream ({\b Music}  {\i music})}}
\par
{\bkmkstart AAAAAAACOE}
{\bkmkend AAAAAAACOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UnloadRenderTexture\:raylib.h}
{\xe \v raylib.h\:UnloadRenderTexture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UnloadRenderTexture ({\b RenderTexture2D}  {\i target})}}
\par
{\bkmkstart AAAAAAACOF}
{\bkmkend AAAAAAACOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UnloadShader\:raylib.h}
{\xe \v raylib.h\:UnloadShader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UnloadShader ({\b Shader}  {\i shader})}}
\par
{\bkmkstart AAAAAAACOG}
{\bkmkend AAAAAAACOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UnloadSound\:raylib.h}
{\xe \v raylib.h\:UnloadSound}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UnloadSound ({\b Sound}  {\i sound})}}
\par
{\bkmkstart AAAAAAACOH}
{\bkmkend AAAAAAACOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UnloadTexture\:raylib.h}
{\xe \v raylib.h\:UnloadTexture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UnloadTexture ({\b Texture2D}  {\i texture})}}
\par
{\bkmkstart AAAAAAACOI}
{\bkmkend AAAAAAACOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UnloadVrStereoConfig\:raylib.h}
{\xe \v raylib.h\:UnloadVrStereoConfig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UnloadVrStereoConfig ({\b VrStereoConfig}  {\i config})}}
\par
{\bkmkstart AAAAAAACOJ}
{\bkmkend AAAAAAACOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UnloadWave\:raylib.h}
{\xe \v raylib.h\:UnloadWave}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UnloadWave ({\b Wave}  {\i wave})}}
\par
{\bkmkstart AAAAAAACOK}
{\bkmkend AAAAAAACOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UnloadWaveSamples\:raylib.h}
{\xe \v raylib.h\:UnloadWaveSamples}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UnloadWaveSamples (float *  {\i samples})}}
\par
{\bkmkstart AAAAAAACOL}
{\bkmkend AAAAAAACOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UpdateAudioStream\:raylib.h}
{\xe \v raylib.h\:UpdateAudioStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UpdateAudioStream ({\b AudioStream}  {\i stream}, const void *  {\i data}, int  {\i frameCount})}}
\par
{\bkmkstart AAAAAAACOM}
{\bkmkend AAAAAAACOM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UpdateCamera\:raylib.h}
{\xe \v raylib.h\:UpdateCamera}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UpdateCamera ({\b Camera} *  {\i camera})}}
\par
{\bkmkstart AAAAAAACON}
{\bkmkend AAAAAAACON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UpdateMeshBuffer\:raylib.h}
{\xe \v raylib.h\:UpdateMeshBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UpdateMeshBuffer ({\b Mesh}  {\i mesh}, int  {\i index}, const void *  {\i data}, int  {\i dataSize}, int  {\i offset})}}
\par
{\bkmkstart AAAAAAACOO}
{\bkmkend AAAAAAACOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UpdateModelAnimation\:raylib.h}
{\xe \v raylib.h\:UpdateModelAnimation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UpdateModelAnimation ({\b Model}  {\i model}, {\b ModelAnimation}  {\i anim}, int  {\i frame})}}
\par
{\bkmkstart AAAAAAACOP}
{\bkmkend AAAAAAACOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UpdateMusicStream\:raylib.h}
{\xe \v raylib.h\:UpdateMusicStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UpdateMusicStream ({\b Music}  {\i music})}}
\par
{\bkmkstart AAAAAAACOQ}
{\bkmkend AAAAAAACOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UpdateSound\:raylib.h}
{\xe \v raylib.h\:UpdateSound}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UpdateSound ({\b Sound}  {\i sound}, const void *  {\i data}, int  {\i sampleCount})}}
\par
{\bkmkstart AAAAAAACOR}
{\bkmkend AAAAAAACOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UpdateTexture\:raylib.h}
{\xe \v raylib.h\:UpdateTexture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UpdateTexture ({\b Texture2D}  {\i texture}, const void *  {\i pixels})}}
\par
{\bkmkstart AAAAAAACOS}
{\bkmkend AAAAAAACOS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UpdateTextureRec\:raylib.h}
{\xe \v raylib.h\:UpdateTextureRec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UpdateTextureRec ({\b Texture2D}  {\i texture}, {\b Rectangle}  {\i rec}, const void *  {\i pixels})}}
\par
{\bkmkstart AAAAAAACOT}
{\bkmkend AAAAAAACOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UploadMesh\:raylib.h}
{\xe \v raylib.h\:UploadMesh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void UploadMesh ({\b Mesh} *  {\i mesh}, {\b bool}  {\i dynamic})}}
\par
{\bkmkstart AAAAAAACOU}
{\bkmkend AAAAAAACOU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WaitTime\:raylib.h}
{\xe \v raylib.h\:WaitTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void WaitTime (float  {\i ms})}}
\par
{\bkmkstart AAAAAAACOV}
{\bkmkend AAAAAAACOV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WaveCopy\:raylib.h}
{\xe \v raylib.h\:WaveCopy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b Wave} WaveCopy ({\b Wave}  {\i wave})}}
\par
{\bkmkstart AAAAAAACOW}
{\bkmkend AAAAAAACOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WaveCrop\:raylib.h}
{\xe \v raylib.h\:WaveCrop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void WaveCrop ({\b Wave} *  {\i wave}, int  {\i initSample}, int  {\i finalSample})}}
\par
{\bkmkstart AAAAAAACOX}
{\bkmkend AAAAAAACOX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WaveFormat\:raylib.h}
{\xe \v raylib.h\:WaveFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} void WaveFormat ({\b Wave} *  {\i wave}, int  {\i sampleRate}, int  {\i sampleSize}, int  {\i channels})}}
\par
{\bkmkstart AAAAAAACOY}
{\bkmkend AAAAAAACOY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WindowShouldClose\:raylib.h}
{\xe \v raylib.h\:WindowShouldClose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RLAPI} {\b bool} WindowShouldClose (void )}}
\par
{\bkmkstart AAAAAAACOZ}
{\bkmkend AAAAAAACOZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
raylib.h\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/raylib.h}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/libs/raylib.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /**********************************************************************************************}\par
2 {\cf20 *}\par
3 {\cf20 *   raylib v4.1-dev - A simple and easy-to-use library to enjoy videogames programming (www.raylib.com)}\par
4 {\cf20 *}\par
5 {\cf20 *   FEATURES:}\par
6 {\cf20 *       - NO external dependencies, all required libraries included with raylib}\par
7 {\cf20 *       - Multiplatform: Windows, Linux, FreeBSD, OpenBSD, NetBSD, DragonFly,}\par
8 {\cf20 *                        MacOS, Haiku, Android, Raspberry Pi, DRM native, HTML5.}\par
9 {\cf20 *       - Written in plain C code (C99) in PascalCase/camelCase notation}\par
10 {\cf20 *       - Hardware accelerated with OpenGL (1.1, 2.1, 3.3, 4.3 or ES2 - choose at compile)}\par
11 {\cf20 *       - Unique OpenGL abstraction layer (usable as standalone module): [rlgl]}\par
12 {\cf20 *       - Multiple Fonts formats supported (TTF, XNA fonts, AngelCode fonts)}\par
13 {\cf20 *       - Outstanding texture formats support, including compressed formats (DXT, ETC, ASTC)}\par
14 {\cf20 *       - Full 3d support for 3d Shapes, Models, Billboards, Heightmaps and more!}\par
15 {\cf20 *       - Flexible Materials system, supporting classic maps and PBR maps}\par
16 {\cf20 *       - Animated 3D models supported (skeletal bones animation) (IQM)}\par
17 {\cf20 *       - Shaders support, including Model shaders and Postprocessing shaders}\par
18 {\cf20 *       - Powerful math module for Vector, Matrix and Quaternion operations: [raymath]}\par
19 {\cf20 *       - Audio loading and playing with streaming support (WAV, OGG, MP3, FLAC, XM, MOD)}\par
20 {\cf20 *       - VR stereo rendering with configurable HMD device parameters}\par
21 {\cf20 *       - Bindings to multiple programming languages available!}\par
22 {\cf20 *}\par
23 {\cf20 *   NOTES:}\par
24 {\cf20 *       - One default Font is loaded on InitWindow()->LoadFontDefault() [core, text]}\par
25 {\cf20 *       - One default Texture2D is loaded on rlglInit(), 1x1 white pixel R8G8B8A8 [rlgl] (OpenGL 3.3 or ES2)}\par
26 {\cf20 *       - One default Shader is loaded on rlglInit()->rlLoadShaderDefault() [rlgl] (OpenGL 3.3 or ES2)}\par
27 {\cf20 *       - One default RenderBatch is loaded on rlglInit()->rlLoadRenderBatch() [rlgl] (OpenGL 3.3 or ES2)}\par
28 {\cf20 *}\par
29 {\cf20 *   DEPENDENCIES (included):}\par
30 {\cf20 *       [rcore] rglfw (Camilla L\'F6wy - github.com/glfw/glfw) for window/context management and input (PLATFORM_DESKTOP)}\par
31 {\cf20 *       [rlgl] glad (David Herberth - github.com/Dav1dde/glad) for OpenGL 3.3 extensions loading (PLATFORM_DESKTOP)}\par
32 {\cf20 *       [raudio] miniaudio (David Reid - github.com/mackron/miniaudio) for audio device/context management}\par
33 {\cf20 *}\par
34 {\cf20 *   OPTIONAL DEPENDENCIES (included):}\par
35 {\cf20 *       [rcore] msf_gif (Miles Fogle) for GIF recording}\par
36 {\cf20 *       [rcore] sinfl (Micha Mettke) for DEFLATE decompression algorithm}\par
37 {\cf20 *       [rcore] sdefl (Micha Mettke) for DEFLATE compression algorithm}\par
38 {\cf20 *       [rtextures] stb_image (Sean Barret) for images loading (BMP, TGA, PNG, JPEG, HDR...)}\par
39 {\cf20 *       [rtextures] stb_image_write (Sean Barret) for image writing (BMP, TGA, PNG, JPG)}\par
40 {\cf20 *       [rtextures] stb_image_resize (Sean Barret) for image resizing algorithms}\par
41 {\cf20 *       [rtext] stb_truetype (Sean Barret) for ttf fonts loading}\par
42 {\cf20 *       [rtext] stb_rect_pack (Sean Barret) for rectangles packing}\par
43 {\cf20 *       [rmodels] par_shapes (Philip Rideout) for parametric 3d shapes generation}\par
44 {\cf20 *       [rmodels] tinyobj_loader_c (Syoyo Fujita) for models loading (OBJ, MTL)}\par
45 {\cf20 *       [rmodels] cgltf (Johannes Kuhlmann) for models loading (glTF)}\par
46 {\cf20 *       [raudio] dr_wav (David Reid) for WAV audio file loading}\par
47 {\cf20 *       [raudio] dr_flac (David Reid) for FLAC audio file loading}\par
48 {\cf20 *       [raudio] dr_mp3 (David Reid) for MP3 audio file loading}\par
49 {\cf20 *       [raudio] stb_vorbis (Sean Barret) for OGG audio loading}\par
50 {\cf20 *       [raudio] jar_xm (Joshua Reisenauer) for XM audio module loading}\par
51 {\cf20 *       [raudio] jar_mod (Joshua Reisenauer) for MOD audio module loading}\par
52 {\cf20 *}\par
53 {\cf20 *}\par
54 {\cf20 *   LICENSE: zlib/libpng}\par
55 {\cf20 *}\par
56 {\cf20 *   raylib is licensed under an unmodified zlib/libpng license, which is an OSI-certified,}\par
57 {\cf20 *   BSD-like license that allows static linking with closed source software:}\par
58 {\cf20 *}\par
59 {\cf20 *   Copyright (c) 2013-2022 Ramon Santamaria (@raysan5)}\par
60 {\cf20 *}\par
61 {\cf20 *   This software is provided "as-is", without any express or implied warranty. In no event}\par
62 {\cf20 *   will the authors be held liable for any damages arising from the use of this software.}\par
63 {\cf20 *}\par
64 {\cf20 *   Permission is granted to anyone to use this software for any purpose, including commercial}\par
65 {\cf20 *   applications, and to alter it and redistribute it freely, subject to the following restrictions:}\par
66 {\cf20 *}\par
67 {\cf20 *     1. The origin of this software must not be misrepresented; you must not claim that you}\par
68 {\cf20 *     wrote the original software. If you use this software in a product, an acknowledgment}\par
69 {\cf20 *     in the product documentation would be appreciated but is not required.}\par
70 {\cf20 *}\par
71 {\cf20 *     2. Altered source versions must be plainly marked as such, and must not be misrepresented}\par
72 {\cf20 *     as being the original software.}\par
73 {\cf20 *}\par
74 {\cf20 *     3. This notice may not be removed or altered from any source distribution.}\par
75 {\cf20 *}\par
76 {\cf20 **********************************************************************************************/}\par
77 \par
78 {\cf21 #ifndef RAYLIB_H}\par
79 {\cf21 #define RAYLIB_H}\par
80 \par
81 {\cf21 #include <stdarg.h>}     {\cf20 // Required for: va_list - Only used by TraceLogCallback}\par
82 \par
83 {\cf21 #define RAYLIB_VERSION  "4.1-dev"}\par
84 \par
85 {\cf20 // Function specifiers in case library is build/used as a shared library (Windows)}\par
86 {\cf20 // NOTE: Microsoft specifiers to tell compiler that symbols are imported/exported from a .dll}\par
87 {\cf21 #if defined(_WIN32)}\par
88 {\cf21     #if defined(BUILD_LIBTYPE_SHARED)}\par
89 {\cf21         #define RLAPI __declspec(dllexport)     }{\cf20 // We are building the library as a Win32 shared library (.dll)}\par
90 {\cf21     #elif defined(USE_LIBTYPE_SHARED)}\par
91 {\cf21         #define RLAPI __declspec(dllimport)     }{\cf20 // We are using the library as a Win32 shared library (.dll)}\par
92 {\cf21     #endif}\par
93 {\cf21 #endif}\par
94 \par
95 {\cf21 #ifndef RLAPI}\par
96 {\cf21     #define RLAPI       }{\cf20 // Functions defined as 'extern' by default (implicit specifiers)}\par
97 {\cf21 #endif}\par
98 \par
99 {\cf20 //----------------------------------------------------------------------------------}\par
100 {\cf20 // Some basic Defines}\par
101 {\cf20 //----------------------------------------------------------------------------------}\par
102 {\cf21 #ifndef PI}\par
103 {\cf21     #define PI 3.14159265358979323846f}\par
104 {\cf21 #endif}\par
105 {\cf21 #ifndef DEG2RAD}\par
106 {\cf21     #define DEG2RAD (PI/180.0f)}\par
107 {\cf21 #endif}\par
108 {\cf21 #ifndef RAD2DEG}\par
109 {\cf21     #define RAD2DEG (180.0f/PI)}\par
110 {\cf21 #endif}\par
111 \par
112 {\cf20 // Allow custom memory allocators}\par
113 {\cf21 #ifndef RL_MALLOC}\par
114 {\cf21     #define RL_MALLOC(sz)       malloc(sz)}\par
115 {\cf21 #endif}\par
116 {\cf21 #ifndef RL_CALLOC}\par
117 {\cf21     #define RL_CALLOC(n,sz)     calloc(n,sz)}\par
118 {\cf21 #endif}\par
119 {\cf21 #ifndef RL_REALLOC}\par
120 {\cf21     #define RL_REALLOC(ptr,sz)  realloc(ptr,sz)}\par
121 {\cf21 #endif}\par
122 {\cf21 #ifndef RL_FREE}\par
123 {\cf21     #define RL_FREE(ptr)        free(ptr)}\par
124 {\cf21 #endif}\par
125 \par
126 {\cf20 // NOTE: MSVC C++ compiler does not support compound literals (C99 feature)}\par
127 {\cf20 // Plain structures in C++ (without constructors) can be initialized with \{ \}}\par
128 {\cf21 #if defined(__cplusplus)}\par
129 {\cf21     #define CLITERAL(type)      type}\par
130 {\cf21 #else}\par
131 {\cf21     #define CLITERAL(type)      (type)}\par
132 {\cf21 #endif}\par
133 \par
134 {\cf20 // NOTE: We set some defines with some data types declared by raylib}\par
135 {\cf20 // Other modules (raymath, rlgl) also require some of those types, so,}\par
136 {\cf20 // to be able to use those other modules as standalone (not depending on raylib)}\par
137 {\cf20 // this defines are very useful for internal check and avoid type (re)definitions}\par
138 {\cf21 #define RL_COLOR_TYPE}\par
139 {\cf21 #define RL_RECTANGLE_TYPE}\par
140 {\cf21 #define RL_VECTOR2_TYPE}\par
141 {\cf21 #define RL_VECTOR3_TYPE}\par
142 {\cf21 #define RL_VECTOR4_TYPE}\par
143 {\cf21 #define RL_QUATERNION_TYPE}\par
144 {\cf21 #define RL_MATRIX_TYPE}\par
145 \par
146 {\cf20 // Some Basic Colors}\par
147 {\cf20 // NOTE: Custom raylib color palette for amazing visuals on WHITE background}\par
148 {\cf21 #define LIGHTGRAY  CLITERAL(Color)\{ 200, 200, 200, 255 \}   }{\cf20 // Light Gray}\par
149 {\cf21 #define GRAY       CLITERAL(Color)\{ 130, 130, 130, 255 \}   }{\cf20 // Gray}\par
150 {\cf21 #define DARKGRAY   CLITERAL(Color)\{ 80, 80, 80, 255 \}      }{\cf20 // Dark Gray}\par
151 {\cf21 #define YELLOW     CLITERAL(Color)\{ 253, 249, 0, 255 \}     }{\cf20 // Yellow}\par
152 {\cf21 #define GOLD       CLITERAL(Color)\{ 255, 203, 0, 255 \}     }{\cf20 // Gold}\par
153 {\cf21 #define ORANGE     CLITERAL(Color)\{ 255, 161, 0, 255 \}     }{\cf20 // Orange}\par
154 {\cf21 #define PINK       CLITERAL(Color)\{ 255, 109, 194, 255 \}   }{\cf20 // Pink}\par
155 {\cf21 #define RED        CLITERAL(Color)\{ 230, 41, 55, 255 \}     }{\cf20 // Red}\par
156 {\cf21 #define MAROON     CLITERAL(Color)\{ 190, 33, 55, 255 \}     }{\cf20 // Maroon}\par
157 {\cf21 #define GREEN      CLITERAL(Color)\{ 0, 228, 48, 255 \}      }{\cf20 // Green}\par
158 {\cf21 #define LIME       CLITERAL(Color)\{ 0, 158, 47, 255 \}      }{\cf20 // Lime}\par
159 {\cf21 #define DARKGREEN  CLITERAL(Color)\{ 0, 117, 44, 255 \}      }{\cf20 // Dark Green}\par
160 {\cf21 #define SKYBLUE    CLITERAL(Color)\{ 102, 191, 255, 255 \}   }{\cf20 // Sky Blue}\par
161 {\cf21 #define BLUE       CLITERAL(Color)\{ 0, 121, 241, 255 \}     }{\cf20 // Blue}\par
162 {\cf21 #define DARKBLUE   CLITERAL(Color)\{ 0, 82, 172, 255 \}      }{\cf20 // Dark Blue}\par
163 {\cf21 #define PURPLE     CLITERAL(Color)\{ 200, 122, 255, 255 \}   }{\cf20 // Purple}\par
164 {\cf21 #define VIOLET     CLITERAL(Color)\{ 135, 60, 190, 255 \}    }{\cf20 // Violet}\par
165 {\cf21 #define DARKPURPLE CLITERAL(Color)\{ 112, 31, 126, 255 \}    }{\cf20 // Dark Purple}\par
166 {\cf21 #define BEIGE      CLITERAL(Color)\{ 211, 176, 131, 255 \}   }{\cf20 // Beige}\par
167 {\cf21 #define BROWN      CLITERAL(Color)\{ 127, 106, 79, 255 \}    }{\cf20 // Brown}\par
168 {\cf21 #define DARKBROWN  CLITERAL(Color)\{ 76, 63, 47, 255 \}      }{\cf20 // Dark Brown}\par
169 \par
170 {\cf21 #define WHITE      CLITERAL(Color)\{ 255, 255, 255, 255 \}   }{\cf20 // White}\par
171 {\cf21 #define BLACK      CLITERAL(Color)\{ 0, 0, 0, 255 \}         }{\cf20 // Black}\par
172 {\cf21 #define BLANK      CLITERAL(Color)\{ 0, 0, 0, 0 \}           }{\cf20 // Blank (Transparent)}\par
173 {\cf21 #define MAGENTA    CLITERAL(Color)\{ 255, 0, 255, 255 \}     }{\cf20 // Magenta}\par
174 {\cf21 #define RAYWHITE   CLITERAL(Color)\{ 245, 245, 245, 255 \}   }{\cf20 // My own White (raylib logo)}\par
175 \par
176 {\cf20 //----------------------------------------------------------------------------------}\par
177 {\cf20 // Structures Definition}\par
178 {\cf20 //----------------------------------------------------------------------------------}\par
179 {\cf20 // Boolean type}\par
180 {\cf21 #if (defined(__STDC__) && __STDC_VERSION__ >= 199901L) || (defined(_MSC_VER) && _MSC_VER >= 1800)}\par
181 {\cf21     #include <stdbool.h>}\par
182 {\cf21 #elif !defined(__cplusplus) && !defined(bool)}\par
183     {\cf17 typedef} {\cf17 enum} {\cf18 bool} \{ {\cf17 false} = 0, {\cf17 true} = !{\cf17 false} \} bool;\par
184 {\cf21     #define RL_BOOL_TYPE}\par
185 {\cf21 #endif}\par
186 \par
187 {\cf20 // Vector2, 2 components}\par
188 {\cf17 typedef} {\cf17 struct }Vector2 \{\par
189     {\cf18 float} x;                {\cf20 // Vector x component}\par
190     {\cf18 float} y;                {\cf20 // Vector y component}\par
191 \} Vector2;\par
192 \par
193 {\cf20 // Vector3, 3 components}\par
194 {\cf17 typedef} {\cf17 struct }Vector3 \{\par
195     {\cf18 float} x;                {\cf20 // Vector x component}\par
196     {\cf18 float} y;                {\cf20 // Vector y component}\par
197     {\cf18 float} z;                {\cf20 // Vector z component}\par
198 \} Vector3;\par
199 \par
200 {\cf20 // Vector4, 4 components}\par
201 {\cf17 typedef} {\cf17 struct }Vector4 \{\par
202     {\cf18 float} x;                {\cf20 // Vector x component}\par
203     {\cf18 float} y;                {\cf20 // Vector y component}\par
204     {\cf18 float} z;                {\cf20 // Vector z component}\par
205     {\cf18 float} w;                {\cf20 // Vector w component}\par
206 \} Vector4;\par
207 \par
208 {\cf20 // Quaternion, 4 components (Vector4 alias)}\par
209 {\cf17 typedef} Vector4 Quaternion;\par
210 \par
211 {\cf20 // Matrix, 4x4 components, column major, OpenGL style, right handed}\par
212 {\cf17 typedef} {\cf17 struct }Matrix \{\par
213     {\cf18 float} m0, m4, m8, m12;  {\cf20 // Matrix first row (4 components)}\par
214     {\cf18 float} m1, m5, m9, m13;  {\cf20 // Matrix second row (4 components)}\par
215     {\cf18 float} m2, m6, m10, m14; {\cf20 // Matrix third row (4 components)}\par
216     {\cf18 float} m3, m7, m11, m15; {\cf20 // Matrix fourth row (4 components)}\par
217 \} Matrix;\par
218 \par
219 {\cf20 // Color, 4 components, R8G8B8A8 (32bit)}\par
220 {\cf17 typedef} {\cf17 struct }Color \{\par
221     {\cf18 unsigned} {\cf18 char} r;        {\cf20 // Color red value}\par
222     {\cf18 unsigned} {\cf18 char} g;        {\cf20 // Color green value}\par
223     {\cf18 unsigned} {\cf18 char} b;        {\cf20 // Color blue value}\par
224     {\cf18 unsigned} {\cf18 char} a;        {\cf20 // Color alpha value}\par
225 \} Color;\par
226 \par
227 {\cf20 // Rectangle, 4 components}\par
228 {\cf17 typedef} {\cf17 struct }Rectangle \{\par
229     {\cf18 float} x;                {\cf20 // Rectangle top-left corner position x}\par
230     {\cf18 float} y;                {\cf20 // Rectangle top-left corner position y}\par
231     {\cf18 float} width;            {\cf20 // Rectangle width}\par
232     {\cf18 float} height;           {\cf20 // Rectangle height}\par
233 \} Rectangle;\par
234 \par
235 {\cf20 // Image, pixel data stored in CPU memory (RAM)}\par
236 {\cf17 typedef} {\cf17 struct }Image \{\par
237     {\cf18 void} *data;             {\cf20 // Image raw data}\par
238     {\cf18 int} width;              {\cf20 // Image base width}\par
239     {\cf18 int} height;             {\cf20 // Image base height}\par
240     {\cf18 int} mipmaps;            {\cf20 // Mipmap levels, 1 by default}\par
241     {\cf18 int} format;             {\cf20 // Data format (PixelFormat type)}\par
242 \} Image;\par
243 \par
244 {\cf20 // Texture, tex data stored in GPU memory (VRAM)}\par
245 {\cf17 typedef} {\cf17 struct }Texture \{\par
246     {\cf18 unsigned} {\cf18 int} id;        {\cf20 // OpenGL texture id}\par
247     {\cf18 int} width;              {\cf20 // Texture base width}\par
248     {\cf18 int} height;             {\cf20 // Texture base height}\par
249     {\cf18 int} mipmaps;            {\cf20 // Mipmap levels, 1 by default}\par
250     {\cf18 int} format;             {\cf20 // Data format (PixelFormat type)}\par
251 \} Texture;\par
252 \par
253 {\cf20 // Texture2D, same as Texture}\par
254 {\cf17 typedef} Texture Texture2D;\par
255 \par
256 {\cf20 // TextureCubemap, same as Texture}\par
257 {\cf17 typedef} Texture TextureCubemap;\par
258 \par
259 {\cf20 // RenderTexture, fbo for texture rendering}\par
260 {\cf17 typedef} {\cf17 struct }RenderTexture \{\par
261     {\cf18 unsigned} {\cf18 int} id;        {\cf20 // OpenGL framebuffer object id}\par
262     Texture texture;        {\cf20 // Color buffer attachment texture}\par
263     Texture depth;          {\cf20 // Depth buffer attachment texture}\par
264 \} RenderTexture;\par
265 \par
266 {\cf20 // RenderTexture2D, same as RenderTexture}\par
267 {\cf17 typedef} RenderTexture RenderTexture2D;\par
268 \par
269 {\cf20 // NPatchInfo, n-patch layout info}\par
270 {\cf17 typedef} {\cf17 struct }NPatchInfo \{\par
271     Rectangle source;       {\cf20 // Texture source rectangle}\par
272     {\cf18 int} left;               {\cf20 // Left border offset}\par
273     {\cf18 int} top;                {\cf20 // Top border offset}\par
274     {\cf18 int} right;              {\cf20 // Right border offset}\par
275     {\cf18 int} bottom;             {\cf20 // Bottom border offset}\par
276     {\cf18 int} layout;             {\cf20 // Layout of the n-patch: 3x3, 1x3 or 3x1}\par
277 \} NPatchInfo;\par
278 \par
279 {\cf20 // GlyphInfo, font characters glyphs info}\par
280 {\cf17 typedef} {\cf17 struct }GlyphInfo \{\par
281     {\cf18 int} value;              {\cf20 // Character value (Unicode)}\par
282     {\cf18 int} offsetX;            {\cf20 // Character offset X when drawing}\par
283     {\cf18 int} offsetY;            {\cf20 // Character offset Y when drawing}\par
284     {\cf18 int} advanceX;           {\cf20 // Character advance position X}\par
285     Image image;            {\cf20 // Character image data}\par
286 \} GlyphInfo;\par
287 \par
288 {\cf20 // Font, font texture and GlyphInfo array data}\par
289 {\cf17 typedef} {\cf17 struct }Font \{\par
290     {\cf18 int} baseSize;           {\cf20 // Base size (default chars height)}\par
291     {\cf18 int} glyphCount;         {\cf20 // Number of glyph characters}\par
292     {\cf18 int} glyphPadding;       {\cf20 // Padding around the glyph characters}\par
293     Texture2D texture;      {\cf20 // Texture atlas containing the glyphs}\par
294     Rectangle *recs;        {\cf20 // Rectangles in texture for the glyphs}\par
295     GlyphInfo *glyphs;      {\cf20 // Glyphs info data}\par
296 \} Font;\par
297 \par
298 {\cf20 // Camera, defines position/orientation in 3d space}\par
299 {\cf17 typedef} {\cf17 struct }Camera3D \{\par
300     Vector3 position;       {\cf20 // Camera position}\par
301     Vector3 target;         {\cf20 // Camera target it looks-at}\par
302     Vector3 up;             {\cf20 // Camera up vector (rotation over its axis)}\par
303     {\cf18 float} fovy;             {\cf20 // Camera field-of-view apperture in Y (degrees) in perspective, used as near plane width in orthographic}\par
304     {\cf18 int} projection;         {\cf20 // Camera projection: CAMERA_PERSPECTIVE or CAMERA_ORTHOGRAPHIC}\par
305 \} Camera3D;\par
306 \par
307 {\cf17 typedef} Camera3D Camera;    {\cf20 // Camera type fallback, defaults to Camera3D}\par
308 \par
309 {\cf20 // Camera2D, defines position/orientation in 2d space}\par
310 {\cf17 typedef} {\cf17 struct }Camera2D \{\par
311     Vector2 offset;         {\cf20 // Camera offset (displacement from target)}\par
312     Vector2 target;         {\cf20 // Camera target (rotation and zoom origin)}\par
313     {\cf18 float} rotation;         {\cf20 // Camera rotation in degrees}\par
314     {\cf18 float} zoom;             {\cf20 // Camera zoom (scaling), should be 1.0f by default}\par
315 \} Camera2D;\par
316 \par
317 {\cf20 // Mesh, vertex data and vao/vbo}\par
318 {\cf17 typedef} {\cf17 struct }Mesh \{\par
319     {\cf18 int} vertexCount;        {\cf20 // Number of vertices stored in arrays}\par
320     {\cf18 int} triangleCount;      {\cf20 // Number of triangles stored (indexed or not)}\par
321 \par
322     {\cf20 // Vertex attributes data}\par
323     {\cf18 float} *vertices;        {\cf20 // Vertex position (XYZ - 3 components per vertex) (shader-location = 0)}\par
324     {\cf18 float} *texcoords;       {\cf20 // Vertex texture coordinates (UV - 2 components per vertex) (shader-location = 1)}\par
325     {\cf18 float} *texcoords2;      {\cf20 // Vertex texture second coordinates (UV - 2 components per vertex) (shader-location = 5)}\par
326     {\cf18 float} *normals;         {\cf20 // Vertex normals (XYZ - 3 components per vertex) (shader-location = 2)}\par
327     {\cf18 float} *tangents;        {\cf20 // Vertex tangents (XYZW - 4 components per vertex) (shader-location = 4)}\par
328     {\cf18 unsigned} {\cf18 char} *colors;      {\cf20 // Vertex colors (RGBA - 4 components per vertex) (shader-location = 3)}\par
329     {\cf18 unsigned} {\cf18 short} *indices;    {\cf20 // Vertex indices (in case vertex data comes indexed)}\par
330 \par
331     {\cf20 // Animation vertex data}\par
332     {\cf18 float} *animVertices;    {\cf20 // Animated vertex positions (after bones transformations)}\par
333     {\cf18 float} *animNormals;     {\cf20 // Animated normals (after bones transformations)}\par
334     {\cf18 unsigned} {\cf18 char} *boneIds; {\cf20 // Vertex bone ids, max 255 bone ids, up to 4 bones influence by vertex (skinning)}\par
335     {\cf18 float} *boneWeights;     {\cf20 // Vertex bone weight, up to 4 bones influence by vertex (skinning)}\par
336 \par
337     {\cf20 // OpenGL identifiers}\par
338     {\cf18 unsigned} {\cf18 int} vaoId;     {\cf20 // OpenGL Vertex Array Object id}\par
339     {\cf18 unsigned} {\cf18 int} *vboId;    {\cf20 // OpenGL Vertex Buffer Objects id (default vertex data)}\par
340 \} Mesh;\par
341 \par
342 {\cf20 // Shader}\par
343 {\cf17 typedef} {\cf17 struct }Shader \{\par
344     {\cf18 unsigned} {\cf18 int} id;        {\cf20 // Shader program id}\par
345     {\cf18 int} *locs;              {\cf20 // Shader locations array (RL_MAX_SHADER_LOCATIONS)}\par
346 \} Shader;\par
347 \par
348 {\cf20 // MaterialMap}\par
349 {\cf17 typedef} {\cf17 struct }MaterialMap \{\par
350     Texture2D texture;      {\cf20 // Material map texture}\par
351     Color color;            {\cf20 // Material map color}\par
352     {\cf18 float} value;            {\cf20 // Material map value}\par
353 \} MaterialMap;\par
354 \par
355 {\cf20 // Material, includes shader and maps}\par
356 {\cf17 typedef} {\cf17 struct }Material \{\par
357     Shader shader;          {\cf20 // Material shader}\par
358     MaterialMap *maps;      {\cf20 // Material maps array (MAX_MATERIAL_MAPS)}\par
359     {\cf18 float} params[4];        {\cf20 // Material generic parameters (if required)}\par
360 \} Material;\par
361 \par
362 {\cf20 // Transform, vectex transformation data}\par
363 {\cf17 typedef} {\cf17 struct }Transform \{\par
364     Vector3 translation;    {\cf20 // Translation}\par
365     Quaternion rotation;    {\cf20 // Rotation}\par
366     Vector3 scale;          {\cf20 // Scale}\par
367 \} Transform;\par
368 \par
369 {\cf20 // Bone, skeletal animation bone}\par
370 {\cf17 typedef} {\cf17 struct }BoneInfo \{\par
371     {\cf18 char} name[32];          {\cf20 // Bone name}\par
372     {\cf18 int} parent;             {\cf20 // Bone parent}\par
373 \} BoneInfo;\par
374 \par
375 {\cf20 // Model, meshes, materials and animation data}\par
376 {\cf17 typedef} {\cf17 struct }Model \{\par
377     Matrix transform;       {\cf20 // Local transform matrix}\par
378 \par
379     {\cf18 int} meshCount;          {\cf20 // Number of meshes}\par
380     {\cf18 int} materialCount;      {\cf20 // Number of materials}\par
381     Mesh *meshes;           {\cf20 // Meshes array}\par
382     Material *materials;    {\cf20 // Materials array}\par
383     {\cf18 int} *meshMaterial;      {\cf20 // Mesh material number}\par
384 \par
385     {\cf20 // Animation data}\par
386     {\cf18 int} boneCount;          {\cf20 // Number of bones}\par
387     BoneInfo *bones;        {\cf20 // Bones information (skeleton)}\par
388     Transform *bindPose;    {\cf20 // Bones base transformation (pose)}\par
389 \} Model;\par
390 \par
391 {\cf20 // ModelAnimation}\par
392 {\cf17 typedef} {\cf17 struct }ModelAnimation \{\par
393     {\cf18 int} boneCount;          {\cf20 // Number of bones}\par
394     {\cf18 int} frameCount;         {\cf20 // Number of animation frames}\par
395     BoneInfo *bones;        {\cf20 // Bones information (skeleton)}\par
396     Transform **framePoses; {\cf20 // Poses array by frame}\par
397 \} ModelAnimation;\par
398 \par
399 {\cf20 // Ray, ray for raycasting}\par
400 {\cf17 typedef} {\cf17 struct }Ray \{\par
401     Vector3 position;       {\cf20 // Ray position (origin)}\par
402     Vector3 direction;      {\cf20 // Ray direction}\par
403 \} Ray;\par
404 \par
405 {\cf20 // RayCollision, ray hit information}\par
406 {\cf17 typedef} {\cf17 struct }RayCollision \{\par
407     {\cf18 bool} hit;               {\cf20 // Did the ray hit something?}\par
408     {\cf18 float} distance;         {\cf20 // Distance to nearest hit}\par
409     Vector3 point;          {\cf20 // Point of nearest hit}\par
410     Vector3 normal;         {\cf20 // Surface normal of hit}\par
411 \} RayCollision;\par
412 \par
413 {\cf20 // BoundingBox}\par
414 {\cf17 typedef} {\cf17 struct }BoundingBox \{\par
415     Vector3 min;            {\cf20 // Minimum vertex box-corner}\par
416     Vector3 max;            {\cf20 // Maximum vertex box-corner}\par
417 \} BoundingBox;\par
418 \par
419 {\cf20 // Wave, audio wave data}\par
420 {\cf17 typedef} {\cf17 struct }Wave \{\par
421     {\cf18 unsigned} {\cf18 int} frameCount;    {\cf20 // Total number of frames (considering channels)}\par
422     {\cf18 unsigned} {\cf18 int} sampleRate;    {\cf20 // Frequency (samples per second)}\par
423     {\cf18 unsigned} {\cf18 int} sampleSize;    {\cf20 // Bit depth (bits per sample): 8, 16, 32 (24 not supported)}\par
424     {\cf18 unsigned} {\cf18 int} channels;      {\cf20 // Number of channels (1-mono, 2-stereo, ...)}\par
425     {\cf18 void} *data;                 {\cf20 // Buffer data pointer}\par
426 \} Wave;\par
427 \par
428 {\cf20 // Opaque structs declaration}\par
429 {\cf20 // NOTE: Actual structs are defined internally in raudio module}\par
430 {\cf17 typedef} {\cf17 struct }rAudioBuffer rAudioBuffer;\par
431 {\cf17 typedef} {\cf17 struct }rAudioProcessor rAudioProcessor;\par
432 \par
433 {\cf20 // AudioStream, custom audio stream}\par
434 {\cf17 typedef} {\cf17 struct }AudioStream \{\par
435     rAudioBuffer *buffer;       {\cf20 // Pointer to internal data used by the audio system}\par
436     rAudioProcessor *processor; {\cf20 // Pointer to internal data processor, useful for audio effects}\par
437 \par
438     {\cf18 unsigned} {\cf18 int} sampleRate;    {\cf20 // Frequency (samples per second)}\par
439     {\cf18 unsigned} {\cf18 int} sampleSize;    {\cf20 // Bit depth (bits per sample): 8, 16, 32 (24 not supported)}\par
440     {\cf18 unsigned} {\cf18 int} channels;      {\cf20 // Number of channels (1-mono, 2-stereo, ...)}\par
441 \} AudioStream;\par
442 \par
443 {\cf20 // Sound}\par
444 {\cf17 typedef} {\cf17 struct }Sound \{\par
445     AudioStream stream;         {\cf20 // Audio stream}\par
446     {\cf18 unsigned} {\cf18 int} frameCount;    {\cf20 // Total number of frames (considering channels)}\par
447 \} Sound;\par
448 \par
449 {\cf20 // Music, audio stream, anything longer than ~10 seconds should be streamed}\par
450 {\cf17 typedef} {\cf17 struct }Music \{\par
451     AudioStream stream;         {\cf20 // Audio stream}\par
452     {\cf18 unsigned} {\cf18 int} frameCount;    {\cf20 // Total number of frames (considering channels)}\par
453     {\cf18 bool} looping;               {\cf20 // Music looping enable}\par
454 \par
455     {\cf18 int} ctxType;                {\cf20 // Type of music context (audio filetype)}\par
456     {\cf18 void} *ctxData;              {\cf20 // Audio context data, depends on type}\par
457 \} Music;\par
458 \par
459 {\cf20 // VrDeviceInfo, Head-Mounted-Display device parameters}\par
460 {\cf17 typedef} {\cf17 struct }VrDeviceInfo \{\par
461     {\cf18 int} hResolution;                {\cf20 // Horizontal resolution in pixels}\par
462     {\cf18 int} vResolution;                {\cf20 // Vertical resolution in pixels}\par
463     {\cf18 float} hScreenSize;              {\cf20 // Horizontal size in meters}\par
464     {\cf18 float} vScreenSize;              {\cf20 // Vertical size in meters}\par
465     {\cf18 float} vScreenCenter;            {\cf20 // Screen center in meters}\par
466     {\cf18 float} eyeToScreenDistance;      {\cf20 // Distance between eye and display in meters}\par
467     {\cf18 float} lensSeparationDistance;   {\cf20 // Lens separation distance in meters}\par
468     {\cf18 float} interpupillaryDistance;   {\cf20 // IPD (distance between pupils) in meters}\par
469     {\cf18 float} lensDistortionValues[4];  {\cf20 // Lens distortion constant parameters}\par
470     {\cf18 float} chromaAbCorrection[4];    {\cf20 // Chromatic aberration correction parameters}\par
471 \} VrDeviceInfo;\par
472 \par
473 {\cf20 // VrStereoConfig, VR stereo rendering configuration for simulator}\par
474 {\cf17 typedef} {\cf17 struct }VrStereoConfig \{\par
475     Matrix projection[2];           {\cf20 // VR projection matrices (per eye)}\par
476     Matrix viewOffset[2];           {\cf20 // VR view offset matrices (per eye)}\par
477     {\cf18 float} leftLensCenter[2];        {\cf20 // VR left lens center}\par
478     {\cf18 float} rightLensCenter[2];       {\cf20 // VR right lens center}\par
479     {\cf18 float} leftScreenCenter[2];      {\cf20 // VR left screen center}\par
480     {\cf18 float} rightScreenCenter[2];     {\cf20 // VR right screen center}\par
481     {\cf18 float} scale[2];                 {\cf20 // VR distortion scale}\par
482     {\cf18 float} scaleIn[2];               {\cf20 // VR distortion scale in}\par
483 \} VrStereoConfig;\par
484 \par
485 {\cf20 //----------------------------------------------------------------------------------}\par
486 {\cf20 // Enumerators Definition}\par
487 {\cf20 //----------------------------------------------------------------------------------}\par
488 {\cf20 // System/Window config flags}\par
489 {\cf20 // NOTE: Every bit registers one state (use it with bit masks)}\par
490 {\cf20 // By default all flags are set to 0}\par
491 {\cf17 typedef} {\cf17 enum} \{\par
492     FLAG_VSYNC_HINT         = 0x00000040,   {\cf20 // Set to try enabling V-Sync on GPU}\par
493     FLAG_FULLSCREEN_MODE    = 0x00000002,   {\cf20 // Set to run program in fullscreen}\par
494     FLAG_WINDOW_RESIZABLE   = 0x00000004,   {\cf20 // Set to allow resizable window}\par
495     FLAG_WINDOW_UNDECORATED = 0x00000008,   {\cf20 // Set to disable window decoration (frame and buttons)}\par
496     FLAG_WINDOW_HIDDEN      = 0x00000080,   {\cf20 // Set to hide window}\par
497     FLAG_WINDOW_MINIMIZED   = 0x00000200,   {\cf20 // Set to minimize window (iconify)}\par
498     FLAG_WINDOW_MAXIMIZED   = 0x00000400,   {\cf20 // Set to maximize window (expanded to monitor)}\par
499     FLAG_WINDOW_UNFOCUSED   = 0x00000800,   {\cf20 // Set to window non focused}\par
500     FLAG_WINDOW_TOPMOST     = 0x00001000,   {\cf20 // Set to window always on top}\par
501     FLAG_WINDOW_ALWAYS_RUN  = 0x00000100,   {\cf20 // Set to allow windows running while minimized}\par
502     FLAG_WINDOW_TRANSPARENT = 0x00000010,   {\cf20 // Set to allow transparent framebuffer}\par
503     FLAG_WINDOW_HIGHDPI     = 0x00002000,   {\cf20 // Set to support HighDPI}\par
504     FLAG_MSAA_4X_HINT       = 0x00000020,   {\cf20 // Set to try enabling MSAA 4X}\par
505     FLAG_INTERLACED_HINT    = 0x00010000    {\cf20 // Set to try enabling interlaced video format (for V3D)}\par
506 \} ConfigFlags;\par
507 \par
508 {\cf20 // Trace log level}\par
509 {\cf20 // NOTE: Organized by priority level}\par
510 {\cf17 typedef} {\cf17 enum} \{\par
511     LOG_ALL = 0,        {\cf20 // Display all logs}\par
512     LOG_TRACE,          {\cf20 // Trace logging, intended for internal use only}\par
513     LOG_DEBUG,          {\cf20 // Debug logging, used for internal debugging, it should be disabled on release builds}\par
514     LOG_INFO,           {\cf20 // Info logging, used for program execution info}\par
515     LOG_WARNING,        {\cf20 // Warning logging, used on recoverable failures}\par
516     LOG_ERROR,          {\cf20 // Error logging, used on unrecoverable failures}\par
517     LOG_FATAL,          {\cf20 // Fatal logging, used to abort program: exit(EXIT_FAILURE)}\par
518     LOG_NONE            {\cf20 // Disable logging}\par
519 \} TraceLogLevel;\par
520 \par
521 {\cf20 // Keyboard keys (US keyboard layout)}\par
522 {\cf20 // NOTE: Use GetKeyPressed() to allow redefining}\par
523 {\cf20 // required keys for alternative layouts}\par
524 {\cf17 typedef} {\cf17 enum} \{\par
525     KEY_NULL            = 0,        {\cf20 // Key: NULL, used for no key pressed}\par
526     {\cf20 // Alphanumeric keys}\par
527     KEY_APOSTROPHE      = 39,       {\cf20 // Key: '}\par
528     KEY_COMMA           = 44,       {\cf20 // Key: ,}\par
529     KEY_MINUS           = 45,       {\cf20 // Key: -}\par
530     KEY_PERIOD          = 46,       {\cf20 // Key: .}\par
531     KEY_SLASH           = 47,       {\cf20 // Key: /}\par
532     KEY_ZERO            = 48,       {\cf20 // Key: 0}\par
533     KEY_ONE             = 49,       {\cf20 // Key: 1}\par
534     KEY_TWO             = 50,       {\cf20 // Key: 2}\par
535     KEY_THREE           = 51,       {\cf20 // Key: 3}\par
536     KEY_FOUR            = 52,       {\cf20 // Key: 4}\par
537     KEY_FIVE            = 53,       {\cf20 // Key: 5}\par
538     KEY_SIX             = 54,       {\cf20 // Key: 6}\par
539     KEY_SEVEN           = 55,       {\cf20 // Key: 7}\par
540     KEY_EIGHT           = 56,       {\cf20 // Key: 8}\par
541     KEY_NINE            = 57,       {\cf20 // Key: 9}\par
542     KEY_SEMICOLON       = 59,       {\cf20 // Key: ;}\par
543     KEY_EQUAL           = 61,       {\cf20 // Key: =}\par
544     KEY_A               = 65,       {\cf20 // Key: A | a}\par
545     KEY_B               = 66,       {\cf20 // Key: B | b}\par
546     KEY_C               = 67,       {\cf20 // Key: C | c}\par
547     KEY_D               = 68,       {\cf20 // Key: D | d}\par
548     KEY_E               = 69,       {\cf20 // Key: E | e}\par
549     KEY_F               = 70,       {\cf20 // Key: F | f}\par
550     KEY_G               = 71,       {\cf20 // Key: G | g}\par
551     KEY_H               = 72,       {\cf20 // Key: H | h}\par
552     KEY_I               = 73,       {\cf20 // Key: I | i}\par
553     KEY_J               = 74,       {\cf20 // Key: J | j}\par
554     KEY_K               = 75,       {\cf20 // Key: K | k}\par
555     KEY_L               = 76,       {\cf20 // Key: L | l}\par
556     KEY_M               = 77,       {\cf20 // Key: M | m}\par
557     KEY_N               = 78,       {\cf20 // Key: N | n}\par
558     KEY_O               = 79,       {\cf20 // Key: O | o}\par
559     KEY_P               = 80,       {\cf20 // Key: P | p}\par
560     KEY_Q               = 81,       {\cf20 // Key: Q | q}\par
561     KEY_R               = 82,       {\cf20 // Key: R | r}\par
562     KEY_S               = 83,       {\cf20 // Key: S | s}\par
563     KEY_T               = 84,       {\cf20 // Key: T | t}\par
564     KEY_U               = 85,       {\cf20 // Key: U | u}\par
565     KEY_V               = 86,       {\cf20 // Key: V | v}\par
566     KEY_W               = 87,       {\cf20 // Key: W | w}\par
567     KEY_X               = 88,       {\cf20 // Key: X | x}\par
568     KEY_Y               = 89,       {\cf20 // Key: Y | y}\par
569     KEY_Z               = 90,       {\cf20 // Key: Z | z}\par
570     KEY_LEFT_BRACKET    = 91,       {\cf20 // Key: [}\par
571     KEY_BACKSLASH       = 92,       {\cf20 // Key: '\\'}\par
572     KEY_RIGHT_BRACKET   = 93,       {\cf20 // Key: ]}\par
573     KEY_GRAVE           = 96,       {\cf20 // Key: `}\par
574     {\cf20 // Function keys}\par
575     KEY_SPACE           = 32,       {\cf20 // Key: Space}\par
576     KEY_ESCAPE          = 256,      {\cf20 // Key: Esc}\par
577     KEY_ENTER           = 257,      {\cf20 // Key: Enter}\par
578     KEY_TAB             = 258,      {\cf20 // Key: Tab}\par
579     KEY_BACKSPACE       = 259,      {\cf20 // Key: Backspace}\par
580     KEY_INSERT          = 260,      {\cf20 // Key: Ins}\par
581     KEY_DELETE          = 261,      {\cf20 // Key: Del}\par
582     KEY_RIGHT           = 262,      {\cf20 // Key: Cursor right}\par
583     KEY_LEFT            = 263,      {\cf20 // Key: Cursor left}\par
584     KEY_DOWN            = 264,      {\cf20 // Key: Cursor down}\par
585     KEY_UP              = 265,      {\cf20 // Key: Cursor up}\par
586     KEY_PAGE_UP         = 266,      {\cf20 // Key: Page up}\par
587     KEY_PAGE_DOWN       = 267,      {\cf20 // Key: Page down}\par
588     KEY_HOME            = 268,      {\cf20 // Key: Home}\par
589     KEY_END             = 269,      {\cf20 // Key: End}\par
590     KEY_CAPS_LOCK       = 280,      {\cf20 // Key: Caps lock}\par
591     KEY_SCROLL_LOCK     = 281,      {\cf20 // Key: Scroll down}\par
592     KEY_NUM_LOCK        = 282,      {\cf20 // Key: Num lock}\par
593     KEY_PRINT_SCREEN    = 283,      {\cf20 // Key: Print screen}\par
594     KEY_PAUSE           = 284,      {\cf20 // Key: Pause}\par
595     KEY_F1              = 290,      {\cf20 // Key: F1}\par
596     KEY_F2              = 291,      {\cf20 // Key: F2}\par
597     KEY_F3              = 292,      {\cf20 // Key: F3}\par
598     KEY_F4              = 293,      {\cf20 // Key: F4}\par
599     KEY_F5              = 294,      {\cf20 // Key: F5}\par
600     KEY_F6              = 295,      {\cf20 // Key: F6}\par
601     KEY_F7              = 296,      {\cf20 // Key: F7}\par
602     KEY_F8              = 297,      {\cf20 // Key: F8}\par
603     KEY_F9              = 298,      {\cf20 // Key: F9}\par
604     KEY_F10             = 299,      {\cf20 // Key: F10}\par
605     KEY_F11             = 300,      {\cf20 // Key: F11}\par
606     KEY_F12             = 301,      {\cf20 // Key: F12}\par
607     KEY_LEFT_SHIFT      = 340,      {\cf20 // Key: Shift left}\par
608     KEY_LEFT_CONTROL    = 341,      {\cf20 // Key: Control left}\par
609     KEY_LEFT_ALT        = 342,      {\cf20 // Key: Alt left}\par
610     KEY_LEFT_SUPER      = 343,      {\cf20 // Key: Super left}\par
611     KEY_RIGHT_SHIFT     = 344,      {\cf20 // Key: Shift right}\par
612     KEY_RIGHT_CONTROL   = 345,      {\cf20 // Key: Control right}\par
613     KEY_RIGHT_ALT       = 346,      {\cf20 // Key: Alt right}\par
614     KEY_RIGHT_SUPER     = 347,      {\cf20 // Key: Super right}\par
615     KEY_KB_MENU         = 348,      {\cf20 // Key: KB menu}\par
616     {\cf20 // Keypad keys}\par
617     KEY_KP_0            = 320,      {\cf20 // Key: Keypad 0}\par
618     KEY_KP_1            = 321,      {\cf20 // Key: Keypad 1}\par
619     KEY_KP_2            = 322,      {\cf20 // Key: Keypad 2}\par
620     KEY_KP_3            = 323,      {\cf20 // Key: Keypad 3}\par
621     KEY_KP_4            = 324,      {\cf20 // Key: Keypad 4}\par
622     KEY_KP_5            = 325,      {\cf20 // Key: Keypad 5}\par
623     KEY_KP_6            = 326,      {\cf20 // Key: Keypad 6}\par
624     KEY_KP_7            = 327,      {\cf20 // Key: Keypad 7}\par
625     KEY_KP_8            = 328,      {\cf20 // Key: Keypad 8}\par
626     KEY_KP_9            = 329,      {\cf20 // Key: Keypad 9}\par
627     KEY_KP_DECIMAL      = 330,      {\cf20 // Key: Keypad .}\par
628     KEY_KP_DIVIDE       = 331,      {\cf20 // Key: Keypad /}\par
629     KEY_KP_MULTIPLY     = 332,      {\cf20 // Key: Keypad *}\par
630     KEY_KP_SUBTRACT     = 333,      {\cf20 // Key: Keypad -}\par
631     KEY_KP_ADD          = 334,      {\cf20 // Key: Keypad +}\par
632     KEY_KP_ENTER        = 335,      {\cf20 // Key: Keypad Enter}\par
633     KEY_KP_EQUAL        = 336,      {\cf20 // Key: Keypad =}\par
634     {\cf20 // Android key buttons}\par
635     KEY_BACK            = 4,        {\cf20 // Key: Android back button}\par
636     KEY_MENU            = 82,       {\cf20 // Key: Android menu button}\par
637     KEY_VOLUME_UP       = 24,       {\cf20 // Key: Android volume up button}\par
638     KEY_VOLUME_DOWN     = 25        {\cf20 // Key: Android volume down button}\par
639 \} KeyboardKey;\par
640 \par
641 {\cf20 // Add backwards compatibility support for deprecated names}\par
642 {\cf21 #define MOUSE_LEFT_BUTTON   MOUSE_BUTTON_LEFT}\par
643 {\cf21 #define MOUSE_RIGHT_BUTTON  MOUSE_BUTTON_RIGHT}\par
644 {\cf21 #define MOUSE_MIDDLE_BUTTON MOUSE_BUTTON_MIDDLE}\par
645 \par
646 {\cf20 // Mouse buttons}\par
647 {\cf17 typedef} {\cf17 enum} \{\par
648     MOUSE_BUTTON_LEFT    = 0,       {\cf20 // Mouse button left}\par
649     MOUSE_BUTTON_RIGHT   = 1,       {\cf20 // Mouse button right}\par
650     MOUSE_BUTTON_MIDDLE  = 2,       {\cf20 // Mouse button middle (pressed wheel)}\par
651     MOUSE_BUTTON_SIDE    = 3,       {\cf20 // Mouse button side (advanced mouse device)}\par
652     MOUSE_BUTTON_EXTRA   = 4,       {\cf20 // Mouse button extra (advanced mouse device)}\par
653     MOUSE_BUTTON_FORWARD = 5,       {\cf20 // Mouse button fordward (advanced mouse device)}\par
654     MOUSE_BUTTON_BACK    = 6,       {\cf20 // Mouse button back (advanced mouse device)}\par
655 \} MouseButton;\par
656 \par
657 {\cf20 // Mouse cursor}\par
658 {\cf17 typedef} {\cf17 enum} \{\par
659     MOUSE_CURSOR_DEFAULT       = 0,     {\cf20 // Default pointer shape}\par
660     MOUSE_CURSOR_ARROW         = 1,     {\cf20 // Arrow shape}\par
661     MOUSE_CURSOR_IBEAM         = 2,     {\cf20 // Text writing cursor shape}\par
662     MOUSE_CURSOR_CROSSHAIR     = 3,     {\cf20 // Cross shape}\par
663     MOUSE_CURSOR_POINTING_HAND = 4,     {\cf20 // Pointing hand cursor}\par
664     MOUSE_CURSOR_RESIZE_EW     = 5,     {\cf20 // Horizontal resize/move arrow shape}\par
665     MOUSE_CURSOR_RESIZE_NS     = 6,     {\cf20 // Vertical resize/move arrow shape}\par
666     MOUSE_CURSOR_RESIZE_NWSE   = 7,     {\cf20 // Top-left to bottom-right diagonal resize/move arrow shape}\par
667     MOUSE_CURSOR_RESIZE_NESW   = 8,     {\cf20 // The top-right to bottom-left diagonal resize/move arrow shape}\par
668     MOUSE_CURSOR_RESIZE_ALL    = 9,     {\cf20 // The omni-directional resize/move cursor shape}\par
669     MOUSE_CURSOR_NOT_ALLOWED   = 10     {\cf20 // The operation-not-allowed shape}\par
670 \} MouseCursor;\par
671 \par
672 {\cf20 // Gamepad buttons}\par
673 {\cf17 typedef} {\cf17 enum} \{\par
674     GAMEPAD_BUTTON_UNKNOWN = 0,         {\cf20 // Unknown button, just for error checking}\par
675     GAMEPAD_BUTTON_LEFT_FACE_UP,        {\cf20 // Gamepad left DPAD up button}\par
676     GAMEPAD_BUTTON_LEFT_FACE_RIGHT,     {\cf20 // Gamepad left DPAD right button}\par
677     GAMEPAD_BUTTON_LEFT_FACE_DOWN,      {\cf20 // Gamepad left DPAD down button}\par
678     GAMEPAD_BUTTON_LEFT_FACE_LEFT,      {\cf20 // Gamepad left DPAD left button}\par
679     GAMEPAD_BUTTON_RIGHT_FACE_UP,       {\cf20 // Gamepad right button up (i.e. PS3: Triangle, Xbox: Y)}\par
680     GAMEPAD_BUTTON_RIGHT_FACE_RIGHT,    {\cf20 // Gamepad right button right (i.e. PS3: Square, Xbox: X)}\par
681     GAMEPAD_BUTTON_RIGHT_FACE_DOWN,     {\cf20 // Gamepad right button down (i.e. PS3: Cross, Xbox: A)}\par
682     GAMEPAD_BUTTON_RIGHT_FACE_LEFT,     {\cf20 // Gamepad right button left (i.e. PS3: Circle, Xbox: B)}\par
683     GAMEPAD_BUTTON_LEFT_TRIGGER_1,      {\cf20 // Gamepad top/back trigger left (first), it could be a trailing button}\par
684     GAMEPAD_BUTTON_LEFT_TRIGGER_2,      {\cf20 // Gamepad top/back trigger left (second), it could be a trailing button}\par
685     GAMEPAD_BUTTON_RIGHT_TRIGGER_1,     {\cf20 // Gamepad top/back trigger right (one), it could be a trailing button}\par
686     GAMEPAD_BUTTON_RIGHT_TRIGGER_2,     {\cf20 // Gamepad top/back trigger right (second), it could be a trailing button}\par
687     GAMEPAD_BUTTON_MIDDLE_LEFT,         {\cf20 // Gamepad center buttons, left one (i.e. PS3: Select)}\par
688     GAMEPAD_BUTTON_MIDDLE,              {\cf20 // Gamepad center buttons, middle one (i.e. PS3: PS, Xbox: XBOX)}\par
689     GAMEPAD_BUTTON_MIDDLE_RIGHT,        {\cf20 // Gamepad center buttons, right one (i.e. PS3: Start)}\par
690     GAMEPAD_BUTTON_LEFT_THUMB,          {\cf20 // Gamepad joystick pressed button left}\par
691     GAMEPAD_BUTTON_RIGHT_THUMB          {\cf20 // Gamepad joystick pressed button right}\par
692 \} GamepadButton;\par
693 \par
694 {\cf20 // Gamepad axis}\par
695 {\cf17 typedef} {\cf17 enum} \{\par
696     GAMEPAD_AXIS_LEFT_X        = 0,     {\cf20 // Gamepad left stick X axis}\par
697     GAMEPAD_AXIS_LEFT_Y        = 1,     {\cf20 // Gamepad left stick Y axis}\par
698     GAMEPAD_AXIS_RIGHT_X       = 2,     {\cf20 // Gamepad right stick X axis}\par
699     GAMEPAD_AXIS_RIGHT_Y       = 3,     {\cf20 // Gamepad right stick Y axis}\par
700     GAMEPAD_AXIS_LEFT_TRIGGER  = 4,     {\cf20 // Gamepad back trigger left, pressure level: [1..-1]}\par
701     GAMEPAD_AXIS_RIGHT_TRIGGER = 5      {\cf20 // Gamepad back trigger right, pressure level: [1..-1]}\par
702 \} GamepadAxis;\par
703 \par
704 {\cf20 // Material map index}\par
705 {\cf17 typedef} {\cf17 enum} \{\par
706     MATERIAL_MAP_ALBEDO    = 0,     {\cf20 // Albedo material (same as: MATERIAL_MAP_DIFFUSE)}\par
707     MATERIAL_MAP_METALNESS,         {\cf20 // Metalness material (same as: MATERIAL_MAP_SPECULAR)}\par
708     MATERIAL_MAP_NORMAL,            {\cf20 // Normal material}\par
709     MATERIAL_MAP_ROUGHNESS,         {\cf20 // Roughness material}\par
710     MATERIAL_MAP_OCCLUSION,         {\cf20 // Ambient occlusion material}\par
711     MATERIAL_MAP_EMISSION,          {\cf20 // Emission material}\par
712     MATERIAL_MAP_HEIGHT,            {\cf20 // Heightmap material}\par
713     MATERIAL_MAP_CUBEMAP,           {\cf20 // Cubemap material (NOTE: Uses GL_TEXTURE_CUBE_MAP)}\par
714     MATERIAL_MAP_IRRADIANCE,        {\cf20 // Irradiance material (NOTE: Uses GL_TEXTURE_CUBE_MAP)}\par
715     MATERIAL_MAP_PREFILTER,         {\cf20 // Prefilter material (NOTE: Uses GL_TEXTURE_CUBE_MAP)}\par
716     MATERIAL_MAP_BRDF               {\cf20 // Brdf material}\par
717 \} MaterialMapIndex;\par
718 \par
719 {\cf21 #define MATERIAL_MAP_DIFFUSE      MATERIAL_MAP_ALBEDO}\par
720 {\cf21 #define MATERIAL_MAP_SPECULAR     MATERIAL_MAP_METALNESS}\par
721 \par
722 {\cf20 // Shader location index}\par
723 {\cf17 typedef} {\cf17 enum} \{\par
724     SHADER_LOC_VERTEX_POSITION = 0, {\cf20 // Shader location: vertex attribute: position}\par
725     SHADER_LOC_VERTEX_TEXCOORD01,   {\cf20 // Shader location: vertex attribute: texcoord01}\par
726     SHADER_LOC_VERTEX_TEXCOORD02,   {\cf20 // Shader location: vertex attribute: texcoord02}\par
727     SHADER_LOC_VERTEX_NORMAL,       {\cf20 // Shader location: vertex attribute: normal}\par
728     SHADER_LOC_VERTEX_TANGENT,      {\cf20 // Shader location: vertex attribute: tangent}\par
729     SHADER_LOC_VERTEX_COLOR,        {\cf20 // Shader location: vertex attribute: color}\par
730     SHADER_LOC_MATRIX_MVP,          {\cf20 // Shader location: matrix uniform: model-view-projection}\par
731     SHADER_LOC_MATRIX_VIEW,         {\cf20 // Shader location: matrix uniform: view (camera transform)}\par
732     SHADER_LOC_MATRIX_PROJECTION,   {\cf20 // Shader location: matrix uniform: projection}\par
733     SHADER_LOC_MATRIX_MODEL,        {\cf20 // Shader location: matrix uniform: model (transform)}\par
734     SHADER_LOC_MATRIX_NORMAL,       {\cf20 // Shader location: matrix uniform: normal}\par
735     SHADER_LOC_VECTOR_VIEW,         {\cf20 // Shader location: vector uniform: view}\par
736     SHADER_LOC_COLOR_DIFFUSE,       {\cf20 // Shader location: vector uniform: diffuse color}\par
737     SHADER_LOC_COLOR_SPECULAR,      {\cf20 // Shader location: vector uniform: specular color}\par
738     SHADER_LOC_COLOR_AMBIENT,       {\cf20 // Shader location: vector uniform: ambient color}\par
739     SHADER_LOC_MAP_ALBEDO,          {\cf20 // Shader location: sampler2d texture: albedo (same as: SHADER_LOC_MAP_DIFFUSE)}\par
740     SHADER_LOC_MAP_METALNESS,       {\cf20 // Shader location: sampler2d texture: metalness (same as: SHADER_LOC_MAP_SPECULAR)}\par
741     SHADER_LOC_MAP_NORMAL,          {\cf20 // Shader location: sampler2d texture: normal}\par
742     SHADER_LOC_MAP_ROUGHNESS,       {\cf20 // Shader location: sampler2d texture: roughness}\par
743     SHADER_LOC_MAP_OCCLUSION,       {\cf20 // Shader location: sampler2d texture: occlusion}\par
744     SHADER_LOC_MAP_EMISSION,        {\cf20 // Shader location: sampler2d texture: emission}\par
745     SHADER_LOC_MAP_HEIGHT,          {\cf20 // Shader location: sampler2d texture: height}\par
746     SHADER_LOC_MAP_CUBEMAP,         {\cf20 // Shader location: samplerCube texture: cubemap}\par
747     SHADER_LOC_MAP_IRRADIANCE,      {\cf20 // Shader location: samplerCube texture: irradiance}\par
748     SHADER_LOC_MAP_PREFILTER,       {\cf20 // Shader location: samplerCube texture: prefilter}\par
749     SHADER_LOC_MAP_BRDF             {\cf20 // Shader location: sampler2d texture: brdf}\par
750 \} ShaderLocationIndex;\par
751 \par
752 {\cf21 #define SHADER_LOC_MAP_DIFFUSE      SHADER_LOC_MAP_ALBEDO}\par
753 {\cf21 #define SHADER_LOC_MAP_SPECULAR     SHADER_LOC_MAP_METALNESS}\par
754 \par
755 {\cf20 // Shader uniform data type}\par
756 {\cf17 typedef} {\cf17 enum} \{\par
757     SHADER_UNIFORM_FLOAT = 0,       {\cf20 // Shader uniform type: float}\par
758     SHADER_UNIFORM_VEC2,            {\cf20 // Shader uniform type: vec2 (2 float)}\par
759     SHADER_UNIFORM_VEC3,            {\cf20 // Shader uniform type: vec3 (3 float)}\par
760     SHADER_UNIFORM_VEC4,            {\cf20 // Shader uniform type: vec4 (4 float)}\par
761     SHADER_UNIFORM_INT,             {\cf20 // Shader uniform type: int}\par
762     SHADER_UNIFORM_IVEC2,           {\cf20 // Shader uniform type: ivec2 (2 int)}\par
763     SHADER_UNIFORM_IVEC3,           {\cf20 // Shader uniform type: ivec3 (3 int)}\par
764     SHADER_UNIFORM_IVEC4,           {\cf20 // Shader uniform type: ivec4 (4 int)}\par
765     SHADER_UNIFORM_SAMPLER2D        {\cf20 // Shader uniform type: sampler2d}\par
766 \} ShaderUniformDataType;\par
767 \par
768 {\cf20 // Shader attribute data types}\par
769 {\cf17 typedef} {\cf17 enum} \{\par
770     SHADER_ATTRIB_FLOAT = 0,        {\cf20 // Shader attribute type: float}\par
771     SHADER_ATTRIB_VEC2,             {\cf20 // Shader attribute type: vec2 (2 float)}\par
772     SHADER_ATTRIB_VEC3,             {\cf20 // Shader attribute type: vec3 (3 float)}\par
773     SHADER_ATTRIB_VEC4              {\cf20 // Shader attribute type: vec4 (4 float)}\par
774 \} ShaderAttributeDataType;\par
775 \par
776 {\cf20 // Pixel formats}\par
777 {\cf20 // NOTE: Support depends on OpenGL version and platform}\par
778 {\cf17 typedef} {\cf17 enum} \{\par
779     PIXELFORMAT_UNCOMPRESSED_GRAYSCALE = 1, {\cf20 // 8 bit per pixel (no alpha)}\par
780     PIXELFORMAT_UNCOMPRESSED_GRAY_ALPHA,    {\cf20 // 8*2 bpp (2 channels)}\par
781     PIXELFORMAT_UNCOMPRESSED_R5G6B5,        {\cf20 // 16 bpp}\par
782     PIXELFORMAT_UNCOMPRESSED_R8G8B8,        {\cf20 // 24 bpp}\par
783     PIXELFORMAT_UNCOMPRESSED_R5G5B5A1,      {\cf20 // 16 bpp (1 bit alpha)}\par
784     PIXELFORMAT_UNCOMPRESSED_R4G4B4A4,      {\cf20 // 16 bpp (4 bit alpha)}\par
785     PIXELFORMAT_UNCOMPRESSED_R8G8B8A8,      {\cf20 // 32 bpp}\par
786     PIXELFORMAT_UNCOMPRESSED_R32,           {\cf20 // 32 bpp (1 channel - float)}\par
787     PIXELFORMAT_UNCOMPRESSED_R32G32B32,     {\cf20 // 32*3 bpp (3 channels - float)}\par
788     PIXELFORMAT_UNCOMPRESSED_R32G32B32A32,  {\cf20 // 32*4 bpp (4 channels - float)}\par
789     PIXELFORMAT_COMPRESSED_DXT1_RGB,        {\cf20 // 4 bpp (no alpha)}\par
790     PIXELFORMAT_COMPRESSED_DXT1_RGBA,       {\cf20 // 4 bpp (1 bit alpha)}\par
791     PIXELFORMAT_COMPRESSED_DXT3_RGBA,       {\cf20 // 8 bpp}\par
792     PIXELFORMAT_COMPRESSED_DXT5_RGBA,       {\cf20 // 8 bpp}\par
793     PIXELFORMAT_COMPRESSED_ETC1_RGB,        {\cf20 // 4 bpp}\par
794     PIXELFORMAT_COMPRESSED_ETC2_RGB,        {\cf20 // 4 bpp}\par
795     PIXELFORMAT_COMPRESSED_ETC2_EAC_RGBA,   {\cf20 // 8 bpp}\par
796     PIXELFORMAT_COMPRESSED_PVRT_RGB,        {\cf20 // 4 bpp}\par
797     PIXELFORMAT_COMPRESSED_PVRT_RGBA,       {\cf20 // 4 bpp}\par
798     PIXELFORMAT_COMPRESSED_ASTC_4x4_RGBA,   {\cf20 // 8 bpp}\par
799     PIXELFORMAT_COMPRESSED_ASTC_8x8_RGBA    {\cf20 // 2 bpp}\par
800 \} PixelFormat;\par
801 \par
802 {\cf20 // Texture parameters: filter mode}\par
803 {\cf20 // NOTE 1: Filtering considers mipmaps if available in the texture}\par
804 {\cf20 // NOTE 2: Filter is accordingly set for minification and magnification}\par
805 {\cf17 typedef} {\cf17 enum} \{\par
806     TEXTURE_FILTER_POINT = 0,               {\cf20 // No filter, just pixel approximation}\par
807     TEXTURE_FILTER_BILINEAR,                {\cf20 // Linear filtering}\par
808     TEXTURE_FILTER_TRILINEAR,               {\cf20 // Trilinear filtering (linear with mipmaps)}\par
809     TEXTURE_FILTER_ANISOTROPIC_4X,          {\cf20 // Anisotropic filtering 4x}\par
810     TEXTURE_FILTER_ANISOTROPIC_8X,          {\cf20 // Anisotropic filtering 8x}\par
811     TEXTURE_FILTER_ANISOTROPIC_16X,         {\cf20 // Anisotropic filtering 16x}\par
812 \} TextureFilter;\par
813 \par
814 {\cf20 // Texture parameters: wrap mode}\par
815 {\cf17 typedef} {\cf17 enum} \{\par
816     TEXTURE_WRAP_REPEAT = 0,                {\cf20 // Repeats texture in tiled mode}\par
817     TEXTURE_WRAP_CLAMP,                     {\cf20 // Clamps texture to edge pixel in tiled mode}\par
818     TEXTURE_WRAP_MIRROR_REPEAT,             {\cf20 // Mirrors and repeats the texture in tiled mode}\par
819     TEXTURE_WRAP_MIRROR_CLAMP               {\cf20 // Mirrors and clamps to border the texture in tiled mode}\par
820 \} TextureWrap;\par
821 \par
822 {\cf20 // Cubemap layouts}\par
823 {\cf17 typedef} {\cf17 enum} \{\par
824     CUBEMAP_LAYOUT_AUTO_DETECT = 0,         {\cf20 // Automatically detect layout type}\par
825     CUBEMAP_LAYOUT_LINE_VERTICAL,           {\cf20 // Layout is defined by a vertical line with faces}\par
826     CUBEMAP_LAYOUT_LINE_HORIZONTAL,         {\cf20 // Layout is defined by an horizontal line with faces}\par
827     CUBEMAP_LAYOUT_CROSS_THREE_BY_FOUR,     {\cf20 // Layout is defined by a 3x4 cross with cubemap faces}\par
828     CUBEMAP_LAYOUT_CROSS_FOUR_BY_THREE,     {\cf20 // Layout is defined by a 4x3 cross with cubemap faces}\par
829     CUBEMAP_LAYOUT_PANORAMA                 {\cf20 // Layout is defined by a panorama image (equirectangular map)}\par
830 \} CubemapLayout;\par
831 \par
832 {\cf20 // Font type, defines generation method}\par
833 {\cf17 typedef} {\cf17 enum} \{\par
834     FONT_DEFAULT = 0,               {\cf20 // Default font generation, anti-aliased}\par
835     FONT_BITMAP,                    {\cf20 // Bitmap font generation, no anti-aliasing}\par
836     FONT_SDF                        {\cf20 // SDF font generation, requires external shader}\par
837 \} FontType;\par
838 \par
839 {\cf20 // Color blending modes (pre-defined)}\par
840 {\cf17 typedef} {\cf17 enum} \{\par
841     BLEND_ALPHA = 0,                {\cf20 // Blend textures considering alpha (default)}\par
842     BLEND_ADDITIVE,                 {\cf20 // Blend textures adding colors}\par
843     BLEND_MULTIPLIED,               {\cf20 // Blend textures multiplying colors}\par
844     BLEND_ADD_COLORS,               {\cf20 // Blend textures adding colors (alternative)}\par
845     BLEND_SUBTRACT_COLORS,          {\cf20 // Blend textures subtracting colors (alternative)}\par
846     BLEND_ALPHA_PREMUL,             {\cf20 // Blend premultiplied textures considering alpha}\par
847     BLEND_CUSTOM                    {\cf20 // Blend textures using custom src/dst factors (use rlSetBlendMode())}\par
848 \} BlendMode;\par
849 \par
850 {\cf20 // Gesture}\par
851 {\cf20 // NOTE: It could be used as flags to enable only some gestures}\par
852 {\cf17 typedef} {\cf17 enum} \{\par
853     GESTURE_NONE        = 0,        {\cf20 // No gesture}\par
854     GESTURE_TAP         = 1,        {\cf20 // Tap gesture}\par
855     GESTURE_DOUBLETAP   = 2,        {\cf20 // Double tap gesture}\par
856     GESTURE_HOLD        = 4,        {\cf20 // Hold gesture}\par
857     GESTURE_DRAG        = 8,        {\cf20 // Drag gesture}\par
858     GESTURE_SWIPE_RIGHT = 16,       {\cf20 // Swipe right gesture}\par
859     GESTURE_SWIPE_LEFT  = 32,       {\cf20 // Swipe left gesture}\par
860     GESTURE_SWIPE_UP    = 64,       {\cf20 // Swipe up gesture}\par
861     GESTURE_SWIPE_DOWN  = 128,      {\cf20 // Swipe down gesture}\par
862     GESTURE_PINCH_IN    = 256,      {\cf20 // Pinch in gesture}\par
863     GESTURE_PINCH_OUT   = 512       {\cf20 // Pinch out gesture}\par
864 \} Gesture;\par
865 \par
866 {\cf20 // Camera system modes}\par
867 {\cf17 typedef} {\cf17 enum} \{\par
868     CAMERA_CUSTOM = 0,              {\cf20 // Custom camera}\par
869     CAMERA_FREE,                    {\cf20 // Free camera}\par
870     CAMERA_ORBITAL,                 {\cf20 // Orbital camera}\par
871     CAMERA_FIRST_PERSON,            {\cf20 // First person camera}\par
872     CAMERA_THIRD_PERSON             {\cf20 // Third person camera}\par
873 \} CameraMode;\par
874 \par
875 {\cf20 // Camera projection}\par
876 {\cf17 typedef} {\cf17 enum} \{\par
877     CAMERA_PERSPECTIVE = 0,         {\cf20 // Perspective projection}\par
878     CAMERA_ORTHOGRAPHIC             {\cf20 // Orthographic projection}\par
879 \} CameraProjection;\par
880 \par
881 {\cf20 // N-patch layout}\par
882 {\cf17 typedef} {\cf17 enum} \{\par
883     NPATCH_NINE_PATCH = 0,          {\cf20 // Npatch layout: 3x3 tiles}\par
884     NPATCH_THREE_PATCH_VERTICAL,    {\cf20 // Npatch layout: 1x3 tiles}\par
885     NPATCH_THREE_PATCH_HORIZONTAL   {\cf20 // Npatch layout: 3x1 tiles}\par
886 \} NPatchLayout;\par
887 \par
888 {\cf20 // Callbacks to hook some internal functions}\par
889 {\cf20 // WARNING: This callbacks are intended for advance users}\par
890 {\cf17 typedef} void (*TraceLogCallback)({\cf18 int} logLevel, {\cf17 const} {\cf18 char} *text, va_list args);  {\cf20 // Logging: Redirect trace log messages}\par
891 {\cf17 typedef} {\cf18 unsigned} {\cf18 char} *(*LoadFileDataCallback)({\cf17 const} {\cf18 char} *fileName, {\cf18 unsigned} {\cf18 int} *bytesRead);      {\cf20 // FileIO: Load binary data}\par
892 {\cf17 typedef} bool (*SaveFileDataCallback)({\cf17 const} {\cf18 char} *fileName, {\cf18 void} *data, {\cf18 unsigned} {\cf18 int} bytesToWrite);  {\cf20 // FileIO: Save binary data}\par
893 {\cf17 typedef} {\cf18 char} *(*LoadFileTextCallback)({\cf17 const} {\cf18 char} *fileName);       {\cf20 // FileIO: Load text data}\par
894 {\cf17 typedef} bool (*SaveFileTextCallback)({\cf17 const} {\cf18 char} *fileName, {\cf18 char} *text);     {\cf20 // FileIO: Save text data}\par
895 \par
896 {\cf20 //------------------------------------------------------------------------------------}\par
897 {\cf20 // Global Variables Definition}\par
898 {\cf20 //------------------------------------------------------------------------------------}\par
899 {\cf20 // It's lonely here...}\par
900 \par
901 {\cf20 //------------------------------------------------------------------------------------}\par
902 {\cf20 // Window and Graphics Device Functions (Module: core)}\par
903 {\cf20 //------------------------------------------------------------------------------------}\par
904 \par
905 {\cf21 #if defined(__cplusplus)}\par
906 {\cf17 extern} {\cf22 "C"} \{            {\cf20 // Prevents name mangling of functions}\par
907 {\cf21 #endif}\par
908 \par
909 {\cf20 // Window-related functions}\par
910 RLAPI {\cf18 void} InitWindow({\cf18 int} width, {\cf18 int} height, {\cf17 const} {\cf18 char} *title);  {\cf20 // Initialize window and OpenGL context}\par
911 RLAPI {\cf18 bool} WindowShouldClose({\cf18 void});                               {\cf20 // Check if KEY_ESCAPE pressed or Close icon pressed}\par
912 RLAPI {\cf18 void} CloseWindow({\cf18 void});                                     {\cf20 // Close window and unload OpenGL context}\par
913 RLAPI {\cf18 bool} IsWindowReady({\cf18 void});                                   {\cf20 // Check if window has been initialized successfully}\par
914 RLAPI {\cf18 bool} IsWindowFullscreen({\cf18 void});                              {\cf20 // Check if window is currently fullscreen}\par
915 RLAPI {\cf18 bool} IsWindowHidden({\cf18 void});                                  {\cf20 // Check if window is currently hidden (only PLATFORM_DESKTOP)}\par
916 RLAPI {\cf18 bool} IsWindowMinimized({\cf18 void});                               {\cf20 // Check if window is currently minimized (only PLATFORM_DESKTOP)}\par
917 RLAPI {\cf18 bool} IsWindowMaximized({\cf18 void});                               {\cf20 // Check if window is currently maximized (only PLATFORM_DESKTOP)}\par
918 RLAPI {\cf18 bool} IsWindowFocused({\cf18 void});                                 {\cf20 // Check if window is currently focused (only PLATFORM_DESKTOP)}\par
919 RLAPI {\cf18 bool} IsWindowResized({\cf18 void});                                 {\cf20 // Check if window has been resized last frame}\par
920 RLAPI {\cf18 bool} IsWindowState({\cf18 unsigned} {\cf18 int} flag);                      {\cf20 // Check if one specific window flag is enabled}\par
921 RLAPI {\cf18 void} SetWindowState({\cf18 unsigned} {\cf18 int} flags);                    {\cf20 // Set window configuration state using flags (only PLATFORM_DESKTOP)}\par
922 RLAPI {\cf18 void} ClearWindowState({\cf18 unsigned} {\cf18 int} flags);                  {\cf20 // Clear window configuration state flags}\par
923 RLAPI {\cf18 void} ToggleFullscreen({\cf18 void});                                {\cf20 // Toggle window state: fullscreen/windowed (only PLATFORM_DESKTOP)}\par
924 RLAPI {\cf18 void} MaximizeWindow({\cf18 void});                                  {\cf20 // Set window state: maximized, if resizable (only PLATFORM_DESKTOP)}\par
925 RLAPI {\cf18 void} MinimizeWindow({\cf18 void});                                  {\cf20 // Set window state: minimized, if resizable (only PLATFORM_DESKTOP)}\par
926 RLAPI {\cf18 void} RestoreWindow({\cf18 void});                                   {\cf20 // Set window state: not minimized/maximized (only PLATFORM_DESKTOP)}\par
927 RLAPI {\cf18 void} SetWindowIcon(Image image);                            {\cf20 // Set icon for window (only PLATFORM_DESKTOP)}\par
928 RLAPI {\cf18 void} SetWindowTitle({\cf17 const} {\cf18 char} *title);                     {\cf20 // Set title for window (only PLATFORM_DESKTOP)}\par
929 RLAPI {\cf18 void} SetWindowPosition({\cf18 int} x, {\cf18 int} y);                       {\cf20 // Set window position on screen (only PLATFORM_DESKTOP)}\par
930 RLAPI {\cf18 void} SetWindowMonitor({\cf18 int} monitor);                         {\cf20 // Set monitor for the current window (fullscreen mode)}\par
931 RLAPI {\cf18 void} SetWindowMinSize({\cf18 int} width, {\cf18 int} height);               {\cf20 // Set window minimum dimensions (for FLAG_WINDOW_RESIZABLE)}\par
932 RLAPI {\cf18 void} SetWindowSize({\cf18 int} width, {\cf18 int} height);                  {\cf20 // Set window dimensions}\par
933 RLAPI {\cf18 void} SetWindowOpacity({\cf18 float} opacity);                       {\cf20 // Set window opacity [0.0f..1.0f] (only PLATFORM_DESKTOP)}\par
934 RLAPI {\cf18 void} *GetWindowHandle({\cf18 void});                                {\cf20 // Get native window handle}\par
935 RLAPI {\cf18 int} GetScreenWidth({\cf18 void});                                   {\cf20 // Get current screen width}\par
936 RLAPI {\cf18 int} GetScreenHeight({\cf18 void});                                  {\cf20 // Get current screen height}\par
937 RLAPI {\cf18 int} GetRenderWidth({\cf18 void});                                   {\cf20 // Get current render width (it considers HiDPI)}\par
938 RLAPI {\cf18 int} GetRenderHeight({\cf18 void});                                  {\cf20 // Get current render height (it considers HiDPI)}\par
939 RLAPI {\cf18 int} GetMonitorCount({\cf18 void});                                  {\cf20 // Get number of connected monitors}\par
940 RLAPI {\cf18 int} GetCurrentMonitor({\cf18 void});                                {\cf20 // Get current connected monitor}\par
941 RLAPI Vector2 GetMonitorPosition({\cf18 int} monitor);                    {\cf20 // Get specified monitor position}\par
942 RLAPI {\cf18 int} GetMonitorWidth({\cf18 int} monitor);                           {\cf20 // Get specified monitor width (max available by monitor)}\par
943 RLAPI {\cf18 int} GetMonitorHeight({\cf18 int} monitor);                          {\cf20 // Get specified monitor height (max available by monitor)}\par
944 RLAPI {\cf18 int} GetMonitorPhysicalWidth({\cf18 int} monitor);                   {\cf20 // Get specified monitor physical width in millimetres}\par
945 RLAPI {\cf18 int} GetMonitorPhysicalHeight({\cf18 int} monitor);                  {\cf20 // Get specified monitor physical height in millimetres}\par
946 RLAPI {\cf18 int} GetMonitorRefreshRate({\cf18 int} monitor);                     {\cf20 // Get specified monitor refresh rate}\par
947 RLAPI Vector2 GetWindowPosition({\cf18 void});                            {\cf20 // Get window position XY on monitor}\par
948 RLAPI Vector2 GetWindowScaleDPI({\cf18 void});                            {\cf20 // Get window scale DPI factor}\par
949 RLAPI {\cf17 const} {\cf18 char} *GetMonitorName({\cf18 int} monitor);                    {\cf20 // Get the human-readable, UTF-8 encoded name of the primary monitor}\par
950 RLAPI {\cf18 void} SetClipboardText({\cf17 const} {\cf18 char} *text);                    {\cf20 // Set clipboard text content}\par
951 RLAPI {\cf17 const} {\cf18 char} *GetClipboardText({\cf18 void});                         {\cf20 // Get clipboard text content}\par
952 RLAPI {\cf18 void} EnableEventWaiting({\cf18 void});                              {\cf20 // Enable waiting for events on EndDrawing(), no automatic event polling}\par
953 RLAPI {\cf18 void} DisableEventWaiting({\cf18 void});                             {\cf20 // Disable waiting for events on EndDrawing(), automatic events polling}\par
954 \par
955 {\cf20 // Custom frame control functions}\par
956 {\cf20 // NOTE: Those functions are intended for advance users that want full control over the frame processing}\par
957 {\cf20 // By default EndDrawing() does this job: draws everything + SwapScreenBuffer() + manage frame timming + PollInputEvents()}\par
958 {\cf20 // To avoid that behaviour and control frame processes manually, enable in config.h: SUPPORT_CUSTOM_FRAME_CONTROL}\par
959 RLAPI {\cf18 void} SwapScreenBuffer({\cf18 void});                                {\cf20 // Swap back buffer with front buffer (screen drawing)}\par
960 RLAPI {\cf18 void} PollInputEvents({\cf18 void});                                 {\cf20 // Register all input events}\par
961 RLAPI {\cf18 void} WaitTime({\cf18 float} ms);                                    {\cf20 // Wait for some milliseconds (halt program execution)}\par
962 \par
963 {\cf20 // Cursor-related functions}\par
964 RLAPI {\cf18 void} ShowCursor({\cf18 void});                                      {\cf20 // Shows cursor}\par
965 RLAPI {\cf18 void} HideCursor({\cf18 void});                                      {\cf20 // Hides cursor}\par
966 RLAPI {\cf18 bool} IsCursorHidden({\cf18 void});                                  {\cf20 // Check if cursor is not visible}\par
967 RLAPI {\cf18 void} EnableCursor({\cf18 void});                                    {\cf20 // Enables cursor (unlock cursor)}\par
968 RLAPI {\cf18 void} DisableCursor({\cf18 void});                                   {\cf20 // Disables cursor (lock cursor)}\par
969 RLAPI {\cf18 bool} IsCursorOnScreen({\cf18 void});                                {\cf20 // Check if cursor is on the screen}\par
970 \par
971 {\cf20 // Drawing-related functions}\par
972 RLAPI {\cf18 void} ClearBackground(Color color);                          {\cf20 // Set background color (framebuffer clear color)}\par
973 RLAPI {\cf18 void} BeginDrawing({\cf18 void});                                    {\cf20 // Setup canvas (framebuffer) to start drawing}\par
974 RLAPI {\cf18 void} EndDrawing({\cf18 void});                                      {\cf20 // End canvas drawing and swap buffers (double buffering)}\par
975 RLAPI {\cf18 void} BeginMode2D(Camera2D camera);                          {\cf20 // Begin 2D mode with custom camera (2D)}\par
976 RLAPI {\cf18 void} EndMode2D({\cf18 void});                                       {\cf20 // Ends 2D mode with custom camera}\par
977 RLAPI {\cf18 void} BeginMode3D(Camera3D camera);                          {\cf20 // Begin 3D mode with custom camera (3D)}\par
978 RLAPI {\cf18 void} EndMode3D({\cf18 void});                                       {\cf20 // Ends 3D mode and returns to default 2D orthographic mode}\par
979 RLAPI {\cf18 void} BeginTextureMode(RenderTexture2D target);              {\cf20 // Begin drawing to render texture}\par
980 RLAPI {\cf18 void} EndTextureMode({\cf18 void});                                  {\cf20 // Ends drawing to render texture}\par
981 RLAPI {\cf18 void} BeginShaderMode(Shader shader);                        {\cf20 // Begin custom shader drawing}\par
982 RLAPI {\cf18 void} EndShaderMode({\cf18 void});                                   {\cf20 // End custom shader drawing (use default shader)}\par
983 RLAPI {\cf18 void} BeginBlendMode({\cf18 int} mode);                              {\cf20 // Begin blending mode (alpha, additive, multiplied, subtract, custom)}\par
984 RLAPI {\cf18 void} EndBlendMode({\cf18 void});                                    {\cf20 // End blending mode (reset to default: alpha blending)}\par
985 RLAPI {\cf18 void} BeginScissorMode({\cf18 int} x, {\cf18 int} y, {\cf18 int} width, {\cf18 int} height); {\cf20 // Begin scissor mode (define screen area for following drawing)}\par
986 RLAPI {\cf18 void} EndScissorMode({\cf18 void});                                  {\cf20 // End scissor mode}\par
987 RLAPI {\cf18 void} BeginVrStereoMode(VrStereoConfig config);              {\cf20 // Begin stereo rendering (requires VR simulator)}\par
988 RLAPI {\cf18 void} EndVrStereoMode({\cf18 void});                                 {\cf20 // End stereo rendering (requires VR simulator)}\par
989 \par
990 {\cf20 // VR stereo config functions for VR simulator}\par
991 RLAPI VrStereoConfig LoadVrStereoConfig(VrDeviceInfo device);     {\cf20 // Load VR stereo config for VR simulator device parameters}\par
992 RLAPI {\cf18 void} UnloadVrStereoConfig(VrStereoConfig config);           {\cf20 // Unload VR stereo config}\par
993 \par
994 {\cf20 // Shader management functions}\par
995 {\cf20 // NOTE: Shader functionality is not available on OpenGL 1.1}\par
996 RLAPI Shader LoadShader({\cf17 const} {\cf18 char} *vsFileName, {\cf17 const} {\cf18 char} *fsFileName);   {\cf20 // Load shader from files and bind default locations}\par
997 RLAPI Shader LoadShaderFromMemory({\cf17 const} {\cf18 char} *vsCode, {\cf17 const} {\cf18 char} *fsCode); {\cf20 // Load shader from code strings and bind default locations}\par
998 RLAPI {\cf18 int} GetShaderLocation(Shader shader, {\cf17 const} {\cf18 char} *uniformName);       {\cf20 // Get shader uniform location}\par
999 RLAPI {\cf18 int} GetShaderLocationAttrib(Shader shader, {\cf17 const} {\cf18 char} *attribName);  {\cf20 // Get shader attribute location}\par
1000 RLAPI {\cf18 void} SetShaderValue(Shader shader, {\cf18 int} locIndex, {\cf17 const} {\cf18 void} *value, {\cf18 int} uniformType);               {\cf20 // Set shader uniform value}\par
1001 RLAPI {\cf18 void} SetShaderValueV(Shader shader, {\cf18 int} locIndex, {\cf17 const} {\cf18 void} *value, {\cf18 int} uniformType, {\cf18 int} count);   {\cf20 // Set shader uniform value vector}\par
1002 RLAPI {\cf18 void} SetShaderValueMatrix(Shader shader, {\cf18 int} locIndex, Matrix mat);         {\cf20 // Set shader uniform value (matrix 4x4)}\par
1003 RLAPI {\cf18 void} SetShaderValueTexture(Shader shader, {\cf18 int} locIndex, Texture2D texture); {\cf20 // Set shader uniform value for texture (sampler2d)}\par
1004 RLAPI {\cf18 void} UnloadShader(Shader shader);                                    {\cf20 // Unload shader from GPU memory (VRAM)}\par
1005 \par
1006 {\cf20 // Screen-space-related functions}\par
1007 RLAPI Ray GetMouseRay(Vector2 mousePosition, Camera camera);      {\cf20 // Get a ray trace from mouse position}\par
1008 RLAPI Matrix GetCameraMatrix(Camera camera);                      {\cf20 // Get camera transform matrix (view matrix)}\par
1009 RLAPI Matrix GetCameraMatrix2D(Camera2D camera);                  {\cf20 // Get camera 2d transform matrix}\par
1010 RLAPI Vector2 GetWorldToScreen(Vector3 position, Camera camera);  {\cf20 // Get the screen space position for a 3d world space position}\par
1011 RLAPI Vector2 GetScreenToWorld2D(Vector2 position, Camera2D camera); {\cf20 // Get the world space position for a 2d camera screen space position}\par
1012 RLAPI Vector2 GetWorldToScreenEx(Vector3 position, Camera camera, {\cf18 int} width, {\cf18 int} height); {\cf20 // Get size position for a 3d world space position}\par
1013 RLAPI Vector2 GetWorldToScreen2D(Vector2 position, Camera2D camera); {\cf20 // Get the screen space position for a 2d camera world space position}\par
1014 \par
1015 {\cf20 // Timing-related functions}\par
1016 RLAPI {\cf18 void} SetTargetFPS({\cf18 int} fps);                                 {\cf20 // Set target FPS (maximum)}\par
1017 RLAPI {\cf18 int} GetFPS({\cf18 void});                                           {\cf20 // Get current FPS}\par
1018 RLAPI {\cf18 float} GetFrameTime({\cf18 void});                                   {\cf20 // Get time in seconds for last frame drawn (delta time)}\par
1019 RLAPI {\cf18 double} GetTime({\cf18 void});                                       {\cf20 // Get elapsed time in seconds since InitWindow()}\par
1020 \par
1021 {\cf20 // Misc. functions}\par
1022 RLAPI {\cf18 int} GetRandomValue({\cf18 int} min, {\cf18 int} max);                       {\cf20 // Get a random value between min and max (both included)}\par
1023 RLAPI {\cf18 void} SetRandomSeed({\cf18 unsigned} {\cf18 int} seed);                      {\cf20 // Set the seed for the random number generator}\par
1024 RLAPI {\cf18 void} TakeScreenshot({\cf17 const} {\cf18 char} *fileName);                  {\cf20 // Takes a screenshot of current screen (filename extension defines format)}\par
1025 RLAPI {\cf18 void} SetConfigFlags({\cf18 unsigned} {\cf18 int} flags);                    {\cf20 // Setup init configuration flags (view FLAGS)}\par
1026 \par
1027 RLAPI {\cf18 void} TraceLog({\cf18 int} logLevel, {\cf17 const} {\cf18 char} *text, ...);         {\cf20 // Show trace log messages (LOG_DEBUG, LOG_INFO, LOG_WARNING, LOG_ERROR...)}\par
1028 RLAPI {\cf18 void} SetTraceLogLevel({\cf18 int} logLevel);                        {\cf20 // Set the current threshold (minimum) log level}\par
1029 RLAPI {\cf18 void} *MemAlloc({\cf18 int} size);                                   {\cf20 // Internal memory allocator}\par
1030 RLAPI {\cf18 void} *MemRealloc({\cf18 void} *ptr, {\cf18 int} size);                      {\cf20 // Internal memory reallocator}\par
1031 RLAPI {\cf18 void} MemFree({\cf18 void} *ptr);                                    {\cf20 // Internal memory free}\par
1032 \par
1033 {\cf20 // Set custom callbacks}\par
1034 {\cf20 // WARNING: Callbacks setup is intended for advance users}\par
1035 RLAPI {\cf18 void} SetTraceLogCallback(TraceLogCallback callback);         {\cf20 // Set custom trace log}\par
1036 RLAPI {\cf18 void} SetLoadFileDataCallback(LoadFileDataCallback callback); {\cf20 // Set custom file binary data loader}\par
1037 RLAPI {\cf18 void} SetSaveFileDataCallback(SaveFileDataCallback callback); {\cf20 // Set custom file binary data saver}\par
1038 RLAPI {\cf18 void} SetLoadFileTextCallback(LoadFileTextCallback callback); {\cf20 // Set custom file text data loader}\par
1039 RLAPI {\cf18 void} SetSaveFileTextCallback(SaveFileTextCallback callback); {\cf20 // Set custom file text data saver}\par
1040 \par
1041 {\cf20 // Files management functions}\par
1042 RLAPI {\cf18 unsigned} {\cf18 char} *LoadFileData({\cf17 const} {\cf18 char} *fileName, {\cf18 unsigned} {\cf18 int} *bytesRead);       {\cf20 // Load file data as byte array (read)}\par
1043 RLAPI {\cf18 void} UnloadFileData({\cf18 unsigned} {\cf18 char} *data);                   {\cf20 // Unload file data allocated by LoadFileData()}\par
1044 RLAPI {\cf18 bool} SaveFileData({\cf17 const} {\cf18 char} *fileName, {\cf18 void} *data, {\cf18 unsigned} {\cf18 int} bytesToWrite);   {\cf20 // Save data to file from byte array (write), returns true on success}\par
1045 RLAPI {\cf18 bool} ExportDataAsCode({\cf17 const} {\cf18 char} *data, {\cf18 unsigned} {\cf18 int} size, {\cf17 const} {\cf18 char} *fileName); {\cf20 // Export data to code (.h), returns true on success}\par
1046 RLAPI {\cf18 char} *LoadFileText({\cf17 const} {\cf18 char} *fileName);                   {\cf20 // Load text data from file (read), returns a '\\0' terminated string}\par
1047 RLAPI {\cf18 void} UnloadFileText({\cf18 char} *text);                            {\cf20 // Unload file text data allocated by LoadFileText()}\par
1048 RLAPI {\cf18 bool} SaveFileText({\cf17 const} {\cf18 char} *fileName, {\cf18 char} *text);        {\cf20 // Save text data to file (write), string must be '\\0' terminated, returns true on success}\par
1049 RLAPI {\cf18 bool} FileExists({\cf17 const} {\cf18 char} *fileName);                      {\cf20 // Check if file exists}\par
1050 RLAPI {\cf18 bool} DirectoryExists({\cf17 const} {\cf18 char} *dirPath);                  {\cf20 // Check if a directory path exists}\par
1051 RLAPI {\cf18 bool} IsFileExtension({\cf17 const} {\cf18 char} *fileName, {\cf17 const} {\cf18 char} *ext); {\cf20 // Check file extension (including point: .png, .wav)}\par
1052 RLAPI {\cf18 int} GetFileLength({\cf17 const} {\cf18 char} *fileName);                    {\cf20 // Get file length in bytes (NOTE: GetFileSize() conflicts with windows.h)}\par
1053 RLAPI {\cf17 const} {\cf18 char} *GetFileExtension({\cf17 const} {\cf18 char} *fileName);         {\cf20 // Get pointer to extension for a filename string (includes dot: '.png')}\par
1054 RLAPI {\cf17 const} {\cf18 char} *GetFileName({\cf17 const} {\cf18 char} *filePath);              {\cf20 // Get pointer to filename for a path string}\par
1055 RLAPI {\cf17 const} {\cf18 char} *GetFileNameWithoutExt({\cf17 const} {\cf18 char} *filePath);    {\cf20 // Get filename string without extension (uses static string)}\par
1056 RLAPI {\cf17 const} {\cf18 char} *GetDirectoryPath({\cf17 const} {\cf18 char} *filePath);         {\cf20 // Get full path for a given fileName with path (uses static string)}\par
1057 RLAPI {\cf17 const} {\cf18 char} *GetPrevDirectoryPath({\cf17 const} {\cf18 char} *dirPath);      {\cf20 // Get previous directory path for a given path (uses static string)}\par
1058 RLAPI {\cf17 const} {\cf18 char} *GetWorkingDirectory({\cf18 void});                      {\cf20 // Get current working directory (uses static string)}\par
1059 RLAPI {\cf17 const} {\cf18 char} *GetApplicationDirectory({\cf18 void});                  {\cf20 // Get the directory if the running application (uses static string)}\par
1060 RLAPI {\cf18 char} **GetDirectoryFiles({\cf17 const} {\cf18 char} *dirPath, {\cf18 int} *count);  {\cf20 // Get filenames in a directory path (memory must be freed)}\par
1061 RLAPI {\cf18 void} ClearDirectoryFiles({\cf18 void});                             {\cf20 // Clear directory files paths buffers (free memory)}\par
1062 RLAPI {\cf18 bool} ChangeDirectory({\cf17 const} {\cf18 char} *dir);                      {\cf20 // Change working directory, return true on success}\par
1063 RLAPI {\cf18 bool} IsFileDropped({\cf18 void});                                   {\cf20 // Check if a file has been dropped into window}\par
1064 RLAPI {\cf18 char} **GetDroppedFiles({\cf18 int} *count);                         {\cf20 // Get dropped files names (memory must be freed)}\par
1065 RLAPI {\cf18 void} ClearDroppedFiles({\cf18 void});                               {\cf20 // Clear dropped files paths buffer (free memory)}\par
1066 RLAPI {\cf18 long} GetFileModTime({\cf17 const} {\cf18 char} *fileName);                  {\cf20 // Get file modification time (last write time)}\par
1067 \par
1068 {\cf20 // Compression/Encoding functionality}\par
1069 RLAPI {\cf18 unsigned} {\cf18 char} *CompressData({\cf17 const} {\cf18 unsigned} {\cf18 char} *data, {\cf18 int} dataSize, {\cf18 int} *compDataSize);        {\cf20 // Compress data (DEFLATE algorithm), memory must be MemFree()}\par
1070 RLAPI {\cf18 unsigned} {\cf18 char} *DecompressData({\cf17 const} {\cf18 unsigned} {\cf18 char} *compData, {\cf18 int} compDataSize, {\cf18 int} *dataSize);  {\cf20 // Decompress data (DEFLATE algorithm), memory must be MemFree()}\par
1071 RLAPI {\cf18 char} *EncodeDataBase64({\cf17 const} {\cf18 unsigned} {\cf18 char} *data, {\cf18 int} dataSize, {\cf18 int} *outputSize);               {\cf20 // Encode data to Base64 string, memory must be MemFree()}\par
1072 RLAPI {\cf18 unsigned} {\cf18 char} *DecodeDataBase64({\cf17 const} {\cf18 unsigned} {\cf18 char} *data, {\cf18 int} *outputSize);                    {\cf20 // Decode Base64 string data, memory must be MemFree()}\par
1073 \par
1074 {\cf20 // Persistent storage management}\par
1075 RLAPI {\cf18 bool} SaveStorageValue({\cf18 unsigned} {\cf18 int} position, {\cf18 int} value);    {\cf20 // Save integer value to storage file (to defined position), returns true on success}\par
1076 RLAPI {\cf18 int} LoadStorageValue({\cf18 unsigned} {\cf18 int} position);                {\cf20 // Load integer value from storage file (from defined position)}\par
1077 \par
1078 RLAPI {\cf18 void} OpenURL({\cf17 const} {\cf18 char} *url);                              {\cf20 // Open URL with default system browser (if available)}\par
1079 \par
1080 {\cf20 //------------------------------------------------------------------------------------}\par
1081 {\cf20 // Input Handling Functions (Module: core)}\par
1082 {\cf20 //------------------------------------------------------------------------------------}\par
1083 \par
1084 {\cf20 // Input-related functions: keyboard}\par
1085 RLAPI {\cf18 bool} IsKeyPressed({\cf18 int} key);                             {\cf20 // Check if a key has been pressed once}\par
1086 RLAPI {\cf18 bool} IsKeyDown({\cf18 int} key);                                {\cf20 // Check if a key is being pressed}\par
1087 RLAPI {\cf18 bool} IsKeyReleased({\cf18 int} key);                            {\cf20 // Check if a key has been released once}\par
1088 RLAPI {\cf18 bool} IsKeyUp({\cf18 int} key);                                  {\cf20 // Check if a key is NOT being pressed}\par
1089 RLAPI {\cf18 void} SetExitKey({\cf18 int} key);                               {\cf20 // Set a custom key to exit program (default is ESC)}\par
1090 RLAPI {\cf18 int} GetKeyPressed({\cf18 void});                                {\cf20 // Get key pressed (keycode), call it multiple times for keys queued, returns 0 when the queue is empty}\par
1091 RLAPI {\cf18 int} GetCharPressed({\cf18 void});                               {\cf20 // Get char pressed (unicode), call it multiple times for chars queued, returns 0 when the queue is empty}\par
1092 \par
1093 {\cf20 // Input-related functions: gamepads}\par
1094 RLAPI {\cf18 bool} IsGamepadAvailable({\cf18 int} gamepad);                   {\cf20 // Check if a gamepad is available}\par
1095 RLAPI {\cf17 const} {\cf18 char} *GetGamepadName({\cf18 int} gamepad);                {\cf20 // Get gamepad internal name id}\par
1096 RLAPI {\cf18 bool} IsGamepadButtonPressed({\cf18 int} gamepad, {\cf18 int} button);   {\cf20 // Check if a gamepad button has been pressed once}\par
1097 RLAPI {\cf18 bool} IsGamepadButtonDown({\cf18 int} gamepad, {\cf18 int} button);      {\cf20 // Check if a gamepad button is being pressed}\par
1098 RLAPI {\cf18 bool} IsGamepadButtonReleased({\cf18 int} gamepad, {\cf18 int} button);  {\cf20 // Check if a gamepad button has been released once}\par
1099 RLAPI {\cf18 bool} IsGamepadButtonUp({\cf18 int} gamepad, {\cf18 int} button);        {\cf20 // Check if a gamepad button is NOT being pressed}\par
1100 RLAPI {\cf18 int} GetGamepadButtonPressed({\cf18 void});                      {\cf20 // Get the last gamepad button pressed}\par
1101 RLAPI {\cf18 int} GetGamepadAxisCount({\cf18 int} gamepad);                   {\cf20 // Get gamepad axis count for a gamepad}\par
1102 RLAPI {\cf18 float} GetGamepadAxisMovement({\cf18 int} gamepad, {\cf18 int} axis);    {\cf20 // Get axis movement value for a gamepad axis}\par
1103 RLAPI {\cf18 int} SetGamepadMappings({\cf17 const} {\cf18 char} *mappings);           {\cf20 // Set internal gamepad mappings (SDL_GameControllerDB)}\par
1104 \par
1105 {\cf20 // Input-related functions: mouse}\par
1106 RLAPI {\cf18 bool} IsMouseButtonPressed({\cf18 int} button);                  {\cf20 // Check if a mouse button has been pressed once}\par
1107 RLAPI {\cf18 bool} IsMouseButtonDown({\cf18 int} button);                     {\cf20 // Check if a mouse button is being pressed}\par
1108 RLAPI {\cf18 bool} IsMouseButtonReleased({\cf18 int} button);                 {\cf20 // Check if a mouse button has been released once}\par
1109 RLAPI {\cf18 bool} IsMouseButtonUp({\cf18 int} button);                       {\cf20 // Check if a mouse button is NOT being pressed}\par
1110 RLAPI {\cf18 int} GetMouseX({\cf18 void});                                    {\cf20 // Get mouse position X}\par
1111 RLAPI {\cf18 int} GetMouseY({\cf18 void});                                    {\cf20 // Get mouse position Y}\par
1112 RLAPI Vector2 GetMousePosition({\cf18 void});                         {\cf20 // Get mouse position XY}\par
1113 RLAPI Vector2 GetMouseDelta({\cf18 void});                            {\cf20 // Get mouse delta between frames}\par
1114 RLAPI {\cf18 void} SetMousePosition({\cf18 int} x, {\cf18 int} y);                    {\cf20 // Set mouse position XY}\par
1115 RLAPI {\cf18 void} SetMouseOffset({\cf18 int} offsetX, {\cf18 int} offsetY);          {\cf20 // Set mouse offset}\par
1116 RLAPI {\cf18 void} SetMouseScale({\cf18 float} scaleX, {\cf18 float} scaleY);         {\cf20 // Set mouse scaling}\par
1117 RLAPI {\cf18 float} GetMouseWheelMove({\cf18 void});                          {\cf20 // Get mouse wheel movement Y}\par
1118 RLAPI {\cf18 void} SetMouseCursor({\cf18 int} cursor);                        {\cf20 // Set mouse cursor}\par
1119 \par
1120 {\cf20 // Input-related functions: touch}\par
1121 RLAPI {\cf18 int} GetTouchX({\cf18 void});                                    {\cf20 // Get touch position X for touch point 0 (relative to screen size)}\par
1122 RLAPI {\cf18 int} GetTouchY({\cf18 void});                                    {\cf20 // Get touch position Y for touch point 0 (relative to screen size)}\par
1123 RLAPI Vector2 GetTouchPosition({\cf18 int} index);                    {\cf20 // Get touch position XY for a touch point index (relative to screen size)}\par
1124 RLAPI {\cf18 int} GetTouchPointId({\cf18 int} index);                         {\cf20 // Get touch point identifier for given index}\par
1125 RLAPI {\cf18 int} GetTouchPointCount({\cf18 void});                           {\cf20 // Get number of touch points}\par
1126 \par
1127 {\cf20 //------------------------------------------------------------------------------------}\par
1128 {\cf20 // Gestures and Touch Handling Functions (Module: rgestures)}\par
1129 {\cf20 //------------------------------------------------------------------------------------}\par
1130 RLAPI {\cf18 void} SetGesturesEnabled({\cf18 unsigned} {\cf18 int} flags);      {\cf20 // Enable a set of gestures using flags}\par
1131 RLAPI {\cf18 bool} IsGestureDetected({\cf18 int} gesture);              {\cf20 // Check if a gesture have been detected}\par
1132 RLAPI {\cf18 int} GetGestureDetected({\cf18 void});                     {\cf20 // Get latest detected gesture}\par
1133 RLAPI {\cf18 float} GetGestureHoldDuration({\cf18 void});               {\cf20 // Get gesture hold time in milliseconds}\par
1134 RLAPI Vector2 GetGestureDragVector({\cf18 void});               {\cf20 // Get gesture drag vector}\par
1135 RLAPI {\cf18 float} GetGestureDragAngle({\cf18 void});                  {\cf20 // Get gesture drag angle}\par
1136 RLAPI Vector2 GetGesturePinchVector({\cf18 void});              {\cf20 // Get gesture pinch delta}\par
1137 RLAPI {\cf18 float} GetGesturePinchAngle({\cf18 void});                 {\cf20 // Get gesture pinch angle}\par
1138 \par
1139 {\cf20 //------------------------------------------------------------------------------------}\par
1140 {\cf20 // Camera System Functions (Module: rcamera)}\par
1141 {\cf20 //------------------------------------------------------------------------------------}\par
1142 RLAPI {\cf18 void} SetCameraMode(Camera camera, {\cf18 int} mode);      {\cf20 // Set camera mode (multiple camera modes available)}\par
1143 RLAPI {\cf18 void} UpdateCamera(Camera *camera);                {\cf20 // Update camera position for selected mode}\par
1144 \par
1145 RLAPI {\cf18 void} SetCameraPanControl({\cf18 int} keyPan);             {\cf20 // Set camera pan key to combine with mouse movement (free camera)}\par
1146 RLAPI {\cf18 void} SetCameraAltControl({\cf18 int} keyAlt);             {\cf20 // Set camera alt key to combine with mouse movement (free camera)}\par
1147 RLAPI {\cf18 void} SetCameraSmoothZoomControl({\cf18 int} keySmoothZoom); {\cf20 // Set camera smooth zoom key to combine with mouse (free camera)}\par
1148 RLAPI {\cf18 void} SetCameraMoveControls({\cf18 int} keyFront, {\cf18 int} keyBack, {\cf18 int} keyRight, {\cf18 int} keyLeft, {\cf18 int} keyUp, {\cf18 int} keyDown); {\cf20 // Set camera move controls (1st person and 3rd person cameras)}\par
1149 \par
1150 {\cf20 //------------------------------------------------------------------------------------}\par
1151 {\cf20 // Basic Shapes Drawing Functions (Module: shapes)}\par
1152 {\cf20 //------------------------------------------------------------------------------------}\par
1153 {\cf20 // Set texture and rectangle to be used on shapes drawing}\par
1154 {\cf20 // NOTE: It can be useful when using basic shapes and one single font,}\par
1155 {\cf20 // defining a font char white rectangle would allow drawing everything in a single draw call}\par
1156 RLAPI {\cf18 void} SetShapesTexture(Texture2D texture, Rectangle source);       {\cf20 // Set texture and rectangle to be used on shapes drawing}\par
1157 \par
1158 {\cf20 // Basic shapes drawing functions}\par
1159 RLAPI {\cf18 void} DrawPixel({\cf18 int} posX, {\cf18 int} posY, Color color);                                                   {\cf20 // Draw a pixel}\par
1160 RLAPI {\cf18 void} DrawPixelV(Vector2 position, Color color);                                                    {\cf20 // Draw a pixel (Vector version)}\par
1161 RLAPI {\cf18 void} DrawLine({\cf18 int} startPosX, {\cf18 int} startPosY, {\cf18 int} endPosX, {\cf18 int} endPosY, Color color);                {\cf20 // Draw a line}\par
1162 RLAPI {\cf18 void} DrawLineV(Vector2 startPos, Vector2 endPos, Color color);                                     {\cf20 // Draw a line (Vector version)}\par
1163 RLAPI {\cf18 void} DrawLineEx(Vector2 startPos, Vector2 endPos, {\cf18 float} thick, Color color);                       {\cf20 // Draw a line defining thickness}\par
1164 RLAPI {\cf18 void} DrawLineBezier(Vector2 startPos, Vector2 endPos, {\cf18 float} thick, Color color);                   {\cf20 // Draw a line using cubic-bezier curves in-out}\par
1165 RLAPI {\cf18 void} DrawLineBezierQuad(Vector2 startPos, Vector2 endPos, Vector2 controlPos, {\cf18 float} thick, Color color); {\cf20 // Draw line using quadratic bezier curves with a control point}\par
1166 RLAPI {\cf18 void} DrawLineBezierCubic(Vector2 startPos, Vector2 endPos, Vector2 startControlPos, Vector2 endControlPos, {\cf18 float} thick, Color color); {\cf20 // Draw line using cubic bezier curves with 2 control points}\par
1167 RLAPI {\cf18 void} DrawLineStrip(Vector2 *points, {\cf18 int} pointCount, Color color);                                  {\cf20 // Draw lines sequence}\par
1168 RLAPI {\cf18 void} DrawCircle({\cf18 int} centerX, {\cf18 int} centerY, {\cf18 float} radius, Color color);                              {\cf20 // Draw a color-filled circle}\par
1169 RLAPI {\cf18 void} DrawCircleSector(Vector2 center, {\cf18 float} radius, {\cf18 float} startAngle, {\cf18 float} endAngle, {\cf18 int} segments, Color color);      {\cf20 // Draw a piece of a circle}\par
1170 RLAPI {\cf18 void} DrawCircleSectorLines(Vector2 center, {\cf18 float} radius, {\cf18 float} startAngle, {\cf18 float} endAngle, {\cf18 int} segments, Color color); {\cf20 // Draw circle sector outline}\par
1171 RLAPI {\cf18 void} DrawCircleGradient({\cf18 int} centerX, {\cf18 int} centerY, {\cf18 float} radius, Color color1, Color color2);       {\cf20 // Draw a gradient-filled circle}\par
1172 RLAPI {\cf18 void} DrawCircleV(Vector2 center, {\cf18 float} radius, Color color);                                       {\cf20 // Draw a color-filled circle (Vector version)}\par
1173 RLAPI {\cf18 void} DrawCircleLines({\cf18 int} centerX, {\cf18 int} centerY, {\cf18 float} radius, Color color);                         {\cf20 // Draw circle outline}\par
1174 RLAPI {\cf18 void} DrawEllipse({\cf18 int} centerX, {\cf18 int} centerY, {\cf18 float} radiusH, {\cf18 float} radiusV, Color color);             {\cf20 // Draw ellipse}\par
1175 RLAPI {\cf18 void} DrawEllipseLines({\cf18 int} centerX, {\cf18 int} centerY, {\cf18 float} radiusH, {\cf18 float} radiusV, Color color);        {\cf20 // Draw ellipse outline}\par
1176 RLAPI {\cf18 void} DrawRing(Vector2 center, {\cf18 float} innerRadius, {\cf18 float} outerRadius, {\cf18 float} startAngle, {\cf18 float} endAngle, {\cf18 int} segments, Color color); {\cf20 // Draw ring}\par
1177 RLAPI {\cf18 void} DrawRingLines(Vector2 center, {\cf18 float} innerRadius, {\cf18 float} outerRadius, {\cf18 float} startAngle, {\cf18 float} endAngle, {\cf18 int} segments, Color color);    {\cf20 // Draw ring outline}\par
1178 RLAPI {\cf18 void} DrawRectangle({\cf18 int} posX, {\cf18 int} posY, {\cf18 int} width, {\cf18 int} height, Color color);                        {\cf20 // Draw a color-filled rectangle}\par
1179 RLAPI {\cf18 void} DrawRectangleV(Vector2 position, Vector2 size, Color color);                                  {\cf20 // Draw a color-filled rectangle (Vector version)}\par
1180 RLAPI {\cf18 void} DrawRectangleRec(Rectangle rec, Color color);                                                 {\cf20 // Draw a color-filled rectangle}\par
1181 RLAPI {\cf18 void} DrawRectanglePro(Rectangle rec, Vector2 origin, {\cf18 float} rotation, Color color);                 {\cf20 // Draw a color-filled rectangle with pro parameters}\par
1182 RLAPI {\cf18 void} DrawRectangleGradientV({\cf18 int} posX, {\cf18 int} posY, {\cf18 int} width, {\cf18 int} height, Color color1, Color color2);{\cf20 // Draw a vertical-gradient-filled rectangle}\par
1183 RLAPI {\cf18 void} DrawRectangleGradientH({\cf18 int} posX, {\cf18 int} posY, {\cf18 int} width, {\cf18 int} height, Color color1, Color color2);{\cf20 // Draw a horizontal-gradient-filled rectangle}\par
1184 RLAPI {\cf18 void} DrawRectangleGradientEx(Rectangle rec, Color col1, Color col2, Color col3, Color col4);       {\cf20 // Draw a gradient-filled rectangle with custom vertex colors}\par
1185 RLAPI {\cf18 void} DrawRectangleLines({\cf18 int} posX, {\cf18 int} posY, {\cf18 int} width, {\cf18 int} height, Color color);                   {\cf20 // Draw rectangle outline}\par
1186 RLAPI {\cf18 void} DrawRectangleLinesEx(Rectangle rec, {\cf18 float} lineThick, Color color);                            {\cf20 // Draw rectangle outline with extended parameters}\par
1187 RLAPI {\cf18 void} DrawRectangleRounded(Rectangle rec, {\cf18 float} roundness, {\cf18 int} segments, Color color);              {\cf20 // Draw rectangle with rounded edges}\par
1188 RLAPI {\cf18 void} DrawRectangleRoundedLines(Rectangle rec, {\cf18 float} roundness, {\cf18 int} segments, {\cf18 float} lineThick, Color color); {\cf20 // Draw rectangle with rounded edges outline}\par
1189 RLAPI {\cf18 void} DrawTriangle(Vector2 v1, Vector2 v2, Vector2 v3, Color color);                                {\cf20 // Draw a color-filled triangle (vertex in counter-clockwise order!)}\par
1190 RLAPI {\cf18 void} DrawTriangleLines(Vector2 v1, Vector2 v2, Vector2 v3, Color color);                           {\cf20 // Draw triangle outline (vertex in counter-clockwise order!)}\par
1191 RLAPI {\cf18 void} DrawTriangleFan(Vector2 *points, {\cf18 int} pointCount, Color color);                                {\cf20 // Draw a triangle fan defined by points (first vertex is the center)}\par
1192 RLAPI {\cf18 void} DrawTriangleStrip(Vector2 *points, {\cf18 int} pointCount, Color color);                              {\cf20 // Draw a triangle strip defined by points}\par
1193 RLAPI {\cf18 void} DrawPoly(Vector2 center, {\cf18 int} sides, {\cf18 float} radius, {\cf18 float} rotation, Color color);               {\cf20 // Draw a regular polygon (Vector version)}\par
1194 RLAPI {\cf18 void} DrawPolyLines(Vector2 center, {\cf18 int} sides, {\cf18 float} radius, {\cf18 float} rotation, Color color);          {\cf20 // Draw a polygon outline of n sides}\par
1195 RLAPI {\cf18 void} DrawPolyLinesEx(Vector2 center, {\cf18 int} sides, {\cf18 float} radius, {\cf18 float} rotation, {\cf18 float} lineThick, Color color); {\cf20 // Draw a polygon outline of n sides with extended parameters}\par
1196 \par
1197 {\cf20 // Basic shapes collision detection functions}\par
1198 RLAPI {\cf18 bool} CheckCollisionRecs(Rectangle rec1, Rectangle rec2);                                           {\cf20 // Check collision between two rectangles}\par
1199 RLAPI {\cf18 bool} CheckCollisionCircles(Vector2 center1, {\cf18 float} radius1, Vector2 center2, {\cf18 float} radius2);        {\cf20 // Check collision between two circles}\par
1200 RLAPI {\cf18 bool} CheckCollisionCircleRec(Vector2 center, {\cf18 float} radius, Rectangle rec);                         {\cf20 // Check collision between circle and rectangle}\par
1201 RLAPI {\cf18 bool} CheckCollisionPointRec(Vector2 point, Rectangle rec);                                         {\cf20 // Check if point is inside rectangle}\par
1202 RLAPI {\cf18 bool} CheckCollisionPointCircle(Vector2 point, Vector2 center, {\cf18 float} radius);                       {\cf20 // Check if point is inside circle}\par
1203 RLAPI {\cf18 bool} CheckCollisionPointTriangle(Vector2 point, Vector2 p1, Vector2 p2, Vector2 p3);               {\cf20 // Check if point is inside a triangle}\par
1204 RLAPI {\cf18 bool} CheckCollisionLines(Vector2 startPos1, Vector2 endPos1, Vector2 startPos2, Vector2 endPos2, Vector2 *collisionPoint); {\cf20 // Check the collision between two lines defined by two points each, returns collision point by reference}\par
1205 RLAPI {\cf18 bool} CheckCollisionPointLine(Vector2 point, Vector2 p1, Vector2 p2, {\cf18 int} threshold);                {\cf20 // Check if point belongs to line created between two points [p1] and [p2] with defined margin in pixels [threshold]}\par
1206 RLAPI Rectangle GetCollisionRec(Rectangle rec1, Rectangle rec2);                                         {\cf20 // Get collision rectangle for two rectangles collision}\par
1207 \par
1208 {\cf20 //------------------------------------------------------------------------------------}\par
1209 {\cf20 // Texture Loading and Drawing Functions (Module: textures)}\par
1210 {\cf20 //------------------------------------------------------------------------------------}\par
1211 \par
1212 {\cf20 // Image loading functions}\par
1213 {\cf20 // NOTE: This functions do not require GPU access}\par
1214 RLAPI Image LoadImage({\cf17 const} {\cf18 char} *fileName);                                                             {\cf20 // Load image from file into CPU memory (RAM)}\par
1215 RLAPI Image LoadImageRaw({\cf17 const} {\cf18 char} *fileName, {\cf18 int} width, {\cf18 int} height, {\cf18 int} format, {\cf18 int} headerSize);       {\cf20 // Load image from RAW file data}\par
1216 RLAPI Image LoadImageAnim({\cf17 const} {\cf18 char} *fileName, {\cf18 int} *frames);                                            {\cf20 // Load image sequence from file (frames appended to image.data)}\par
1217 RLAPI Image LoadImageFromMemory({\cf17 const} {\cf18 char} *fileType, {\cf17 const} {\cf18 unsigned} {\cf18 char} *fileData, {\cf18 int} dataSize);      {\cf20 // Load image from memory buffer, fileType refers to extension: i.e. '.png'}\par
1218 RLAPI Image LoadImageFromTexture(Texture2D texture);                                                     {\cf20 // Load image from GPU texture data}\par
1219 RLAPI Image LoadImageFromScreen({\cf18 void});                                                                   {\cf20 // Load image from screen buffer and (screenshot)}\par
1220 RLAPI {\cf18 void} UnloadImage(Image image);                                                                     {\cf20 // Unload image from CPU memory (RAM)}\par
1221 RLAPI {\cf18 bool} ExportImage(Image image, {\cf17 const} {\cf18 char} *fileName);                                               {\cf20 // Export image data to file, returns true on success}\par
1222 RLAPI {\cf18 bool} ExportImageAsCode(Image image, {\cf17 const} {\cf18 char} *fileName);                                         {\cf20 // Export image as code file defining an array of bytes, returns true on success}\par
1223 \par
1224 {\cf20 // Image generation functions}\par
1225 RLAPI Image GenImageColor({\cf18 int} width, {\cf18 int} height, Color color);                                           {\cf20 // Generate image: plain color}\par
1226 RLAPI Image GenImageGradientV({\cf18 int} width, {\cf18 int} height, Color top, Color bottom);                           {\cf20 // Generate image: vertical gradient}\par
1227 RLAPI Image GenImageGradientH({\cf18 int} width, {\cf18 int} height, Color left, Color right);                           {\cf20 // Generate image: horizontal gradient}\par
1228 RLAPI Image GenImageGradientRadial({\cf18 int} width, {\cf18 int} height, {\cf18 float} density, Color inner, Color outer);      {\cf20 // Generate image: radial gradient}\par
1229 RLAPI Image GenImageChecked({\cf18 int} width, {\cf18 int} height, {\cf18 int} checksX, {\cf18 int} checksY, Color col1, Color col2);    {\cf20 // Generate image: checked}\par
1230 RLAPI Image GenImageWhiteNoise({\cf18 int} width, {\cf18 int} height, {\cf18 float} factor);                                     {\cf20 // Generate image: white noise}\par
1231 RLAPI Image GenImageCellular({\cf18 int} width, {\cf18 int} height, {\cf18 int} tileSize);                                       {\cf20 // Generate image: cellular algorithm, bigger tileSize means bigger cells}\par
1232 \par
1233 {\cf20 // Image manipulation functions}\par
1234 RLAPI Image ImageCopy(Image image);                                                                      {\cf20 // Create an image duplicate (useful for transformations)}\par
1235 RLAPI Image ImageFromImage(Image image, Rectangle rec);                                                  {\cf20 // Create an image from another image piece}\par
1236 RLAPI Image ImageText({\cf17 const} {\cf18 char} *text, {\cf18 int} fontSize, Color color);                                      {\cf20 // Create an image from text (default font)}\par
1237 RLAPI Image ImageTextEx(Font font, {\cf17 const} {\cf18 char} *text, {\cf18 float} fontSize, {\cf18 float} spacing, Color tint);         {\cf20 // Create an image from text (custom sprite font)}\par
1238 RLAPI {\cf18 void} ImageFormat(Image *image, {\cf18 int} newFormat);                                                     {\cf20 // Convert image data to desired format}\par
1239 RLAPI {\cf18 void} ImageToPOT(Image *image, Color fill);                                                         {\cf20 // Convert image to POT (power-of-two)}\par
1240 RLAPI {\cf18 void} ImageCrop(Image *image, Rectangle crop);                                                      {\cf20 // Crop an image to a defined rectangle}\par
1241 RLAPI {\cf18 void} ImageAlphaCrop(Image *image, {\cf18 float} threshold);                                                {\cf20 // Crop image depending on alpha value}\par
1242 RLAPI {\cf18 void} ImageAlphaClear(Image *image, Color color, {\cf18 float} threshold);                                  {\cf20 // Clear alpha channel to desired color}\par
1243 RLAPI {\cf18 void} ImageAlphaMask(Image *image, Image alphaMask);                                                {\cf20 // Apply alpha mask to image}\par
1244 RLAPI {\cf18 void} ImageAlphaPremultiply(Image *image);                                                          {\cf20 // Premultiply alpha channel}\par
1245 RLAPI {\cf18 void} ImageResize(Image *image, {\cf18 int} newWidth, {\cf18 int} newHeight);                                       {\cf20 // Resize image (Bicubic scaling algorithm)}\par
1246 RLAPI {\cf18 void} ImageResizeNN(Image *image, {\cf18 int} newWidth,{\cf18 int} newHeight);                                      {\cf20 // Resize image (Nearest-Neighbor scaling algorithm)}\par
1247 RLAPI {\cf18 void} ImageResizeCanvas(Image *image, {\cf18 int} newWidth, {\cf18 int} newHeight, {\cf18 int} offsetX, {\cf18 int} offsetY, Color fill);  {\cf20 // Resize canvas and fill with color}\par
1248 RLAPI {\cf18 void} ImageMipmaps(Image *image);                                                                   {\cf20 // Compute all mipmap levels for a provided image}\par
1249 RLAPI {\cf18 void} ImageDither(Image *image, {\cf18 int} rBpp, {\cf18 int} gBpp, {\cf18 int} bBpp, {\cf18 int} aBpp);                            {\cf20 // Dither image data to 16bpp or lower (Floyd-Steinberg dithering)}\par
1250 RLAPI {\cf18 void} ImageFlipVertical(Image *image);                                                              {\cf20 // Flip image vertically}\par
1251 RLAPI {\cf18 void} ImageFlipHorizontal(Image *image);                                                            {\cf20 // Flip image horizontally}\par
1252 RLAPI {\cf18 void} ImageRotateCW(Image *image);                                                                  {\cf20 // Rotate image clockwise 90deg}\par
1253 RLAPI {\cf18 void} ImageRotateCCW(Image *image);                                                                 {\cf20 // Rotate image counter-clockwise 90deg}\par
1254 RLAPI {\cf18 void} ImageColorTint(Image *image, Color color);                                                    {\cf20 // Modify image color: tint}\par
1255 RLAPI {\cf18 void} ImageColorInvert(Image *image);                                                               {\cf20 // Modify image color: invert}\par
1256 RLAPI {\cf18 void} ImageColorGrayscale(Image *image);                                                            {\cf20 // Modify image color: grayscale}\par
1257 RLAPI {\cf18 void} ImageColorContrast(Image *image, {\cf18 float} contrast);                                             {\cf20 // Modify image color: contrast (-100 to 100)}\par
1258 RLAPI {\cf18 void} ImageColorBrightness(Image *image, {\cf18 int} brightness);                                           {\cf20 // Modify image color: brightness (-255 to 255)}\par
1259 RLAPI {\cf18 void} ImageColorReplace(Image *image, Color color, Color replace);                                  {\cf20 // Modify image color: replace color}\par
1260 RLAPI Color *LoadImageColors(Image image);                                                               {\cf20 // Load color data from image as a Color array (RGBA - 32bit)}\par
1261 RLAPI Color *LoadImagePalette(Image image, {\cf18 int} maxPaletteSize, {\cf18 int} *colorCount);                         {\cf20 // Load colors palette from image as a Color array (RGBA - 32bit)}\par
1262 RLAPI {\cf18 void} UnloadImageColors(Color *colors);                                                             {\cf20 // Unload color data loaded with LoadImageColors()}\par
1263 RLAPI {\cf18 void} UnloadImagePalette(Color *colors);                                                            {\cf20 // Unload colors palette loaded with LoadImagePalette()}\par
1264 RLAPI Rectangle GetImageAlphaBorder(Image image, {\cf18 float} threshold);                                       {\cf20 // Get image alpha border rectangle}\par
1265 RLAPI Color GetImageColor(Image image, {\cf18 int} x, {\cf18 int} y);                                                    {\cf20 // Get image pixel color at (x, y) position}\par
1266 \par
1267 {\cf20 // Image drawing functions}\par
1268 {\cf20 // NOTE: Image software-rendering functions (CPU)}\par
1269 RLAPI {\cf18 void} ImageClearBackground(Image *dst, Color color);                                                {\cf20 // Clear image background with given color}\par
1270 RLAPI {\cf18 void} ImageDrawPixel(Image *dst, {\cf18 int} posX, {\cf18 int} posY, Color color);                                  {\cf20 // Draw pixel within an image}\par
1271 RLAPI {\cf18 void} ImageDrawPixelV(Image *dst, Vector2 position, Color color);                                   {\cf20 // Draw pixel within an image (Vector version)}\par
1272 RLAPI {\cf18 void} ImageDrawLine(Image *dst, {\cf18 int} startPosX, {\cf18 int} startPosY, {\cf18 int} endPosX, {\cf18 int} endPosY, Color color); {\cf20 // Draw line within an image}\par
1273 RLAPI {\cf18 void} ImageDrawLineV(Image *dst, Vector2 start, Vector2 end, Color color);                          {\cf20 // Draw line within an image (Vector version)}\par
1274 RLAPI {\cf18 void} ImageDrawCircle(Image *dst, {\cf18 int} centerX, {\cf18 int} centerY, {\cf18 int} radius, Color color);               {\cf20 // Draw circle within an image}\par
1275 RLAPI {\cf18 void} ImageDrawCircleV(Image *dst, Vector2 center, {\cf18 int} radius, Color color);                        {\cf20 // Draw circle within an image (Vector version)}\par
1276 RLAPI {\cf18 void} ImageDrawRectangle(Image *dst, {\cf18 int} posX, {\cf18 int} posY, {\cf18 int} width, {\cf18 int} height, Color color);       {\cf20 // Draw rectangle within an image}\par
1277 RLAPI {\cf18 void} ImageDrawRectangleV(Image *dst, Vector2 position, Vector2 size, Color color);                 {\cf20 // Draw rectangle within an image (Vector version)}\par
1278 RLAPI {\cf18 void} ImageDrawRectangleRec(Image *dst, Rectangle rec, Color color);                                {\cf20 // Draw rectangle within an image}\par
1279 RLAPI {\cf18 void} ImageDrawRectangleLines(Image *dst, Rectangle rec, {\cf18 int} thick, Color color);                   {\cf20 // Draw rectangle lines within an image}\par
1280 RLAPI {\cf18 void} ImageDraw(Image *dst, Image src, Rectangle srcRec, Rectangle dstRec, Color tint);             {\cf20 // Draw a source image within a destination image (tint applied to source)}\par
1281 RLAPI {\cf18 void} ImageDrawText(Image *dst, {\cf17 const} {\cf18 char} *text, {\cf18 int} posX, {\cf18 int} posY, {\cf18 int} fontSize, Color color);   {\cf20 // Draw text (using default font) within an image (destination)}\par
1282 RLAPI {\cf18 void} ImageDrawTextEx(Image *dst, Font font, {\cf17 const} {\cf18 char} *text, Vector2 position, {\cf18 float} fontSize, {\cf18 float} spacing, Color tint); {\cf20 // Draw text (custom sprite font) within an image (destination)}\par
1283 \par
1284 {\cf20 // Texture loading functions}\par
1285 {\cf20 // NOTE: These functions require GPU access}\par
1286 RLAPI Texture2D LoadTexture({\cf17 const} {\cf18 char} *fileName);                                                       {\cf20 // Load texture from file into GPU memory (VRAM)}\par
1287 RLAPI Texture2D LoadTextureFromImage(Image image);                                                       {\cf20 // Load texture from image data}\par
1288 RLAPI TextureCubemap LoadTextureCubemap(Image image, {\cf18 int} layout);                                        {\cf20 // Load cubemap from image, multiple image cubemap layouts supported}\par
1289 RLAPI RenderTexture2D LoadRenderTexture({\cf18 int} width, {\cf18 int} height);                                          {\cf20 // Load texture for rendering (framebuffer)}\par
1290 RLAPI {\cf18 void} UnloadTexture(Texture2D texture);                                                             {\cf20 // Unload texture from GPU memory (VRAM)}\par
1291 RLAPI {\cf18 void} UnloadRenderTexture(RenderTexture2D target);                                                  {\cf20 // Unload render texture from GPU memory (VRAM)}\par
1292 RLAPI {\cf18 void} UpdateTexture(Texture2D texture, {\cf17 const} {\cf18 void} *pixels);                                         {\cf20 // Update GPU texture with new data}\par
1293 RLAPI {\cf18 void} UpdateTextureRec(Texture2D texture, Rectangle rec, {\cf17 const} {\cf18 void} *pixels);                       {\cf20 // Update GPU texture rectangle with new data}\par
1294 \par
1295 {\cf20 // Texture configuration functions}\par
1296 RLAPI {\cf18 void} GenTextureMipmaps(Texture2D *texture);                                                        {\cf20 // Generate GPU mipmaps for a texture}\par
1297 RLAPI {\cf18 void} SetTextureFilter(Texture2D texture, {\cf18 int} filter);                                              {\cf20 // Set texture scaling filter mode}\par
1298 RLAPI {\cf18 void} SetTextureWrap(Texture2D texture, {\cf18 int} wrap);                                                  {\cf20 // Set texture wrapping mode}\par
1299 \par
1300 {\cf20 // Texture drawing functions}\par
1301 RLAPI {\cf18 void} DrawTexture(Texture2D texture, {\cf18 int} posX, {\cf18 int} posY, Color tint);                               {\cf20 // Draw a Texture2D}\par
1302 RLAPI {\cf18 void} DrawTextureV(Texture2D texture, Vector2 position, Color tint);                                {\cf20 // Draw a Texture2D with position defined as Vector2}\par
1303 RLAPI {\cf18 void} DrawTextureEx(Texture2D texture, Vector2 position, {\cf18 float} rotation, {\cf18 float} scale, Color tint);  {\cf20 // Draw a Texture2D with extended parameters}\par
1304 RLAPI {\cf18 void} DrawTextureRec(Texture2D texture, Rectangle source, Vector2 position, Color tint);            {\cf20 // Draw a part of a texture defined by a rectangle}\par
1305 RLAPI {\cf18 void} DrawTextureQuad(Texture2D texture, Vector2 tiling, Vector2 offset, Rectangle quad, Color tint);  {\cf20 // Draw texture quad with tiling and offset parameters}\par
1306 RLAPI {\cf18 void} DrawTextureTiled(Texture2D texture, Rectangle source, Rectangle dest, Vector2 origin, {\cf18 float} rotation, {\cf18 float} scale, Color tint); {\cf20 // Draw part of a texture (defined by a rectangle) with rotation and scale tiled into dest.}\par
1307 RLAPI {\cf18 void} DrawTexturePro(Texture2D texture, Rectangle source, Rectangle dest, Vector2 origin, {\cf18 float} rotation, Color tint);           {\cf20 // Draw a part of a texture defined by a rectangle with 'pro' parameters}\par
1308 RLAPI {\cf18 void} DrawTextureNPatch(Texture2D texture, NPatchInfo nPatchInfo, Rectangle dest, Vector2 origin, {\cf18 float} rotation, Color tint);   {\cf20 // Draws a texture (or part of it) that stretches or shrinks nicely}\par
1309 RLAPI {\cf18 void} DrawTexturePoly(Texture2D texture, Vector2 center, Vector2 *points, Vector2 *texcoords, {\cf18 int} pointCount, Color tint);       {\cf20 // Draw a textured polygon}\par
1310 \par
1311 {\cf20 // Color/pixel related functions}\par
1312 RLAPI Color Fade(Color color, {\cf18 float} alpha);                                 {\cf20 // Get color with alpha applied, alpha goes from 0.0f to 1.0f}\par
1313 RLAPI {\cf18 int} ColorToInt(Color color);                                          {\cf20 // Get hexadecimal value for a Color}\par
1314 RLAPI Vector4 ColorNormalize(Color color);                                  {\cf20 // Get Color normalized as float [0..1]}\par
1315 RLAPI Color ColorFromNormalized(Vector4 normalized);                        {\cf20 // Get Color from normalized values [0..1]}\par
1316 RLAPI Vector3 ColorToHSV(Color color);                                      {\cf20 // Get HSV values for a Color, hue [0..360], saturation/value [0..1]}\par
1317 RLAPI Color ColorFromHSV({\cf18 float} hue, {\cf18 float} saturation, {\cf18 float} value);         {\cf20 // Get a Color from HSV values, hue [0..360], saturation/value [0..1]}\par
1318 RLAPI Color ColorAlpha(Color color, {\cf18 float} alpha);                           {\cf20 // Get color with alpha applied, alpha goes from 0.0f to 1.0f}\par
1319 RLAPI Color ColorAlphaBlend(Color dst, Color src, Color tint);              {\cf20 // Get src alpha-blended into dst color with tint}\par
1320 RLAPI Color GetColor({\cf18 unsigned} {\cf18 int} hexValue);                                {\cf20 // Get Color structure from hexadecimal value}\par
1321 RLAPI Color GetPixelColor({\cf18 void} *srcPtr, {\cf18 int} format);                        {\cf20 // Get Color from a source pixel pointer of certain format}\par
1322 RLAPI {\cf18 void} SetPixelColor({\cf18 void} *dstPtr, Color color, {\cf18 int} format);            {\cf20 // Set color formatted into destination pixel pointer}\par
1323 RLAPI {\cf18 int} GetPixelDataSize({\cf18 int} width, {\cf18 int} height, {\cf18 int} format);              {\cf20 // Get pixel data size in bytes for certain format}\par
1324 \par
1325 {\cf20 //------------------------------------------------------------------------------------}\par
1326 {\cf20 // Font Loading and Text Drawing Functions (Module: text)}\par
1327 {\cf20 //------------------------------------------------------------------------------------}\par
1328 \par
1329 {\cf20 // Font loading/unloading functions}\par
1330 RLAPI Font GetFontDefault({\cf18 void});                                                            {\cf20 // Get the default Font}\par
1331 RLAPI Font LoadFont({\cf17 const} {\cf18 char} *fileName);                                                  {\cf20 // Load font from file into GPU memory (VRAM)}\par
1332 RLAPI Font LoadFontEx({\cf17 const} {\cf18 char} *fileName, {\cf18 int} fontSize, {\cf18 int} *fontChars, {\cf18 int} glyphCount);  {\cf20 // Load font from file with extended parameters, use NULL for fontChars and 0 for glyphCount to load the default character set}\par
1333 RLAPI Font LoadFontFromImage(Image image, Color key, {\cf18 int} firstChar);                        {\cf20 // Load font from Image (XNA style)}\par
1334 RLAPI Font LoadFontFromMemory({\cf17 const} {\cf18 char} *fileType, {\cf17 const} {\cf18 unsigned} {\cf18 char} *fileData, {\cf18 int} dataSize, {\cf18 int} fontSize, {\cf18 int} *fontChars, {\cf18 int} glyphCount); {\cf20 // Load font from memory buffer, fileType refers to extension: i.e. '.ttf'}\par
1335 RLAPI GlyphInfo *LoadFontData({\cf17 const} {\cf18 unsigned} {\cf18 char} *fileData, {\cf18 int} dataSize, {\cf18 int} fontSize, {\cf18 int} *fontChars, {\cf18 int} glyphCount, {\cf18 int} type); {\cf20 // Load font data for further use}\par
1336 RLAPI Image GenImageFontAtlas({\cf17 const} GlyphInfo *chars, Rectangle **recs, {\cf18 int} glyphCount, {\cf18 int} fontSize, {\cf18 int} padding, {\cf18 int} packMethod); {\cf20 // Generate image font atlas using chars info}\par
1337 RLAPI {\cf18 void} UnloadFontData(GlyphInfo *chars, {\cf18 int} glyphCount);                                {\cf20 // Unload font chars info data (RAM)}\par
1338 RLAPI {\cf18 void} UnloadFont(Font font);                                                           {\cf20 // Unload font from GPU memory (VRAM)}\par
1339 RLAPI {\cf18 bool} ExportFontAsCode(Font font, {\cf17 const} {\cf18 char} *fileName);                               {\cf20 // Export font as code file, returns true on success}\par
1340 \par
1341 {\cf20 // Text drawing functions}\par
1342 RLAPI {\cf18 void} DrawFPS({\cf18 int} posX, {\cf18 int} posY);                                                     {\cf20 // Draw current FPS}\par
1343 RLAPI {\cf18 void} DrawText({\cf17 const} {\cf18 char} *text, {\cf18 int} posX, {\cf18 int} posY, {\cf18 int} fontSize, Color color);       {\cf20 // Draw text (using default font)}\par
1344 RLAPI {\cf18 void} DrawTextEx(Font font, {\cf17 const} {\cf18 char} *text, Vector2 position, {\cf18 float} fontSize, {\cf18 float} spacing, Color tint); {\cf20 // Draw text using font and additional parameters}\par
1345 RLAPI {\cf18 void} DrawTextPro(Font font, {\cf17 const} {\cf18 char} *text, Vector2 position, Vector2 origin, {\cf18 float} rotation, {\cf18 float} fontSize, {\cf18 float} spacing, Color tint); {\cf20 // Draw text using Font and pro parameters (rotation)}\par
1346 RLAPI {\cf18 void} DrawTextCodepoint(Font font, {\cf18 int} codepoint, Vector2 position, {\cf18 float} fontSize, Color tint); {\cf20 // Draw one character (codepoint)}\par
1347 RLAPI {\cf18 void} DrawTextCodepoints(Font font, {\cf17 const} {\cf18 int} *codepoints, {\cf18 int} count, Vector2 position, {\cf18 float} fontSize, {\cf18 float} spacing, Color tint); {\cf20 // Draw multiple character (codepoint)}\par
1348 \par
1349 {\cf20 // Text font info functions}\par
1350 RLAPI {\cf18 int} MeasureText({\cf17 const} {\cf18 char} *text, {\cf18 int} fontSize);                                      {\cf20 // Measure string width for default font}\par
1351 RLAPI Vector2 MeasureTextEx(Font font, {\cf17 const} {\cf18 char} *text, {\cf18 float} fontSize, {\cf18 float} spacing);    {\cf20 // Measure string size for Font}\par
1352 RLAPI {\cf18 int} GetGlyphIndex(Font font, {\cf18 int} codepoint);                                          {\cf20 // Get glyph index position in font for a codepoint (unicode character), fallback to '?' if not found}\par
1353 RLAPI GlyphInfo GetGlyphInfo(Font font, {\cf18 int} codepoint);                                     {\cf20 // Get glyph font info data for a codepoint (unicode character), fallback to '?' if not found}\par
1354 RLAPI Rectangle GetGlyphAtlasRec(Font font, {\cf18 int} codepoint);                                 {\cf20 // Get glyph rectangle in font atlas for a codepoint (unicode character), fallback to '?' if not found}\par
1355 \par
1356 {\cf20 // Text codepoints management functions (unicode characters)}\par
1357 RLAPI {\cf18 int} *LoadCodepoints({\cf17 const} {\cf18 char} *text, {\cf18 int} *count);              {\cf20 // Load all codepoints from a UTF-8 text string, codepoints count returned by parameter}\par
1358 RLAPI {\cf18 void} UnloadCodepoints({\cf18 int} *codepoints);                         {\cf20 // Unload codepoints data from memory}\par
1359 RLAPI {\cf18 int} GetCodepointCount({\cf17 const} {\cf18 char} *text);                        {\cf20 // Get total number of codepoints in a UTF-8 encoded string}\par
1360 RLAPI {\cf18 int} GetCodepoint({\cf17 const} {\cf18 char} *text, {\cf18 int} *bytesProcessed);        {\cf20 // Get next codepoint in a UTF-8 encoded string, 0x3f('?') is returned on failure}\par
1361 RLAPI {\cf17 const} {\cf18 char} *CodepointToUTF8({\cf18 int} codepoint, {\cf18 int} *byteSize);      {\cf20 // Encode one codepoint into UTF-8 byte array (array length returned as parameter)}\par
1362 RLAPI {\cf18 char} *TextCodepointsToUTF8({\cf17 const} {\cf18 int} *codepoints, {\cf18 int} length);  {\cf20 // Encode text as codepoints array into UTF-8 text string (WARNING: memory must be freed!)}\par
1363 \par
1364 {\cf20 // Text strings management functions (no UTF-8 strings, only byte chars)}\par
1365 {\cf20 // NOTE: Some strings allocate memory internally for returned strings, just be careful!}\par
1366 RLAPI {\cf18 int} TextCopy({\cf18 char} *dst, {\cf17 const} {\cf18 char} *src);                                             {\cf20 // Copy one string to another, returns bytes copied}\par
1367 RLAPI {\cf18 bool} TextIsEqual({\cf17 const} {\cf18 char} *text1, {\cf17 const} {\cf18 char} *text2);                               {\cf20 // Check if two text string are equal}\par
1368 RLAPI {\cf18 unsigned} {\cf18 int} TextLength({\cf17 const} {\cf18 char} *text);                                            {\cf20 // Get text length, checks for '\\0' ending}\par
1369 RLAPI {\cf17 const} {\cf18 char} *TextFormat({\cf17 const} {\cf18 char} *text, ...);                                        {\cf20 // Text formatting with variables (sprintf() style)}\par
1370 RLAPI {\cf17 const} {\cf18 char} *TextSubtext({\cf17 const} {\cf18 char} *text, {\cf18 int} position, {\cf18 int} length);                  {\cf20 // Get a piece of a text string}\par
1371 RLAPI {\cf18 char} *TextReplace({\cf18 char} *text, {\cf17 const} {\cf18 char} *replace, {\cf17 const} {\cf18 char} *by);                   {\cf20 // Replace text string (WARNING: memory must be freed!)}\par
1372 RLAPI {\cf18 char} *TextInsert({\cf17 const} {\cf18 char} *text, {\cf17 const} {\cf18 char} *insert, {\cf18 int} position);                 {\cf20 // Insert text in a position (WARNING: memory must be freed!)}\par
1373 RLAPI {\cf17 const} {\cf18 char} *TextJoin({\cf17 const} {\cf18 char} **textList, {\cf18 int} count, {\cf17 const} {\cf18 char} *delimiter);        {\cf20 // Join text strings with delimiter}\par
1374 RLAPI {\cf17 const} {\cf18 char} **TextSplit({\cf17 const} {\cf18 char} *text, {\cf18 char} delimiter, {\cf18 int} *count);                 {\cf20 // Split text into multiple strings}\par
1375 RLAPI {\cf18 void} TextAppend({\cf18 char} *text, {\cf17 const} {\cf18 char} *append, {\cf18 int} *position);                       {\cf20 // Append text at specific position and move cursor!}\par
1376 RLAPI {\cf18 int} TextFindIndex({\cf17 const} {\cf18 char} *text, {\cf17 const} {\cf18 char} *find);                                {\cf20 // Find first text occurrence within a string}\par
1377 RLAPI {\cf17 const} {\cf18 char} *TextToUpper({\cf17 const} {\cf18 char} *text);                      {\cf20 // Get upper case version of provided string}\par
1378 RLAPI {\cf17 const} {\cf18 char} *TextToLower({\cf17 const} {\cf18 char} *text);                      {\cf20 // Get lower case version of provided string}\par
1379 RLAPI {\cf17 const} {\cf18 char} *TextToPascal({\cf17 const} {\cf18 char} *text);                     {\cf20 // Get Pascal case notation version of provided string}\par
1380 RLAPI {\cf18 int} TextToInteger({\cf17 const} {\cf18 char} *text);                            {\cf20 // Get integer value from text (negative values not supported)}\par
1381 \par
1382 {\cf20 //------------------------------------------------------------------------------------}\par
1383 {\cf20 // Basic 3d Shapes Drawing Functions (Module: models)}\par
1384 {\cf20 //------------------------------------------------------------------------------------}\par
1385 \par
1386 {\cf20 // Basic geometric 3D shapes drawing functions}\par
1387 RLAPI {\cf18 void} DrawLine3D(Vector3 startPos, Vector3 endPos, Color color);                                    {\cf20 // Draw a line in 3D world space}\par
1388 RLAPI {\cf18 void} DrawPoint3D(Vector3 position, Color color);                                                   {\cf20 // Draw a point in 3D space, actually a small line}\par
1389 RLAPI {\cf18 void} DrawCircle3D(Vector3 center, {\cf18 float} radius, Vector3 rotationAxis, {\cf18 float} rotationAngle, Color color); {\cf20 // Draw a circle in 3D world space}\par
1390 RLAPI {\cf18 void} DrawTriangle3D(Vector3 v1, Vector3 v2, Vector3 v3, Color color);                              {\cf20 // Draw a color-filled triangle (vertex in counter-clockwise order!)}\par
1391 RLAPI {\cf18 void} DrawTriangleStrip3D(Vector3 *points, {\cf18 int} pointCount, Color color);                            {\cf20 // Draw a triangle strip defined by points}\par
1392 RLAPI {\cf18 void} DrawCube(Vector3 position, {\cf18 float} width, {\cf18 float} height, {\cf18 float} length, Color color);             {\cf20 // Draw cube}\par
1393 RLAPI {\cf18 void} DrawCubeV(Vector3 position, Vector3 size, Color color);                                       {\cf20 // Draw cube (Vector version)}\par
1394 RLAPI {\cf18 void} DrawCubeWires(Vector3 position, {\cf18 float} width, {\cf18 float} height, {\cf18 float} length, Color color);        {\cf20 // Draw cube wires}\par
1395 RLAPI {\cf18 void} DrawCubeWiresV(Vector3 position, Vector3 size, Color color);                                  {\cf20 // Draw cube wires (Vector version)}\par
1396 RLAPI {\cf18 void} DrawCubeTexture(Texture2D texture, Vector3 position, {\cf18 float} width, {\cf18 float} height, {\cf18 float} length, Color color); {\cf20 // Draw cube textured}\par
1397 RLAPI {\cf18 void} DrawCubeTextureRec(Texture2D texture, Rectangle source, Vector3 position, {\cf18 float} width, {\cf18 float} height, {\cf18 float} length, Color color); {\cf20 // Draw cube with a region of a texture}\par
1398 RLAPI {\cf18 void} DrawSphere(Vector3 centerPos, {\cf18 float} radius, Color color);                                     {\cf20 // Draw sphere}\par
1399 RLAPI {\cf18 void} DrawSphereEx(Vector3 centerPos, {\cf18 float} radius, {\cf18 int} rings, {\cf18 int} slices, Color color);            {\cf20 // Draw sphere with extended parameters}\par
1400 RLAPI {\cf18 void} DrawSphereWires(Vector3 centerPos, {\cf18 float} radius, {\cf18 int} rings, {\cf18 int} slices, Color color);         {\cf20 // Draw sphere wires}\par
1401 RLAPI {\cf18 void} DrawCylinder(Vector3 position, {\cf18 float} radiusTop, {\cf18 float} radiusBottom, {\cf18 float} height, {\cf18 int} slices, Color color); {\cf20 // Draw a cylinder/cone}\par
1402 RLAPI {\cf18 void} DrawCylinderEx(Vector3 startPos, Vector3 endPos, {\cf18 float} startRadius, {\cf18 float} endRadius, {\cf18 int} sides, Color color); {\cf20 // Draw a cylinder with base at startPos and top at endPos}\par
1403 RLAPI {\cf18 void} DrawCylinderWires(Vector3 position, {\cf18 float} radiusTop, {\cf18 float} radiusBottom, {\cf18 float} height, {\cf18 int} slices, Color color); {\cf20 // Draw a cylinder/cone wires}\par
1404 RLAPI {\cf18 void} DrawCylinderWiresEx(Vector3 startPos, Vector3 endPos, {\cf18 float} startRadius, {\cf18 float} endRadius, {\cf18 int} sides, Color color); {\cf20 // Draw a cylinder wires with base at startPos and top at endPos}\par
1405 RLAPI {\cf18 void} DrawPlane(Vector3 centerPos, Vector2 size, Color color);                                      {\cf20 // Draw a plane XZ}\par
1406 RLAPI {\cf18 void} DrawRay(Ray ray, Color color);                                                                {\cf20 // Draw a ray line}\par
1407 RLAPI {\cf18 void} DrawGrid({\cf18 int} slices, {\cf18 float} spacing);                                                          {\cf20 // Draw a grid (centered at (0, 0, 0))}\par
1408 \par
1409 {\cf20 //------------------------------------------------------------------------------------}\par
1410 {\cf20 // Model 3d Loading and Drawing Functions (Module: models)}\par
1411 {\cf20 //------------------------------------------------------------------------------------}\par
1412 \par
1413 {\cf20 // Model management functions}\par
1414 RLAPI Model LoadModel({\cf17 const} {\cf18 char} *fileName);                                                {\cf20 // Load model from files (meshes and materials)}\par
1415 RLAPI Model LoadModelFromMesh(Mesh mesh);                                                   {\cf20 // Load model from generated mesh (default material)}\par
1416 RLAPI {\cf18 void} UnloadModel(Model model);                                                        {\cf20 // Unload model (including meshes) from memory (RAM and/or VRAM)}\par
1417 RLAPI {\cf18 void} UnloadModelKeepMeshes(Model model);                                              {\cf20 // Unload model (but not meshes) from memory (RAM and/or VRAM)}\par
1418 RLAPI BoundingBox GetModelBoundingBox(Model model);                                         {\cf20 // Compute model bounding box limits (considers all meshes)}\par
1419 \par
1420 {\cf20 // Model drawing functions}\par
1421 RLAPI {\cf18 void} DrawModel(Model model, Vector3 position, {\cf18 float} scale, Color tint);                           {\cf20 // Draw a model (with texture if set)}\par
1422 RLAPI {\cf18 void} DrawModelEx(Model model, Vector3 position, Vector3 rotationAxis, {\cf18 float} rotationAngle, Vector3 scale, Color tint); {\cf20 // Draw a model with extended parameters}\par
1423 RLAPI {\cf18 void} DrawModelWires(Model model, Vector3 position, {\cf18 float} scale, Color tint);                      {\cf20 // Draw a model wires (with texture if set)}\par
1424 RLAPI {\cf18 void} DrawModelWiresEx(Model model, Vector3 position, Vector3 rotationAxis, {\cf18 float} rotationAngle, Vector3 scale, Color tint); {\cf20 // Draw a model wires (with texture if set) with extended parameters}\par
1425 RLAPI {\cf18 void} DrawBoundingBox(BoundingBox box, Color color);                                               {\cf20 // Draw bounding box (wires)}\par
1426 RLAPI {\cf18 void} DrawBillboard(Camera camera, Texture2D texture, Vector3 position, {\cf18 float} size, Color tint);   {\cf20 // Draw a billboard texture}\par
1427 RLAPI {\cf18 void} DrawBillboardRec(Camera camera, Texture2D texture, Rectangle source, Vector3 position, Vector2 size, Color tint); {\cf20 // Draw a billboard texture defined by source}\par
1428 RLAPI {\cf18 void} DrawBillboardPro(Camera camera, Texture2D texture, Rectangle source, Vector3 position, Vector3 up, Vector2 size, Vector2 origin, {\cf18 float} rotation, Color tint); {\cf20 // Draw a billboard texture defined by source and rotation}\par
1429 \par
1430 {\cf20 // Mesh management functions}\par
1431 RLAPI {\cf18 void} UploadMesh(Mesh *mesh, {\cf18 bool} dynamic);                                            {\cf20 // Upload mesh vertex data in GPU and provide VAO/VBO ids}\par
1432 RLAPI {\cf18 void} UpdateMeshBuffer(Mesh mesh, {\cf18 int} index, {\cf17 const} {\cf18 void} *data, {\cf18 int} dataSize, {\cf18 int} offset); {\cf20 // Update mesh vertex data in GPU for a specific buffer index}\par
1433 RLAPI {\cf18 void} UnloadMesh(Mesh mesh);                                                           {\cf20 // Unload mesh data from CPU and GPU}\par
1434 RLAPI {\cf18 void} DrawMesh(Mesh mesh, Material material, Matrix transform);                        {\cf20 // Draw a 3d mesh with material and transform}\par
1435 RLAPI {\cf18 void} DrawMeshInstanced(Mesh mesh, Material material, {\cf17 const} Matrix *transforms, {\cf18 int} instances); {\cf20 // Draw multiple mesh instances with material and different transforms}\par
1436 RLAPI {\cf18 bool} ExportMesh(Mesh mesh, {\cf17 const} {\cf18 char} *fileName);                                     {\cf20 // Export mesh data to file, returns true on success}\par
1437 RLAPI BoundingBox GetMeshBoundingBox(Mesh mesh);                                            {\cf20 // Compute mesh bounding box limits}\par
1438 RLAPI {\cf18 void} GenMeshTangents(Mesh *mesh);                                                     {\cf20 // Compute mesh tangents}\par
1439 RLAPI {\cf18 void} GenMeshBinormals(Mesh *mesh);                                                    {\cf20 // Compute mesh binormals}\par
1440 \par
1441 {\cf20 // Mesh generation functions}\par
1442 RLAPI Mesh GenMeshPoly({\cf18 int} sides, {\cf18 float} radius);                                            {\cf20 // Generate polygonal mesh}\par
1443 RLAPI Mesh GenMeshPlane({\cf18 float} width, {\cf18 float} length, {\cf18 int} resX, {\cf18 int} resZ);                     {\cf20 // Generate plane mesh (with subdivisions)}\par
1444 RLAPI Mesh GenMeshCube({\cf18 float} width, {\cf18 float} height, {\cf18 float} length);                            {\cf20 // Generate cuboid mesh}\par
1445 RLAPI Mesh GenMeshSphere({\cf18 float} radius, {\cf18 int} rings, {\cf18 int} slices);                              {\cf20 // Generate sphere mesh (standard sphere)}\par
1446 RLAPI Mesh GenMeshHemiSphere({\cf18 float} radius, {\cf18 int} rings, {\cf18 int} slices);                          {\cf20 // Generate half-sphere mesh (no bottom cap)}\par
1447 RLAPI Mesh GenMeshCylinder({\cf18 float} radius, {\cf18 float} height, {\cf18 int} slices);                         {\cf20 // Generate cylinder mesh}\par
1448 RLAPI Mesh GenMeshCone({\cf18 float} radius, {\cf18 float} height, {\cf18 int} slices);                             {\cf20 // Generate cone/pyramid mesh}\par
1449 RLAPI Mesh GenMeshTorus({\cf18 float} radius, {\cf18 float} size, {\cf18 int} radSeg, {\cf18 int} sides);                   {\cf20 // Generate torus mesh}\par
1450 RLAPI Mesh GenMeshKnot({\cf18 float} radius, {\cf18 float} size, {\cf18 int} radSeg, {\cf18 int} sides);                    {\cf20 // Generate trefoil knot mesh}\par
1451 RLAPI Mesh GenMeshHeightmap(Image heightmap, Vector3 size);                                 {\cf20 // Generate heightmap mesh from image data}\par
1452 RLAPI Mesh GenMeshCubicmap(Image cubicmap, Vector3 cubeSize);                               {\cf20 // Generate cubes-based map mesh from image data}\par
1453 \par
1454 {\cf20 // Material loading/unloading functions}\par
1455 RLAPI Material *LoadMaterials({\cf17 const} {\cf18 char} *fileName, {\cf18 int} *materialCount);                    {\cf20 // Load materials from model file}\par
1456 RLAPI Material LoadMaterialDefault({\cf18 void});                                                   {\cf20 // Load default material (Supports: DIFFUSE, SPECULAR, NORMAL maps)}\par
1457 RLAPI {\cf18 void} UnloadMaterial(Material material);                                               {\cf20 // Unload material from GPU memory (VRAM)}\par
1458 RLAPI {\cf18 void} SetMaterialTexture(Material *material, {\cf18 int} mapType, Texture2D texture);          {\cf20 // Set texture for a material map type (MATERIAL_MAP_DIFFUSE, MATERIAL_MAP_SPECULAR...)}\par
1459 RLAPI {\cf18 void} SetModelMeshMaterial(Model *model, {\cf18 int} meshId, {\cf18 int} materialId);                  {\cf20 // Set material for a mesh}\par
1460 \par
1461 {\cf20 // Model animations loading/unloading functions}\par
1462 RLAPI ModelAnimation *LoadModelAnimations({\cf17 const} {\cf18 char} *fileName, {\cf18 unsigned} {\cf18 int} *animCount);   {\cf20 // Load model animations from file}\par
1463 RLAPI {\cf18 void} UpdateModelAnimation(Model model, ModelAnimation anim, {\cf18 int} frame);               {\cf20 // Update model animation pose}\par
1464 RLAPI {\cf18 void} UnloadModelAnimation(ModelAnimation anim);                                       {\cf20 // Unload animation data}\par
1465 RLAPI {\cf18 void} UnloadModelAnimations(ModelAnimation *animations, {\cf18 unsigned} {\cf18 int} count);           {\cf20 // Unload animation array data}\par
1466 RLAPI {\cf18 bool} IsModelAnimationValid(Model model, ModelAnimation anim);                         {\cf20 // Check model animation skeleton match}\par
1467 \par
1468 {\cf20 // Collision detection functions}\par
1469 RLAPI {\cf18 bool} CheckCollisionSpheres(Vector3 center1, {\cf18 float} radius1, Vector3 center2, {\cf18 float} radius2);   {\cf20 // Check collision between two spheres}\par
1470 RLAPI {\cf18 bool} CheckCollisionBoxes(BoundingBox box1, BoundingBox box2);                                 {\cf20 // Check collision between two bounding boxes}\par
1471 RLAPI {\cf18 bool} CheckCollisionBoxSphere(BoundingBox box, Vector3 center, {\cf18 float} radius);                  {\cf20 // Check collision between box and sphere}\par
1472 RLAPI RayCollision GetRayCollisionSphere(Ray ray, Vector3 center, {\cf18 float} radius);                    {\cf20 // Get collision info between ray and sphere}\par
1473 RLAPI RayCollision GetRayCollisionBox(Ray ray, BoundingBox box);                                    {\cf20 // Get collision info between ray and box}\par
1474 RLAPI RayCollision GetRayCollisionMesh(Ray ray, Mesh mesh, Matrix transform);                       {\cf20 // Get collision info between ray and mesh}\par
1475 RLAPI RayCollision GetRayCollisionTriangle(Ray ray, Vector3 p1, Vector3 p2, Vector3 p3);            {\cf20 // Get collision info between ray and triangle}\par
1476 RLAPI RayCollision GetRayCollisionQuad(Ray ray, Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4);    {\cf20 // Get collision info between ray and quad}\par
1477 \par
1478 {\cf20 //------------------------------------------------------------------------------------}\par
1479 {\cf20 // Audio Loading and Playing Functions (Module: audio)}\par
1480 {\cf20 //------------------------------------------------------------------------------------}\par
1481 {\cf17 typedef} void (*AudioCallback)({\cf18 void} *bufferData, {\cf18 unsigned} {\cf18 int} frames);\par
1482 \par
1483 {\cf20 // Audio device management functions}\par
1484 RLAPI {\cf18 void} InitAudioDevice({\cf18 void});                                     {\cf20 // Initialize audio device and context}\par
1485 RLAPI {\cf18 void} CloseAudioDevice({\cf18 void});                                    {\cf20 // Close the audio device and context}\par
1486 RLAPI {\cf18 bool} IsAudioDeviceReady({\cf18 void});                                  {\cf20 // Check if audio device has been initialized successfully}\par
1487 RLAPI {\cf18 void} SetMasterVolume({\cf18 float} volume);                             {\cf20 // Set master volume (listener)}\par
1488 \par
1489 {\cf20 // Wave/Sound loading/unloading functions}\par
1490 RLAPI Wave LoadWave({\cf17 const} {\cf18 char} *fileName);                            {\cf20 // Load wave data from file}\par
1491 RLAPI Wave LoadWaveFromMemory({\cf17 const} {\cf18 char} *fileType, {\cf17 const} {\cf18 unsigned} {\cf18 char} *fileData, {\cf18 int} dataSize); {\cf20 // Load wave from memory buffer, fileType refers to extension: i.e. '.wav'}\par
1492 RLAPI Sound LoadSound({\cf17 const} {\cf18 char} *fileName);                          {\cf20 // Load sound from file}\par
1493 RLAPI Sound LoadSoundFromWave(Wave wave);                             {\cf20 // Load sound from wave data}\par
1494 RLAPI {\cf18 void} UpdateSound(Sound sound, {\cf17 const} {\cf18 void} *data, {\cf18 int} sampleCount); {\cf20 // Update sound buffer with new data}\par
1495 RLAPI {\cf18 void} UnloadWave(Wave wave);                                     {\cf20 // Unload wave data}\par
1496 RLAPI {\cf18 void} UnloadSound(Sound sound);                                  {\cf20 // Unload sound}\par
1497 RLAPI {\cf18 bool} ExportWave(Wave wave, {\cf17 const} {\cf18 char} *fileName);               {\cf20 // Export wave data to file, returns true on success}\par
1498 RLAPI {\cf18 bool} ExportWaveAsCode(Wave wave, {\cf17 const} {\cf18 char} *fileName);         {\cf20 // Export wave sample data to code (.h), returns true on success}\par
1499 \par
1500 {\cf20 // Wave/Sound management functions}\par
1501 RLAPI {\cf18 void} PlaySound(Sound sound);                                    {\cf20 // Play a sound}\par
1502 RLAPI {\cf18 void} StopSound(Sound sound);                                    {\cf20 // Stop playing a sound}\par
1503 RLAPI {\cf18 void} PauseSound(Sound sound);                                   {\cf20 // Pause a sound}\par
1504 RLAPI {\cf18 void} ResumeSound(Sound sound);                                  {\cf20 // Resume a paused sound}\par
1505 RLAPI {\cf18 void} PlaySoundMulti(Sound sound);                               {\cf20 // Play a sound (using multichannel buffer pool)}\par
1506 RLAPI {\cf18 void} StopSoundMulti({\cf18 void});                                      {\cf20 // Stop any sound playing (using multichannel buffer pool)}\par
1507 RLAPI {\cf18 int} GetSoundsPlaying({\cf18 void});                                     {\cf20 // Get number of sounds playing in the multichannel}\par
1508 RLAPI {\cf18 bool} IsSoundPlaying(Sound sound);                               {\cf20 // Check if a sound is currently playing}\par
1509 RLAPI {\cf18 void} SetSoundVolume(Sound sound, {\cf18 float} volume);                 {\cf20 // Set volume for a sound (1.0 is max level)}\par
1510 RLAPI {\cf18 void} SetSoundPitch(Sound sound, {\cf18 float} pitch);                   {\cf20 // Set pitch for a sound (1.0 is base level)}\par
1511 RLAPI {\cf18 void} SetSoundPan(Sound sound, {\cf18 float} pan);                       {\cf20 // Set pan for a sound (0.5 is center)}\par
1512 RLAPI Wave WaveCopy(Wave wave);                                       {\cf20 // Copy a wave to a new wave}\par
1513 RLAPI {\cf18 void} WaveCrop(Wave *wave, {\cf18 int} initSample, {\cf18 int} finalSample);     {\cf20 // Crop a wave to defined samples range}\par
1514 RLAPI {\cf18 void} WaveFormat(Wave *wave, {\cf18 int} sampleRate, {\cf18 int} sampleSize, {\cf18 int} channels); {\cf20 // Convert wave data to desired format}\par
1515 RLAPI {\cf18 float} *LoadWaveSamples(Wave wave);                              {\cf20 // Load samples data from wave as a 32bit float data array}\par
1516 RLAPI {\cf18 void} UnloadWaveSamples({\cf18 float} *samples);                         {\cf20 // Unload samples data loaded with LoadWaveSamples()}\par
1517 \par
1518 {\cf20 // Music management functions}\par
1519 RLAPI Music LoadMusicStream({\cf17 const} {\cf18 char} *fileName);                    {\cf20 // Load music stream from file}\par
1520 RLAPI Music LoadMusicStreamFromMemory({\cf17 const} {\cf18 char} *fileType, {\cf17 const} {\cf18 unsigned} {\cf18 char} *data, {\cf18 int} dataSize); {\cf20 // Load music stream from data}\par
1521 RLAPI {\cf18 void} UnloadMusicStream(Music music);                            {\cf20 // Unload music stream}\par
1522 RLAPI {\cf18 void} PlayMusicStream(Music music);                              {\cf20 // Start music playing}\par
1523 RLAPI {\cf18 bool} IsMusicStreamPlaying(Music music);                         {\cf20 // Check if music is playing}\par
1524 RLAPI {\cf18 void} UpdateMusicStream(Music music);                            {\cf20 // Updates buffers for music streaming}\par
1525 RLAPI {\cf18 void} StopMusicStream(Music music);                              {\cf20 // Stop music playing}\par
1526 RLAPI {\cf18 void} PauseMusicStream(Music music);                             {\cf20 // Pause music playing}\par
1527 RLAPI {\cf18 void} ResumeMusicStream(Music music);                            {\cf20 // Resume playing paused music}\par
1528 RLAPI {\cf18 void} SeekMusicStream(Music music, {\cf18 float} position);              {\cf20 // Seek music to a position (in seconds)}\par
1529 RLAPI {\cf18 void} SetMusicVolume(Music music, {\cf18 float} volume);                 {\cf20 // Set volume for music (1.0 is max level)}\par
1530 RLAPI {\cf18 void} SetMusicPitch(Music music, {\cf18 float} pitch);                   {\cf20 // Set pitch for a music (1.0 is base level)}\par
1531 RLAPI {\cf18 void} SetMusicPan(Music music, {\cf18 float} pan);                       {\cf20 // Set pan for a music (0.5 is center)}\par
1532 RLAPI {\cf18 float} GetMusicTimeLength(Music music);                          {\cf20 // Get music time length (in seconds)}\par
1533 RLAPI {\cf18 float} GetMusicTimePlayed(Music music);                          {\cf20 // Get current music time played (in seconds)}\par
1534 \par
1535 {\cf20 // AudioStream management functions}\par
1536 RLAPI AudioStream LoadAudioStream({\cf18 unsigned} {\cf18 int} sampleRate, {\cf18 unsigned} {\cf18 int} sampleSize, {\cf18 unsigned} {\cf18 int} channels); {\cf20 // Load audio stream (to stream raw audio pcm data)}\par
1537 RLAPI {\cf18 void} UnloadAudioStream(AudioStream stream);                     {\cf20 // Unload audio stream and free memory}\par
1538 RLAPI {\cf18 void} UpdateAudioStream(AudioStream stream, {\cf17 const} {\cf18 void} *data, {\cf18 int} frameCount); {\cf20 // Update audio stream buffers with data}\par
1539 RLAPI {\cf18 bool} IsAudioStreamProcessed(AudioStream stream);                {\cf20 // Check if any audio stream buffers requires refill}\par
1540 RLAPI {\cf18 void} PlayAudioStream(AudioStream stream);                       {\cf20 // Play audio stream}\par
1541 RLAPI {\cf18 void} PauseAudioStream(AudioStream stream);                      {\cf20 // Pause audio stream}\par
1542 RLAPI {\cf18 void} ResumeAudioStream(AudioStream stream);                     {\cf20 // Resume audio stream}\par
1543 RLAPI {\cf18 bool} IsAudioStreamPlaying(AudioStream stream);                  {\cf20 // Check if audio stream is playing}\par
1544 RLAPI {\cf18 void} StopAudioStream(AudioStream stream);                       {\cf20 // Stop audio stream}\par
1545 RLAPI {\cf18 void} SetAudioStreamVolume(AudioStream stream, {\cf18 float} volume);    {\cf20 // Set volume for audio stream (1.0 is max level)}\par
1546 RLAPI {\cf18 void} SetAudioStreamPitch(AudioStream stream, {\cf18 float} pitch);      {\cf20 // Set pitch for audio stream (1.0 is base level)}\par
1547 RLAPI {\cf18 void} SetAudioStreamPan(AudioStream stream, {\cf18 float} pan);          {\cf20 // Set pan for audio stream (0.5 is centered)}\par
1548 RLAPI {\cf18 void} SetAudioStreamBufferSizeDefault({\cf18 int} size);                 {\cf20 // Default size for new audio streams}\par
1549 RLAPI {\cf18 void} SetAudioStreamCallback(AudioStream stream, AudioCallback callback);  {\cf20 // Audio thread callback to request new data}\par
1550 \par
1551 RLAPI {\cf18 void} AttachAudioStreamProcessor(AudioStream stream, AudioCallback processor);\par
1552 RLAPI {\cf18 void} DetachAudioStreamProcessor(AudioStream stream, AudioCallback processor);\par
1553 \par
1554 {\cf21 #if defined(__cplusplus)}\par
1555 \}\par
1556 {\cf21 #endif}\par
1557 \par
1558 {\cf21 #endif }{\cf20 // RAYLIB_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Battleship.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Battleship.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Battleship.hpp}
{\bkmkstart AAAAAAACPA}
{\bkmkend AAAAAAACPA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include "Troop.hpp"}\par
{\f2 #include "Point.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Battleship}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Battleship.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Battleship.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Battleship.hpp}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef BATTLESHIP_HPP}\par
2 {\cf21 #define BATTLESHIP_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 \par
6 {\cf21 #include "Troop.hpp"}\par
7 {\cf21 #include "Point.hpp"}\par
8 \par
9 {\cf17 class }Battleship : {\cf17 public} Troop \{\par
10     {\cf17 public}:\par
15         {\cf17 static} {\cf17 const} {\cf18 unsigned} {\cf18 int} INITIAL_HEALTH;\par
16 \par
22         {\cf17 static} std::string getTroopName();\par
23         \par
29         Battleship();\par
30 \par
35         {\cf17 virtual} ~Battleship();\par
36 \par
42         {\cf17 virtual} {\cf18 unsigned} {\cf18 int} getInitialHealth() {\cf17 const override};\par
43 \par
44     {\cf17 protected}:\par
50         {\cf17 virtual} {\cf18 void} positionHorizontally({\cf17 const} Point initialPosition) {\cf17 override};\par
51         \par
57         {\cf17 virtual} {\cf18 void} positionVertically({\cf17 const} Point initialPosition) {\cf17 override};\par
58 \};\par
59 \par
60 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Board.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Board.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Board.hpp}
{\bkmkstart AAAAAAACPB}
{\bkmkend AAAAAAACPB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <memory>}\par
{\f2 #include "Position.hpp"}\par
{\f2 #include "Troop.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Board}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Board.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Board.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Board.hpp}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef BOARD_HPP}\par
2 {\cf21 #define BOARD_HPP}\par
3 \par
4 {\cf21 #include <vector>}\par
5 {\cf21 #include <memory>}\par
6 \par
7 {\cf21 #include "Position.hpp"}\par
8 {\cf21 #include "Troop.hpp"}\par
9 \par
10 {\cf17 class }Board \{ \par
11     {\cf17 private}:\par
15         {\cf18 int} height = 0;\par
16         {\cf18 int} width = 0;\par
17 \par
18         std::vector<std::vector<std::shared_ptr<Position>>> board;\par
19         std::vector<std::shared_ptr<Troop>> troops;\par
20 \par
21     {\cf17 public}:\par
27         Board();\par
28         \par
35         Board({\cf17 const} {\cf18 int} width, {\cf17 const} {\cf18 int} height);\par
36 \par
41         {\cf17 virtual} ~Board();\par
42 \par
48         {\cf18 void} positionTroop({\cf17 const} std::shared_ptr<Troop> troop);\par
49 \par
55         {\cf18 void} removeTroop({\cf17 const} std::shared_ptr<Troop> troop);\par
56     \par
63         {\cf18 bool} isPositionValid({\cf17 const} std::vector<Point>& positionCoordinates) {\cf17 const};\par
64 \par
71         {\cf18 bool} doesPositionContainsTroop({\cf17 const} Point coodinate) {\cf17 const};\par
72 \par
79         {\cf18 bool} isPointWithinBoundaries({\cf17 const} Point point) {\cf17 const};\par
80 \par
86         {\cf18 int} getHeight() {\cf17 const};\par
87 \par
93         {\cf18 int} getWidth() {\cf17 const};\par
94 \par
100         std::vector<std::shared_ptr<Troop>> getTroops() {\cf17 const};\par
101 \par
109         std::shared_ptr<Position> getPosition({\cf17 const} {\cf18 int} x, {\cf17 const} {\cf18 int} y) {\cf17 const};\par
110 \par
111     {\cf17 private}:\par
116         {\cf18 void} initializeBoardPositions();\par
117 \par
123         {\cf18 void} setHeight({\cf17 const} {\cf18 int} height);\par
124         \par
130         {\cf18 void} setWidth({\cf17 const} {\cf18 int} width);\par
131 \};\par
132 \par
133 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Crusier.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Crusier.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Crusier.hpp}
{\bkmkstart AAAAAAACPC}
{\bkmkend AAAAAAACPC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include "Troop.hpp"}\par
{\f2 #include "Point.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Crusier}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Crusier.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Crusier.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Crusier.hpp}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef CRUSIER_HPP}\par
2 {\cf21 #define CRUSIER_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 \par
6 {\cf21 #include "Troop.hpp"}\par
7 {\cf21 #include "Point.hpp"}\par
8 \par
9 {\cf17 class }Crusier : {\cf17 public} Troop \{    \par
10     {\cf17 public}:\par
15         {\cf17 static} {\cf17 const} {\cf18 unsigned} {\cf18 int} INITIAL_HEALTH;\par
16 \par
22         {\cf17 static} std::string getTroopName();\par
23 \par
29         Crusier();\par
30 \par
35         {\cf17 virtual} ~Crusier();\par
36 \par
42         {\cf17 virtual} {\cf18 unsigned} {\cf18 int} getInitialHealth() {\cf17 const override};\par
43 \par
44     {\cf17 protected}:\par
50         {\cf17 virtual} {\cf18 void} positionHorizontally({\cf17 const} Point initialPosition) {\cf17 override};\par
51         \par
57         {\cf17 virtual} {\cf18 void} positionVertically({\cf17 const} Point initialPosition) {\cf17 override};\par
58 \};\par
59 \par
60 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Orientation.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Orientation.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Orientation.hpp}
{\bkmkstart AAAAAAACPD}
{\bkmkend AAAAAAACPD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Orientation} \{ {\b HORIZONTAL}
, {\b VERTICAL}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enum of the possible troop orientations. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 
{\xe \v Orientation\:Orientation.hpp}
{\xe \v Orientation.hpp\:Orientation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Orientation}}}
\par
{\bkmkstart AAAAAAACPE}
{\bkmkend AAAAAAACPE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enum of the possible troop orientations. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v HORIZONTAL\:Orientation.hpp}
{\xe \v Orientation.hpp\:HORIZONTAL}
{\qr HORIZONTAL{\bkmkstart AAAAAAACPF}
{\bkmkend AAAAAAACPF}
\cell }{\cell }{\row }
{\xe \v VERTICAL\:Orientation.hpp}
{\xe \v Orientation.hpp\:VERTICAL}
{\qr VERTICAL{\bkmkstart AAAAAAACPG}
{\bkmkend AAAAAAACPG}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 8                  \{\par
9     HORIZONTAL,\par
10     VERTICAL,\par
11 \};\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Orientation.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Orientation.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Orientation.hpp}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef ORIENTATION_HPP}\par
2 {\cf21 #define ORIENTATION_HPP}\par
3 \par
8 {\cf17 enum} Orientation \{\par
9     HORIZONTAL,\par
10     VERTICAL,\par
11 \};\par
12 \par
13 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Point.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Point.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Point.hpp}
{\bkmkstart AAAAAAACPH}
{\bkmkend AAAAAAACPH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Point}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Point} class used for positioning and board manipulations. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Point.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Point.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Point.hpp}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef POINT_HPP}\par
2 {\cf21 #define POINT_HPP}\par
3 \par
7 {\cf17 class }Point \{\par
8     {\cf17 protected}:\par
12         {\cf18 int} x = 0;\par
13         {\cf18 int} y = 0;\par
14     \par
15     {\cf17 public}:\par
23         Point({\cf17 const} {\cf18 int} x, {\cf17 const} {\cf18 int} y);\par
24 \par
31         Point({\cf17 const} Point& point);\par
32 \par
36         {\cf17 virtual} ~Point();\par
37         \par
43         {\cf18 void} setX({\cf17 const} {\cf18 int} x);\par
44 \par
50         {\cf18 int} getX() {\cf17 const};\par
51 \par
57         {\cf18 void} setY({\cf17 const} {\cf18 int} y);\par
58 \par
64         {\cf18 int} getY() {\cf17 const};\par
65 \par
72         {\cf18 bool} operator==({\cf17 const} Point& other) {\cf17 const};\par
73 \par
81         {\cf18 bool} operator<({\cf17 const} Point& other) {\cf17 const};\par
82 \par
89         Point operator+({\cf17 const} Point &other) {\cf17 const};\par
90 \};\par
91 \par
92 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Position.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Position.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Position.hpp}
{\bkmkstart AAAAAAACPI}
{\bkmkend AAAAAAACPI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include "Point.hpp"}\par
{\f2 #include "Troop.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Position}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Position.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Position.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Position.hpp}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef POSITION_HPP}\par
2 {\cf21 #define POSITION_HPP}\par
3 \par
4 {\cf21 #include <memory>}\par
5 \par
6 {\cf21 #include "Point.hpp"}\par
7 {\cf21 #include "Troop.hpp"}\par
8 \par
9 {\cf17 class }Position : {\cf17 public} Point \{\par
10     {\cf17 private}:\par
11         std::shared_ptr<Troop> troop = {\cf17 nullptr};\par
12 \par
13     {\cf17 public}:\par
20         Position({\cf17 const} {\cf18 int} x, {\cf17 const} {\cf18 int} y);\par
21         \par
25         {\cf17 virtual} ~Position();\par
26 \par
32         {\cf18 void} setTroop(std::shared_ptr<Troop> troop);\par
33         \par
39         std::shared_ptr<Troop> getTroop() {\cf17 const};\par
40         \par
46         {\cf18 bool} hasTroop() {\cf17 const};\par
47 \};\par
48 \par
49 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Submarine.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Submarine.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Submarine.hpp}
{\bkmkstart AAAAAAACPJ}
{\bkmkend AAAAAAACPJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include "Troop.hpp"}\par
{\f2 #include "Point.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Submarine}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Submarine.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Submarine.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Submarine.hpp}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef SUBMARINE_HPP}\par
2 {\cf21 #define SUBMARINE_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 \par
6 {\cf21 #include "Troop.hpp"}\par
7 {\cf21 #include "Point.hpp"}\par
8 \par
9 {\cf17 class }Submarine : {\cf17 public} Troop \{    \par
10     {\cf17 public}:\par
15         {\cf17 static} {\cf17 const} {\cf18 unsigned} {\cf18 int} INITIAL_HEALTH;\par
16 \par
22         {\cf17 static} std::string getTroopName();\par
23 \par
29         Submarine();\par
30 \par
35         {\cf17 virtual} ~Submarine();\par
36 \par
42         {\cf17 virtual} {\cf18 unsigned} {\cf18 int} getInitialHealth() {\cf17 const override};\par
43     \par
44     {\cf17 protected}:\par
50         {\cf17 virtual} {\cf18 void} positionHorizontally({\cf17 const} Point initialPosition) {\cf17 override};\par
51         \par
57         {\cf17 virtual} {\cf18 void} positionVertically({\cf17 const} Point initialPosition) {\cf17 override};\par
58 \par
62         {\cf17 virtual} {\cf18 void} buildImagesMap({\cf17 const} std::string troopName) {\cf17 override};\par
63 \};\par
64 \par
65 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Troop.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Troop.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Troop.hpp}
{\bkmkstart AAAAAAACPK}
{\bkmkend AAAAAAACPK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <map>}\par
{\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include "Score.hpp"}\par
{\f2 #include "Point.hpp"}\par
{\f2 #include "Orientation.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Troop}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Troop.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Troop.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/board/Troop.hpp}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef TROOP_HPP}\par
2 {\cf21 #define TROOP_HPP}\par
3 \par
4 {\cf21 #include <map>}\par
5 {\cf21 #include <string>}\par
6 {\cf21 #include <vector>}\par
7 \par
8 {\cf21 #include "Score.hpp"}\par
9 {\cf21 #include "Point.hpp"}\par
10 {\cf21 #include "Orientation.hpp"}\par
11 \par
12 {\cf17 class }Troop \{\par
13     {\cf17 protected}:\par
18         {\cf18 unsigned} {\cf18 int} health = 0;\par
19         std::vector<Point> shape;\par
20         std::map<Point, std::string> images;\par
21     \par
22     {\cf17 public}:\par
28         {\cf17 static} std::string getTroopName();\par
29         \par
36         Troop({\cf17 const} {\cf18 unsigned} {\cf18 int} health);\par
37         \par
42         {\cf17 virtual} ~Troop();\par
43 \par
48         {\cf18 void} takeDamage();\par
49         \par
55         {\cf18 bool} isDead() {\cf17 const};\par
56 \par
63         {\cf18 void} setPosition({\cf17 const} Point initialPosition, {\cf17 const} Orientation orientation);\par
64 \par
70         std::vector<Point> getOccupiedPositions() {\cf17 const};\par
71 \par
77         {\cf18 unsigned} {\cf18 int} getHealth() {\cf17 const};\par
78 \par
84         {\cf17 virtual} {\cf18 unsigned} {\cf18 int} getInitialHealth() {\cf17 const} = 0;\par
85 \par
91         std::map<Point, std::string> getImages() {\cf17 const};\par
92 \par
100         std::string getImageInPoint({\cf17 const} Point point) {\cf17 const};\par
101 \par
108         {\cf18 bool} containsPoint({\cf17 const} Point point) {\cf17 const};\par
109 \par
110     {\cf17 protected}:\par
116         {\cf17 virtual} {\cf18 void} positionHorizontally({\cf17 const} Point initialPosition);\par
117         \par
123         {\cf17 virtual} {\cf18 void} positionVertically({\cf17 const} Point initialPosition);\par
124 \par
128         {\cf17 virtual} {\cf18 void} buildImagesMap({\cf17 const} std::string folderPathWithSpriteName);\par
129 \};\par
130 \par
131 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/exceptions/CustomException.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/exceptions/CustomException.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/exceptions/CustomException.hpp}
{\bkmkstart AAAAAAACPL}
{\bkmkend AAAAAAACPL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <stdexcept>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CustomException}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CustomException.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/exceptions/CustomException.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/exceptions/CustomException.hpp}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef CUSTOM_EXCEPTION_HPP}\par
2 {\cf21 #define CUSTOM_EXCEPTION_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 {\cf21 #include <stdexcept>}\par
6 \par
7 {\cf17 class }CustomException : {\cf17 public} std::exception \{\par
8     {\cf17 protected}:\par
13         std::string message = {\cf22 ""};\par
14 \par
15     {\cf17 public}:\par
21         CustomException({\cf17 const} std::string message);\par
22         \par
27         {\cf17 virtual} ~CustomException();\par
28         \par
34         std::string getMessage() {\cf17 const};\par
35 \};\par
36 \par
37 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/exceptions/InvalidPositionException.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/exceptions/InvalidPositionException.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/exceptions/InvalidPositionException.hpp}
{\bkmkstart AAAAAAACPM}
{\bkmkend AAAAAAACPM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include "CustomException.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b InvalidPositionException}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
InvalidPositionException.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/exceptions/InvalidPositionException.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/exceptions/InvalidPositionException.hpp}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef INVALID_POSITION_EXCEPTION_HPP}\par
2 {\cf21 #define INVALID_POSITION_EXCEPTION_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 \par
6 {\cf21 #include "CustomException.hpp"}\par
7 \par
8 {\cf17 class }InvalidPositionException : {\cf17 public} CustomException \{\par
9     {\cf17 public}:\par
15         InvalidPositionException({\cf17 const} std::string message);\par
16         \par
21         {\cf17 virtual} ~InvalidPositionException();\par
22 \};\par
23 \par
24 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/fileHandler/FileHandler.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/fileHandler/FileHandler.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/fileHandler/FileHandler.hpp}
{\bkmkstart AAAAAAACPN}
{\bkmkend AAAAAAACPN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <fstream>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FileHandler}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FileHandler.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/fileHandler/FileHandler.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/fileHandler/FileHandler.hpp}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef FILE_HANDLER_HPP}\par
2 {\cf21 #define FILE_HANDLER_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 {\cf21 #include <fstream>}\par
6 \par
7 {\cf17 class }FileHandler \{\par
8     {\cf17 protected}:\par
13         {\cf17 static} {\cf17 const} {\cf18 char} PLACEHOLDERCHAR;\par
14         std::fstream file;\par
15 \par
16     {\cf17 public}:\par
24         FileHandler({\cf17 const} std::string name, {\cf17 const} {\cf18 char} mode);\par
25         \par
30         ~FileHandler();\par
31 \};\par
32 \par
33 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/fileHandler/TxtReader.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/fileHandler/TxtReader.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/fileHandler/TxtReader.hpp}
{\bkmkstart AAAAAAACPO}
{\bkmkend AAAAAAACPO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include "FileHandler.hpp"}\par
{\f2 #include "MatchResults.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TxtReader}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TxtReader.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/fileHandler/TxtReader.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/fileHandler/TxtReader.hpp}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef TXTREADER_HPP}\par
2 {\cf21 #define TXTREADER_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 {\cf21 #include <vector>}\par
6 \par
7 {\cf21 #include "FileHandler.hpp"}\par
8 {\cf21 #include "MatchResults.hpp"}\par
9 \par
10 {\cf17 class }TxtReader : {\cf17 public} FileHandler \{\par
11     {\cf17 public}:\par
18         TxtReader({\cf17 const} std::string nome);\par
19 \par
24         ~TxtReader();\par
25 \par
32         MatchResults findMatch({\cf17 const} std::string {\cf18 id});\par
33         \par
39         std::vector<MatchResults> getMatches();\par
40     \par
41     {\cf17 private}:\par
46         {\cf18 void} resetFile();\par
47 \par
54         MatchResults strToMatchResult({\cf17 const} std::string line) {\cf17 const};\par
55 \par
62         std::string unparseName(std::string name) {\cf17 const};\par
63 \};\par
64 \par
65 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/fileHandler/TxtWriter.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/fileHandler/TxtWriter.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/fileHandler/TxtWriter.hpp}
{\bkmkstart AAAAAAACPP}
{\bkmkend AAAAAAACPP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include "FileHandler.hpp"}\par
{\f2 #include "MatchResults.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TxtWriter}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TxtWriter.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/fileHandler/TxtWriter.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/fileHandler/TxtWriter.hpp}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef TXTWRITER_HPP}\par
2 {\cf21 #define TXTWRITER_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 \par
6 {\cf21 #include "FileHandler.hpp"}\par
7 {\cf21 #include "MatchResults.hpp"}\par
8 \par
9 {\cf17 class }TxtWriter : {\cf17 public} FileHandler \{\par
10     {\cf17 public}:\par
17         TxtWriter({\cf17 const} std::string name);\par
18 \par
23         ~TxtWriter();\par
24         \par
30         {\cf18 void} writeResults({\cf17 const} MatchResults& match);\par
31     \par
32     {\cf17 private}:\par
40         std::string getScoreString({\cf17 const} std::string name, {\cf17 const} Score score) {\cf17 const};\par
41 \par
48         std::string parsePlayerName(std::string name) {\cf17 const};\par
49 \};\par
50 \par
51 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/game/GameManager.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/game/GameManager.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/game/GameManager.hpp}
{\bkmkstart AAAAAAACPQ}
{\bkmkend AAAAAAACPQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include "Match.hpp"}\par
{\f2 #include "Player.hpp"}\par
{\f2 #include "GameParameters.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GameManager}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GameManager.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/game/GameManager.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/game/GameManager.hpp}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef GAME_MANAGER_HPP}\par
2 {\cf21 #define GAME_MANAGER_HPP}\par
3 \par
4 {\cf21 #include <memory>}\par
5 \par
6 {\cf21 #include "Match.hpp"}\par
7 {\cf21 #include "Player.hpp"}\par
8 \par
9 {\cf21 #include "GameParameters.hpp"}\par
10 \par
11 {\cf17 class }GameManager \{\par
12     {\cf17 private}:\par
16         {\cf17 static} std::shared_ptr<GameManager> instance;\par
17         \par
22         std::shared_ptr<Match> match = {\cf17 nullptr};\par
23         {\cf18 bool} player1HasPositionedTroops = {\cf17 false};\par
24         {\cf18 bool} player2HasPositionedTroops = {\cf17 false};\par
25 \par
26         GameParameters gameParameters;\par
27 \par
28     {\cf17 public}:\par
34         GameManager();\par
35         \par
40         {\cf17 virtual} ~GameManager();\par
41 \par
46         {\cf18 void} startGame();\par
47 \par
52         {\cf18 void} endGame();\par
53 \par
59         GameParameters getGameParameters() {\cf17 const};\par
60 \par
66         {\cf17 static} std::shared_ptr<GameManager> getInstance();        \par
67     \par
68     {\cf17 private}:\par
73         {\cf18 void} initializeMatch();\par
74 \par
79         {\cf18 void} intializePlayersScore();\par
80 \par
86         {\cf18 void} startPlayerPositioningTurn(std::shared_ptr<Player> playerBoard);\par
87 \par
92         {\cf18 void} registerScores();\par
93 \par
98         {\cf18 void} resetGameManager();\par
99 \};\par
100 \par
101 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/game/GameParameters.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/game/GameParameters.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/game/GameParameters.hpp}
{\bkmkstart AAAAAAACPR}
{\bkmkend AAAAAAACPR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GameParameters}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GameParameters.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/game/GameParameters.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/game/GameParameters.hpp}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef GAME_PARAMETERS_HPP}\par
2 {\cf21 #define GAME_PARAMETERS_HPP}\par
3 \par
4 {\cf17 class }GameParameters \{\par
5     {\cf17 private}:\par
9         {\cf17 static} {\cf17 const} {\cf18 int} DEFAULT_AMOUNT_TROOPS;\par
10         {\cf17 static} {\cf17 const} {\cf18 int} DEFAULT_BOARD_AMOUNT_HORIZONTAL_CELLS;\par
11         {\cf17 static} {\cf17 const} {\cf18 int} DEFAULT_BOARD_AMOUNT_VERTICAL_CELLS;\par
12 \par
13         {\cf18 int} amountSubmarineTroops = DEFAULT_AMOUNT_TROOPS;\par
14         {\cf18 int} amountCrusierTroops = DEFAULT_AMOUNT_TROOPS;\par
15         {\cf18 int} amountBattleshipTroops = DEFAULT_AMOUNT_TROOPS;\par
16 \par
17         {\cf18 int} boardAmountHorizontalCells = DEFAULT_BOARD_AMOUNT_HORIZONTAL_CELLS;\par
18         {\cf18 int} boardAmountVerticalCells = DEFAULT_BOARD_AMOUNT_VERTICAL_CELLS;\par
19 \par
20     {\cf17 public}:\par
26         GameParameters();\par
27 \par
32         {\cf17 virtual} ~GameParameters();\par
33 \par
39         {\cf18 void} setAmountSubmarineTroops({\cf17 const} {\cf18 int} amountSubmarineTroops);\par
40 \par
46         {\cf18 int} getAmountSubmarineTroops() {\cf17 const};\par
47 \par
53         {\cf18 void} setAmountCrusierTroops({\cf17 const} {\cf18 int} amountCrusierTroops);\par
54 \par
60         {\cf18 int} getAmountCrusierTroops() {\cf17 const};\par
61 \par
67         {\cf18 void} setAmountBattleshipTroops({\cf17 const} {\cf18 int} amountBattleshipTroops);\par
68 \par
74         {\cf18 int} getAmountBattleshipTroops() {\cf17 const};\par
75 \par
81         {\cf18 void} setBoardAmountHorizontalCells({\cf17 const} {\cf18 int} boardAmountHorizontalCells);\par
82 \par
88         {\cf18 int} getBoardAmountHorizontalCells() {\cf17 const};\par
89 \par
95         {\cf18 void} setBoardAmountVerticalCells({\cf17 const} {\cf18 int} boardAmountVerticalCells);\par
96         \par
102         {\cf18 int} getBoardAmountVerticalCells() {\cf17 const};\par
103 \par
109         {\cf18 int} getTotalAmountOfTroops() {\cf17 const};\par
110 \};\par
111 \par
112 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/Match.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/Match.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/Match.hpp}
{\bkmkstart AAAAAAACPS}
{\bkmkend AAAAAAACPS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <memory>}\par
{\f2 #include "Player.hpp"}\par
{\f2 #include "MatchResults.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Match}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Match.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/Match.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/Match.hpp}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef MATCH_HPP}\par
2 {\cf21 #define MATCH_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 {\cf21 #include <memory>}\par
6 \par
7 {\cf21 #include "Player.hpp"}\par
8 {\cf21 #include "MatchResults.hpp"}\par
9 \par
10 {\cf17 class }Match \{\par
11     {\cf17 private}:\par
15         std::string {\cf18 id} = {\cf22 ""};\par
16         {\cf18 unsigned} {\cf18 int} currentTurn = 0;\par
17         std::shared_ptr<Player> player1 = {\cf17 nullptr};\par
18         std::shared_ptr<Player> player2 = {\cf17 nullptr};\par
19 \par
20     {\cf17 public}:\par
26         Match();\par
27 \par
32         {\cf17 virtual} ~Match();\par
33 \par
38         {\cf18 void} passTurn();\par
39 \par
45         {\cf18 bool} isPlayer1Turn() {\cf17 const};\par
46 \par
52         {\cf18 bool} isPlayer2Turn() {\cf17 const};\par
53         \par
59         {\cf18 void} incrementPlayer1Score({\cf17 const} {\cf18 bool} wasTroopDestroyed);\par
60 \par
65         {\cf18 void} incrementPlayer1AmountShots();\par
66         \par
72         {\cf18 void} incrementPlayer2Score({\cf17 const} {\cf18 bool} wasTroopDestroyed);\par
73 \par
78         {\cf18 void} incrementPlayer2AmountShots();\par
79 \par
85         std::shared_ptr<Player> getPlayer1() {\cf17 const};\par
86         \par
92         std::shared_ptr<Player> getPlayer2() {\cf17 const};\par
93 \par
99         MatchResults getResults() {\cf17 const};\par
100 \par
106         {\cf18 bool} hasGameFinished() {\cf17 const};\par
107 \par
108     {\cf17 private}:\par
114         std::string createMatchId() {\cf17 const};\par
115 \};\par
116 \par
117 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/MatchResults.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/MatchResults.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/MatchResults.hpp}
{\bkmkstart AAAAAAACPT}
{\bkmkend AAAAAAACPT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include "Score.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MatchResults}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MatchResults.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/MatchResults.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/MatchResults.hpp}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef MATCH_RESULTS_HPP}\par
2 {\cf21 #define MATCH_RESULTS_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 \par
6 {\cf21 #include "Score.hpp"}\par
7 \par
8 {\cf17 class }MatchResults \{\par
9     {\cf17 private}:\par
14         std::string {\cf18 id} = {\cf22 ""};\par
15         std::string player1Name = {\cf22 ""};\par
16         std::string player2Name = {\cf22 ""};\par
17         Score player1Score;\par
18         Score player2Score;\par
19 \par
20     {\cf17 public}:\par
26         MatchResults();\par
27 \par
37         MatchResults({\cf17 const} std::string player1Name, {\cf17 const} Score player1Score, {\cf17 const} std::string player2Name, {\cf17 const} Score player2Score, {\cf17 const} std::string {\cf18 id});\par
38 \par
43         {\cf17 virtual} ~MatchResults();\par
44 \par
50         {\cf18 void} setPlayer1Name({\cf17 const} std::string name);\par
51 \par
57         std::string getPlayer1Name() {\cf17 const};\par
58         \par
64         {\cf18 void} setPlayer1Score({\cf17 const} Score score);\par
65 \par
71         Score getPlayer1Score() {\cf17 const};\par
72 \par
78         {\cf18 void} setPlayer2Name({\cf17 const} std::string name);\par
79 \par
85         std::string getPlayer2Name() {\cf17 const};\par
86         \par
92         {\cf18 void} setPlayer2Score({\cf17 const} Score score);\par
93 \par
99         Score getPlayer2Score() {\cf17 const};\par
100 \par
106         {\cf18 void} setId({\cf17 const} std::string {\cf18 id});\par
107         \par
113         std::string getId() {\cf17 const};\par
114 \};\par
115 \par
116 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/Player.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/Player.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/Player.hpp}
{\bkmkstart AAAAAAACPU}
{\bkmkend AAAAAAACPU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <memory>}\par
{\f2 #include "Board.hpp"}\par
{\f2 #include "Score.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Player}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Player.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/Player.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/Player.hpp}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef PLAYER_HPP}\par
2 {\cf21 #define PLAYER_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 {\cf21 #include <memory>}\par
6 \par
7 {\cf21 #include "Board.hpp"}\par
8 {\cf21 #include "Score.hpp"}\par
9 \par
10 {\cf17 class }Player\{\par
11     {\cf17 private}:\par
16         std::string name = {\cf22 ""};\par
17         std::shared_ptr<Score> score = {\cf17 nullptr};\par
18         std::shared_ptr<Board> board = {\cf17 nullptr};\par
19         \par
20     {\cf17 public}:\par
26         Player();\par
27         \par
34         Player({\cf17 const} std::string name);\par
35 \par
40         {\cf17 virtual} ~Player();\par
41         \par
47         {\cf18 void} setName({\cf17 const} std::string name);\par
48         \par
54         std::string getName() {\cf17 const};\par
55 \par
61         std::shared_ptr<Score> getScore() {\cf17 const};\par
62 \par
68         std::shared_ptr<Board> getBoard() {\cf17 const};\par
69 \};\par
70 \par
71 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/Score.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/Score.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/Score.hpp}
{\bkmkstart AAAAAAACPV}
{\bkmkend AAAAAAACPV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Score}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Score.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/Score.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/match/Score.hpp}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef SCORE_HPP}\par
2 {\cf21 #define SCORE_HPP}\par
3 \par
4 {\cf17 class }Score \{\par
5     {\cf17 private}:\par
10         {\cf18 int} destroyedTroops = 0;\par
11         {\cf18 int} remainingTroops = 0;\par
12         {\cf18 int} lostTroops = 0;\par
13         {\cf18 int} totalAmountShoots = 0;\par
14         {\cf18 int} hitShoots = 0;\par
15 \par
16     {\cf17 public}:\par
22         Score();\par
23 \par
33         Score({\cf18 int} dTroops, {\cf18 int} rTroops, {\cf18 int} lTroops, {\cf18 int} tAShoots, {\cf18 int} hShoots);\par
34 \par
39         {\cf17 virtual} ~Score();\par
40 \par
46         {\cf18 bool} isWinner() {\cf17 const};\par
47 \par
53         {\cf18 void} setDestroyedTroops({\cf17 const} {\cf18 int} value);\par
54 \par
59         {\cf18 void} incrementDestroyedTroops();\par
60 \par
66         {\cf18 int} getDestroyedTroops() {\cf17 const};\par
67 \par
73         {\cf18 void} setRemainingTroops({\cf17 const} {\cf18 int} value);\par
74 \par
79         {\cf18 void} decrementRemainingTroops();\par
80 \par
86         {\cf18 int} getRemainingTroops() {\cf17 const};\par
87 \par
93         {\cf18 void} setLostTroops({\cf17 const} {\cf18 int} value);\par
94 \par
99         {\cf18 void} incrementLostTroops();\par
100 \par
106         {\cf18 int} getLostTroops() {\cf17 const};\par
107 \par
113         {\cf18 void} setTotalAmountShoots({\cf17 const} {\cf18 int} value);\par
114 \par
119         {\cf18 void} incrementTotalAmountShoots();\par
120 \par
126         {\cf18 int} getTotalAmountShoots() {\cf17 const};\par
127 \par
133         {\cf18 void} setHitShoots({\cf17 const} {\cf18 int} value);\par
134 \par
139         {\cf18 void} incrementHitShoots();\par
140 \par
146         {\cf18 int} getHitShoots() {\cf17 const};\par
147 \par
153         {\cf18 int} getInitialAmountShips() {\cf17 const};\par
154         \par
160         {\cf18 float} getPrecision() {\cf17 const};\par
161 \};\par
162 \par
163 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/AssetsPaths.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/AssetsPaths.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/AssetsPaths.hpp}
{\bkmkstart AAAAAAACPW}
{\bkmkend AAAAAAACPW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Backgrounds}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Fonts}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Icons}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b Backgrounds::MAIN} = "./assets/imgs/backgrounds/Background.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b Backgrounds::BOARD} = "./assets/imgs/backgrounds/BoardBackground.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b Fonts::PRESS_START_2P} = "./assets/fonts/PressStart2P.ttf"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b Icons::AIM} = "./assets/imgs/icons/IconAim.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b Icons::EXPLOSION} = "./assets/imgs/icons/IconExplosion.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b Icons::EYE} = "./assets/imgs/icons/IconEye.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b Icons::HEART} = "./assets/imgs/icons/IconHeart.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b Icons::SKULL} = "./assets/imgs/icons/IconSkull.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b Icons::RIGHT_ARROW_BLACK} = "./assets/imgs/icons/IconRightArrowBlack.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b Icons::LEFT_ARROW_BLACK} = "./assets/imgs/icons/IconLeftArrowBlack.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b Icons::ROTATE_ARROW} = "./assets/imgs/icons/IconRotate.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b Icons::RED_X} = "./assets/imgs/icons/IconRedX.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b Icons::LOGO} = "./assets/imgs/icons/Logo.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b BATTLESHIP_HORIZONTAL_FULL_SPRITE} = "./assets/imgs/troops/{\b Battleship}/Horizontal/BattleshipHorizontalFullSprite.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b BATTLESHIP_HORIZONTAL_SPRITE_PATH_WITH_PREFIX} = "./assets/imgs/troops/{\b Battleship}/Horizontal/BattleshipHorizontal"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b BATTLESHIP_VERTICAL_FULL_SPRITE} = "./assets/imgs/troops/{\b Battleship}/Vertical/BattleshipVerticalFullSprite.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b BATTLESHIP_VERTICAL_SPRITE_PATH_WITH_PREFIX} = "./assets/imgs/troops/{\b Battleship}/Vertical/BattleshipVertical"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b CRUSIER_HORIZONTAL_FULL_SPRITE} = "./assets/imgs/troops/{\b Crusier}/Horizontal/CrusierHorizontalFullSprite.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b CRUSIER_HORIZONTAL_SPRITE_PATH_WITH_PREFIX} = "./assets/imgs/troops/{\b Crusier}/Horizontal/CrusierHorizontal"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b CRUSIER_VERTICAL_FULL_SPRITE} = "./assets/imgs/troops/{\b Crusier}/Vertical/CrusierVerticalFullSprite.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b CRUSIER_VERTICAL_SPRITE_PATH_WITH_PREFIX} = "./assets/imgs/troops/{\b Crusier}/Vertical/CrusierVertical"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b SUBMARINE_HORIZONTAL_FULL_SPRITE} = "./assets/imgs/troops/{\b Submarine}/Horizontal/SubmarinoHorizontalFullSprite.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b SUBMARINE_VERTICAL_FULL_SPRITE} = "./assets/imgs/troops/{\b Submarine}/Vertical/SubmarinoVerticalFullSprite.png"\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 
{\xe \v BATTLESHIP_HORIZONTAL_FULL_SPRITE\:AssetsPaths.hpp}
{\xe \v AssetsPaths.hpp\:BATTLESHIP_HORIZONTAL_FULL_SPRITE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string BATTLESHIP_HORIZONTAL_FULL_SPRITE = "./assets/imgs/troops/{\b Battleship}/Horizontal/BattleshipHorizontalFullSprite.png"}}
\par
{\bkmkstart AAAAAAACPX}
{\bkmkend AAAAAAACPX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BATTLESHIP_HORIZONTAL_SPRITE_PATH_WITH_PREFIX\:AssetsPaths.hpp}
{\xe \v AssetsPaths.hpp\:BATTLESHIP_HORIZONTAL_SPRITE_PATH_WITH_PREFIX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string BATTLESHIP_HORIZONTAL_SPRITE_PATH_WITH_PREFIX = "./assets/imgs/troops/{\b Battleship}/Horizontal/BattleshipHorizontal"}}
\par
{\bkmkstart AAAAAAACPY}
{\bkmkend AAAAAAACPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BATTLESHIP_VERTICAL_FULL_SPRITE\:AssetsPaths.hpp}
{\xe \v AssetsPaths.hpp\:BATTLESHIP_VERTICAL_FULL_SPRITE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string BATTLESHIP_VERTICAL_FULL_SPRITE = "./assets/imgs/troops/{\b Battleship}/Vertical/BattleshipVerticalFullSprite.png"}}
\par
{\bkmkstart AAAAAAACPZ}
{\bkmkend AAAAAAACPZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BATTLESHIP_VERTICAL_SPRITE_PATH_WITH_PREFIX\:AssetsPaths.hpp}
{\xe \v AssetsPaths.hpp\:BATTLESHIP_VERTICAL_SPRITE_PATH_WITH_PREFIX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string BATTLESHIP_VERTICAL_SPRITE_PATH_WITH_PREFIX = "./assets/imgs/troops/{\b Battleship}/Vertical/BattleshipVertical"}}
\par
{\bkmkstart AAAAAAACQA}
{\bkmkend AAAAAAACQA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CRUSIER_HORIZONTAL_FULL_SPRITE\:AssetsPaths.hpp}
{\xe \v AssetsPaths.hpp\:CRUSIER_HORIZONTAL_FULL_SPRITE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string CRUSIER_HORIZONTAL_FULL_SPRITE = "./assets/imgs/troops/{\b Crusier}/Horizontal/CrusierHorizontalFullSprite.png"}}
\par
{\bkmkstart AAAAAAACQB}
{\bkmkend AAAAAAACQB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CRUSIER_HORIZONTAL_SPRITE_PATH_WITH_PREFIX\:AssetsPaths.hpp}
{\xe \v AssetsPaths.hpp\:CRUSIER_HORIZONTAL_SPRITE_PATH_WITH_PREFIX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string CRUSIER_HORIZONTAL_SPRITE_PATH_WITH_PREFIX = "./assets/imgs/troops/{\b Crusier}/Horizontal/CrusierHorizontal"}}
\par
{\bkmkstart AAAAAAACQC}
{\bkmkend AAAAAAACQC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CRUSIER_VERTICAL_FULL_SPRITE\:AssetsPaths.hpp}
{\xe \v AssetsPaths.hpp\:CRUSIER_VERTICAL_FULL_SPRITE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string CRUSIER_VERTICAL_FULL_SPRITE = "./assets/imgs/troops/{\b Crusier}/Vertical/CrusierVerticalFullSprite.png"}}
\par
{\bkmkstart AAAAAAACQD}
{\bkmkend AAAAAAACQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CRUSIER_VERTICAL_SPRITE_PATH_WITH_PREFIX\:AssetsPaths.hpp}
{\xe \v AssetsPaths.hpp\:CRUSIER_VERTICAL_SPRITE_PATH_WITH_PREFIX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string CRUSIER_VERTICAL_SPRITE_PATH_WITH_PREFIX = "./assets/imgs/troops/{\b Crusier}/Vertical/CrusierVertical"}}
\par
{\bkmkstart AAAAAAACQE}
{\bkmkend AAAAAAACQE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SUBMARINE_HORIZONTAL_FULL_SPRITE\:AssetsPaths.hpp}
{\xe \v AssetsPaths.hpp\:SUBMARINE_HORIZONTAL_FULL_SPRITE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string SUBMARINE_HORIZONTAL_FULL_SPRITE = "./assets/imgs/troops/{\b Submarine}/Horizontal/SubmarinoHorizontalFullSprite.png"}}
\par
{\bkmkstart AAAAAAACQF}
{\bkmkend AAAAAAACQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SUBMARINE_VERTICAL_FULL_SPRITE\:AssetsPaths.hpp}
{\xe \v AssetsPaths.hpp\:SUBMARINE_VERTICAL_FULL_SPRITE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string SUBMARINE_VERTICAL_FULL_SPRITE = "./assets/imgs/troops/{\b Submarine}/Vertical/SubmarinoVerticalFullSprite.png"}}
\par
{\bkmkstart AAAAAAACQG}
{\bkmkend AAAAAAACQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AssetsPaths.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/AssetsPaths.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/AssetsPaths.hpp}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef ASSETS_PATHS_HPP}\par
2 {\cf21 #define ASSETS_PATHS_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 \par
6 {\cf17 namespace }Backgrounds \{\par
7     {\cf17 const} std::string MAIN = {\cf22 "./assets/imgs/backgrounds/Background.png"};\par
8     {\cf17 const} std::string BOARD = {\cf22 "./assets/imgs/backgrounds/BoardBackground.png"};\par
9 \}\par
10 \par
11 {\cf17 namespace }Fonts \{\par
12     {\cf17 const} std::string PRESS_START_2P = {\cf22 "./assets/fonts/PressStart2P.ttf"};\par
13 \}\par
14 \par
15 {\cf17 namespace }Icons \{\par
16     {\cf17 const} std::string AIM = {\cf22 "./assets/imgs/icons/IconAim.png"};\par
17     {\cf17 const} std::string EXPLOSION = {\cf22 "./assets/imgs/icons/IconExplosion.png"};\par
18     {\cf17 const} std::string EYE = {\cf22 "./assets/imgs/icons/IconEye.png"};\par
19     {\cf17 const} std::string HEART = {\cf22 "./assets/imgs/icons/IconHeart.png"};\par
20     {\cf17 const} std::string SKULL = {\cf22 "./assets/imgs/icons/IconSkull.png"};\par
21     {\cf17 const} std::string RIGHT_ARROW_BLACK = {\cf22 "./assets/imgs/icons/IconRightArrowBlack.png"};\par
22     {\cf17 const} std::string LEFT_ARROW_BLACK = {\cf22 "./assets/imgs/icons/IconLeftArrowBlack.png"};\par
23     {\cf17 const} std::string ROTATE_ARROW = {\cf22 "./assets/imgs/icons/IconRotate.png"};\par
24     {\cf17 const} std::string RED_X = {\cf22 "./assets/imgs/icons/IconRedX.png"};\par
25     {\cf17 const} std::string LOGO = {\cf22 "./assets/imgs/icons/Logo.png"};\par
26 \}\par
27 \par
28 {\cf17 const} std::string BATTLESHIP_HORIZONTAL_FULL_SPRITE = {\cf22 "./assets/imgs/troops/Battleship/Horizontal/BattleshipHorizontalFullSprite.png"};\par
29 {\cf17 const} std::string BATTLESHIP_HORIZONTAL_SPRITE_PATH_WITH_PREFIX = {\cf22 "./assets/imgs/troops/Battleship/Horizontal/BattleshipHorizontal"};\par
30 {\cf17 const} std::string BATTLESHIP_VERTICAL_FULL_SPRITE = {\cf22 "./assets/imgs/troops/Battleship/Vertical/BattleshipVerticalFullSprite.png"};\par
31 {\cf17 const} std::string BATTLESHIP_VERTICAL_SPRITE_PATH_WITH_PREFIX = {\cf22 "./assets/imgs/troops/Battleship/Vertical/BattleshipVertical"};\par
32 \par
33 {\cf17 const} std::string CRUSIER_HORIZONTAL_FULL_SPRITE = {\cf22 "./assets/imgs/troops/Crusier/Horizontal/CrusierHorizontalFullSprite.png"};\par
34 {\cf17 const} std::string CRUSIER_HORIZONTAL_SPRITE_PATH_WITH_PREFIX = {\cf22 "./assets/imgs/troops/Crusier/Horizontal/CrusierHorizontal"};\par
35 {\cf17 const} std::string CRUSIER_VERTICAL_FULL_SPRITE = {\cf22 "./assets/imgs/troops/Crusier/Vertical/CrusierVerticalFullSprite.png"};\par
36 {\cf17 const} std::string CRUSIER_VERTICAL_SPRITE_PATH_WITH_PREFIX = {\cf22 "./assets/imgs/troops/Crusier/Vertical/CrusierVertical"};\par
37 \par
38 {\cf17 const} std::string SUBMARINE_HORIZONTAL_FULL_SPRITE = {\cf22 "./assets/imgs/troops/Submarine/Horizontal/SubmarinoHorizontalFullSprite.png"};\par
39 {\cf17 const} std::string SUBMARINE_VERTICAL_FULL_SPRITE = {\cf22 "./assets/imgs/troops/Submarine/Vertical/SubmarinoVerticalFullSprite.png"};\par
40 \par
41 \par
42 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/Colors.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/Colors.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/Colors.hpp}
{\bkmkstart AAAAAAACQH}
{\bkmkend AAAAAAACQH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "raylib.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Color} {\b DEFAULT_WHITE} = \{ 254, 254, 254, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Color} {\b DEFAULT_BALCK} = \{ 46, 46, 46, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Color} {\b TRANSPERENT_WHITE} = \{ 243, 243, 243, 153 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Color} {\b TRANSPERENT_BLACK} = \{ 88, 88, 88, 153 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Color} {\b LIGHT_GRAY} = \{ 190, 190, 190, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Color} {\b BRIGHT_GOLD} = \{ 250, 188, 96, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Color} {\b BRIGHT_RED} = \{ 239, 76, 66, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Color} {\b BRIGHT_GREEN} = \{ 88, 172, 49, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Color} {\b LIGHT_PURPLE} = \{ 195, 148, 255, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Color} {\b DARK_PURPLE} = \{ 145, 110, 188, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Color} {\b BACKGROUND_BLUE} = \{ 67, 140, 149, 255 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Color} {\b TRANSPARENT} = \{ 0, 0, 0, 0 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 
{\xe \v BACKGROUND_BLUE\:Colors.hpp}
{\xe \v Colors.hpp\:BACKGROUND_BLUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Color} BACKGROUND_BLUE = \{ 67, 140, 149, 255 \}}}
\par
{\bkmkstart AAAAAAACQI}
{\bkmkend AAAAAAACQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BRIGHT_GOLD\:Colors.hpp}
{\xe \v Colors.hpp\:BRIGHT_GOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Color} BRIGHT_GOLD = \{ 250, 188, 96, 255 \}}}
\par
{\bkmkstart AAAAAAACQJ}
{\bkmkend AAAAAAACQJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BRIGHT_GREEN\:Colors.hpp}
{\xe \v Colors.hpp\:BRIGHT_GREEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Color} BRIGHT_GREEN = \{ 88, 172, 49, 255 \}}}
\par
{\bkmkstart AAAAAAACQK}
{\bkmkend AAAAAAACQK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BRIGHT_RED\:Colors.hpp}
{\xe \v Colors.hpp\:BRIGHT_RED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Color} BRIGHT_RED = \{ 239, 76, 66, 255 \}}}
\par
{\bkmkstart AAAAAAACQL}
{\bkmkend AAAAAAACQL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DARK_PURPLE\:Colors.hpp}
{\xe \v Colors.hpp\:DARK_PURPLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Color} DARK_PURPLE = \{ 145, 110, 188, 255 \}}}
\par
{\bkmkstart AAAAAAACQM}
{\bkmkend AAAAAAACQM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DEFAULT_BALCK\:Colors.hpp}
{\xe \v Colors.hpp\:DEFAULT_BALCK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Color} DEFAULT_BALCK = \{ 46, 46, 46, 255 \}}}
\par
{\bkmkstart AAAAAAACQN}
{\bkmkend AAAAAAACQN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DEFAULT_WHITE\:Colors.hpp}
{\xe \v Colors.hpp\:DEFAULT_WHITE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Color} DEFAULT_WHITE = \{ 254, 254, 254, 255 \}}}
\par
{\bkmkstart AAAAAAACQO}
{\bkmkend AAAAAAACQO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LIGHT_GRAY\:Colors.hpp}
{\xe \v Colors.hpp\:LIGHT_GRAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Color} LIGHT_GRAY = \{ 190, 190, 190, 255 \}}}
\par
{\bkmkstart AAAAAAACQP}
{\bkmkend AAAAAAACQP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LIGHT_PURPLE\:Colors.hpp}
{\xe \v Colors.hpp\:LIGHT_PURPLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Color} LIGHT_PURPLE = \{ 195, 148, 255, 255 \}}}
\par
{\bkmkstart AAAAAAACQQ}
{\bkmkend AAAAAAACQQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TRANSPARENT\:Colors.hpp}
{\xe \v Colors.hpp\:TRANSPARENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Color} TRANSPARENT = \{ 0, 0, 0, 0 \}}}
\par
{\bkmkstart AAAAAAACQR}
{\bkmkend AAAAAAACQR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TRANSPERENT_BLACK\:Colors.hpp}
{\xe \v Colors.hpp\:TRANSPERENT_BLACK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Color} TRANSPERENT_BLACK = \{ 88, 88, 88, 153 \}}}
\par
{\bkmkstart AAAAAAACQS}
{\bkmkend AAAAAAACQS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TRANSPERENT_WHITE\:Colors.hpp}
{\xe \v Colors.hpp\:TRANSPERENT_WHITE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Color} TRANSPERENT_WHITE = \{ 243, 243, 243, 153 \}}}
\par
{\bkmkstart AAAAAAACQT}
{\bkmkend AAAAAAACQT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Colors.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/Colors.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/Colors.hpp}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef COLORS_HPP}\par
2 {\cf21 #define COLORS_HPP}\par
3 \par
4 {\cf21 #include "raylib.h"}\par
5 \par
6 {\cf17 const} Color DEFAULT_WHITE = \{ 254, 254, 254, 255 \};\par
7 {\cf17 const} Color DEFAULT_BALCK = \{ 46, 46, 46, 255 \};\par
8 {\cf17 const} Color TRANSPERENT_WHITE = \{ 243, 243, 243, 153 \};\par
9 {\cf17 const} Color TRANSPERENT_BLACK = \{ 88, 88, 88, 153 \};\par
10 {\cf17 const} Color LIGHT_GRAY = \{ 190, 190, 190, 255 \};\par
11 {\cf17 const} Color BRIGHT_GOLD = \{ 250, 188, 96, 255 \};\par
12 {\cf17 const} Color BRIGHT_RED = \{ 239, 76, 66, 255 \};\par
13 {\cf17 const} Color BRIGHT_GREEN = \{ 88, 172, 49, 255 \};\par
14 {\cf17 const} Color LIGHT_PURPLE = \{ 195, 148, 255, 255 \};\par
15 {\cf17 const} Color DARK_PURPLE = \{ 145, 110, 188, 255 \};\par
16 {\cf17 const} Color BACKGROUND_BLUE = \{ 67, 140, 149, 255 \};\par
17 {\cf17 const} Color TRANSPARENT = \{ 0, 0, 0, 0 \};\par
18 \par
19 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/Constants.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/Constants.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/Constants.hpp}
{\bkmkstart AAAAAAACQU}
{\bkmkend AAAAAAACQU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b PROJECT_NAME} = "Batalha Naval"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b SCORE_SAVE_FILE_NAME} = "Placar.txt"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b SPRITES_EXTENSION} = ".png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned int {\b DEFAULT_BOARD_AMOUNT_HORIZONTAL_CELLS} = 9\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned int {\b DEFAULT_BOARD_AMOUNT_VERTICAL_CELLS} = 9\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 
{\xe \v DEFAULT_BOARD_AMOUNT_HORIZONTAL_CELLS\:Constants.hpp}
{\xe \v Constants.hpp\:DEFAULT_BOARD_AMOUNT_HORIZONTAL_CELLS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned int DEFAULT_BOARD_AMOUNT_HORIZONTAL_CELLS = 9}}
\par
{\bkmkstart AAAAAAACQV}
{\bkmkend AAAAAAACQV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DEFAULT_BOARD_AMOUNT_VERTICAL_CELLS\:Constants.hpp}
{\xe \v Constants.hpp\:DEFAULT_BOARD_AMOUNT_VERTICAL_CELLS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned int DEFAULT_BOARD_AMOUNT_VERTICAL_CELLS = 9}}
\par
{\bkmkstart AAAAAAACQW}
{\bkmkend AAAAAAACQW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PROJECT_NAME\:Constants.hpp}
{\xe \v Constants.hpp\:PROJECT_NAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string PROJECT_NAME = "Batalha Naval"}}
\par
{\bkmkstart AAAAAAACQX}
{\bkmkend AAAAAAACQX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SCORE_SAVE_FILE_NAME\:Constants.hpp}
{\xe \v Constants.hpp\:SCORE_SAVE_FILE_NAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string SCORE_SAVE_FILE_NAME = "Placar.txt"}}
\par
{\bkmkstart AAAAAAACQY}
{\bkmkend AAAAAAACQY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SPRITES_EXTENSION\:Constants.hpp}
{\xe \v Constants.hpp\:SPRITES_EXTENSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string SPRITES_EXTENSION = ".png"}}
\par
{\bkmkstart AAAAAAACQZ}
{\bkmkend AAAAAAACQZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Constants.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/Constants.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/Constants.hpp}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef CONSTANTS_HPP}\par
2 {\cf21 #define CONSTANTS_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 \par
6 {\cf17 const} std::string PROJECT_NAME = {\cf22 "Batalha Naval"};\par
7 \par
8 {\cf17 const} std::string SCORE_SAVE_FILE_NAME = {\cf22 "Placar.txt"};\par
9 {\cf17 const} std::string SPRITES_EXTENSION = {\cf22 ".png"};\par
10 \par
11 {\cf17 const} {\cf18 unsigned} {\cf18 int} DEFAULT_BOARD_AMOUNT_HORIZONTAL_CELLS = 9;\par
12 {\cf17 const} {\cf18 unsigned} {\cf18 int} DEFAULT_BOARD_AMOUNT_VERTICAL_CELLS = 9;\par
13 \par
14 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/ScoreFormatter.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/ScoreFormatter.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/ScoreFormatter.hpp}
{\bkmkstart AAAAAAACRA}
{\bkmkend AAAAAAACRA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b ScoreFormatter}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b ScoreFormatter::buildLabelWithValue} (const std::string label, const unsigned int value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Build a string combaning the label and value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b ScoreFormatter::buildProportionLabel} (const std::string label, const unsigned int overValue, const unsigned int underValue)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Built a string combaning the label and two values in a porportion. }{
}\par
}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ScoreFormatter.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/ScoreFormatter.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/ScoreFormatter.hpp}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef SCORE_FORMATTER_HPP}\par
2 {\cf21 #define SCORE_FORMATTER_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 \par
6 {\cf17 namespace }ScoreFormatter \{\par
14     std::string buildLabelWithValue({\cf17 const} std::string label, {\cf17 const} {\cf18 unsigned} {\cf18 int} value);\par
15 \par
24     std::string buildProportionLabel({\cf17 const} std::string label, {\cf17 const} {\cf18 unsigned} {\cf18 int} overValue, {\cf17 const} {\cf18 unsigned} {\cf18 int} underValue);\par
25 \}\par
26 \par
27 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/StyleFunctions.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/StyleFunctions.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/StyleFunctions.hpp}
{\bkmkstart AAAAAAACRB}
{\bkmkend AAAAAAACRB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b percentOf} (const float percentage, const float reference)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Simulate the % unity in CSS. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v percentOf\:StyleFunctions.hpp}
{\xe \v StyleFunctions.hpp\:percentOf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float percentOf (const float  {\i percentage}, const float  {\i reference})}}
\par
{\bkmkstart AAAAAAACRC}
{\bkmkend AAAAAAACRC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Simulate the % unity in CSS. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i percentage} \cell }{is the amount of percent of the reference. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i reference} \cell }{is the reference of the percentage.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
x percent of the reference, being x the percentage. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 3                                                                \{\par
4     {\cf19 return} (percentage * reference) / 100;\par
5 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
StyleFunctions.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/StyleFunctions.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/logic/utils/StyleFunctions.hpp}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef STYLE_FUNCTIONS_HPP}\par
2 {\cf21 #define STYLE_FUNCTIONS_HPP}\par
3 \par
11 {\cf18 float} percentOf({\cf17 const} {\cf18 float} percentage, {\cf17 const} {\cf18 float} reference);\par
12 \par
13 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/Button.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/Button.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/Button.hpp}
{\bkmkstart AAAAAAACRD}
{\bkmkend AAAAAAACRD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "raylib.h"}\par
{\f2 #include "Component.hpp"}\par
{\f2 #include "ResizableComponent.hpp"}\par
{\f2 #include "IClickable.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Components::Button}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Components}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Button.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/Button.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/Button.hpp}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef BUTTON_HPP}\par
2 {\cf21 #define BUTTON_HPP}\par
3 \par
4 {\cf21 #include "raylib.h"}\par
5 \par
6 {\cf21 #include "Component.hpp"}\par
7 {\cf21 #include "ResizableComponent.hpp"}\par
8 {\cf21 #include "IClickable.hpp"}\par
9 \par
10 {\cf17 namespace }Components \{\par
11     {\cf17 class }Button : {\cf17 public} ResizableComponent, {\cf17 public} IClickable \{\par
12         {\cf17 public}:\par
13             {\cf17 static} {\cf17 const} Color DEFAULT_BACKGROUND_COLOR;\par
14 \par
15         {\cf17 protected}:\par
16             Rectangle background;\par
17             Color backgroundColor = DEFAULT_BACKGROUND_COLOR;\par
18             Color mouseHoverBackgroundColor = DEFAULT_BACKGROUND_COLOR;\par
19 \par
20         {\cf17 public}:\par
25             Button();\par
26 \par
30             {\cf17 virtual} ~Button();\par
31 \par
35             {\cf17 virtual} {\cf18 void} render() {\cf17 override};\par
36 \par
42             {\cf17 virtual} {\cf18 bool} checkClick() {\cf17 override};\par
43 \par
49             {\cf17 virtual} {\cf18 bool} checkMouseOver() {\cf17 override};\par
50 \par
56             {\cf18 void} setBackgroundColor({\cf17 const} Color color);\par
57 \par
63             Color getBackgroundColor() {\cf17 const};\par
64 \par
70             {\cf18 void} setMouseHoverBackgroundColor({\cf17 const} Color color);\par
71 \par
77             Color getMouseHoverBackgroundColor() {\cf17 const};\par
78 \par
84             {\cf17 virtual} {\cf18 void} setHeight({\cf17 const} {\cf18 float} height) = 0;\par
85 \par
91             {\cf17 virtual} {\cf18 void} setWidth({\cf17 const} {\cf18 float} width) = 0;\par
92     \};\par
93 \}\par
94 \par
95 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/ButtonIcon.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/ButtonIcon.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/ButtonIcon.hpp}
{\bkmkstart AAAAAAACRE}
{\bkmkend AAAAAAACRE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include <string>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "Button.hpp"}\par
{\f2 #include "Image.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Components::ButtonIcon}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Components}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ButtonIcon.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/ButtonIcon.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/ButtonIcon.hpp}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef BUTTON_ICON_HPP}\par
2 {\cf21 #define BUTTON_ICON_HPP}\par
3 \par
4 {\cf21 #include <memory>}\par
5 {\cf21 #include <string>}\par
6 {\cf21 #include "raylib.h"}\par
7 \par
8 {\cf21 #include "Button.hpp"}\par
9 {\cf21 #include "Image.hpp"}\par
10 \par
11 {\cf17 namespace }Components \{\par
12     {\cf17 class }ButtonIcon : {\cf17 public} Button \{\par
13         {\cf17 private}:\par
14             std::unique_ptr<Image> icon = {\cf17 nullptr};\par
15             \par
16             std::string defaultIconPath = {\cf22 ""};\par
17             std::string hoveredIconPath = {\cf22 ""};\par
18 \par
19         {\cf17 public}:\par
25             ButtonIcon({\cf17 const} std::string path);\par
26 \par
33             ButtonIcon({\cf17 const} std::string path, {\cf17 const} {\cf18 float} height, {\cf17 const} {\cf18 float} width);\par
34 \par
38             {\cf17 virtual} ~ButtonIcon();\par
39 \par
43             {\cf17 virtual} {\cf18 void} render() {\cf17 override};\par
44 \par
50             {\cf18 void} setIconHeight({\cf17 const} {\cf18 float} height);\par
51 \par
57             {\cf18 float} getIconHeight() {\cf17 const};\par
58 \par
64             {\cf18 void} setIconWidth({\cf17 const} {\cf18 float} width);\par
65 \par
71             {\cf18 float} getIconWidth() {\cf17 const};\par
72 \par
78             {\cf18 void} setIconPath({\cf17 const} std::string path);\par
79 \par
85             std::string getIconPath() {\cf17 const};\par
86 \par
92             {\cf18 void} setHoverIconPath({\cf17 const} std::string path);\par
93 \par
99             std::string getHoverIconPath() {\cf17 const};\par
100 \par
106             {\cf17 virtual} {\cf18 void} setHeight({\cf17 const} {\cf18 float} height) {\cf17 override};\par
107 \par
113             {\cf17 virtual} {\cf18 void} setWidth({\cf17 const} {\cf18 float} width) {\cf17 override};\par
114     \};\par
115 \}\par
116 \par
117 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/ButtonText.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/ButtonText.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/ButtonText.hpp}
{\bkmkstart AAAAAAACRF}
{\bkmkend AAAAAAACRF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include <string>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "Button.hpp"}\par
{\f2 #include "Text.hpp"}\par
{\f2 #include "IDisplayText.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Components::ButtonText}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Components}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ButtonText.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/ButtonText.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/ButtonText.hpp}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef BUTTON_TEXT_HPP}\par
2 {\cf21 #define BUTTON_TEXT_HPP}\par
3 \par
4 {\cf21 #include <memory>}\par
5 {\cf21 #include <string>}\par
6 {\cf21 #include "raylib.h"}\par
7 \par
8 {\cf21 #include "Button.hpp"}\par
9 {\cf21 #include "Text.hpp"}\par
10 {\cf21 #include "IDisplayText.hpp"}\par
11 \par
12 {\cf17 namespace }Components \{\par
13     {\cf17 class }ButtonText : {\cf17 public} Button, {\cf17 public} IDisplayText \{\par
14         {\cf17 private}:\par
15             std::unique_ptr<Text> text = {\cf17 nullptr};\par
16             \par
17             Color textColor = Text::DEFAULT_COLOR;\par
18             Color mouseHoverTextColor = Text::DEFAULT_COLOR;\par
19 \par
20         {\cf17 public}:\par
25             ButtonText();\par
26 \par
31             ButtonText({\cf17 const} std::string labelText);\par
32 \par
36             {\cf17 virtual} ~ButtonText();\par
37 \par
41             {\cf17 virtual} {\cf18 void} render() {\cf17 override};\par
42 \par
48             {\cf18 void} setText({\cf17 const} std::string text) {\cf17 override};\par
49 \par
55             std::string getText() {\cf17 const override};\par
56 \par
62             {\cf18 void} setFontSize({\cf17 const} {\cf18 float} fontSize) {\cf17 override};\par
63 \par
69             {\cf18 float} getFontSize() {\cf17 const override};\par
70 \par
76             {\cf18 void} setFontFamily({\cf17 const} Font font) {\cf17 override};\par
77 \par
83             Font getFontFamily() {\cf17 const override};\par
84 \par
90             {\cf18 void} setTextColor({\cf17 const} Color color) {\cf17 override};\par
91 \par
97             Color getTextColor() {\cf17 const override};\par
98 \par
104             {\cf18 void} setMouseHoverTextColor({\cf17 const} Color color);\par
105 \par
111             Color getMouseHoverTextColor() {\cf17 const};\par
112 \par
118             {\cf17 virtual} {\cf18 void} setHeight({\cf17 const} {\cf18 float} height) {\cf17 override};\par
119 \par
125             {\cf17 virtual} {\cf18 void} setWidth({\cf17 const} {\cf18 float} width) {\cf17 override};\par
126         \par
127         {\cf17 private}:\par
131             {\cf18 void} setDefaultValues();\par
132     \};\par
133 \}\par
134 \par
135 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/ButtonTextIcon.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/ButtonTextIcon.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/ButtonTextIcon.hpp}
{\bkmkstart AAAAAAACRG}
{\bkmkend AAAAAAACRG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include <string>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "Button.hpp"}\par
{\f2 #include "TextIcon.hpp"}\par
{\f2 #include "IDisplayText.hpp"}\par
{\f2 #include "IDisplayIcon.hpp"}\par
{\f2 #include "Colors.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Components::ButtonTextIcon}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Components}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ButtonTextIcon.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/ButtonTextIcon.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/button/ButtonTextIcon.hpp}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef BUTTON_TEXT_ICON_HPP}\par
2 {\cf21 #define BUTTON_TEXT_ICON_HPP}\par
3 \par
4 {\cf21 #include <memory>}\par
5 {\cf21 #include <string>}\par
6 {\cf21 #include "raylib.h"}\par
7 \par
8 {\cf21 #include "Button.hpp"}\par
9 {\cf21 #include "TextIcon.hpp"}\par
10 \par
11 {\cf21 #include "IDisplayText.hpp"}\par
12 {\cf21 #include "IDisplayIcon.hpp"}\par
13 \par
14 {\cf21 #include "Colors.hpp"}\par
15 \par
16 {\cf17 namespace }Components \{\par
17     {\cf17 class }ButtonTextIcon : {\cf17 public} Button, {\cf17 public} IDisplayIcon, {\cf17 public} IDisplayText \{\par
18         {\cf17 private}:\par
19             std::shared_ptr<TextIcon> content = {\cf17 nullptr};\par
20             \par
21             Color textColor = DEFAULT_WHITE;\par
22             Color mouseHoverTextColor = DEFAULT_WHITE;\par
23 \par
24         {\cf17 public}:\par
31             ButtonTextIcon({\cf17 const} std::string iconPath, {\cf17 const} std::string label);\par
32 \par
36             {\cf17 virtual} ~ButtonTextIcon();\par
37 \par
41             {\cf17 virtual} {\cf18 void} render() {\cf17 override};\par
42 \par
48             {\cf17 virtual} {\cf18 void} setHeight({\cf17 const} {\cf18 float} height) {\cf17 override};\par
49 \par
55             {\cf17 virtual} {\cf18 void} setWidth({\cf17 const} {\cf18 float} width) {\cf17 override};\par
56 \par
62             {\cf17 virtual} {\cf18 void} setIconPath({\cf17 const} std::string path) {\cf17 override};\par
63 \par
69             {\cf17 virtual} std::string getIconPath() {\cf17 const override};\par
70 \par
76             {\cf17 virtual} {\cf18 void} setIconHeight({\cf17 const} {\cf18 float} height) {\cf17 override};\par
77 \par
83             {\cf17 virtual} {\cf18 float} getIconHeight() {\cf17 const override};\par
84 \par
90             {\cf17 virtual} {\cf18 void} setIconWidth({\cf17 const} {\cf18 float} width) {\cf17 override};\par
91 \par
97             {\cf17 virtual} {\cf18 float} getIconWidth() {\cf17 const override};\par
98 \par
104             {\cf17 virtual} {\cf18 void} setText({\cf17 const} std::string content) {\cf17 override};\par
105 \par
111             {\cf17 virtual} std::string getText() {\cf17 const override};\par
112             \par
118             {\cf17 virtual} {\cf18 void} setFontSize({\cf17 const} {\cf18 float} fontSize) {\cf17 override};\par
119 \par
125             {\cf17 virtual} {\cf18 float} getFontSize() {\cf17 const override};\par
126             \par
132             {\cf17 virtual} {\cf18 void} setFontFamily({\cf17 const} Font font) {\cf17 override};\par
133 \par
139             {\cf17 virtual} Font getFontFamily() {\cf17 const override};\par
140 \par
146             {\cf17 virtual} {\cf18 void} setTextColor({\cf17 const} Color color) {\cf17 override};\par
147 \par
153             {\cf17 virtual} Color getTextColor() {\cf17 const override};\par
154 \par
160             {\cf17 virtual} {\cf18 void} setMouseHoverTextColor({\cf17 const} Color color);\par
161 \par
167             {\cf17 virtual} Color getMouseHoverTextColor() {\cf17 const};\par
168 \par
174             {\cf17 virtual} {\cf18 void} setXPosition({\cf17 const} {\cf18 float} xPosition) {\cf17 override};\par
175 \par
181             {\cf17 virtual} {\cf18 void} setYPosition({\cf17 const} {\cf18 float} yPosition) {\cf17 override};\par
182 \par
189             {\cf17 virtual} {\cf18 void} setPosition({\cf17 const} {\cf18 float} xPosition, {\cf17 const} {\cf18 float} yPosition) {\cf17 override};\par
190 \par
196             {\cf17 virtual} {\cf18 void} setPosition({\cf17 const} Vector2 position) {\cf17 override};\par
197         \par
198         {\cf17 protected}:\par
202             {\cf17 virtual} {\cf18 void} updateInnerComponentsPositions();\par
203         \par
204         {\cf17 private}:\par
208             {\cf18 void} updateHeight();\par
209 \par
213             {\cf18 void} updateWidth();\par
214 \par
220             {\cf17 static} {\cf18 float} getDefaultWidth();\par
221 \par
227             {\cf17 static} {\cf18 float} getDefaultHeight();\par
228     \};\par
229 \}\par
230 \par
231 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/Component.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/Component.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/Component.hpp}
{\bkmkstart AAAAAAACRH}
{\bkmkend AAAAAAACRH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "raylib.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Components::Component}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Components}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Component.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/Component.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/Component.hpp}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef COMPONENT_HPP}\par
2 {\cf21 #define COMPONENT_HPP}\par
3 \par
4 {\cf21 #include "raylib.h"}\par
5 \par
6 {\cf17 namespace }Components \{\par
7     {\cf17 class }Component \{\par
8         {\cf17 public}:\par
9             {\cf17 static} {\cf17 const} {\cf18 float} DEFAUT_INITIAL_WIDTH;\par
10             {\cf17 static} {\cf17 const} {\cf18 float} DEFAUT_INITIAL_HEIGHT;\par
11             {\cf17 static} {\cf17 const} Vector2 DEFAULT_INITIAL_POSITION;\par
12 \par
13         {\cf17 protected}:\par
14             {\cf18 float} width = DEFAUT_INITIAL_WIDTH;\par
15             {\cf18 float} height = DEFAUT_INITIAL_HEIGHT;\par
16             Vector2 position = DEFAULT_INITIAL_POSITION;\par
17 \par
18         {\cf17 public}:\par
22             {\cf17 virtual} ~Component();\par
23 \par
27             {\cf17 virtual} {\cf18 void} render() = 0;\par
28 \par
34             {\cf17 virtual} {\cf18 float} getWidth() {\cf17 const};\par
35 \par
41             {\cf17 virtual} {\cf18 float} getHeight() {\cf17 const};\par
42         \par
48             {\cf17 virtual} {\cf18 void} setXPosition({\cf17 const} {\cf18 float} xPosition);\par
49 \par
55             {\cf17 virtual} {\cf18 float} getXPosition() {\cf17 const};\par
56 \par
62             {\cf17 virtual} {\cf18 void} setYPosition({\cf17 const} {\cf18 float} yPosition);\par
63 \par
69             {\cf17 virtual} {\cf18 float} getYPosition() {\cf17 const};\par
70 \par
77             {\cf17 virtual} {\cf18 void} setPosition({\cf17 const} {\cf18 float} xPosition, {\cf17 const} {\cf18 float} yPosition);\par
78 \par
84             {\cf17 virtual} {\cf18 void} setPosition({\cf17 const} Vector2 position);\par
85 \par
91             {\cf17 virtual} Vector2 getPosition() {\cf17 const};\par
92     \};\par
93 \}\par
94 \par
95 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/IClickable.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/IClickable.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/IClickable.hpp}
{\bkmkstart AAAAAAACRI}
{\bkmkend AAAAAAACRI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Components::IClickable}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Components}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
IClickable.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/IClickable.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/IClickable.hpp}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef ICLICKABLE_HPP}\par
2 {\cf21 #define ICLICKABLE_HPP}\par
3 \par
4 {\cf17 namespace }Components \{\par
5     {\cf17 class }IClickable \{\par
6         {\cf17 protected}:\par
7             {\cf18 bool} enabled = {\cf17 true};\par
8 \par
9         {\cf17 public}:\par
15             {\cf17 virtual} {\cf18 bool} checkClick() = 0;\par
16             \par
22             {\cf17 virtual} {\cf18 bool} checkMouseOver() = 0;\par
23 \par
29             {\cf17 virtual} {\cf18 void} setEnabled({\cf17 const} {\cf18 bool} enabled);\par
30 \par
36             {\cf17 virtual} {\cf18 bool} isEnabled() {\cf17 const};\par
37     \};\par
38 \}\par
39 \par
40 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/IDisplayIcon.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/IDisplayIcon.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/IDisplayIcon.hpp}
{\bkmkstart AAAAAAACRJ}
{\bkmkend AAAAAAACRJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include "raylib.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Components::IDisplayIcon}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Components}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
IDisplayIcon.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/IDisplayIcon.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/IDisplayIcon.hpp}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef IDISPLAY_ICON_HPP}\par
2 {\cf21 #define IDISPLAY_ICON_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 {\cf21 #include "raylib.h"}\par
6 \par
7 {\cf17 namespace }Components \{\par
8     {\cf17 class }IDisplayIcon \{\par
9         {\cf17 public}:\par
15             {\cf17 virtual} {\cf18 void} setIconPath({\cf17 const} std::string path) = 0;\par
16 \par
22             {\cf17 virtual} std::string getIconPath() {\cf17 const} = 0;\par
23 \par
29             {\cf17 virtual} {\cf18 void} setIconHeight({\cf17 const} {\cf18 float} height) = 0;\par
30 \par
36             {\cf17 virtual} {\cf18 float} getIconHeight() {\cf17 const} = 0;\par
37 \par
43             {\cf17 virtual} {\cf18 void} setIconWidth({\cf17 const} {\cf18 float} width) = 0;\par
44 \par
50             {\cf17 virtual} {\cf18 float} getIconWidth() {\cf17 const} = 0;\par
51     \};\par
52 \}\par
53 \par
54 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/IDisplayText.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/IDisplayText.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/IDisplayText.hpp}
{\bkmkstart AAAAAAACRK}
{\bkmkend AAAAAAACRK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include "raylib.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Components::IDisplayText}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Components}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
IDisplayText.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/IDisplayText.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/IDisplayText.hpp}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef IDISPLAY_TEXT_HPP}\par
2 {\cf21 #define IDISPLAY_TEXT_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 {\cf21 #include "raylib.h"}\par
6 \par
7 {\cf17 namespace }Components \{\par
8     {\cf17 class }IDisplayText \{\par
9         {\cf17 public}:\par
15             {\cf17 virtual} {\cf18 void} setText({\cf17 const} std::string content) = 0;\par
16 \par
22             {\cf17 virtual} std::string getText() {\cf17 const} = 0;\par
23             \par
29             {\cf17 virtual} {\cf18 void} setFontSize({\cf17 const} {\cf18 float} fontSize) = 0;\par
30 \par
36             {\cf17 virtual} {\cf18 float} getFontSize() {\cf17 const} = 0;\par
37             \par
43             {\cf17 virtual} {\cf18 void} setFontFamily({\cf17 const} Font font) = 0;\par
44 \par
50             {\cf17 virtual} Font getFontFamily() {\cf17 const} = 0;\par
51 \par
57             {\cf17 virtual} {\cf18 void} setTextColor({\cf17 const} Color color) = 0;\par
58 \par
64             {\cf17 virtual} Color getTextColor() {\cf17 const} = 0;\par
65     \};\par
66 \}\par
67 \par
68 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/IResizable.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/IResizable.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/IResizable.hpp}
{\bkmkstart AAAAAAACRL}
{\bkmkend AAAAAAACRL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Components::IResizable}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Components}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
IResizable.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/IResizable.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/IResizable.hpp}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef IRESIZABLE_HPP}\par
2 {\cf21 #define IRESIZABLE_HPP}\par
3 \par
4 {\cf17 namespace }Components \{\par
5     {\cf17 class }IResizable \{\par
6         {\cf17 public}:\par
12             {\cf17 virtual} {\cf18 void} setHeight({\cf17 const} {\cf18 float} height) = 0;\par
13 \par
19             {\cf17 virtual} {\cf18 void} setWidth({\cf17 const} {\cf18 float} width) = 0;\par
20     \};\par
21 \}\par
22 \par
23 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/ResizableComponent.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/ResizableComponent.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/ResizableComponent.hpp}
{\bkmkstart AAAAAAACRM}
{\bkmkend AAAAAAACRM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Component.hpp"}\par
{\f2 #include "IResizable.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Components::ResizableComponent}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Components}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ResizableComponent.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/ResizableComponent.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/component/ResizableComponent.hpp}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef RESIZABLE_COMPONENT_HPP}\par
2 {\cf21 #define RESIZABLE_COMPONENT_HPP}\par
3 \par
4 {\cf21 #include "Component.hpp"}\par
5 {\cf21 #include "IResizable.hpp"}\par
6 \par
7 {\cf17 namespace }Components \{\par
8     {\cf17 class }ResizableComponent : {\cf17 public} Component, {\cf17 public} IResizable \{\par
9         {\cf17 public}:\par
13             {\cf17 virtual} ~ResizableComponent();\par
14 \par
20             {\cf17 virtual} {\cf18 void} setHeight({\cf17 const} {\cf18 float} height) {\cf17 override};\par
21 \par
27             {\cf17 virtual} {\cf18 void} setWidth({\cf17 const} {\cf18 float} width) {\cf17 override};\par
28     \};\par
29 \};\par
30 \par
31 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/image/Image.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/image/Image.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/image/Image.hpp}
{\bkmkstart AAAAAAACRN}
{\bkmkend AAAAAAACRN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "ResizableComponent.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Components::Image}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Components}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Image.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/image/Image.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/image/Image.hpp}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef IMAGE_HPP}\par
2 {\cf21 #define IMAGE_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 {\cf21 #include "raylib.h"}\par
6 \par
7 {\cf21 #include "ResizableComponent.hpp"}\par
8 \par
9 {\cf17 namespace }Components \{\par
10     {\cf17 class }Image : {\cf17 public} ResizableComponent \{\par
11         {\cf17 public}:\par
12             {\cf17 static} {\cf17 const} {\cf18 float} DEFAULT_WIDTH;\par
13             {\cf17 static} {\cf17 const} {\cf18 float} DEFAULT_HEIGHT;\par
14 \par
15         {\cf17 private}:\par
16             std::string path = {\cf22 ""};\par
17             Texture2D content;\par
18 \par
19         {\cf17 public}:\par
23             Image();\par
24 \par
29             Image({\cf17 const} std::string path);\par
30 \par
37             Image({\cf17 const} std::string path, {\cf17 const} {\cf18 float} height, {\cf17 const} {\cf18 float} width);\par
38 \par
42             {\cf17 virtual} ~Image();\par
43 \par
47             {\cf17 virtual} {\cf18 void} render();\par
48 \par
54             {\cf18 void} setPath({\cf17 const} std::string path);\par
55 \par
61             std::string getPath() {\cf17 const};\par
62 \par
68             {\cf17 virtual} {\cf18 void} setHeight({\cf17 const} {\cf18 float} height) {\cf17 override};\par
69 \par
75             {\cf17 virtual} {\cf18 void} setWidth({\cf17 const} {\cf18 float} width) {\cf17 override};\par
76         \par
77         {\cf17 private}:\par
81             {\cf18 void} loadImage();\par
82 \par
86             {\cf18 void} updateImage();\par
87     \};\par
88 \}\par
89 \par
90 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/text/Text.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/text/Text.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/text/Text.hpp}
{\bkmkstart AAAAAAACRO}
{\bkmkend AAAAAAACRO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "Component.hpp"}\par
{\f2 #include "IDisplayText.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Components::Text}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Components}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Text.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/text/Text.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/text/Text.hpp}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef TEXT_HPP}\par
2 {\cf21 #define TEXT_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 {\cf21 #include "raylib.h"}\par
6 \par
7 {\cf21 #include "Component.hpp"}\par
8 {\cf21 #include "IDisplayText.hpp"}\par
9 \par
10 {\cf17 namespace }Components \{\par
11     {\cf17 class }Text : {\cf17 public} Component, {\cf17 public} IDisplayText \{\par
12         {\cf17 public}:\par
13             {\cf17 static} {\cf17 const} {\cf18 float} DEFAULT_FONT_SPACING;\par
14             {\cf17 static} {\cf17 const} Color DEFAULT_COLOR;\par
15 \par
16             {\cf17 static} Font getDefaultFontFamily();\par
17             {\cf17 static} {\cf18 float} getDefaultFontSize();\par
18             {\cf17 static} {\cf18 float} getDefaultTitleSize();\par
19 \par
20         {\cf17 private}:\par
21             std::string content = {\cf22 ""};\par
22             {\cf18 float} fontSize = getDefaultFontSize();\par
23             Color textColor = DEFAULT_COLOR;\par
24             Font fontFamily;\par
25 \par
26         {\cf17 public}:\par
31             Text();\par
32 \par
37             Text({\cf17 const} std::string content);\par
38 \par
44             Text({\cf17 const} std::string content, {\cf17 const} {\cf18 float} fontSize);\par
45 \par
51             Text({\cf17 const} std::string content, {\cf17 const} Color textColor);\par
52 \par
58             Text({\cf17 const} std::string content, {\cf17 const} Font fontFamily);\par
59 \par
66             Text({\cf17 const} std::string content, {\cf17 const} {\cf18 float} fontSize, {\cf17 const} Color textColor);\par
67 \par
74             Text({\cf17 const} std::string content, {\cf17 const} {\cf18 float} fontSize, {\cf17 const} Font fontFamily);\par
75 \par
82             Text({\cf17 const} std::string content, {\cf17 const} Color textColor, {\cf17 const} Font fontFamily);\par
83 \par
91             Text({\cf17 const} std::string content, {\cf17 const} {\cf18 float} fontSize, {\cf17 const} Color textColor, {\cf17 const} Font fontFamily);\par
92             \par
96             {\cf17 virtual} ~Text();\par
97             \par
101             {\cf17 virtual} {\cf18 void} render() {\cf17 override};\par
102 \par
108             {\cf18 void} setText({\cf17 const} std::string content) {\cf17 override};\par
109 \par
115             std::string getText() {\cf17 const override};\par
116 \par
122             {\cf18 void} setFontSize({\cf17 const} {\cf18 float} fontSize) {\cf17 override};\par
123 \par
129             {\cf18 float} getFontSize() {\cf17 const override};\par
130             \par
136             {\cf18 void} setFontFamily({\cf17 const} Font font) {\cf17 override};\par
137 \par
143             Font getFontFamily() {\cf17 const override};\par
144 \par
150             {\cf18 void} setTextColor({\cf17 const} Color color) {\cf17 override};\par
151 \par
157             Color getTextColor() {\cf17 const override};\par
158 \par
164             Vector2 getDimensions() {\cf17 const};\par
165         \par
166         {\cf17 private}:\par
170             {\cf18 void} updateTextSize();\par
171     \};\par
172 \}\par
173 \par
174 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/text/TextIcon.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/text/TextIcon.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/text/TextIcon.hpp}
{\bkmkstart AAAAAAACRP}
{\bkmkend AAAAAAACRP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include <string>}\par
{\f2 #include "View.hpp"}\par
{\f2 #include "IDisplayText.hpp"}\par
{\f2 #include "IDisplayIcon.hpp"}\par
{\f2 #include "Text.hpp"}\par
{\f2 #include "Image.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Components::TextIcon}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Components}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TextIcon.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/text/TextIcon.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/text/TextIcon.hpp}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef TEXT_ICON_HPP}\par
2 {\cf21 #define TEXT_ICON_HPP}\par
3 \par
4 {\cf21 #include <memory>}\par
5 {\cf21 #include <string>}\par
6 \par
7 {\cf21 #include "View.hpp"}\par
8 {\cf21 #include "IDisplayText.hpp"}\par
9 {\cf21 #include "IDisplayIcon.hpp"}\par
10 \par
11 {\cf21 #include "Text.hpp"}\par
12 {\cf21 #include "Image.hpp"}\par
13 \par
14 {\cf17 namespace }Components \{\par
15     {\cf17 class }TextIcon : {\cf17 public} Views::View, {\cf17 public} IDisplayText, {\cf17 public} IDisplayIcon \{\par
16         {\cf17 private}:\par
17             std::unique_ptr<Text> text = {\cf17 nullptr};\par
18             std::unique_ptr<Image> icon = {\cf17 nullptr};\par
19 \par
20         {\cf17 public}:\par
26             TextIcon({\cf17 const} std::string iconPaht, {\cf17 const} std::string text);\par
27 \par
31             {\cf17 virtual} ~TextIcon();\par
32         \par
36             {\cf17 virtual} {\cf18 void} render() {\cf17 override};\par
37 \par
43             {\cf17 virtual} {\cf18 void} setText({\cf17 const} std::string text) {\cf17 override};\par
44             \par
50             {\cf17 virtual} std::string getText() {\cf17 const override};\par
51 \par
57             {\cf17 virtual} {\cf18 void} setFontSize({\cf17 const} {\cf18 float} fontSize) {\cf17 override};\par
58 \par
64             {\cf17 virtual} {\cf18 float} getFontSize() {\cf17 const override};\par
65 \par
71             {\cf17 virtual} {\cf18 void} setFontFamily({\cf17 const} Font font) {\cf17 override};\par
72 \par
78             {\cf17 virtual} Font getFontFamily() {\cf17 const override};\par
79 \par
85             {\cf17 virtual} {\cf18 void} setTextColor({\cf17 const} Color color) {\cf17 override};\par
86 \par
92             {\cf17 virtual} Color getTextColor() {\cf17 const override};\par
93 \par
99             {\cf17 virtual} {\cf18 void} setIconHeight({\cf17 const} {\cf18 float} height) {\cf17 override};\par
100 \par
106             {\cf17 virtual} {\cf18 float} getIconHeight() {\cf17 const override};\par
107 \par
113             {\cf17 virtual} {\cf18 void} setIconWidth({\cf17 const} {\cf18 float} width) {\cf17 override};\par
114 \par
120             {\cf17 virtual} {\cf18 float} getIconWidth() {\cf17 const override};\par
121 \par
127             {\cf17 virtual} {\cf18 void} setIconPath({\cf17 const} std::string path) {\cf17 override};\par
128 \par
134             {\cf17 virtual} std::string getIconPath() {\cf17 const override};\par
135         \par
136         {\cf17 protected}:\par
140             {\cf17 virtual} {\cf18 void} updateInnerComponentsPositions() {\cf17 override};\par
141 \par
145             {\cf17 virtual} {\cf18 void} findWidth() {\cf17 override};\par
146 \par
150             {\cf17 virtual} {\cf18 void} findHeight() {\cf17 override};\par
151 \par
152         {\cf17 private}:\par
156             {\cf18 void} updateSizes();\par
157 \par
163             {\cf18 float} getIconMarginRight() {\cf17 const};\par
164     \};\par
165 \}\par
166 \par
167 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/view/View.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/view/View.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/view/View.hpp}
{\bkmkstart AAAAAAACRQ}
{\bkmkend AAAAAAACRQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "raylib.h"}\par
{\f2 #include "Component.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Views::View}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Views}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
View.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/view/View.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/components/view/View.hpp}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef VIEW_HPP}\par
2 {\cf21 #define VIEW_HPP}\par
3 \par
4 {\cf21 #include "raylib.h"}\par
5 \par
6 {\cf21 #include "Component.hpp"}\par
7 \par
8 {\cf17 namespace }Views \{\par
9     {\cf17 class }View : {\cf17 public} Components::Component \{\par
10         {\cf17 public}:\par
14             {\cf17 virtual} ~View();\par
15 \par
21             {\cf17 virtual} {\cf18 void} setXPosition({\cf17 const} {\cf18 float} xPosition) {\cf17 override};\par
22 \par
28             {\cf17 virtual} {\cf18 void} setYPosition({\cf17 const} {\cf18 float} yPosition) {\cf17 override};\par
29 \par
36             {\cf17 virtual} {\cf18 void} setPosition({\cf17 const} {\cf18 float} xPosition, {\cf17 const} {\cf18 float} yPosition) {\cf17 override};\par
37 \par
43             {\cf17 virtual} {\cf18 void} setPosition({\cf17 const} Vector2 position) {\cf17 override};\par
44         \par
45         {\cf17 protected}:\par
49             {\cf17 virtual} {\cf18 void} updateInnerComponentsPositions() = 0;\par
50 \par
54             {\cf17 virtual} {\cf18 void} findWidth() = 0;\par
55 \par
59             {\cf17 virtual} {\cf18 void} findHeight() = 0;\par
60     \};\par
61 \}\par
62 \par
63 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/endGame/EndGameScoreDisplay.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/endGame/EndGameScoreDisplay.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/endGame/EndGameScoreDisplay.hpp}
{\bkmkstart AAAAAAACRR}
{\bkmkend AAAAAAACRR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include <memory>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "View.hpp"}\par
{\f2 #include "TextIcon.hpp"}\par
{\f2 #include "Score.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Views::EndGameScoreDisplay}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Views}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EndGameScoreDisplay.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/endGame/EndGameScoreDisplay.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/endGame/EndGameScoreDisplay.hpp}
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef END_GAME_SCORE_DISPLAY_HPP}\par
2 {\cf21 #define END_GAME_SCORE_DISPLAY_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 {\cf21 #include <vector>}\par
6 {\cf21 #include <memory>}\par
7 {\cf21 #include "raylib.h"}\par
8 \par
9 {\cf21 #include "View.hpp"}\par
10 {\cf21 #include "TextIcon.hpp"}\par
11 \par
12 {\cf21 #include "Score.hpp"}\par
13 \par
14 {\cf17 namespace }Views \{\par
15     {\cf17 class }EndGameScoreDisplay : {\cf17 public} View \{\par
16         {\cf17 private}:\par
17             std::vector<std::shared_ptr<Components::TextIcon>> labels;\par
18             Score playerScore;\par
19 \par
20         {\cf17 public}:\par
24             EndGameScoreDisplay({\cf17 const} Score score);\par
25 \par
29             {\cf17 virtual} ~EndGameScoreDisplay();\par
30 \par
34             {\cf17 virtual} {\cf18 void} render() {\cf17 override};\par
35 \par
41             Score getPlayerScore() {\cf17 const};\par
42 \par
43         {\cf17 protected}:\par
47             {\cf17 virtual} {\cf18 void} updateInnerComponentsPositions() {\cf17 override};\par
48 \par
52             {\cf17 virtual} {\cf18 void} findWidth() {\cf17 override};\par
53 \par
57             {\cf17 virtual} {\cf18 void} findHeight() {\cf17 override};\par
58 \par
59         {\cf17 private}:\par
63             {\cf18 void} defineLabelsSizes();\par
64             \par
68             {\cf18 void} poisitionLabels();\par
69 \par
75             {\cf18 void} setPlayerScore({\cf17 const} Score score);\par
76     \};\par
77 \}\par
78 \par
79 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/endGame/EndGameScreen.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/endGame/EndGameScreen.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/endGame/EndGameScreen.hpp}
{\bkmkstart AAAAAAACRS}
{\bkmkend AAAAAAACRS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "Screen.hpp"}\par
{\f2 #include "ButtonText.hpp"}\par
{\f2 #include "Text.hpp"}\par
{\f2 #include "Image.hpp"}\par
{\f2 #include "Player.hpp"}\par
{\f2 #include "Colors.hpp"}\par
{\f2 #include "EndGameScoreDisplay.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Screens::EndGameScreen}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Screens}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EndGameScreen.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/endGame/EndGameScreen.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/endGame/EndGameScreen.hpp}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef END_GAME_SCREEN_HPP}\par
2 {\cf21 #define END_GAME_SCREEN_HPP}\par
3 \par
4 {\cf21 #include <memory>}\par
5 {\cf21 #include <string>}\par
6 {\cf21 #include <vector>}\par
7 {\cf21 #include "raylib.h"}\par
8 \par
9 {\cf21 #include "Screen.hpp"}\par
10 {\cf21 #include "ButtonText.hpp"}\par
11 {\cf21 #include "Text.hpp"}\par
12 {\cf21 #include "Image.hpp"}\par
13 \par
14 {\cf21 #include "Player.hpp"}\par
15 {\cf21 #include "Colors.hpp"}\par
16 \par
17 {\cf21 #include "EndGameScoreDisplay.hpp"}\par
18 \par
19 {\cf17 namespace }Screens \{\par
20     {\cf17 class }EndGameScreen : {\cf17 public} Screen \{\par
21         {\cf17 private}:\par
22             std::unique_ptr<Components::Image> backgroundImage = {\cf17 nullptr};\par
23 \par
24             std::unique_ptr<Components::Text> player1Name = {\cf17 nullptr};\par
25             std::unique_ptr<Components::Text> player1Status = {\cf17 nullptr};\par
26             std::unique_ptr<Views::EndGameScoreDisplay> player1ScoreDisplay = {\cf17 nullptr};\par
27 \par
28             std::unique_ptr<Components::Text> player2Name = {\cf17 nullptr};\par
29             std::unique_ptr<Components::Text> player2Status = {\cf17 nullptr};\par
30             std::unique_ptr<Views::EndGameScoreDisplay> player2ScoreDisplay = {\cf17 nullptr};\par
31 \par
32             std::unique_ptr<Components::ButtonText> buttonVoltar = {\cf17 nullptr};\par
33 \par
34             Rectangle backgroundMask;\par
35             Color backgroundMaskColor = DEFAULT_BALCK;\par
36             \par
37             Rectangle mainContentBackground;\par
38             Color mainContentBackgroundColor = DEFAULT_BALCK;\par
39 \par
40             Rectangle divisionLine;\par
41             \par
42             Player player1;\par
43             Player player2;\par
44 \par
45         {\cf17 public}:\par
51             EndGameScreen({\cf17 const} Player& player1, {\cf17 const} Player& player2);\par
52 \par
56             {\cf17 virtual} ~EndGameScreen();\par
57 \par
63             Player getPlayer1() {\cf17 const};\par
64 \par
70             Player getPlayer2() {\cf17 const};\par
71         \par
72         {\cf17 protected}:\par
76             {\cf17 virtual} {\cf18 void} renderScreen() {\cf17 override};\par
77 \par
81             {\cf17 virtual} {\cf18 void} handleEvents() {\cf17 override};\par
82         \par
83         {\cf17 private}:\par
87             {\cf18 void} renderDivisionLine();\par
88 \par
92             {\cf18 void} renderBackground();\par
93 \par
97             {\cf18 void} buildBackgroundImage();\par
98 \par
102             {\cf18 void} buildPlayer1SectionTitle();\par
103 \par
107             {\cf18 void} renderPlayer1SectionTitle();\par
108 \par
112             {\cf18 void} buildPlayer1ScoreDisplay();\par
113 \par
117             {\cf18 void} buildDivisionLine();\par
118 \par
122             {\cf18 void} buildPlayer2SectionTitle();\par
123 \par
127             {\cf18 void} renderPlayer2SectionTitle();\par
128 \par
132             {\cf18 void} buildPlayer2ScoreDisplay();\par
133 \par
137             {\cf18 void} buildButtonVoltar();\par
138 \par
144             {\cf18 void} setPlayer1({\cf17 const} Player& player1Score);\par
145 \par
151             {\cf18 void} setPlayer2({\cf17 const} Player& player2Score);\par
152 \par
158             {\cf18 float} getPlayerNameMarginTop() {\cf17 const};\par
159 \par
165             {\cf18 float} getPlayerStatusFontSize() {\cf17 const};\par
166 \par
172             {\cf18 float} getPlayerStatusMarginTop() {\cf17 const};\par
173 \par
179             {\cf18 float} getPlayerScoreMarginTop() {\cf17 const};\par
180 \par
188             std::string getStatusText({\cf17 const} Score playerScore) {\cf17 const};\par
189 \par
197             Color getStatusColor({\cf17 const} Score playerScore) {\cf17 const};\par
198     \};\par
199 \}\par
200 \par
201 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/GameBoardDisplay.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/GameBoardDisplay.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/GameBoardDisplay.hpp}
{\bkmkstart AAAAAAACRT}
{\bkmkend AAAAAAACRT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include <vector>}\par
{\f2 #include "BoardDisplay.hpp"}\par
{\f2 #include "GamePositionDisplay.hpp"}\par
{\f2 #include "Board.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Views::GameBoardDisplay}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Views}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GameBoardDisplay.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/GameBoardDisplay.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/GameBoardDisplay.hpp}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef GAME_BOARD_DISPLAY_HPP}\par
2 {\cf21 #define GAME_BOARD_DISPLAY_HPP}\par
3 \par
4 {\cf21 #include <memory>}\par
5 {\cf21 #include <vector>}\par
6 \par
7 {\cf21 #include "BoardDisplay.hpp"}\par
8 {\cf21 #include "GamePositionDisplay.hpp"}\par
9 \par
10 {\cf21 #include "Board.hpp"}\par
11 \par
12 {\cf17 namespace }Views \{\par
13     {\cf17 class }GameBoardDisplay : {\cf17 public} BoardDisplay \{\par
14         {\cf17 public}:\par
20             GameBoardDisplay({\cf17 const} {\cf18 unsigned} {\cf18 int} amountHorizontalCells, {\cf17 const} {\cf18 unsigned} {\cf18 int} amountVerticalCells);\par
21 \par
26             GameBoardDisplay(std::shared_ptr<Board> logicBoard);\par
27 \par
31             {\cf17 virtual} ~GameBoardDisplay();\par
32 \par
36             {\cf18 void} enable();\par
37 \par
41             {\cf18 void} disable();\par
42 \par
46             {\cf18 void} revealTroops();\par
47 \par
51             {\cf18 void} hideTroops();\par
52 \par
58             std::vector<std::vector<std::shared_ptr<Views::GamePositionDisplay>>> getCellsAsGameCells() {\cf17 const};\par
59         \par
60         {\cf17 protected}:\par
64             {\cf17 virtual} {\cf18 void} initializeCells() {\cf17 override};\par
65 \par
66         {\cf17 private}:\par
70             {\cf18 void} buildComponent();\par
71     \};\par
72 \}\par
73 \par
74 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/GamePositionDisplay.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/GamePositionDisplay.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/GamePositionDisplay.hpp}
{\bkmkstart AAAAAAACRU}
{\bkmkend AAAAAAACRU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include "Image.hpp"}\par
{\f2 #include "PositionDisplay.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Views::GamePositionDisplay}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Views}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GamePositionDisplay.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/GamePositionDisplay.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/GamePositionDisplay.hpp}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef GAME_POSITION_DISPLAY_HPP}\par
2 {\cf21 #define GAME_POSITION_DISPLAY_HPP}\par
3 \par
4 {\cf21 #include <memory>}\par
5 \par
6 {\cf21 #include "Image.hpp"}\par
7 \par
8 {\cf21 #include "PositionDisplay.hpp"}\par
9 \par
10 {\cf17 namespace }Views \{\par
11     {\cf17 class }GamePositionDisplay : {\cf17 public} PositionDisplay \{\par
12         {\cf17 private}:\par
13             std::unique_ptr<Components::Image> hitImage = {\cf17 nullptr};\par
14             \par
15             {\cf18 bool} revealTroop = {\cf17 false};\par
16             {\cf18 bool} wasClicked = {\cf17 false};\par
17 \par
18         {\cf17 public}:\par
23             GamePositionDisplay({\cf17 const} Point boardCoordinates);\par
24 \par
29             GamePositionDisplay(std::shared_ptr<Position> position);\par
30 \par
34             {\cf17 virtual} ~GamePositionDisplay();\par
35 \par
39             {\cf17 virtual} {\cf18 void} render() {\cf17 override};\par
40 \par
46             {\cf17 virtual} {\cf18 bool} checkClick() {\cf17 override};\par
47 \par
53             {\cf18 void} setRevealTroop({\cf17 const} {\cf18 bool} option);\par
54 \par
60             {\cf18 bool} shouldRevealTroop() {\cf17 const};\par
61         \par
62         {\cf17 protected}:\par
66             {\cf17 virtual} {\cf18 void} updateInnerComponentsPositions() {\cf17 override};\par
67         \par
68         {\cf17 private}:\par
72             {\cf18 void} handleTroopRender();\par
73 \par
77             {\cf18 void} handleDefaultRender();\par
78 \par
82             {\cf18 void} buildComponent();\par
83 \par
87             {\cf18 void} buildHitImage();\par
88 \par
92             {\cf18 void} positionHitImage();\par
93     \};\par
94 \}\par
95 \par
96 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/GameScoreDisplay.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/GameScoreDisplay.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/GameScoreDisplay.hpp}
{\bkmkstart AAAAAAACRV}
{\bkmkend AAAAAAACRV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include <memory>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "View.hpp"}\par
{\f2 #include "TextIcon.hpp"}\par
{\f2 #include "Score.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Views::GameScoreDisplay}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Views}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GameScoreDisplay.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/GameScoreDisplay.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/GameScoreDisplay.hpp}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef GAME_SCORE_DISPLAY_HPP}\par
2 {\cf21 #define GAME_SCORE_DISPLAY_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 {\cf21 #include <vector>}\par
6 {\cf21 #include <memory>}\par
7 {\cf21 #include "raylib.h"}\par
8 \par
9 {\cf21 #include "View.hpp"}\par
10 {\cf21 #include "TextIcon.hpp"}\par
11 \par
12 {\cf21 #include "Score.hpp"}\par
13 \par
14 {\cf17 namespace }Views \{\par
15     {\cf17 class }GameScoreDisplay : {\cf17 public} View \{\par
16         {\cf17 private}:\par
17             std::vector<std::shared_ptr<Components::TextIcon>> labels;\par
18             std::shared_ptr<Score> playerScore = {\cf17 nullptr};\par
19 \par
20         {\cf17 public}:\par
25             GameScoreDisplay({\cf17 const} std::shared_ptr<Score> score);\par
26 \par
30             {\cf17 virtual} ~GameScoreDisplay();\par
31 \par
35             {\cf17 virtual} {\cf18 void} render() {\cf17 override};\par
36 \par
40             {\cf18 void} updateLabels();\par
41 \par
47             Score getPlayerScore() {\cf17 const};\par
48 \par
49         {\cf17 protected}:\par
53             {\cf17 virtual} {\cf18 void} updateInnerComponentsPositions() {\cf17 override};\par
54 \par
58             {\cf17 virtual} {\cf18 void} findWidth() {\cf17 override};\par
59 \par
63             {\cf17 virtual} {\cf18 void} findHeight() {\cf17 override};\par
64 \par
65         {\cf17 private}:\par
69             {\cf18 void} defineLabelsSizes();\par
70 \par
74             {\cf18 void} poisitionLabels();\par
75 \par
81             {\cf18 void} setPlayerScore({\cf17 const} std::shared_ptr<Score> score);\par
82     \};\par
83 \}\par
84 \par
85 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/GameScreen.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/GameScreen.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/GameScreen.hpp}
{\bkmkstart AAAAAAACRW}
{\bkmkend AAAAAAACRW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include "Screen.hpp"}\par
{\f2 #include "Text.hpp"}\par
{\f2 #include "ButtonTextIcon.hpp"}\par
{\f2 #include "PositionDisplay.hpp"}\par
{\f2 #include "GameBoardDisplay.hpp"}\par
{\f2 #include "GameScoreDisplay.hpp"}\par
{\f2 #include "Match.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Screens::GameScreen}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Screens}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GameScreen.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/GameScreen.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/game/GameScreen.hpp}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef GAME_SCREEN_HPP}\par
2 {\cf21 #define GAME_SCREEN_HPP}\par
3 \par
4 {\cf21 #include <memory>}\par
5 \par
6 {\cf21 #include "Screen.hpp"}\par
7 \par
8 {\cf21 #include "Text.hpp"}\par
9 {\cf21 #include "ButtonTextIcon.hpp"}\par
10 \par
11 {\cf21 #include "PositionDisplay.hpp"}\par
12 \par
13 {\cf21 #include "GameBoardDisplay.hpp"}\par
14 {\cf21 #include "GameScoreDisplay.hpp"}\par
15 \par
16 {\cf21 #include "Match.hpp"}\par
17 \par
18 {\cf17 namespace }Screens \{\par
19     {\cf17 class }GameScreen : {\cf17 public} Screen \{\par
20         {\cf17 private}:\par
21             std::unique_ptr<Components::Text> player1Name = {\cf17 nullptr};\par
22             std::unique_ptr<Views::GameBoardDisplay> player1Board = {\cf17 nullptr};\par
23             std::unique_ptr<Components::ButtonTextIcon> player1RevealTroopsButton = {\cf17 nullptr};\par
24             std::unique_ptr<Views::GameScoreDisplay> player1ScoreDisplay = {\cf17 nullptr};\par
25 \par
26             std::unique_ptr<Components::Text> player2Name = {\cf17 nullptr};\par
27             std::unique_ptr<Views::GameBoardDisplay> player2Board = {\cf17 nullptr};\par
28             std::unique_ptr<Components::ButtonTextIcon> player2RevealTroopsButton = {\cf17 nullptr};\par
29             std::unique_ptr<Views::GameScoreDisplay> player2ScoreDisplay = {\cf17 nullptr};\par
30             \par
31             std::shared_ptr<Match> match = {\cf17 nullptr};\par
32 \par
33             Rectangle divisionLine;\par
34             Rectangle background;\par
35             Rectangle foreground;\par
36 \par
37             {\cf18 bool} isTroopsRevealed = {\cf17 false};\par
38 \par
39         {\cf17 public}:\par
44             GameScreen(std::shared_ptr<Match> match);\par
45 \par
49             {\cf17 virtual} ~GameScreen();\par
50 \par
56             Match getActualMatch() {\cf17 const};\par
57         \par
58         {\cf17 protected}:\par
62             {\cf17 virtual} {\cf18 void} renderScreen() {\cf17 override};\par
63 \par
67             {\cf17 virtual} {\cf18 void} handleEvents() {\cf17 override};\par
68 \par
69         {\cf17 private}:\par
75             {\cf18 void} verifyPlayerBoardClick({\cf17 const} std::unique_ptr<Views::GameBoardDisplay>& board);\par
76 \par
82             {\cf18 void} verifyPlayerRevealTroopsClick({\cf17 const} std::unique_ptr<Components::ButtonTextIcon>& playerRevealTroopsButton, {\cf17 const} std::unique_ptr<Views::GameBoardDisplay>& board);\par
83 \par
89             {\cf18 void} checkTroopHit(Views::PositionDisplay& target);\par
90 \par
94             {\cf18 void} incrementPlayerShots();\par
95 \par
99             {\cf18 void} passTurn();\par
100 \par
104             {\cf18 void} startPlayer1Turn();\par
105 \par
109             {\cf18 void} startPlayer2Turn();\par
110 \par
114             {\cf18 void} buildBackground();\par
115 \par
119             {\cf18 void} renderBackground();\par
120 \par
124             {\cf18 void} buildPlayer1Name();\par
125 \par
129             {\cf18 void} buildPlayer1Board();\par
130 \par
134             {\cf18 void} buildPlayer1RevealTroopsButton();\par
135 \par
139             {\cf18 void} buildPlayer1ScoreDisplay();\par
140 \par
144             {\cf18 void} buildDivisionLine();\par
145 \par
149             {\cf18 void} renderDivisionLine();\par
150         \par
154             {\cf18 void} buildPlayer2Name();\par
155 \par
159             {\cf18 void} buildPlayer2Board();\par
160 \par
164             {\cf18 void} buildPlayer2RevealTroopsButton();\par
165 \par
169             {\cf18 void} buildPlayer2ScoreDisplay();\par
170 \par
176             {\cf18 float} getPlayerNameMarginTop() {\cf17 const};\par
177 \par
183             {\cf18 float} getBoardMarginTop() {\cf17 const};\par
184 \par
190             {\cf18 float} getRevealButtonIconHeight() {\cf17 const};\par
191 \par
197             {\cf18 float} getRevealButtonIconWidth() {\cf17 const};\par
198 \par
204             {\cf18 float} getRevealButtonFontSize() {\cf17 const};\par
205 \par
211             {\cf18 float} getRevealButtonWidth() {\cf17 const};\par
212 \par
218             {\cf18 float} getRevealButtonHeight() {\cf17 const};\par
219 \par
225             {\cf18 float} getRevealButtonYOffset() {\cf17 const};\par
226 \par
232             {\cf18 float} getPlayerScoreDisplayMarginTop() {\cf17 const};\par
233 \par
241             std::string buildPlayerTurnMark({\cf17 const} std::string playerName) {\cf17 const};\par
242 \par
248             {\cf18 void} setActualMatch({\cf17 const} std::shared_ptr<Match> match);\par
249     \};\par
250 \}\par
251 \par
252 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/BattleshipDisplay.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/BattleshipDisplay.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/BattleshipDisplay.hpp}
{\bkmkstart AAAAAAACRX}
{\bkmkend AAAAAAACRX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include "TroopDisplay.hpp"}\par
{\f2 #include "Troop.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Views::BattleshipDisplay}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Views}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BattleshipDisplay.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/BattleshipDisplay.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/BattleshipDisplay.hpp}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef BATTLESHIP_DISPLAY_HPP}\par
2 {\cf21 #define BATTLESHIP_DISPLAY_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 \par
6 {\cf21 #include "TroopDisplay.hpp"}\par
7 \par
8 {\cf21 #include "Troop.hpp"}\par
9 \par
10 {\cf17 namespace }Views \{\par
11     {\cf17 class }BattleshipDisplay : {\cf17 public} TroopDisplay \{\par
12         {\cf17 public}:\par
17             BattleshipDisplay({\cf17 const} {\cf18 unsigned} {\cf18 int} amount);\par
18 \par
22             {\cf17 virtual} ~BattleshipDisplay();\par
23 \par
29             {\cf17 virtual} std::shared_ptr<Troop> getTroopInstance() {\cf17 const override};\par
30 \par
36             {\cf17 virtual} std::string getTroopClassName() {\cf17 const override};\par
37     \};\par
38 \}\par
39 \par
40 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/CrusierDisplay.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/CrusierDisplay.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/CrusierDisplay.hpp}
{\bkmkstart AAAAAAACRY}
{\bkmkend AAAAAAACRY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include "TroopDisplay.hpp"}\par
{\f2 #include "Troop.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Views::CrusierDisplay}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Views}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CrusierDisplay.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/CrusierDisplay.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/CrusierDisplay.hpp}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef CRUSIER_DISPLAY_HPP}\par
2 {\cf21 #define CRUSIER_DISPLAY_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 \par
6 {\cf21 #include "TroopDisplay.hpp"}\par
7 \par
8 {\cf21 #include "Troop.hpp"}\par
9 \par
10 {\cf17 namespace }Views \{\par
11     {\cf17 class }CrusierDisplay : {\cf17 public} TroopDisplay \{\par
12         {\cf17 public}:\par
17             CrusierDisplay({\cf17 const} {\cf18 unsigned} {\cf18 int} amount);\par
18 \par
22             {\cf17 virtual} ~CrusierDisplay();\par
23 \par
29             {\cf17 virtual} std::shared_ptr<Troop> getTroopInstance() {\cf17 const override};\par
30 \par
36             {\cf17 virtual} std::string getTroopClassName() {\cf17 const override};\par
37     \};\par
38 \}\par
39 \par
40 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/PositioningBoardDisplay.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/PositioningBoardDisplay.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/PositioningBoardDisplay.hpp}
{\bkmkstart AAAAAAACRZ}
{\bkmkend AAAAAAACRZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include <vector>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "BoardDisplay.hpp"}\par
{\f2 #include "PositioningPositionDisplay.hpp"}\par
{\f2 #include "Board.hpp"}\par
{\f2 #include "Point.hpp"}\par
{\f2 #include "Troop.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Views::PositioningBoardDisplay}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Views}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PositioningBoardDisplay.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/PositioningBoardDisplay.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/PositioningBoardDisplay.hpp}
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef POSITIONING_BOARD_DISPLAY_HPP}\par
2 {\cf21 #define POSITIONING_BOARD_DISPLAY_HPP}\par
3 \par
4 {\cf21 #include <memory>}\par
5 {\cf21 #include <vector>}\par
6 {\cf21 #include "raylib.h"}\par
7 \par
8 {\cf21 #include "BoardDisplay.hpp"}\par
9 {\cf21 #include "PositioningPositionDisplay.hpp"}\par
10 \par
11 {\cf21 #include "Board.hpp"}\par
12 {\cf21 #include "Point.hpp"}\par
13 {\cf21 #include "Troop.hpp"}\par
14 \par
15 {\cf17 namespace }Views \{\par
16     {\cf17 class }PositioningBoardDisplay : {\cf17 public} BoardDisplay \{\par
17         {\cf17 public}:\par
23             PositioningBoardDisplay({\cf17 const} {\cf18 unsigned} {\cf18 int} amountHorizontalCells, {\cf17 const} {\cf18 unsigned} {\cf18 int} amountVerticalCells);\par
24 \par
29             PositioningBoardDisplay(std::shared_ptr<Board> logicBoard);\par
30 \par
34             {\cf17 virtual} ~PositioningBoardDisplay();\par
35         \par
41             {\cf18 void} positionTroop({\cf17 const} std::shared_ptr<Troop> troop);\par
42 \par
48             {\cf18 void} removeTroop({\cf17 const} std::shared_ptr<Troop> troop);\par
49 \par
55             {\cf18 void} markPositions({\cf17 const} std::vector<Point>& points);\par
56 \par
62             {\cf18 void} unmarkPositions({\cf17 const} std::vector<Point>& points);\par
63 \par
69             {\cf18 void} unmarkPosition({\cf17 const} Point point);\par
70 \par
76             std::vector<std::vector<std::shared_ptr<PositioningPositionDisplay>>> getCellsAsPositioningCells() {\cf17 const};\par
77         \par
78         {\cf17 protected}:\par
82             {\cf17 virtual} {\cf18 void} initializeCells() {\cf17 override};\par
83 \par
84         {\cf17 private}:\par
88             {\cf18 void} buildComponent();\par
89     \};\par
90 \}\par
91 \par
92 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/PositioningPositionDisplay.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/PositioningPositionDisplay.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/PositioningPositionDisplay.hpp}
{\bkmkstart AAAAAAACSA}
{\bkmkend AAAAAAACSA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "raylib.h"}\par
{\f2 #include "PositionDisplay.hpp"}\par
{\f2 #include "Point.hpp"}\par
{\f2 #include "Position.hpp"}\par
{\f2 #include "Colors.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Views::PositioningPositionDisplay}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Views}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PositioningPositionDisplay.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/PositioningPositionDisplay.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/PositioningPositionDisplay.hpp}
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef POSITIONING_POSITION_DISPLAY_HPP}\par
2 {\cf21 #define POSITIONING_POSITION_DISPLAY_HPP}\par
3 \par
4 {\cf21 #include "raylib.h"}\par
5 \par
6 {\cf21 #include "PositionDisplay.hpp"}\par
7 \par
8 {\cf21 #include "Point.hpp"}\par
9 {\cf21 #include "Position.hpp"}\par
10 \par
11 {\cf21 #include "Colors.hpp"}\par
12 \par
13 {\cf17 namespace }Views \{\par
14     {\cf17 class }PositioningPositionDisplay : {\cf17 public} PositionDisplay \{\par
15         {\cf17 private}:\par
16             {\cf18 bool} marked = {\cf17 false};\par
17             Color markedColor = DEFAULT_BALCK;\par
18 \par
19             {\cf18 bool} mouseHasEntered = {\cf17 false};\par
20 \par
21         {\cf17 public}:\par
26             PositioningPositionDisplay({\cf17 const} Point boardCoordinates);\par
27 \par
32             PositioningPositionDisplay(std::shared_ptr<Position> position);\par
33 \par
37             {\cf17 virtual} ~PositioningPositionDisplay();\par
38 \par
42             {\cf17 virtual} {\cf18 void} render() {\cf17 override};\par
43 \par
49             {\cf18 bool} checkMouseEnter();\par
50 \par
56             {\cf18 bool} checkMouseExit();\par
57 \par
63             {\cf18 bool} checkMouseRightClick();\par
64 \par
70             {\cf18 void} setMarked({\cf17 const} {\cf18 bool} marked);\par
71 \par
77             {\cf18 bool} isMarked() {\cf17 const};\par
78 \par
84             {\cf18 void} setMarkedColor({\cf17 const} Color color);\par
85 \par
91             Color getMarkedColor() {\cf17 const};\par
92     \};\par
93 \}\par
94 \par
95 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/PositioningScreen.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/PositioningScreen.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/PositioningScreen.hpp}
{\bkmkstart AAAAAAACSB}
{\bkmkend AAAAAAACSB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <memory>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "Screen.hpp"}\par
{\f2 #include "Text.hpp"}\par
{\f2 #include "WarningPopUp.hpp"}\par
{\f2 #include "PositioningBoardDisplay.hpp"}\par
{\f2 #include "TroopPositioningOption.hpp"}\par
{\f2 #include "Orientation.hpp"}\par
{\f2 #include "Player.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Screens::PositioningScreen}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Screens}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PositioningScreen.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/PositioningScreen.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/PositioningScreen.hpp}
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef POSITIONING_SCREEN_HPP}\par
2 {\cf21 #define POSITIONING_SCREEN_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 {\cf21 #include <memory>}\par
6 {\cf21 #include "raylib.h"}\par
7 \par
8 {\cf21 #include "Screen.hpp"}\par
9 {\cf21 #include "Text.hpp"}\par
10 \par
11 {\cf21 #include "WarningPopUp.hpp"}\par
12 {\cf21 #include "PositioningBoardDisplay.hpp"}\par
13 {\cf21 #include "TroopPositioningOption.hpp"}\par
14 \par
15 {\cf21 #include "Orientation.hpp"}\par
16 {\cf21 #include "Player.hpp"}\par
17 \par
18 {\cf17 namespace }Screens \{\par
19     {\cf17 class }PositioningScreen : {\cf17 public} Screen \{\par
20         {\cf17 private}:\par
21             {\cf17 static} {\cf17 const} std::string POPUP_MESSAGE;\par
22 \par
23             std::unique_ptr<Components::Text> playerName = {\cf17 nullptr};\par
24 \par
25             std::unique_ptr<Views::PositioningBoardDisplay> board = {\cf17 nullptr};\par
26             std::unique_ptr<Views::TroopPositioningOption> availableTroops = {\cf17 nullptr};\par
27             \par
28             std::unique_ptr<Views::WarningPopUp> popup = {\cf17 nullptr};\par
29 \par
30             Rectangle background;\par
31             Rectangle foreground;\par
32 \par
33             std::shared_ptr<Troop> troopToBePositioned = {\cf17 nullptr};\par
34             Orientation troopBuildDirection = HORIZONTAL;\par
35             {\cf18 bool} shouldDisplayPopUp = {\cf17 false};\par
36 \par
37         {\cf17 public}:\par
42             PositioningScreen(std::shared_ptr<Player> playerPositioningTurn);\par
43 \par
47             {\cf17 virtual} ~PositioningScreen();\par
48         \par
49         {\cf17 protected}:\par
53             {\cf17 virtual} {\cf18 void} renderScreen() {\cf17 override};\par
54 \par
58             {\cf17 virtual} {\cf18 void} handleEvents() {\cf17 override};\par
59         \par
60         {\cf17 private}:\par
64             {\cf18 void} verifyPopupShouldClose();\par
65 \par
69             {\cf18 void} verifyButtonRotateClick();\par
70 \par
74             {\cf18 void} verifyTroopSelection();\par
75 \par
79             {\cf18 void} verifyTroopPositioning();\par
80 \par
84             {\cf18 void} verifyTroopRemoved();\par
85 \par
89             {\cf18 void} verifyEndPositioningTurnCilck();\par
90 \par
94             {\cf18 void} clearBoard();\par
95 \par
99             {\cf18 void} handleInvalidPositionException();\par
100 \par
104             {\cf18 void} buildBackground();\par
105 \par
109             {\cf18 void} renderBackground();\par
110 \par
114             {\cf18 void} buildBoard();\par
115 \par
119             {\cf18 void} buildPlayerName();\par
120 \par
124             {\cf18 void} buildAvailableTroops();\par
125     \};\par
126 \}\par
127 \par
128 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/SubmarineDisplay.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/SubmarineDisplay.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/SubmarineDisplay.hpp}
{\bkmkstart AAAAAAACSC}
{\bkmkend AAAAAAACSC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include "TroopDisplay.hpp"}\par
{\f2 #include "Troop.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Views::SubmarineDisplay}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Views}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SubmarineDisplay.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/SubmarineDisplay.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/SubmarineDisplay.hpp}
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef SUBMARINE_DISPLAY_HPP}\par
2 {\cf21 #define SUBMARINE_DISPLAY_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 \par
6 {\cf21 #include "TroopDisplay.hpp"}\par
7 \par
8 {\cf21 #include "Troop.hpp"}\par
9 \par
10 {\cf17 namespace }Views \{\par
11     {\cf17 class }SubmarineDisplay : {\cf17 public} TroopDisplay \{\par
12         {\cf17 public}:\par
17             SubmarineDisplay({\cf17 const} {\cf18 unsigned} {\cf18 int} amount);\par
18 \par
22             {\cf17 virtual} ~SubmarineDisplay();\par
23 \par
29             {\cf17 virtual} std::shared_ptr<Troop> getTroopInstance() {\cf17 const override};\par
30 \par
36             {\cf17 virtual} std::string getTroopClassName() {\cf17 const override};\par
37     \};\par
38 \}\par
39 \par
40 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/TroopDisplay.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/TroopDisplay.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/TroopDisplay.hpp}
{\bkmkstart AAAAAAACSD}
{\bkmkend AAAAAAACSD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <memory>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "View.hpp"}\par
{\f2 #include "Text.hpp"}\par
{\f2 #include "Image.hpp"}\par
{\f2 #include "IClickable.hpp"}\par
{\f2 #include "Troop.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Views::TroopDisplay}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Views}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TroopDisplay.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/TroopDisplay.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/TroopDisplay.hpp}
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef TROOP_DISPLAY_HPP}\par
2 {\cf21 #define TROOP_DISPLAY_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 {\cf21 #include <memory>}\par
6 {\cf21 #include "raylib.h"}\par
7 \par
8 {\cf21 #include "View.hpp"}\par
9 {\cf21 #include "Text.hpp"}\par
10 {\cf21 #include "Image.hpp"}\par
11 {\cf21 #include "IClickable.hpp"}\par
12 \par
13 {\cf21 #include "Troop.hpp"}\par
14 \par
15 {\cf17 namespace }Views \{\par
16     {\cf17 class }TroopDisplay : {\cf17 public} View, {\cf17 public} Components::IClickable \{\par
17         {\cf17 private}:\par
18             std::unique_ptr<Components::Text> amountTroopType = {\cf17 nullptr};\par
19             std::unique_ptr<Components::Image> troopImage = {\cf17 nullptr};\par
20             Rectangle background;\par
21 \par
22             {\cf18 unsigned} {\cf18 int} amount = 0;\par
23             std::string troopName = {\cf22 ""};\par
24 \par
25         {\cf17 public}:\par
32             TroopDisplay({\cf17 const} {\cf18 unsigned} {\cf18 int} amount, {\cf17 const} std::string troopName, {\cf17 const} std::string troopImagePath);\par
33 \par
37             {\cf17 virtual} ~TroopDisplay();\par
38 \par
42             {\cf17 virtual} {\cf18 void} render() {\cf17 override};\par
43 \par
49             {\cf17 virtual} {\cf18 bool} checkClick() {\cf17 override};\par
50 \par
56             {\cf17 virtual} {\cf18 bool} checkMouseOver() {\cf17 override};\par
57 \par
63             {\cf18 void} setAmount({\cf17 const} {\cf18 unsigned} {\cf18 int} amount);\par
64 \par
70             {\cf18 unsigned} {\cf18 int} getAmount() {\cf17 const};\par
71 \par
75             {\cf18 void} decrementAmount();\par
76 \par
80             {\cf18 void} incrementAmount();\par
81 \par
87             {\cf18 void} setTroopName({\cf17 const} std::string troopName);\par
88 \par
94             std::string getTroopName() {\cf17 const};\par
95 \par
101             {\cf17 virtual} std::string getTroopClassName() {\cf17 const} = 0;\par
102 \par
108             {\cf17 virtual} std::shared_ptr<Troop> getTroopInstance() {\cf17 const} = 0;\par
109 \par
115             {\cf18 void} setTroopImageWidth({\cf17 const} {\cf18 float} width);\par
116 \par
117         {\cf17 protected}:\par
121             {\cf17 virtual} {\cf18 void} updateInnerComponentsPositions() {\cf17 override};\par
122 \par
126             {\cf17 virtual} {\cf18 void} findWidth() {\cf17 override};\par
127 \par
131             {\cf17 virtual} {\cf18 void} findHeight() {\cf17 override};\par
132         \par
133         {\cf17 private}:\par
137             {\cf18 void} updateLabelValue();\par
138             \par
142             {\cf18 void} buildBackground();\par
143 \par
147             {\cf18 void} positionBackground();\par
148 \par
152             {\cf18 void} renderBackground();\par
153 \par
157             {\cf18 void} buildAmountTroopTypeText();\par
158 \par
162             {\cf18 void} poisitionAmountTroopTypeText();\par
163 \par
167             {\cf18 void} buildTroopImage();\par
168 \par
172             {\cf18 void} positionTroopImage();\par
173 \par
179             std::string buildAmountTroopTypeTextLabel({\cf17 const} {\cf18 unsigned} {\cf18 int} amount, {\cf17 const} std::string troopName) {\cf17 const};\par
180     \};\par
181 \}\par
182 \par
183 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/TroopPositioningOption.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/TroopPositioningOption.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/TroopPositioningOption.hpp}
{\bkmkstart AAAAAAACSE}
{\bkmkend AAAAAAACSE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <memory>}\par
{\f2 #include <vector>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "View.hpp"}\par
{\f2 #include "ButtonIcon.hpp"}\par
{\f2 #include "ButtonText.hpp"}\par
{\f2 #include "TroopDisplay.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Views::TroopPositioningOption}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Views}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TroopPositioningOption.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/TroopPositioningOption.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/TroopPositioningOption.hpp}
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef TROOP_POSITIONING_OPTION_HPP}\par
2 {\cf21 #define TROOP_POSITIONING_OPTION_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 {\cf21 #include <memory>}\par
6 {\cf21 #include <vector>}\par
7 {\cf21 #include "raylib.h"}\par
8 \par
9 {\cf21 #include "View.hpp"}\par
10 {\cf21 #include "ButtonIcon.hpp"}\par
11 {\cf21 #include "ButtonText.hpp"}\par
12 \par
13 {\cf21 #include "TroopDisplay.hpp"}\par
14 \par
15 {\cf17 namespace }Views \{\par
16     {\cf17 class }TroopPositioningOption : {\cf17 public} View \{\par
17         {\cf17 private}:\par
18             std::vector<std::shared_ptr<TroopDisplay>> availableTroops;\par
19             std::unique_ptr<Components::ButtonIcon> buttonRotate = {\cf17 nullptr};\par
20             std::unique_ptr<Components::ButtonText> buttonEndPositioningTurn = {\cf17 nullptr};\par
21 \par
22             Rectangle background;\par
23 \par
24         {\cf17 public}:\par
28             TroopPositioningOption();\par
29 \par
33             {\cf17 virtual} ~TroopPositioningOption();\par
34 \par
38             {\cf17 virtual} {\cf18 void} render() {\cf17 override};\par
39 \par
45             {\cf18 bool} checkButtonRotateClick();\par
46 \par
52             {\cf18 bool} checkButtonEndPositioningTurn();\par
53 \par
59             {\cf18 void} decrementTroopAmount({\cf17 const} std::string troopType);\par
60 \par
66             {\cf18 void} incrementTroopAmount({\cf17 const} std::string troopType);\par
67             \par
73             {\cf18 bool} hasPositionedAllTroops() {\cf17 const};\par
74 \par
80             std::vector<std::shared_ptr<TroopDisplay>> getSelectableTroops() {\cf17 const};\par
81 \par
82         {\cf17 protected}:\par
86             {\cf17 virtual} {\cf18 void} updateInnerComponentsPositions() {\cf17 override};\par
87 \par
91             {\cf17 virtual} {\cf18 void} findWidth() {\cf17 override};\par
92 \par
96             {\cf17 virtual} {\cf18 void} findHeight() {\cf17 override};\par
97         \par
98         {\cf17 private}:\par
102             {\cf18 void} buildBackground();\par
103 \par
107             {\cf18 void} positionBackground();\par
108 \par
112             {\cf18 void} renderBackground();\par
113 \par
117             {\cf18 void} buildTroopDisplays();\par
118 \par
122             {\cf18 void} buildButtonRotate();\par
123 \par
127             {\cf18 void} positionButtonRotate();\par
128 \par
132             {\cf18 void} buildButtonEndPositioningTurn();\par
133 \par
137             {\cf18 void} positionButtonEndPositioningTurn();\par
138 \par
142             {\cf18 void} positionTroopsDisplays();\par
143     \};\par
144 \}\par
145 \par
146 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/WarningPopUp.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/WarningPopUp.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/WarningPopUp.hpp}
{\bkmkstart AAAAAAACSF}
{\bkmkend AAAAAAACSF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <memory>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "View.hpp"}\par
{\f2 #include "Text.hpp"}\par
{\f2 #include "ButtonText.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Views::WarningPopUp}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Views}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
WarningPopUp.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/WarningPopUp.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/positioning/WarningPopUp.hpp}
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef WARNING_POP_UP_HPP}\par
2 {\cf21 #define WARNING_POP_UP_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 {\cf21 #include <memory>}\par
6 {\cf21 #include "raylib.h"}\par
7 \par
8 {\cf21 #include "View.hpp"}\par
9 {\cf21 #include "Text.hpp"}\par
10 {\cf21 #include "ButtonText.hpp"}\par
11 \par
12 {\cf17 namespace }Views \{\par
13     {\cf17 class }WarningPopUp : {\cf17 public} View \{\par
14         {\cf17 private}:\par
15             std::unique_ptr<Components::Text> headerTitle = {\cf17 nullptr};\par
16             std::unique_ptr<Components::Text> messageDisplay = {\cf17 nullptr};\par
17             std::unique_ptr<Components::ButtonText> buttonExit = {\cf17 nullptr};\par
18 \par
19             Rectangle header;\par
20             Rectangle background;\par
21             Rectangle mask;\par
22 \par
23             std::string message = {\cf22 ""};\par
24 \par
25         {\cf17 public}:\par
30             WarningPopUp({\cf17 const} std::string message);\par
31 \par
35             {\cf17 virtual} ~WarningPopUp();\par
36 \par
40             {\cf17 virtual} {\cf18 void} render() {\cf17 override};\par
41 \par
47             {\cf18 bool} checkExit();\par
48         \par
49         {\cf17 protected}:\par
53             {\cf17 virtual} {\cf18 void} updateInnerComponentsPositions() {\cf17 override};\par
54 \par
58             {\cf17 virtual} {\cf18 void} findWidth() {\cf17 override};\par
59 \par
63             {\cf17 virtual} {\cf18 void} findHeight() {\cf17 override};\par
64         \par
65         {\cf17 private}:\par
69             {\cf18 void} buildMask();\par
70 \par
74             {\cf18 void} positionMask();\par
75 \par
79             {\cf18 void} renderMask();\par
80 \par
84             {\cf18 void} buildBackground();\par
85 \par
89             {\cf18 void} positionBackground();\par
90 \par
94             {\cf18 void} renderBackground();\par
95 \par
99             {\cf18 void} buildHeader();\par
100 \par
104             {\cf18 void} positionHeader();\par
105 \par
109             {\cf18 void} renderHeader();\par
110 \par
114             {\cf18 void} buildMassageDisplay();\par
115 \par
119             {\cf18 void} positionMessageDisplay();\par
120 \par
124             {\cf18 void} buildExitButton();\par
125 \par
129             {\cf18 void} positionExitButton();\par
130     \};\par
131 \}\par
132 \par
133 \par
134 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/score/MatchResultDisplay.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/score/MatchResultDisplay.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/score/MatchResultDisplay.hpp}
{\bkmkstart AAAAAAACSG}
{\bkmkend AAAAAAACSG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "View.hpp"}\par
{\f2 #include "Text.hpp"}\par
{\f2 #include "MatchResults.hpp"}\par
{\f2 #include "PlayerRegistredScore.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Views::MatchResultDisplay}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Views}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MatchResultDisplay.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/score/MatchResultDisplay.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/score/MatchResultDisplay.hpp}
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef MATCH_RESULT_DISPLAY_HPP}\par
2 {\cf21 #define MATCH_RESULT_DISPLAY_HPP}\par
3 \par
4 {\cf21 #include <memory>}\par
5 {\cf21 #include "raylib.h"}\par
6 \par
7 {\cf21 #include "View.hpp"}\par
8 {\cf21 #include "Text.hpp"}\par
9 \par
10 {\cf21 #include "MatchResults.hpp"}\par
11 \par
12 {\cf21 #include "PlayerRegistredScore.hpp"}\par
13 \par
14 {\cf17 namespace }Views \{\par
15     {\cf17 class }MatchResultDisplay : {\cf17 public} View \{\par
16         {\cf17 private}:\par
17             std::unique_ptr<Components::Text> title = {\cf17 nullptr};\par
18             std::unique_ptr<Components::Text> matchDateTime = {\cf17 nullptr};\par
19 \par
20             std::unique_ptr<PlayerRegistredScore> player1RegistredScore = {\cf17 nullptr};\par
21             std::unique_ptr<PlayerRegistredScore> player2RegistredScore = {\cf17 nullptr};\par
22 \par
23             Rectangle leftDivisionLine;\par
24             Rectangle rightDivisionLine;\par
25             MatchResults matchResult;\par
26 \par
27         {\cf17 public}:\par
31             MatchResultDisplay();\par
32 \par
36             {\cf17 virtual} ~MatchResultDisplay();\par
37             \par
41             {\cf17 virtual} {\cf18 void} render() {\cf17 override};\par
42 \par
48             {\cf18 void} update({\cf17 const} MatchResults matchResult);\par
49         \par
55             MatchResults getMatchResult() {\cf17 const};\par
56 \par
57         {\cf17 protected}:\par
61             {\cf17 virtual} {\cf18 void} updateInnerComponentsPositions() {\cf17 override};\par
62 \par
66             {\cf17 virtual} {\cf18 void} findWidth() {\cf17 override};\par
67 \par
71             {\cf17 virtual} {\cf18 void} findHeight() {\cf17 override};\par
72 \par
73         {\cf17 private}:\par
77             {\cf18 void} buildTitle();\par
78 \par
82             {\cf18 void} positionTitle();\par
83 \par
87             {\cf18 void} renderTitle();\par
88 \par
92             {\cf18 void} buildMatchDateTime();\par
93 \par
97             {\cf18 void} buildDivisionLines();\par
98             \par
102             {\cf18 void} positionScores();\par
103 \par
109             {\cf18 float} getTitleFontSize() {\cf17 const};\par
110 \par
116             {\cf18 void} setMatchResult({\cf17 const} MatchResults matchResult);\par
117     \};\par
118 \}\par
119 \par
120 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/score/PlayerRegistredScore.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/score/PlayerRegistredScore.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/score/PlayerRegistredScore.hpp}
{\bkmkstart AAAAAAACSH}
{\bkmkend AAAAAAACSH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include <memory>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "View.hpp"}\par
{\f2 #include "Text.hpp"}\par
{\f2 #include "Score.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Views::PlayerRegistredScore}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Views}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PlayerRegistredScore.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/score/PlayerRegistredScore.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/score/PlayerRegistredScore.hpp}
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef PLAYER_REGISTRED_SCORE_HPP}\par
2 {\cf21 #define PLAYER_REGISTRED_SCORE_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 {\cf21 #include <vector>}\par
6 {\cf21 #include <memory>}\par
7 \par
8 {\cf21 #include "raylib.h"}\par
9 \par
10 {\cf21 #include "View.hpp"}\par
11 {\cf21 #include "Text.hpp"}\par
12 \par
13 {\cf21 #include "Score.hpp"}\par
14 \par
15 {\cf17 namespace }Views \{\par
16     {\cf17 class }PlayerRegistredScore : {\cf17 public} View \{\par
17         {\cf17 private}:\par
18             std::unique_ptr<Components::Text> playerNameLabel = {\cf17 nullptr};\par
19             std::vector<std::unique_ptr<Components::Text>> scoreLabels;\par
20 \par
21             std::string playerName = {\cf22 ""};\par
22             Score playerScore;\par
23 \par
24         {\cf17 public}:\par
28             PlayerRegistredScore();\par
29 \par
33             {\cf17 virtual} ~PlayerRegistredScore();\par
34 \par
38             {\cf17 virtual} {\cf18 void} render() {\cf17 override};\par
39 \par
46             {\cf18 void} update({\cf17 const} std::string playerName, {\cf17 const} Score playerScore);\par
47 \par
53             std::string getPlayerName() {\cf17 const};\par
54 \par
60             Score getPlayerScore() {\cf17 const};\par
61         \par
62         {\cf17 protected}:\par
66             {\cf17 virtual} {\cf18 void} updateInnerComponentsPositions() {\cf17 override};\par
67 \par
71             {\cf17 virtual} {\cf18 void} findWidth() {\cf17 override};\par
72 \par
76             {\cf17 virtual} {\cf18 void} findHeight() {\cf17 override};\par
77         \par
78         {\cf17 private}:\par
82             {\cf18 void} positionPlayerNameLabel();\par
83 \par
87             {\cf18 void} definePlayerNameTextSize();\par
88             \par
92             {\cf18 void} positionPlayerScoreLabels();\par
93 \par
97             {\cf18 void} defineScoreLabelsTextSize();\par
98 \par
104             {\cf18 float} getLabelMarginLeft() {\cf17 const};\par
105 \par
111             {\cf18 void} setPlayerName({\cf17 const} std::string playerName);\par
112 \par
118             {\cf18 void} setPlayerScore({\cf17 const} Score playerScore);\par
119     \};   \par
120 \}\par
121 \par
122 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/score/ScoreScreen.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/score/ScoreScreen.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/score/ScoreScreen.hpp}
{\bkmkstart AAAAAAACSI}
{\bkmkend AAAAAAACSI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <memory>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "Screen.hpp"}\par
{\f2 #include "Text.hpp"}\par
{\f2 #include "Image.hpp"}\par
{\f2 #include "ButtonText.hpp"}\par
{\f2 #include "ButtonIcon.hpp"}\par
{\f2 #include "MatchResults.hpp"}\par
{\f2 #include "MatchResultDisplay.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Screens::ScoreScreen}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Screens}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ScoreScreen.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/score/ScoreScreen.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/score/ScoreScreen.hpp}
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef SCORE_SCREEN_HPP}\par
2 {\cf21 #define SCORE_SCREEN_HPP}\par
3 \par
4 {\cf21 #include <vector>}\par
5 {\cf21 #include <memory>}\par
6 {\cf21 #include "raylib.h"}\par
7 \par
8 {\cf21 #include "Screen.hpp"}\par
9 \par
10 {\cf21 #include "Text.hpp"}\par
11 {\cf21 #include "Image.hpp"}\par
12 {\cf21 #include "ButtonText.hpp"}\par
13 {\cf21 #include "ButtonIcon.hpp"}\par
14 \par
15 {\cf21 #include "MatchResults.hpp"}\par
16 \par
17 {\cf21 #include "MatchResultDisplay.hpp"}\par
18 \par
19 {\cf17 namespace }Screens \{\par
20     {\cf17 class }ScoreScreen : {\cf17 public} Screen \{\par
21         {\cf17 private}:\par
22             std::unique_ptr<Components::Image> backgroundImage = {\cf17 nullptr};\par
23             std::unique_ptr<Components::Text> title = {\cf17 nullptr};\par
24 \par
25             std::unique_ptr<Views::MatchResultDisplay> matchsResultDisplay = {\cf17 nullptr};\par
26 \par
27             std::unique_ptr<Components::ButtonIcon> buttonNext = {\cf17 nullptr};\par
28             std::unique_ptr<Components::ButtonIcon> buttonPrevius = {\cf17 nullptr};\par
29             std::unique_ptr<Components::ButtonText> buttonVoltar = {\cf17 nullptr};\par
30 \par
31             std::unique_ptr<Components::Text> emptyScoreRegisterText = {\cf17 nullptr};\par
32             \par
33             std::vector<MatchResults> matchsResults;\par
34             Rectangle background;\par
35 \par
36             {\cf18 unsigned} {\cf18 int} actualMatchIndex = 0;\par
37 \par
38         {\cf17 public}:\par
42             ScoreScreen();\par
43 \par
47             {\cf17 virtual} ~ScoreScreen();\par
48         \par
49         {\cf17 protected}:\par
53             {\cf17 virtual} {\cf18 void} renderScreen() {\cf17 override};\par
54             \par
58             {\cf17 virtual} {\cf18 void} handleEvents() {\cf17 override};\par
59         \par
60         {\cf17 private}:\par
64             {\cf18 void} loadMatchResults();\par
65 \par
69             {\cf18 void} handleButtonNextClick();\par
70 \par
74             {\cf18 void} handleButtonPreviusClick();\par
75 \par
79             {\cf18 void} buildBackground();\par
80 \par
84             {\cf18 void} renderBackground();\par
85 \par
89             {\cf18 void} buildTitle();\par
90 \par
94             {\cf18 void} buildMatchsResultsDisplays();\par
95 \par
99             {\cf18 void} buildButtonsNextPrevius();\par
100 \par
104             {\cf18 void} buildButtonVoltar();\par
105 \par
109             {\cf18 void} buildEmptyScoreRegistrText();\par
110     \};   \par
111 \}\par
112 \par
113 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/screen/Screen.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/screen/Screen.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/screen/Screen.hpp}
{\bkmkstart AAAAAAACSJ}
{\bkmkend AAAAAAACSJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Screens::Screen}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Screens}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Screen.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/screen/Screen.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/screen/Screen.hpp}
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef SCREEN_HPP}\par
2 {\cf21 #define SCREEN_HPP}\par
3 \par
4 {\cf17 namespace }Screens \{\par
5     {\cf17 class }Screen \{\par
6         {\cf17 protected}:\par
7             {\cf18 bool} isWindowActive = {\cf17 true};\par
8 \par
9         {\cf17 public}:\par
13             {\cf17 virtual} ~Screen();\par
14 \par
18             {\cf17 virtual} {\cf18 void} render();\par
19 \par
25             {\cf18 bool} isActive() {\cf17 const};\par
26 \par
32             {\cf17 static} {\cf18 float} getDisplayHeight();\par
33 \par
39             {\cf17 static} {\cf18 float} getDisplayWidth();\par
40         \par
41         {\cf17 protected}:\par
45             {\cf17 virtual} {\cf18 void} renderScreen() = 0;\par
46 \par
50             {\cf17 virtual} {\cf18 void} handleEvents() = 0;\par
51     \};\par
52 \}\par
53 \par
54 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/screen/ScreenManager.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/screen/ScreenManager.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/screen/ScreenManager.hpp}
{\bkmkstart AAAAAAACSK}
{\bkmkend AAAAAAACSK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include <string>}\par
{\f2 #include "Screen.hpp"}\par
{\f2 #include "Constants.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Screens::ScreenManager}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Screens}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ScreenManager.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/screen/ScreenManager.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/screen/ScreenManager.hpp}
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef SCREEN_MANAGER_HPP}\par
2 {\cf21 #define SCREEN_MANAGER_HPP}\par
3 \par
4 {\cf21 #include <memory>}\par
5 {\cf21 #include <string>}\par
6 \par
7 {\cf21 #include "Screen.hpp"}\par
8 \par
9 {\cf21 #include "Constants.hpp"}\par
10 \par
11 {\cf17 namespace }Screens \{\par
12     {\cf17 class }ScreenManager \{\par
13         {\cf17 public}:\par
14             {\cf17 static} {\cf17 const} std::string WINDOW_NAME;\par
15             {\cf17 static} {\cf17 const} {\cf18 float} DEFAULT_FPS;\par
16 \par
17         {\cf17 private}:\par
18             {\cf17 static} std::shared_ptr<ScreenManager> instance;\par
19             \par
20             std::shared_ptr<Screen> actualScreen = {\cf17 nullptr};\par
21             std::shared_ptr<Screen> lastScreen = {\cf17 nullptr};\par
22 \par
26             ScreenManager();\par
27 \par
28         {\cf17 public}:\par
32             {\cf17 virtual} ~ScreenManager();\par
33 \par
37             {\cf17 static} {\cf18 void} initializeWindow();\par
38 \par
42             {\cf17 static} {\cf18 void} closeWindow();\par
43 \par
49             {\cf18 void} loadScreen({\cf17 const} std::shared_ptr<Screen> screen);\par
50 \par
54             {\cf18 void} renderScreen();\par
55 \par
61             {\cf17 static} std::shared_ptr<ScreenManager> getScreenManager();\par
62         \par
63         {\cf17 private}:\par
67             {\cf17 static} {\cf18 void} setDisplayToFullScreen();\par
68     \};\par
69 \}\par
70 \par
71 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/shared/AssetsLoader.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/shared/AssetsLoader.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/shared/AssetsLoader.hpp}
{\bkmkstart AAAAAAACSL}
{\bkmkend AAAAAAACSL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <memory>}\par
{\f2 #include <map>}\par
{\f2 #include "raylib.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AssetsLoader}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AssetsLoader.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/shared/AssetsLoader.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/shared/AssetsLoader.hpp}
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef ASSETS_LOADER_HPP}\par
2 {\cf21 #define ASSETS_LOADER_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 {\cf21 #include <memory>}\par
6 {\cf21 #include <map>}\par
7 {\cf21 #include "raylib.h"}\par
8 \par
9 {\cf17 class }AssetsLoader \{\par
10     {\cf17 private}:\par
11         {\cf17 static} std::shared_ptr<AssetsLoader> instance;\par
12 \par
13         std::map<std::string, Texture2D> images;\par
14         std::map<std::string, Font> fonts;        \par
15 \par
19         AssetsLoader();\par
20     {\cf17 public}:\par
24         {\cf17 virtual} ~AssetsLoader();\par
25 \par
33         Texture2D loadImage({\cf17 const} std::string path);\par
34 \par
42         Font loadFont({\cf17 const} std::string path);\par
43 \par
49         {\cf17 static} std::shared_ptr<AssetsLoader> getAssetLoader();\par
50     \par
51     {\cf17 private}:\par
55         {\cf18 void} unloadImages();\par
56 \par
60         {\cf18 void} unloadFonts();\par
61 \};\par
62 \par
63 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/shared/BoardDisplay.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/shared/BoardDisplay.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/shared/BoardDisplay.hpp}
{\bkmkstart AAAAAAACSM}
{\bkmkend AAAAAAACSM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include <vector>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "View.hpp"}\par
{\f2 #include "Image.hpp"}\par
{\f2 #include "PositionDisplay.hpp"}\par
{\f2 #include "Board.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Views::BoardDisplay}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Views}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BoardDisplay.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/shared/BoardDisplay.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/shared/BoardDisplay.hpp}
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef BOARD_DISPLAY_HPP}\par
2 {\cf21 #define BOARD_DISPLAY_HPP}\par
3 \par
4 {\cf21 #include <memory>}\par
5 {\cf21 #include <vector>}\par
6 {\cf21 #include "raylib.h"}\par
7 \par
8 {\cf21 #include "View.hpp"}\par
9 {\cf21 #include "Image.hpp"}\par
10 {\cf21 #include "PositionDisplay.hpp"}\par
11 \par
12 {\cf21 #include "Board.hpp"}\par
13 \par
14 {\cf17 namespace }Views \{\par
15     {\cf17 class }BoardDisplay : {\cf17 public} View \{\par
16         {\cf17 protected}:\par
17             std::unique_ptr<Components::Image> background = {\cf17 nullptr};\par
18             std::vector<std::vector<std::shared_ptr<PositionDisplay>>> cells;\par
19 \par
20             {\cf18 unsigned} {\cf18 int} amountHorizontalCells = 0;\par
21             {\cf18 unsigned} {\cf18 int} amountVerticalCells = 0;\par
22 \par
23             std::shared_ptr<Board> logicBoard = {\cf17 nullptr};\par
24 \par
25         {\cf17 public}:\par
31             BoardDisplay({\cf17 const} {\cf18 unsigned} {\cf18 int} amountHorizontalCells, {\cf17 const} {\cf18 unsigned} {\cf18 int} amountVerticalCells);\par
32 \par
37             BoardDisplay(std::shared_ptr<Board> logicBoard);\par
38 \par
42             {\cf17 virtual} ~BoardDisplay();\par
43 \par
47             {\cf17 virtual} {\cf18 void} render() {\cf17 override};\par
48             \par
54             {\cf18 unsigned} {\cf18 int} getAmountHorizontalCells() {\cf17 const};\par
55 \par
61             {\cf18 unsigned} {\cf18 int} getAmountVerticalCells() {\cf17 const};\par
62 \par
68             std::vector<std::vector<std::shared_ptr<PositionDisplay>>> getCells() {\cf17 const};\par
69         \par
70         {\cf17 protected}:\par
74             {\cf17 virtual} {\cf18 void} updateInnerComponentsPositions() {\cf17 override};\par
75 \par
79             {\cf17 virtual} {\cf18 void} findWidth() {\cf17 override};\par
80 \par
84             {\cf17 virtual} {\cf18 void} findHeight() {\cf17 override};\par
85 \par
89             {\cf17 virtual} {\cf18 void} initializeCells() = 0;\par
90 \par
94             {\cf18 void} buildBackground();\par
95         \par
96         {\cf17 private}:\par
100             {\cf18 void} positionBackground();\par
101 \par
105             {\cf18 void} positionCells();\par
106 \par
112             {\cf18 float} getBoardPadding() {\cf17 const};\par
113 \par
119             {\cf18 float} getCellsSpacing() {\cf17 const};\par
120 \par
126             {\cf18 float} getCellsMatrixHeight() {\cf17 const};\par
127 \par
133             {\cf18 float} getCellsMatrixWidth() {\cf17 const};\par
134 \par
140             {\cf18 void} setAmountHorizontalCells({\cf17 const} {\cf18 unsigned} {\cf18 int} amountHorizontalCells);\par
141 \par
147             {\cf18 void} setAmountVerticalCells({\cf17 const} {\cf18 unsigned} {\cf18 int} amountVerticalCells);\par
148     \};\par
149 \}\par
150 \par
151 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/shared/PositionDisplay.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/shared/PositionDisplay.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/shared/PositionDisplay.hpp}
{\bkmkstart AAAAAAACSN}
{\bkmkend AAAAAAACSN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "View.hpp"}\par
{\f2 #include "Image.hpp"}\par
{\f2 #include "IClickable.hpp"}\par
{\f2 #include "Position.hpp"}\par
{\f2 #include "Point.hpp"}\par
{\f2 #include "Colors.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Views::PositionDisplay}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Views}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PositionDisplay.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/shared/PositionDisplay.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/shared/PositionDisplay.hpp}
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef POSITION_DISPLAY_HPP}\par
2 {\cf21 #define POSITION_DISPLAY_HPP}\par
3 \par
4 {\cf21 #include <memory>}\par
5 {\cf21 #include "raylib.h"}\par
6 \par
7 {\cf21 #include "View.hpp"}\par
8 {\cf21 #include "Image.hpp"}\par
9 {\cf21 #include "IClickable.hpp"}\par
10 \par
11 {\cf21 #include "Position.hpp"}\par
12 {\cf21 #include "Point.hpp"}\par
13 \par
14 {\cf21 #include "Colors.hpp"}\par
15 \par
16 {\cf17 namespace }Views \{\par
17     {\cf17 class }PositionDisplay : {\cf17 public} View, {\cf17 public} Components::IClickable \{\par
18         {\cf17 protected}:\par
19             std::unique_ptr<Components::Image> troopImage = {\cf17 nullptr};\par
20 \par
21             Rectangle background;\par
22             Color backgroundColor = DEFAULT_BALCK;\par
23             Color hoveredBackgroundColor = DEFAULT_BALCK;\par
24 \par
25             std::shared_ptr<Position> position = {\cf17 nullptr};\par
26 \par
27         {\cf17 public}:\par
32             PositionDisplay({\cf17 const} Point boardCoordinates);\par
33 \par
38             PositionDisplay(std::shared_ptr<Position> position);\par
39 \par
43             {\cf17 virtual} ~PositionDisplay();\par
44 \par
48             {\cf17 virtual} {\cf18 void} render() = 0;\par
49 \par
55             {\cf17 virtual} {\cf18 bool} checkClick() {\cf17 override};\par
56 \par
62             {\cf17 virtual} {\cf18 bool} checkMouseOver() {\cf17 override};\par
63 \par
69             Point getCoordinates() {\cf17 const};\par
70 \par
76             {\cf18 void} setTroop({\cf17 const} std::shared_ptr<Troop> troop);\par
77 \par
83             std::shared_ptr<Troop> getTroop() {\cf17 const};\par
84 \par
90             {\cf18 void} setTroopImage({\cf17 const} std::string path);\par
91 \par
97             {\cf18 void} setTroopImage({\cf17 const} std::shared_ptr<Troop> troop);\par
98 \par
104             {\cf18 bool} containsTroop() {\cf17 const};\par
105         \par
106         {\cf17 protected}:\par
110             {\cf17 virtual} {\cf18 void} updateInnerComponentsPositions() {\cf17 override};\par
111 \par
115             {\cf17 virtual} {\cf18 void} findWidth() {\cf17 override};\par
116 \par
120             {\cf17 virtual} {\cf18 void} findHeight() {\cf17 override};\par
121         \par
122         {\cf17 private}:\par
126             {\cf18 void} buildComponent();\par
127             \par
131             {\cf18 void} buildBackground();\par
132 \par
136             {\cf18 void} positionBackground();\par
137 \par
141             {\cf18 void} buildTroopImage();\par
142             \par
146             {\cf18 void} positionTroopImage();\par
147         \par
148         {\cf17 protected}:\par
154             {\cf18 float} getDefaultImageSize() {\cf17 const};\par
155     \};\par
156 \}\par
157 \par
158 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/title/TitleScreen.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/title/TitleScreen.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/title/TitleScreen.hpp}
{\bkmkstart AAAAAAACSO}
{\bkmkend AAAAAAACSO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "Screen.hpp"}\par
{\f2 #include "Text.hpp"}\par
{\f2 #include "Image.hpp"}\par
{\f2 #include "ButtonText.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Screens::TitleScreen}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Screens}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TitleScreen.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/title/TitleScreen.hpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/include/screen/title/TitleScreen.hpp}
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef TITLE_SCREEN_HPP}\par
2 {\cf21 #define TITLE_SCREEN_HPP}\par
3 \par
4 {\cf21 #include <memory>}\par
5 {\cf21 #include "raylib.h"}\par
6 \par
7 {\cf21 #include "Screen.hpp"}\par
8 \par
9 {\cf21 #include "Text.hpp"}\par
10 {\cf21 #include "Image.hpp"}\par
11 {\cf21 #include "ButtonText.hpp"}\par
12 \par
13 {\cf17 namespace }Screens \{\par
14     {\cf17 class }TitleScreen : {\cf17 public} Screen \{\par
15         {\cf17 private}:\par
16             Rectangle titleBackground;\par
17             std::unique_ptr<Components::Text> titleFirstPart = {\cf17 nullptr};\par
18             std::unique_ptr<Components::Text> titleSecondPart = {\cf17 nullptr};\par
19 \par
20             std::unique_ptr<Components::ButtonText> buttonJogar = {\cf17 nullptr};\par
21             std::unique_ptr<Components::ButtonText> buttonPlacar = {\cf17 nullptr};\par
22             std::unique_ptr<Components::ButtonText> buttonSair = {\cf17 nullptr};\par
23 \par
24             std::unique_ptr<Components::Image> backgroundImage = {\cf17 nullptr};\par
25 \par
26         {\cf17 public}:\par
30             TitleScreen();\par
31 \par
35             {\cf17 virtual} ~TitleScreen();\par
36         \par
37         {\cf17 protected}:\par
41             {\cf17 virtual} {\cf18 void} renderScreen() {\cf17 override};\par
42 \par
46             {\cf17 virtual} {\cf18 void} handleEvents() {\cf17 override};\par
47 \par
48         {\cf17 private}:\par
52             {\cf18 void} buildBackgroundImage();\par
53 \par
57             {\cf18 void} buildTitle();\par
58 \par
62             {\cf18 void} renderTitle();\par
63 \par
67             {\cf18 void} buildJogarButton();\par
68 \par
72             {\cf18 void} buildPlacarButton();\par
73 \par
77             {\cf18 void} buildSairButton();\par
78 \par
84             {\cf18 float} getTitleMarginBotton() {\cf17 const};\par
85 \par
91             {\cf18 float} getDefaultButtonWidth() {\cf17 const};\par
92 \par
98             {\cf18 float} getDefaultButtonHeight() {\cf17 const};\par
99 \par
105             {\cf18 float} getButtonMarginBotton() {\cf17 const};\par
106 \par
112             {\cf18 float} getReducedButtonWidth() {\cf17 const};\par
113     \};   \par
114 \}\par
115 \par
116 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/README.md\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/README.md}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/README.md}
{\bkmkstart AAAAAAACSP}
{\bkmkend AAAAAAACSP}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/libs/raygui.c\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/libs/raygui.c}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/libs/raygui.c}
{\bkmkstart AAAAAAACSQ}
{\bkmkend AAAAAAACSQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "raylib.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b GuiStyleProp}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RAYGUI_H}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RAYGUI_VERSION}\~ "3.2"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RAYGUIAPI}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RAYGUI_MALLOC}(sz)\~ malloc(sz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RAYGUI_CALLOC}(n,  sz)\~ calloc(n,sz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RAYGUI_FREE}(p)\~ free(p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RAYGUI_SUPPORT_LOG_INFO}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RAYGUI_LOG}(...)\~ printf(__VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SCROLLBAR_LEFT_SIDE}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SCROLLBAR_RIGHT_SIDE}\~ 1\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es de Tipos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b GuiStyleProp} {\b GuiStyleProp}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiState} \{ {\b STATE_NORMAL} = 0
, {\b STATE_FOCUSED}
, {\b STATE_PRESSED}
, {\b STATE_DISABLED}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiTextAlignment} \{ {\b TEXT_ALIGN_LEFT} = 0
, {\b TEXT_ALIGN_CENTER}
, {\b TEXT_ALIGN_RIGHT}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiControl} \{ {\b DEFAULT} = 0
, {\b LABEL}
, {\b BUTTON}
, {\b TOGGLE}
, {\b SLIDER}
, {\b PROGRESSBAR}
, {\b CHECKBOX}
, {\b COMBOBOX}
, {\b DROPDOWNBOX}
, {\b TEXTBOX}
, {\b VALUEBOX}
, {\b SPINNER}
, {\b LISTVIEW}
, {\b COLORPICKER}
, {\b SCROLLBAR}
, {\b STATUSBAR}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiControlProperty} \{ {\b BORDER_COLOR_NORMAL} = 0
, {\b BASE_COLOR_NORMAL}
, {\b TEXT_COLOR_NORMAL}
, {\b BORDER_COLOR_FOCUSED}
, {\b BASE_COLOR_FOCUSED}
, {\b TEXT_COLOR_FOCUSED}
, {\b BORDER_COLOR_PRESSED}
, {\b BASE_COLOR_PRESSED}
, {\b TEXT_COLOR_PRESSED}
, {\b BORDER_COLOR_DISABLED}
, {\b BASE_COLOR_DISABLED}
, {\b TEXT_COLOR_DISABLED}
, {\b BORDER_WIDTH}
, {\b TEXT_PADDING}
, {\b TEXT_ALIGNMENT}
, {\b RESERVED}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiDefaultProperty} \{ {\b TEXT_SIZE} = 16
, {\b TEXT_SPACING}
, {\b LINE_COLOR}
, {\b BACKGROUND_COLOR}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiToggleProperty} \{ {\b GROUP_PADDING} = 16
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiSliderProperty} \{ {\b SLIDER_WIDTH} = 16
, {\b SLIDER_PADDING}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiProgressBarProperty} \{ {\b PROGRESS_PADDING} = 16
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiScrollBarProperty} \{ {\b ARROWS_SIZE} = 16
, {\b ARROWS_VISIBLE}
, {\b SCROLL_SLIDER_PADDING}
, {\b SCROLL_SLIDER_SIZE}
, {\b SCROLL_PADDING}
, {\b SCROLL_SPEED}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiCheckBoxProperty} \{ {\b CHECK_PADDING} = 16
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiComboBoxProperty} \{ {\b COMBO_BUTTON_WIDTH} = 16
, {\b COMBO_BUTTON_SPACING}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiDropdownBoxProperty} \{ {\b ARROW_PADDING} = 16
, {\b DROPDOWN_ITEMS_SPACING}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiTextBoxProperty} \{ {\b TEXT_INNER_PADDING} = 16
, {\b TEXT_LINES_SPACING}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiSpinnerProperty} \{ {\b SPIN_BUTTON_WIDTH} = 16
, {\b SPIN_BUTTON_SPACING}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiListViewProperty} \{ {\b LIST_ITEMS_HEIGHT} = 16
, {\b LIST_ITEMS_SPACING}
, {\b SCROLLBAR_WIDTH}
, {\b SCROLLBAR_SIDE}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiColorPickerProperty} \{ {\b COLOR_SELECTOR_SIZE} = 16
, {\b HUEBAR_WIDTH}
, {\b HUEBAR_PADDING}
, {\b HUEBAR_SELECTOR_HEIGHT}
, {\b HUEBAR_SELECTOR_OVERFLOW}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GuiIconName} \{ {\b ICON_NONE} = 0
, {\b ICON_FOLDER_FILE_OPEN} = 1
, {\b ICON_FILE_SAVE_CLASSIC} = 2
, {\b ICON_FOLDER_OPEN} = 3
, {\b ICON_FOLDER_SAVE} = 4
, {\b ICON_FILE_OPEN} = 5
, {\b ICON_FILE_SAVE} = 6
, {\b ICON_FILE_EXPORT} = 7
, {\b ICON_FILE_ADD} = 8
, {\b ICON_FILE_DELETE} = 9
, {\b ICON_FILETYPE_TEXT} = 10
, {\b ICON_FILETYPE_AUDIO} = 11
, {\b ICON_FILETYPE_IMAGE} = 12
, {\b ICON_FILETYPE_PLAY} = 13
, {\b ICON_FILETYPE_VIDEO} = 14
, {\b ICON_FILETYPE_INFO} = 15
, {\b ICON_FILE_COPY} = 16
, {\b ICON_FILE_CUT} = 17
, {\b ICON_FILE_PASTE} = 18
, {\b ICON_CURSOR_HAND} = 19
, {\b ICON_CURSOR_POINTER} = 20
, {\b ICON_CURSOR_CLASSIC} = 21
, {\b ICON_PENCIL} = 22
, {\b ICON_PENCIL_BIG} = 23
, {\b ICON_BRUSH_CLASSIC} = 24
, {\b ICON_BRUSH_PAINTER} = 25
, {\b ICON_WATER_DROP} = 26
, {\b ICON_COLOR_PICKER} = 27
, {\b ICON_RUBBER} = 28
, {\b ICON_COLOR_BUCKET} = 29
, {\b ICON_TEXT_T} = 30
, {\b ICON_TEXT_A} = 31
, {\b ICON_SCALE} = 32
, {\b ICON_RESIZE} = 33
, {\b ICON_FILTER_POINT} = 34
, {\b ICON_FILTER_BILINEAR} = 35
, {\b ICON_CROP} = 36
, {\b ICON_CROP_ALPHA} = 37
, {\b ICON_SQUARE_TOGGLE} = 38
, {\b ICON_SYMMETRY} = 39
, {\b ICON_SYMMETRY_HORIZONTAL} = 40
, {\b ICON_SYMMETRY_VERTICAL} = 41
, {\b ICON_LENS} = 42
, {\b ICON_LENS_BIG} = 43
, {\b ICON_EYE_ON} = 44
, {\b ICON_EYE_OFF} = 45
, {\b ICON_FILTER_TOP} = 46
, {\b ICON_FILTER} = 47
, {\b ICON_TARGET_POINT} = 48
, {\b ICON_TARGET_SMALL} = 49
, {\b ICON_TARGET_BIG} = 50
, {\b ICON_TARGET_MOVE} = 51
, {\b ICON_CURSOR_MOVE} = 52
, {\b ICON_CURSOR_SCALE} = 53
, {\b ICON_CURSOR_SCALE_RIGHT} = 54
, {\b ICON_CURSOR_SCALE_LEFT} = 55
, {\b ICON_UNDO} = 56
, {\b ICON_REDO} = 57
, {\b ICON_REREDO} = 58
, {\b ICON_MUTATE} = 59
, {\b ICON_ROTATE} = 60
, {\b ICON_REPEAT} = 61
, {\b ICON_SHUFFLE} = 62
, {\b ICON_EMPTYBOX} = 63
, {\b ICON_TARGET} = 64
, {\b ICON_TARGET_SMALL_FILL} = 65
, {\b ICON_TARGET_BIG_FILL} = 66
, {\b ICON_TARGET_MOVE_FILL} = 67
, {\b ICON_CURSOR_MOVE_FILL} = 68
, {\b ICON_CURSOR_SCALE_FILL} = 69
, {\b ICON_CURSOR_SCALE_RIGHT_FILL} = 70
, {\b ICON_CURSOR_SCALE_LEFT_FILL} = 71
, {\b ICON_UNDO_FILL} = 72
, {\b ICON_REDO_FILL} = 73
, {\b ICON_REREDO_FILL} = 74
, {\b ICON_MUTATE_FILL} = 75
, {\b ICON_ROTATE_FILL} = 76
, {\b ICON_REPEAT_FILL} = 77
, {\b ICON_SHUFFLE_FILL} = 78
, {\b ICON_EMPTYBOX_SMALL} = 79
, {\b ICON_BOX} = 80
, {\b ICON_BOX_TOP} = 81
, {\b ICON_BOX_TOP_RIGHT} = 82
, {\b ICON_BOX_RIGHT} = 83
, {\b ICON_BOX_BOTTOM_RIGHT} = 84
, {\b ICON_BOX_BOTTOM} = 85
, {\b ICON_BOX_BOTTOM_LEFT} = 86
, {\b ICON_BOX_LEFT} = 87
, {\b ICON_BOX_TOP_LEFT} = 88
, {\b ICON_BOX_CENTER} = 89
, {\b ICON_BOX_CIRCLE_MASK} = 90
, {\b ICON_POT} = 91
, {\b ICON_ALPHA_MULTIPLY} = 92
, {\b ICON_ALPHA_CLEAR} = 93
, {\b ICON_DITHERING} = 94
, {\b ICON_MIPMAPS} = 95
, {\b ICON_BOX_GRID} = 96
, {\b ICON_GRID} = 97
, {\b ICON_BOX_CORNERS_SMALL} = 98
, {\b ICON_BOX_CORNERS_BIG} = 99
, {\b ICON_FOUR_BOXES} = 100
, {\b ICON_GRID_FILL} = 101
, {\b ICON_BOX_MULTISIZE} = 102
, {\b ICON_ZOOM_SMALL} = 103
, {\b ICON_ZOOM_MEDIUM} = 104
, {\b ICON_ZOOM_BIG} = 105
, {\b ICON_ZOOM_ALL} = 106
, {\b ICON_ZOOM_CENTER} = 107
, {\b ICON_BOX_DOTS_SMALL} = 108
, {\b ICON_BOX_DOTS_BIG} = 109
, {\b ICON_BOX_CONCENTRIC} = 110
, {\b ICON_BOX_GRID_BIG} = 111
, {\b ICON_OK_TICK} = 112
, {\b ICON_CROSS} = 113
, {\b ICON_ARROW_LEFT} = 114
, {\b ICON_ARROW_RIGHT} = 115
, {\b ICON_ARROW_DOWN} = 116
, {\b ICON_ARROW_UP} = 117
, {\b ICON_ARROW_LEFT_FILL} = 118
, {\b ICON_ARROW_RIGHT_FILL} = 119
, {\b ICON_ARROW_DOWN_FILL} = 120
, {\b ICON_ARROW_UP_FILL} = 121
, {\b ICON_AUDIO} = 122
, {\b ICON_FX} = 123
, {\b ICON_WAVE} = 124
, {\b ICON_WAVE_SINUS} = 125
, {\b ICON_WAVE_SQUARE} = 126
, {\b ICON_WAVE_TRIANGULAR} = 127
, {\b ICON_CROSS_SMALL} = 128
, {\b ICON_PLAYER_PREVIOUS} = 129
, {\b ICON_PLAYER_PLAY_BACK} = 130
, {\b ICON_PLAYER_PLAY} = 131
, {\b ICON_PLAYER_PAUSE} = 132
, {\b ICON_PLAYER_STOP} = 133
, {\b ICON_PLAYER_NEXT} = 134
, {\b ICON_PLAYER_RECORD} = 135
, {\b ICON_MAGNET} = 136
, {\b ICON_LOCK_CLOSE} = 137
, {\b ICON_LOCK_OPEN} = 138
, {\b ICON_CLOCK} = 139
, {\b ICON_TOOLS} = 140
, {\b ICON_GEAR} = 141
, {\b ICON_GEAR_BIG} = 142
, {\b ICON_BIN} = 143
, {\b ICON_HAND_POINTER} = 144
, {\b ICON_LASER} = 145
, {\b ICON_COIN} = 146
, {\b ICON_EXPLOSION} = 147
, {\b ICON_1UP} = 148
, {\b ICON_PLAYER} = 149
, {\b ICON_PLAYER_JUMP} = 150
, {\b ICON_KEY} = 151
, {\b ICON_DEMON} = 152
, {\b ICON_TEXT_POPUP} = 153
, {\b ICON_GEAR_EX} = 154
, {\b ICON_CRACK} = 155
, {\b ICON_CRACK_POINTS} = 156
, {\b ICON_STAR} = 157
, {\b ICON_DOOR} = 158
, {\b ICON_EXIT} = 159
, {\b ICON_MODE_2D} = 160
, {\b ICON_MODE_3D} = 161
, {\b ICON_CUBE} = 162
, {\b ICON_CUBE_FACE_TOP} = 163
, {\b ICON_CUBE_FACE_LEFT} = 164
, {\b ICON_CUBE_FACE_FRONT} = 165
, {\b ICON_CUBE_FACE_BOTTOM} = 166
, {\b ICON_CUBE_FACE_RIGHT} = 167
, {\b ICON_CUBE_FACE_BACK} = 168
, {\b ICON_CAMERA} = 169
, {\b ICON_SPECIAL} = 170
, {\b ICON_LINK_NET} = 171
, {\b ICON_LINK_BOXES} = 172
, {\b ICON_LINK_MULTI} = 173
, {\b ICON_LINK} = 174
, {\b ICON_LINK_BROKE} = 175
, {\b ICON_TEXT_NOTES} = 176
, {\b ICON_NOTEBOOK} = 177
, {\b ICON_SUITCASE} = 178
, {\b ICON_SUITCASE_ZIP} = 179
, {\b ICON_MAILBOX} = 180
, {\b ICON_MONITOR} = 181
, {\b ICON_PRINTER} = 182
, {\b ICON_PHOTO_CAMERA} = 183
, {\b ICON_PHOTO_CAMERA_FLASH} = 184
, {\b ICON_HOUSE} = 185
, {\b ICON_HEART} = 186
, {\b ICON_CORNER} = 187
, {\b ICON_VERTICAL_BARS} = 188
, {\b ICON_VERTICAL_BARS_FILL} = 189
, {\b ICON_LIFE_BARS} = 190
, {\b ICON_INFO} = 191
, {\b ICON_CROSSLINE} = 192
, {\b ICON_HELP} = 193
, {\b ICON_FILETYPE_ALPHA} = 194
, {\b ICON_FILETYPE_HOME} = 195
, {\b ICON_LAYERS_VISIBLE} = 196
, {\b ICON_LAYERS} = 197
, {\b ICON_WINDOW} = 198
, {\b ICON_HIDPI} = 199
, {\b ICON_FILETYPE_BINARY} = 200
, {\b ICON_HEX} = 201
, {\b ICON_SHIELD} = 202
, {\b ICON_FILE_NEW} = 203
, {\b ICON_FOLDER_ADD} = 204
, {\b ICON_ALARM} = 205
, {\b ICON_206} = 206
, {\b ICON_207} = 207
, {\b ICON_208} = 208
, {\b ICON_209} = 209
, {\b ICON_210} = 210
, {\b ICON_211} = 211
, {\b ICON_212} = 212
, {\b ICON_213} = 213
, {\b ICON_214} = 214
, {\b ICON_215} = 215
, {\b ICON_216} = 216
, {\b ICON_217} = 217
, {\b ICON_218} = 218
, {\b ICON_219} = 219
, {\b ICON_220} = 220
, {\b ICON_221} = 221
, {\b ICON_222} = 222
, {\b ICON_223} = 223
, {\b ICON_224} = 224
, {\b ICON_225} = 225
, {\b ICON_226} = 226
, {\b ICON_227} = 227
, {\b ICON_228} = 228
, {\b ICON_229} = 229
, {\b ICON_230} = 230
, {\b ICON_231} = 231
, {\b ICON_232} = 232
, {\b ICON_233} = 233
, {\b ICON_234} = 234
, {\b ICON_235} = 235
, {\b ICON_236} = 236
, {\b ICON_237} = 237
, {\b ICON_238} = 238
, {\b ICON_239} = 239
, {\b ICON_240} = 240
, {\b ICON_241} = 241
, {\b ICON_242} = 242
, {\b ICON_243} = 243
, {\b ICON_244} = 244
, {\b ICON_245} = 245
, {\b ICON_246} = 246
, {\b ICON_247} = 247
, {\b ICON_248} = 248
, {\b ICON_249} = 249
, {\b ICON_250} = 250
, {\b ICON_251} = 251
, {\b ICON_252} = 252
, {\b ICON_253} = 253
, {\b ICON_254} = 254
, {\b ICON_255} = 255
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiEnable} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiDisable} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiLock} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiUnlock} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b bool} {\b GuiIsLocked} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiFade} (float alpha)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiSetState} (int state)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} int {\b GuiGetState} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiSetFont} ({\b Font} font)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b Font} {\b GuiGetFont} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiSetStyle} (int control, int property, int value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} int {\b GuiGetStyle} (int control, int property)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b bool} {\b GuiWindowBox} ({\b Rectangle} bounds, const char *title)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiGroupBox} ({\b Rectangle} bounds, const char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiLine} ({\b Rectangle} bounds, const char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiPanel} ({\b Rectangle} bounds, const char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b Rectangle} {\b GuiScrollPanel} ({\b Rectangle} bounds, const char *text, {\b Rectangle} content, {\b Vector2} *scroll)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiLabel} ({\b Rectangle} bounds, const char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b bool} {\b GuiButton} ({\b Rectangle} bounds, const char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b bool} {\b GuiLabelButton} ({\b Rectangle} bounds, const char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b bool} {\b GuiToggle} ({\b Rectangle} bounds, const char *text, {\b bool} active)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} int {\b GuiToggleGroup} ({\b Rectangle} bounds, const char *text, int active)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b bool} {\b GuiCheckBox} ({\b Rectangle} bounds, const char *text, {\b bool} checked)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} int {\b GuiComboBox} ({\b Rectangle} bounds, const char *text, int active)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b bool} {\b GuiDropdownBox} ({\b Rectangle} bounds, const char *text, int *active, {\b bool} editMode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b bool} {\b GuiSpinner} ({\b Rectangle} bounds, const char *text, int *value, int minValue, int maxValue, {\b bool} editMode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b bool} {\b GuiValueBox} ({\b Rectangle} bounds, const char *text, int *value, int minValue, int maxValue, {\b bool} editMode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b bool} {\b GuiTextBox} ({\b Rectangle} bounds, char *text, int textSize, {\b bool} editMode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b bool} {\b GuiTextBoxMulti} ({\b Rectangle} bounds, char *text, int textSize, {\b bool} editMode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} float {\b GuiSlider} ({\b Rectangle} bounds, const char *textLeft, const char *textRight, float value, float minValue, float maxValue)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} float {\b GuiSliderBar} ({\b Rectangle} bounds, const char *textLeft, const char *textRight, float value, float minValue, float maxValue)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} float {\b GuiProgressBar} ({\b Rectangle} bounds, const char *textLeft, const char *textRight, float value, float minValue, float maxValue)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiStatusBar} ({\b Rectangle} bounds, const char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiDummyRec} ({\b Rectangle} bounds, const char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b Vector2} {\b GuiGrid} ({\b Rectangle} bounds, const char *text, float spacing, int subdivs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} int {\b GuiListView} ({\b Rectangle} bounds, const char *text, int *scrollIndex, int active)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} int {\b GuiListViewEx} ({\b Rectangle} bounds, const char **text, int count, int *focus, int *scrollIndex, int active)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} int {\b GuiMessageBox} ({\b Rectangle} bounds, const char *title, const char *message, const char *buttons)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} int {\b GuiTextInputBox} ({\b Rectangle} bounds, const char *title, const char *message, const char *buttons, char *text, int textMaxSize, int *secretViewActive)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b Color} {\b GuiColorPicker} ({\b Rectangle} bounds, const char *text, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b Color} {\b GuiColorPanel} ({\b Rectangle} bounds, const char *text, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} float {\b GuiColorBarAlpha} ({\b Rectangle} bounds, const char *text, float alpha)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} float {\b GuiColorBarHue} ({\b Rectangle} bounds, const char *text, float value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiLoadStyle} (const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiLoadStyleDefault} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} const char * {\b GuiIconText} (int iconId, const char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiDrawIcon} (int iconId, int posX, int posY, int pixelSize, {\b Color} color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} unsigned int * {\b GuiGetIcons} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} unsigned int * {\b GuiGetIconData} (int iconId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiSetIconData} (int iconId, unsigned int *data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiSetIconScale} (unsigned int scale)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiSetIconPixel} (int iconId, int x, int y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} void {\b GuiClearIconPixel} (int iconId, int x, int y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RAYGUIAPI} {\b bool} {\b GuiCheckIconPixel} (int iconId, int x, int y)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v RAYGUI_CALLOC\:raygui.c}
{\xe \v raygui.c\:RAYGUI_CALLOC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RAYGUI_CALLOC( n,  sz)\~ calloc(n,sz)}}
\par
{\bkmkstart AAAAAAACSR}
{\bkmkend AAAAAAACSR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RAYGUI_FREE\:raygui.c}
{\xe \v raygui.c\:RAYGUI_FREE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RAYGUI_FREE( p)\~ free(p)}}
\par
{\bkmkstart AAAAAAACSS}
{\bkmkend AAAAAAACSS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RAYGUI_H\:raygui.c}
{\xe \v raygui.c\:RAYGUI_H}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RAYGUI_H}}
\par
{\bkmkstart AAAAAAACST}
{\bkmkend AAAAAAACST}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RAYGUI_LOG\:raygui.c}
{\xe \v raygui.c\:RAYGUI_LOG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RAYGUI_LOG(  {\i ...})\~ printf(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAACSU}
{\bkmkend AAAAAAACSU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RAYGUI_MALLOC\:raygui.c}
{\xe \v raygui.c\:RAYGUI_MALLOC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RAYGUI_MALLOC( sz)\~ malloc(sz)}}
\par
{\bkmkstart AAAAAAACSV}
{\bkmkend AAAAAAACSV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RAYGUI_SUPPORT_LOG_INFO\:raygui.c}
{\xe \v raygui.c\:RAYGUI_SUPPORT_LOG_INFO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RAYGUI_SUPPORT_LOG_INFO}}
\par
{\bkmkstart AAAAAAACSW}
{\bkmkend AAAAAAACSW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RAYGUI_VERSION\:raygui.c}
{\xe \v raygui.c\:RAYGUI_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RAYGUI_VERSION\~ "3.2"}}
\par
{\bkmkstart AAAAAAACSX}
{\bkmkend AAAAAAACSX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RAYGUIAPI\:raygui.c}
{\xe \v raygui.c\:RAYGUIAPI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RAYGUIAPI}}
\par
{\bkmkstart AAAAAAACSY}
{\bkmkend AAAAAAACSY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SCROLLBAR_LEFT_SIDE\:raygui.c}
{\xe \v raygui.c\:SCROLLBAR_LEFT_SIDE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SCROLLBAR_LEFT_SIDE\~ 0}}
\par
{\bkmkstart AAAAAAACSZ}
{\bkmkend AAAAAAACSZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SCROLLBAR_RIGHT_SIDE\:raygui.c}
{\xe \v raygui.c\:SCROLLBAR_RIGHT_SIDE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SCROLLBAR_RIGHT_SIDE\~ 1}}
\par
{\bkmkstart AAAAAAACTA}
{\bkmkend AAAAAAACTA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es dos tipos\par
\pard\plain 
{\xe \v GuiStyleProp\:raygui.c}
{\xe \v raygui.c\:GuiStyleProp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b GuiStyleProp} {\b GuiStyleProp}}}
\par
{\bkmkstart AAAAAAACTB}
{\bkmkend AAAAAAACTB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 
{\xe \v GuiCheckBoxProperty\:raygui.c}
{\xe \v raygui.c\:GuiCheckBoxProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiCheckBoxProperty}}}
\par
{\bkmkstart AAAAAAACTC}
{\bkmkend AAAAAAACTC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v CHECK_PADDING\:raygui.c}
{\xe \v raygui.c\:CHECK_PADDING}
{\qr CHECK_PADDING{\bkmkstart AAAAAAACTD}
{\bkmkend AAAAAAACTD}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 425              \{\par
426     CHECK_PADDING = 16          {\cf20 // CheckBox internal check padding}\par
427 \} GuiCheckBoxProperty;\par
}
}
{\xe \v GuiColorPickerProperty\:raygui.c}
{\xe \v raygui.c\:GuiColorPickerProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiColorPickerProperty}}}
\par
{\bkmkstart AAAAAAACTE}
{\bkmkend AAAAAAACTE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v COLOR_SELECTOR_SIZE\:raygui.c}
{\xe \v raygui.c\:COLOR_SELECTOR_SIZE}
{\qr COLOR_SELECTOR_SIZE{\bkmkstart AAAAAAACTF}
{\bkmkend AAAAAAACTF}
\cell }{\cell }{\row }
{\xe \v HUEBAR_WIDTH\:raygui.c}
{\xe \v raygui.c\:HUEBAR_WIDTH}
{\qr HUEBAR_WIDTH{\bkmkstart AAAAAAACTG}
{\bkmkend AAAAAAACTG}
\cell }{\cell }{\row }
{\xe \v HUEBAR_PADDING\:raygui.c}
{\xe \v raygui.c\:HUEBAR_PADDING}
{\qr HUEBAR_PADDING{\bkmkstart AAAAAAACTH}
{\bkmkend AAAAAAACTH}
\cell }{\cell }{\row }
{\xe \v HUEBAR_SELECTOR_HEIGHT\:raygui.c}
{\xe \v raygui.c\:HUEBAR_SELECTOR_HEIGHT}
{\qr HUEBAR_SELECTOR_HEIGHT{\bkmkstart AAAAAAACTI}
{\bkmkend AAAAAAACTI}
\cell }{\cell }{\row }
{\xe \v HUEBAR_SELECTOR_OVERFLOW\:raygui.c}
{\xe \v raygui.c\:HUEBAR_SELECTOR_OVERFLOW}
{\qr HUEBAR_SELECTOR_OVERFLOW{\bkmkstart AAAAAAACTJ}
{\bkmkend AAAAAAACTJ}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 462              \{\par
463     COLOR_SELECTOR_SIZE = 16,\par
464     HUEBAR_WIDTH,               {\cf20 // ColorPicker right hue bar width}\par
465     HUEBAR_PADDING,             {\cf20 // ColorPicker right hue bar separation from panel}\par
466     HUEBAR_SELECTOR_HEIGHT,     {\cf20 // ColorPicker right hue bar selector height}\par
467     HUEBAR_SELECTOR_OVERFLOW    {\cf20 // ColorPicker right hue bar selector overflow}\par
468 \} GuiColorPickerProperty;\par
}
}
{\xe \v GuiComboBoxProperty\:raygui.c}
{\xe \v raygui.c\:GuiComboBoxProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiComboBoxProperty}}}
\par
{\bkmkstart AAAAAAACTK}
{\bkmkend AAAAAAACTK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v COMBO_BUTTON_WIDTH\:raygui.c}
{\xe \v raygui.c\:COMBO_BUTTON_WIDTH}
{\qr COMBO_BUTTON_WIDTH{\bkmkstart AAAAAAACTL}
{\bkmkend AAAAAAACTL}
\cell }{\cell }{\row }
{\xe \v COMBO_BUTTON_SPACING\:raygui.c}
{\xe \v raygui.c\:COMBO_BUTTON_SPACING}
{\qr COMBO_BUTTON_SPACING{\bkmkstart AAAAAAACTM}
{\bkmkend AAAAAAACTM}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 430              \{\par
431     COMBO_BUTTON_WIDTH = 16,    {\cf20 // ComboBox right button width}\par
432     COMBO_BUTTON_SPACING        {\cf20 // ComboBox button separation}\par
433 \} GuiComboBoxProperty;\par
}
}
{\xe \v GuiControl\:raygui.c}
{\xe \v raygui.c\:GuiControl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiControl}}}
\par
{\bkmkstart AAAAAAACTN}
{\bkmkend AAAAAAACTN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v DEFAULT\:raygui.c}
{\xe \v raygui.c\:DEFAULT}
{\qr DEFAULT{\bkmkstart AAAAAAACTO}
{\bkmkend AAAAAAACTO}
\cell }{\cell }{\row }
{\xe \v LABEL\:raygui.c}
{\xe \v raygui.c\:LABEL}
{\qr LABEL{\bkmkstart AAAAAAACTP}
{\bkmkend AAAAAAACTP}
\cell }{\cell }{\row }
{\xe \v BUTTON\:raygui.c}
{\xe \v raygui.c\:BUTTON}
{\qr BUTTON{\bkmkstart AAAAAAACTQ}
{\bkmkend AAAAAAACTQ}
\cell }{\cell }{\row }
{\xe \v TOGGLE\:raygui.c}
{\xe \v raygui.c\:TOGGLE}
{\qr TOGGLE{\bkmkstart AAAAAAACTR}
{\bkmkend AAAAAAACTR}
\cell }{\cell }{\row }
{\xe \v SLIDER\:raygui.c}
{\xe \v raygui.c\:SLIDER}
{\qr SLIDER{\bkmkstart AAAAAAACTS}
{\bkmkend AAAAAAACTS}
\cell }{\cell }{\row }
{\xe \v PROGRESSBAR\:raygui.c}
{\xe \v raygui.c\:PROGRESSBAR}
{\qr PROGRESSBAR{\bkmkstart AAAAAAACTT}
{\bkmkend AAAAAAACTT}
\cell }{\cell }{\row }
{\xe \v CHECKBOX\:raygui.c}
{\xe \v raygui.c\:CHECKBOX}
{\qr CHECKBOX{\bkmkstart AAAAAAACTU}
{\bkmkend AAAAAAACTU}
\cell }{\cell }{\row }
{\xe \v COMBOBOX\:raygui.c}
{\xe \v raygui.c\:COMBOBOX}
{\qr COMBOBOX{\bkmkstart AAAAAAACTV}
{\bkmkend AAAAAAACTV}
\cell }{\cell }{\row }
{\xe \v DROPDOWNBOX\:raygui.c}
{\xe \v raygui.c\:DROPDOWNBOX}
{\qr DROPDOWNBOX{\bkmkstart AAAAAAACTW}
{\bkmkend AAAAAAACTW}
\cell }{\cell }{\row }
{\xe \v TEXTBOX\:raygui.c}
{\xe \v raygui.c\:TEXTBOX}
{\qr TEXTBOX{\bkmkstart AAAAAAACTX}
{\bkmkend AAAAAAACTX}
\cell }{\cell }{\row }
{\xe \v VALUEBOX\:raygui.c}
{\xe \v raygui.c\:VALUEBOX}
{\qr VALUEBOX{\bkmkstart AAAAAAACTY}
{\bkmkend AAAAAAACTY}
\cell }{\cell }{\row }
{\xe \v SPINNER\:raygui.c}
{\xe \v raygui.c\:SPINNER}
{\qr SPINNER{\bkmkstart AAAAAAACTZ}
{\bkmkend AAAAAAACTZ}
\cell }{\cell }{\row }
{\xe \v LISTVIEW\:raygui.c}
{\xe \v raygui.c\:LISTVIEW}
{\qr LISTVIEW{\bkmkstart AAAAAAACUA}
{\bkmkend AAAAAAACUA}
\cell }{\cell }{\row }
{\xe \v COLORPICKER\:raygui.c}
{\xe \v raygui.c\:COLORPICKER}
{\qr COLORPICKER{\bkmkstart AAAAAAACUB}
{\bkmkend AAAAAAACUB}
\cell }{\cell }{\row }
{\xe \v SCROLLBAR\:raygui.c}
{\xe \v raygui.c\:SCROLLBAR}
{\qr SCROLLBAR{\bkmkstart AAAAAAACUC}
{\bkmkend AAAAAAACUC}
\cell }{\cell }{\row }
{\xe \v STATUSBAR\:raygui.c}
{\xe \v raygui.c\:STATUSBAR}
{\qr STATUSBAR{\bkmkstart AAAAAAACUD}
{\bkmkend AAAAAAACUD}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 337              \{\par
338     {\cf20 // Default -> populates to all controls when set}\par
339     DEFAULT = 0,\par
340     {\cf20 // Basic controls}\par
341     LABEL,          {\cf20 // Used also for: LABELBUTTON}\par
342     BUTTON,\par
343     TOGGLE,         {\cf20 // Used also for: TOGGLEGROUP}\par
344     SLIDER,         {\cf20 // Used also for: SLIDERBAR}\par
345     PROGRESSBAR,\par
346     CHECKBOX,\par
347     COMBOBOX,\par
348     DROPDOWNBOX,\par
349     TEXTBOX,        {\cf20 // Used also for: TEXTBOXMULTI}\par
350     VALUEBOX,\par
351     SPINNER,        {\cf20 // Uses: BUTTON, VALUEBOX}\par
352     LISTVIEW,\par
353     COLORPICKER,\par
354     SCROLLBAR,\par
355     STATUSBAR\par
356 \} GuiControl;\par
}
}
{\xe \v GuiControlProperty\:raygui.c}
{\xe \v raygui.c\:GuiControlProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiControlProperty}}}
\par
{\bkmkstart AAAAAAACUE}
{\bkmkend AAAAAAACUE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v BORDER_COLOR_NORMAL\:raygui.c}
{\xe \v raygui.c\:BORDER_COLOR_NORMAL}
{\qr BORDER_COLOR_NORMAL{\bkmkstart AAAAAAACUF}
{\bkmkend AAAAAAACUF}
\cell }{\cell }{\row }
{\xe \v BASE_COLOR_NORMAL\:raygui.c}
{\xe \v raygui.c\:BASE_COLOR_NORMAL}
{\qr BASE_COLOR_NORMAL{\bkmkstart AAAAAAACUG}
{\bkmkend AAAAAAACUG}
\cell }{\cell }{\row }
{\xe \v TEXT_COLOR_NORMAL\:raygui.c}
{\xe \v raygui.c\:TEXT_COLOR_NORMAL}
{\qr TEXT_COLOR_NORMAL{\bkmkstart AAAAAAACUH}
{\bkmkend AAAAAAACUH}
\cell }{\cell }{\row }
{\xe \v BORDER_COLOR_FOCUSED\:raygui.c}
{\xe \v raygui.c\:BORDER_COLOR_FOCUSED}
{\qr BORDER_COLOR_FOCUSED{\bkmkstart AAAAAAACUI}
{\bkmkend AAAAAAACUI}
\cell }{\cell }{\row }
{\xe \v BASE_COLOR_FOCUSED\:raygui.c}
{\xe \v raygui.c\:BASE_COLOR_FOCUSED}
{\qr BASE_COLOR_FOCUSED{\bkmkstart AAAAAAACUJ}
{\bkmkend AAAAAAACUJ}
\cell }{\cell }{\row }
{\xe \v TEXT_COLOR_FOCUSED\:raygui.c}
{\xe \v raygui.c\:TEXT_COLOR_FOCUSED}
{\qr TEXT_COLOR_FOCUSED{\bkmkstart AAAAAAACUK}
{\bkmkend AAAAAAACUK}
\cell }{\cell }{\row }
{\xe \v BORDER_COLOR_PRESSED\:raygui.c}
{\xe \v raygui.c\:BORDER_COLOR_PRESSED}
{\qr BORDER_COLOR_PRESSED{\bkmkstart AAAAAAACUL}
{\bkmkend AAAAAAACUL}
\cell }{\cell }{\row }
{\xe \v BASE_COLOR_PRESSED\:raygui.c}
{\xe \v raygui.c\:BASE_COLOR_PRESSED}
{\qr BASE_COLOR_PRESSED{\bkmkstart AAAAAAACUM}
{\bkmkend AAAAAAACUM}
\cell }{\cell }{\row }
{\xe \v TEXT_COLOR_PRESSED\:raygui.c}
{\xe \v raygui.c\:TEXT_COLOR_PRESSED}
{\qr TEXT_COLOR_PRESSED{\bkmkstart AAAAAAACUN}
{\bkmkend AAAAAAACUN}
\cell }{\cell }{\row }
{\xe \v BORDER_COLOR_DISABLED\:raygui.c}
{\xe \v raygui.c\:BORDER_COLOR_DISABLED}
{\qr BORDER_COLOR_DISABLED{\bkmkstart AAAAAAACUO}
{\bkmkend AAAAAAACUO}
\cell }{\cell }{\row }
{\xe \v BASE_COLOR_DISABLED\:raygui.c}
{\xe \v raygui.c\:BASE_COLOR_DISABLED}
{\qr BASE_COLOR_DISABLED{\bkmkstart AAAAAAACUP}
{\bkmkend AAAAAAACUP}
\cell }{\cell }{\row }
{\xe \v TEXT_COLOR_DISABLED\:raygui.c}
{\xe \v raygui.c\:TEXT_COLOR_DISABLED}
{\qr TEXT_COLOR_DISABLED{\bkmkstart AAAAAAACUQ}
{\bkmkend AAAAAAACUQ}
\cell }{\cell }{\row }
{\xe \v BORDER_WIDTH\:raygui.c}
{\xe \v raygui.c\:BORDER_WIDTH}
{\qr BORDER_WIDTH{\bkmkstart AAAAAAACUR}
{\bkmkend AAAAAAACUR}
\cell }{\cell }{\row }
{\xe \v TEXT_PADDING\:raygui.c}
{\xe \v raygui.c\:TEXT_PADDING}
{\qr TEXT_PADDING{\bkmkstart AAAAAAACUS}
{\bkmkend AAAAAAACUS}
\cell }{\cell }{\row }
{\xe \v TEXT_ALIGNMENT\:raygui.c}
{\xe \v raygui.c\:TEXT_ALIGNMENT}
{\qr TEXT_ALIGNMENT{\bkmkstart AAAAAAACUT}
{\bkmkend AAAAAAACUT}
\cell }{\cell }{\row }
{\xe \v RESERVED\:raygui.c}
{\xe \v raygui.c\:RESERVED}
{\qr RESERVED{\bkmkstart AAAAAAACUU}
{\bkmkend AAAAAAACUU}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 360              \{\par
361     BORDER_COLOR_NORMAL = 0,\par
362     BASE_COLOR_NORMAL,\par
363     TEXT_COLOR_NORMAL,\par
364     BORDER_COLOR_FOCUSED,\par
365     BASE_COLOR_FOCUSED,\par
366     TEXT_COLOR_FOCUSED,\par
367     BORDER_COLOR_PRESSED,\par
368     BASE_COLOR_PRESSED,\par
369     TEXT_COLOR_PRESSED,\par
370     BORDER_COLOR_DISABLED,\par
371     BASE_COLOR_DISABLED,\par
372     TEXT_COLOR_DISABLED,\par
373     BORDER_WIDTH,\par
374     TEXT_PADDING,\par
375     TEXT_ALIGNMENT,\par
376     RESERVED\par
377 \} GuiControlProperty;\par
}
}
{\xe \v GuiDefaultProperty\:raygui.c}
{\xe \v raygui.c\:GuiDefaultProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiDefaultProperty}}}
\par
{\bkmkstart AAAAAAACUV}
{\bkmkend AAAAAAACUV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v TEXT_SIZE\:raygui.c}
{\xe \v raygui.c\:TEXT_SIZE}
{\qr TEXT_SIZE{\bkmkstart AAAAAAACUW}
{\bkmkend AAAAAAACUW}
\cell }{\cell }{\row }
{\xe \v TEXT_SPACING\:raygui.c}
{\xe \v raygui.c\:TEXT_SPACING}
{\qr TEXT_SPACING{\bkmkstart AAAAAAACUX}
{\bkmkend AAAAAAACUX}
\cell }{\cell }{\row }
{\xe \v LINE_COLOR\:raygui.c}
{\xe \v raygui.c\:LINE_COLOR}
{\qr LINE_COLOR{\bkmkstart AAAAAAACUY}
{\bkmkend AAAAAAACUY}
\cell }{\cell }{\row }
{\xe \v BACKGROUND_COLOR\:raygui.c}
{\xe \v raygui.c\:BACKGROUND_COLOR}
{\qr BACKGROUND_COLOR{\bkmkstart AAAAAAACUZ}
{\bkmkend AAAAAAACUZ}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 385              \{\par
386     TEXT_SIZE = 16,             {\cf20 // Text size (glyphs max height)}\par
387     TEXT_SPACING,               {\cf20 // Text spacing between glyphs}\par
388     LINE_COLOR,                 {\cf20 // Line control color}\par
389     BACKGROUND_COLOR,           {\cf20 // Background color}\par
390 \} GuiDefaultProperty;\par
}
}
{\xe \v GuiDropdownBoxProperty\:raygui.c}
{\xe \v raygui.c\:GuiDropdownBoxProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiDropdownBoxProperty}}}
\par
{\bkmkstart AAAAAAACVA}
{\bkmkend AAAAAAACVA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ARROW_PADDING\:raygui.c}
{\xe \v raygui.c\:ARROW_PADDING}
{\qr ARROW_PADDING{\bkmkstart AAAAAAACVB}
{\bkmkend AAAAAAACVB}
\cell }{\cell }{\row }
{\xe \v DROPDOWN_ITEMS_SPACING\:raygui.c}
{\xe \v raygui.c\:DROPDOWN_ITEMS_SPACING}
{\qr DROPDOWN_ITEMS_SPACING{\bkmkstart AAAAAAACVC}
{\bkmkend AAAAAAACVC}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 436              \{\par
437     ARROW_PADDING = 16,         {\cf20 // DropdownBox arrow separation from border and items}\par
438     DROPDOWN_ITEMS_SPACING      {\cf20 // DropdownBox items separation}\par
439 \} GuiDropdownBoxProperty;\par
}
}
{\xe \v GuiIconName\:raygui.c}
{\xe \v raygui.c\:GuiIconName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiIconName}}}
\par
{\bkmkstart AAAAAAACVD}
{\bkmkend AAAAAAACVD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ICON_NONE\:raygui.c}
{\xe \v raygui.c\:ICON_NONE}
{\qr ICON_NONE{\bkmkstart AAAAAAACVE}
{\bkmkend AAAAAAACVE}
\cell }{\cell }{\row }
{\xe \v ICON_FOLDER_FILE_OPEN\:raygui.c}
{\xe \v raygui.c\:ICON_FOLDER_FILE_OPEN}
{\qr ICON_FOLDER_FILE_OPEN{\bkmkstart AAAAAAACVF}
{\bkmkend AAAAAAACVF}
\cell }{\cell }{\row }
{\xe \v ICON_FILE_SAVE_CLASSIC\:raygui.c}
{\xe \v raygui.c\:ICON_FILE_SAVE_CLASSIC}
{\qr ICON_FILE_SAVE_CLASSIC{\bkmkstart AAAAAAACVG}
{\bkmkend AAAAAAACVG}
\cell }{\cell }{\row }
{\xe \v ICON_FOLDER_OPEN\:raygui.c}
{\xe \v raygui.c\:ICON_FOLDER_OPEN}
{\qr ICON_FOLDER_OPEN{\bkmkstart AAAAAAACVH}
{\bkmkend AAAAAAACVH}
\cell }{\cell }{\row }
{\xe \v ICON_FOLDER_SAVE\:raygui.c}
{\xe \v raygui.c\:ICON_FOLDER_SAVE}
{\qr ICON_FOLDER_SAVE{\bkmkstart AAAAAAACVI}
{\bkmkend AAAAAAACVI}
\cell }{\cell }{\row }
{\xe \v ICON_FILE_OPEN\:raygui.c}
{\xe \v raygui.c\:ICON_FILE_OPEN}
{\qr ICON_FILE_OPEN{\bkmkstart AAAAAAACVJ}
{\bkmkend AAAAAAACVJ}
\cell }{\cell }{\row }
{\xe \v ICON_FILE_SAVE\:raygui.c}
{\xe \v raygui.c\:ICON_FILE_SAVE}
{\qr ICON_FILE_SAVE{\bkmkstart AAAAAAACVK}
{\bkmkend AAAAAAACVK}
\cell }{\cell }{\row }
{\xe \v ICON_FILE_EXPORT\:raygui.c}
{\xe \v raygui.c\:ICON_FILE_EXPORT}
{\qr ICON_FILE_EXPORT{\bkmkstart AAAAAAACVL}
{\bkmkend AAAAAAACVL}
\cell }{\cell }{\row }
{\xe \v ICON_FILE_ADD\:raygui.c}
{\xe \v raygui.c\:ICON_FILE_ADD}
{\qr ICON_FILE_ADD{\bkmkstart AAAAAAACVM}
{\bkmkend AAAAAAACVM}
\cell }{\cell }{\row }
{\xe \v ICON_FILE_DELETE\:raygui.c}
{\xe \v raygui.c\:ICON_FILE_DELETE}
{\qr ICON_FILE_DELETE{\bkmkstart AAAAAAACVN}
{\bkmkend AAAAAAACVN}
\cell }{\cell }{\row }
{\xe \v ICON_FILETYPE_TEXT\:raygui.c}
{\xe \v raygui.c\:ICON_FILETYPE_TEXT}
{\qr ICON_FILETYPE_TEXT{\bkmkstart AAAAAAACVO}
{\bkmkend AAAAAAACVO}
\cell }{\cell }{\row }
{\xe \v ICON_FILETYPE_AUDIO\:raygui.c}
{\xe \v raygui.c\:ICON_FILETYPE_AUDIO}
{\qr ICON_FILETYPE_AUDIO{\bkmkstart AAAAAAACVP}
{\bkmkend AAAAAAACVP}
\cell }{\cell }{\row }
{\xe \v ICON_FILETYPE_IMAGE\:raygui.c}
{\xe \v raygui.c\:ICON_FILETYPE_IMAGE}
{\qr ICON_FILETYPE_IMAGE{\bkmkstart AAAAAAACVQ}
{\bkmkend AAAAAAACVQ}
\cell }{\cell }{\row }
{\xe \v ICON_FILETYPE_PLAY\:raygui.c}
{\xe \v raygui.c\:ICON_FILETYPE_PLAY}
{\qr ICON_FILETYPE_PLAY{\bkmkstart AAAAAAACVR}
{\bkmkend AAAAAAACVR}
\cell }{\cell }{\row }
{\xe \v ICON_FILETYPE_VIDEO\:raygui.c}
{\xe \v raygui.c\:ICON_FILETYPE_VIDEO}
{\qr ICON_FILETYPE_VIDEO{\bkmkstart AAAAAAACVS}
{\bkmkend AAAAAAACVS}
\cell }{\cell }{\row }
{\xe \v ICON_FILETYPE_INFO\:raygui.c}
{\xe \v raygui.c\:ICON_FILETYPE_INFO}
{\qr ICON_FILETYPE_INFO{\bkmkstart AAAAAAACVT}
{\bkmkend AAAAAAACVT}
\cell }{\cell }{\row }
{\xe \v ICON_FILE_COPY\:raygui.c}
{\xe \v raygui.c\:ICON_FILE_COPY}
{\qr ICON_FILE_COPY{\bkmkstart AAAAAAACVU}
{\bkmkend AAAAAAACVU}
\cell }{\cell }{\row }
{\xe \v ICON_FILE_CUT\:raygui.c}
{\xe \v raygui.c\:ICON_FILE_CUT}
{\qr ICON_FILE_CUT{\bkmkstart AAAAAAACVV}
{\bkmkend AAAAAAACVV}
\cell }{\cell }{\row }
{\xe \v ICON_FILE_PASTE\:raygui.c}
{\xe \v raygui.c\:ICON_FILE_PASTE}
{\qr ICON_FILE_PASTE{\bkmkstart AAAAAAACVW}
{\bkmkend AAAAAAACVW}
\cell }{\cell }{\row }
{\xe \v ICON_CURSOR_HAND\:raygui.c}
{\xe \v raygui.c\:ICON_CURSOR_HAND}
{\qr ICON_CURSOR_HAND{\bkmkstart AAAAAAACVX}
{\bkmkend AAAAAAACVX}
\cell }{\cell }{\row }
{\xe \v ICON_CURSOR_POINTER\:raygui.c}
{\xe \v raygui.c\:ICON_CURSOR_POINTER}
{\qr ICON_CURSOR_POINTER{\bkmkstart AAAAAAACVY}
{\bkmkend AAAAAAACVY}
\cell }{\cell }{\row }
{\xe \v ICON_CURSOR_CLASSIC\:raygui.c}
{\xe \v raygui.c\:ICON_CURSOR_CLASSIC}
{\qr ICON_CURSOR_CLASSIC{\bkmkstart AAAAAAACVZ}
{\bkmkend AAAAAAACVZ}
\cell }{\cell }{\row }
{\xe \v ICON_PENCIL\:raygui.c}
{\xe \v raygui.c\:ICON_PENCIL}
{\qr ICON_PENCIL{\bkmkstart AAAAAAACWA}
{\bkmkend AAAAAAACWA}
\cell }{\cell }{\row }
{\xe \v ICON_PENCIL_BIG\:raygui.c}
{\xe \v raygui.c\:ICON_PENCIL_BIG}
{\qr ICON_PENCIL_BIG{\bkmkstart AAAAAAACWB}
{\bkmkend AAAAAAACWB}
\cell }{\cell }{\row }
{\xe \v ICON_BRUSH_CLASSIC\:raygui.c}
{\xe \v raygui.c\:ICON_BRUSH_CLASSIC}
{\qr ICON_BRUSH_CLASSIC{\bkmkstart AAAAAAACWC}
{\bkmkend AAAAAAACWC}
\cell }{\cell }{\row }
{\xe \v ICON_BRUSH_PAINTER\:raygui.c}
{\xe \v raygui.c\:ICON_BRUSH_PAINTER}
{\qr ICON_BRUSH_PAINTER{\bkmkstart AAAAAAACWD}
{\bkmkend AAAAAAACWD}
\cell }{\cell }{\row }
{\xe \v ICON_WATER_DROP\:raygui.c}
{\xe \v raygui.c\:ICON_WATER_DROP}
{\qr ICON_WATER_DROP{\bkmkstart AAAAAAACWE}
{\bkmkend AAAAAAACWE}
\cell }{\cell }{\row }
{\xe \v ICON_COLOR_PICKER\:raygui.c}
{\xe \v raygui.c\:ICON_COLOR_PICKER}
{\qr ICON_COLOR_PICKER{\bkmkstart AAAAAAACWF}
{\bkmkend AAAAAAACWF}
\cell }{\cell }{\row }
{\xe \v ICON_RUBBER\:raygui.c}
{\xe \v raygui.c\:ICON_RUBBER}
{\qr ICON_RUBBER{\bkmkstart AAAAAAACWG}
{\bkmkend AAAAAAACWG}
\cell }{\cell }{\row }
{\xe \v ICON_COLOR_BUCKET\:raygui.c}
{\xe \v raygui.c\:ICON_COLOR_BUCKET}
{\qr ICON_COLOR_BUCKET{\bkmkstart AAAAAAACWH}
{\bkmkend AAAAAAACWH}
\cell }{\cell }{\row }
{\xe \v ICON_TEXT_T\:raygui.c}
{\xe \v raygui.c\:ICON_TEXT_T}
{\qr ICON_TEXT_T{\bkmkstart AAAAAAACWI}
{\bkmkend AAAAAAACWI}
\cell }{\cell }{\row }
{\xe \v ICON_TEXT_A\:raygui.c}
{\xe \v raygui.c\:ICON_TEXT_A}
{\qr ICON_TEXT_A{\bkmkstart AAAAAAACWJ}
{\bkmkend AAAAAAACWJ}
\cell }{\cell }{\row }
{\xe \v ICON_SCALE\:raygui.c}
{\xe \v raygui.c\:ICON_SCALE}
{\qr ICON_SCALE{\bkmkstart AAAAAAACWK}
{\bkmkend AAAAAAACWK}
\cell }{\cell }{\row }
{\xe \v ICON_RESIZE\:raygui.c}
{\xe \v raygui.c\:ICON_RESIZE}
{\qr ICON_RESIZE{\bkmkstart AAAAAAACWL}
{\bkmkend AAAAAAACWL}
\cell }{\cell }{\row }
{\xe \v ICON_FILTER_POINT\:raygui.c}
{\xe \v raygui.c\:ICON_FILTER_POINT}
{\qr ICON_FILTER_POINT{\bkmkstart AAAAAAACWM}
{\bkmkend AAAAAAACWM}
\cell }{\cell }{\row }
{\xe \v ICON_FILTER_BILINEAR\:raygui.c}
{\xe \v raygui.c\:ICON_FILTER_BILINEAR}
{\qr ICON_FILTER_BILINEAR{\bkmkstart AAAAAAACWN}
{\bkmkend AAAAAAACWN}
\cell }{\cell }{\row }
{\xe \v ICON_CROP\:raygui.c}
{\xe \v raygui.c\:ICON_CROP}
{\qr ICON_CROP{\bkmkstart AAAAAAACWO}
{\bkmkend AAAAAAACWO}
\cell }{\cell }{\row }
{\xe \v ICON_CROP_ALPHA\:raygui.c}
{\xe \v raygui.c\:ICON_CROP_ALPHA}
{\qr ICON_CROP_ALPHA{\bkmkstart AAAAAAACWP}
{\bkmkend AAAAAAACWP}
\cell }{\cell }{\row }
{\xe \v ICON_SQUARE_TOGGLE\:raygui.c}
{\xe \v raygui.c\:ICON_SQUARE_TOGGLE}
{\qr ICON_SQUARE_TOGGLE{\bkmkstart AAAAAAACWQ}
{\bkmkend AAAAAAACWQ}
\cell }{\cell }{\row }
{\xe \v ICON_SYMMETRY\:raygui.c}
{\xe \v raygui.c\:ICON_SYMMETRY}
{\qr ICON_SYMMETRY{\bkmkstart AAAAAAACWR}
{\bkmkend AAAAAAACWR}
\cell }{\cell }{\row }
{\xe \v ICON_SYMMETRY_HORIZONTAL\:raygui.c}
{\xe \v raygui.c\:ICON_SYMMETRY_HORIZONTAL}
{\qr ICON_SYMMETRY_HORIZONTAL{\bkmkstart AAAAAAACWS}
{\bkmkend AAAAAAACWS}
\cell }{\cell }{\row }
{\xe \v ICON_SYMMETRY_VERTICAL\:raygui.c}
{\xe \v raygui.c\:ICON_SYMMETRY_VERTICAL}
{\qr ICON_SYMMETRY_VERTICAL{\bkmkstart AAAAAAACWT}
{\bkmkend AAAAAAACWT}
\cell }{\cell }{\row }
{\xe \v ICON_LENS\:raygui.c}
{\xe \v raygui.c\:ICON_LENS}
{\qr ICON_LENS{\bkmkstart AAAAAAACWU}
{\bkmkend AAAAAAACWU}
\cell }{\cell }{\row }
{\xe \v ICON_LENS_BIG\:raygui.c}
{\xe \v raygui.c\:ICON_LENS_BIG}
{\qr ICON_LENS_BIG{\bkmkstart AAAAAAACWV}
{\bkmkend AAAAAAACWV}
\cell }{\cell }{\row }
{\xe \v ICON_EYE_ON\:raygui.c}
{\xe \v raygui.c\:ICON_EYE_ON}
{\qr ICON_EYE_ON{\bkmkstart AAAAAAACWW}
{\bkmkend AAAAAAACWW}
\cell }{\cell }{\row }
{\xe \v ICON_EYE_OFF\:raygui.c}
{\xe \v raygui.c\:ICON_EYE_OFF}
{\qr ICON_EYE_OFF{\bkmkstart AAAAAAACWX}
{\bkmkend AAAAAAACWX}
\cell }{\cell }{\row }
{\xe \v ICON_FILTER_TOP\:raygui.c}
{\xe \v raygui.c\:ICON_FILTER_TOP}
{\qr ICON_FILTER_TOP{\bkmkstart AAAAAAACWY}
{\bkmkend AAAAAAACWY}
\cell }{\cell }{\row }
{\xe \v ICON_FILTER\:raygui.c}
{\xe \v raygui.c\:ICON_FILTER}
{\qr ICON_FILTER{\bkmkstart AAAAAAACWZ}
{\bkmkend AAAAAAACWZ}
\cell }{\cell }{\row }
{\xe \v ICON_TARGET_POINT\:raygui.c}
{\xe \v raygui.c\:ICON_TARGET_POINT}
{\qr ICON_TARGET_POINT{\bkmkstart AAAAAAACXA}
{\bkmkend AAAAAAACXA}
\cell }{\cell }{\row }
{\xe \v ICON_TARGET_SMALL\:raygui.c}
{\xe \v raygui.c\:ICON_TARGET_SMALL}
{\qr ICON_TARGET_SMALL{\bkmkstart AAAAAAACXB}
{\bkmkend AAAAAAACXB}
\cell }{\cell }{\row }
{\xe \v ICON_TARGET_BIG\:raygui.c}
{\xe \v raygui.c\:ICON_TARGET_BIG}
{\qr ICON_TARGET_BIG{\bkmkstart AAAAAAACXC}
{\bkmkend AAAAAAACXC}
\cell }{\cell }{\row }
{\xe \v ICON_TARGET_MOVE\:raygui.c}
{\xe \v raygui.c\:ICON_TARGET_MOVE}
{\qr ICON_TARGET_MOVE{\bkmkstart AAAAAAACXD}
{\bkmkend AAAAAAACXD}
\cell }{\cell }{\row }
{\xe \v ICON_CURSOR_MOVE\:raygui.c}
{\xe \v raygui.c\:ICON_CURSOR_MOVE}
{\qr ICON_CURSOR_MOVE{\bkmkstart AAAAAAACXE}
{\bkmkend AAAAAAACXE}
\cell }{\cell }{\row }
{\xe \v ICON_CURSOR_SCALE\:raygui.c}
{\xe \v raygui.c\:ICON_CURSOR_SCALE}
{\qr ICON_CURSOR_SCALE{\bkmkstart AAAAAAACXF}
{\bkmkend AAAAAAACXF}
\cell }{\cell }{\row }
{\xe \v ICON_CURSOR_SCALE_RIGHT\:raygui.c}
{\xe \v raygui.c\:ICON_CURSOR_SCALE_RIGHT}
{\qr ICON_CURSOR_SCALE_RIGHT{\bkmkstart AAAAAAACXG}
{\bkmkend AAAAAAACXG}
\cell }{\cell }{\row }
{\xe \v ICON_CURSOR_SCALE_LEFT\:raygui.c}
{\xe \v raygui.c\:ICON_CURSOR_SCALE_LEFT}
{\qr ICON_CURSOR_SCALE_LEFT{\bkmkstart AAAAAAACXH}
{\bkmkend AAAAAAACXH}
\cell }{\cell }{\row }
{\xe \v ICON_UNDO\:raygui.c}
{\xe \v raygui.c\:ICON_UNDO}
{\qr ICON_UNDO{\bkmkstart AAAAAAACXI}
{\bkmkend AAAAAAACXI}
\cell }{\cell }{\row }
{\xe \v ICON_REDO\:raygui.c}
{\xe \v raygui.c\:ICON_REDO}
{\qr ICON_REDO{\bkmkstart AAAAAAACXJ}
{\bkmkend AAAAAAACXJ}
\cell }{\cell }{\row }
{\xe \v ICON_REREDO\:raygui.c}
{\xe \v raygui.c\:ICON_REREDO}
{\qr ICON_REREDO{\bkmkstart AAAAAAACXK}
{\bkmkend AAAAAAACXK}
\cell }{\cell }{\row }
{\xe \v ICON_MUTATE\:raygui.c}
{\xe \v raygui.c\:ICON_MUTATE}
{\qr ICON_MUTATE{\bkmkstart AAAAAAACXL}
{\bkmkend AAAAAAACXL}
\cell }{\cell }{\row }
{\xe \v ICON_ROTATE\:raygui.c}
{\xe \v raygui.c\:ICON_ROTATE}
{\qr ICON_ROTATE{\bkmkstart AAAAAAACXM}
{\bkmkend AAAAAAACXM}
\cell }{\cell }{\row }
{\xe \v ICON_REPEAT\:raygui.c}
{\xe \v raygui.c\:ICON_REPEAT}
{\qr ICON_REPEAT{\bkmkstart AAAAAAACXN}
{\bkmkend AAAAAAACXN}
\cell }{\cell }{\row }
{\xe \v ICON_SHUFFLE\:raygui.c}
{\xe \v raygui.c\:ICON_SHUFFLE}
{\qr ICON_SHUFFLE{\bkmkstart AAAAAAACXO}
{\bkmkend AAAAAAACXO}
\cell }{\cell }{\row }
{\xe \v ICON_EMPTYBOX\:raygui.c}
{\xe \v raygui.c\:ICON_EMPTYBOX}
{\qr ICON_EMPTYBOX{\bkmkstart AAAAAAACXP}
{\bkmkend AAAAAAACXP}
\cell }{\cell }{\row }
{\xe \v ICON_TARGET\:raygui.c}
{\xe \v raygui.c\:ICON_TARGET}
{\qr ICON_TARGET{\bkmkstart AAAAAAACXQ}
{\bkmkend AAAAAAACXQ}
\cell }{\cell }{\row }
{\xe \v ICON_TARGET_SMALL_FILL\:raygui.c}
{\xe \v raygui.c\:ICON_TARGET_SMALL_FILL}
{\qr ICON_TARGET_SMALL_FILL{\bkmkstart AAAAAAACXR}
{\bkmkend AAAAAAACXR}
\cell }{\cell }{\row }
{\xe \v ICON_TARGET_BIG_FILL\:raygui.c}
{\xe \v raygui.c\:ICON_TARGET_BIG_FILL}
{\qr ICON_TARGET_BIG_FILL{\bkmkstart AAAAAAACXS}
{\bkmkend AAAAAAACXS}
\cell }{\cell }{\row }
{\xe \v ICON_TARGET_MOVE_FILL\:raygui.c}
{\xe \v raygui.c\:ICON_TARGET_MOVE_FILL}
{\qr ICON_TARGET_MOVE_FILL{\bkmkstart AAAAAAACXT}
{\bkmkend AAAAAAACXT}
\cell }{\cell }{\row }
{\xe \v ICON_CURSOR_MOVE_FILL\:raygui.c}
{\xe \v raygui.c\:ICON_CURSOR_MOVE_FILL}
{\qr ICON_CURSOR_MOVE_FILL{\bkmkstart AAAAAAACXU}
{\bkmkend AAAAAAACXU}
\cell }{\cell }{\row }
{\xe \v ICON_CURSOR_SCALE_FILL\:raygui.c}
{\xe \v raygui.c\:ICON_CURSOR_SCALE_FILL}
{\qr ICON_CURSOR_SCALE_FILL{\bkmkstart AAAAAAACXV}
{\bkmkend AAAAAAACXV}
\cell }{\cell }{\row }
{\xe \v ICON_CURSOR_SCALE_RIGHT_FILL\:raygui.c}
{\xe \v raygui.c\:ICON_CURSOR_SCALE_RIGHT_FILL}
{\qr ICON_CURSOR_SCALE_RIGHT_FILL{\bkmkstart AAAAAAACXW}
{\bkmkend AAAAAAACXW}
\cell }{\cell }{\row }
{\xe \v ICON_CURSOR_SCALE_LEFT_FILL\:raygui.c}
{\xe \v raygui.c\:ICON_CURSOR_SCALE_LEFT_FILL}
{\qr ICON_CURSOR_SCALE_LEFT_FILL{\bkmkstart AAAAAAACXX}
{\bkmkend AAAAAAACXX}
\cell }{\cell }{\row }
{\xe \v ICON_UNDO_FILL\:raygui.c}
{\xe \v raygui.c\:ICON_UNDO_FILL}
{\qr ICON_UNDO_FILL{\bkmkstart AAAAAAACXY}
{\bkmkend AAAAAAACXY}
\cell }{\cell }{\row }
{\xe \v ICON_REDO_FILL\:raygui.c}
{\xe \v raygui.c\:ICON_REDO_FILL}
{\qr ICON_REDO_FILL{\bkmkstart AAAAAAACXZ}
{\bkmkend AAAAAAACXZ}
\cell }{\cell }{\row }
{\xe \v ICON_REREDO_FILL\:raygui.c}
{\xe \v raygui.c\:ICON_REREDO_FILL}
{\qr ICON_REREDO_FILL{\bkmkstart AAAAAAACYA}
{\bkmkend AAAAAAACYA}
\cell }{\cell }{\row }
{\xe \v ICON_MUTATE_FILL\:raygui.c}
{\xe \v raygui.c\:ICON_MUTATE_FILL}
{\qr ICON_MUTATE_FILL{\bkmkstart AAAAAAACYB}
{\bkmkend AAAAAAACYB}
\cell }{\cell }{\row }
{\xe \v ICON_ROTATE_FILL\:raygui.c}
{\xe \v raygui.c\:ICON_ROTATE_FILL}
{\qr ICON_ROTATE_FILL{\bkmkstart AAAAAAACYC}
{\bkmkend AAAAAAACYC}
\cell }{\cell }{\row }
{\xe \v ICON_REPEAT_FILL\:raygui.c}
{\xe \v raygui.c\:ICON_REPEAT_FILL}
{\qr ICON_REPEAT_FILL{\bkmkstart AAAAAAACYD}
{\bkmkend AAAAAAACYD}
\cell }{\cell }{\row }
{\xe \v ICON_SHUFFLE_FILL\:raygui.c}
{\xe \v raygui.c\:ICON_SHUFFLE_FILL}
{\qr ICON_SHUFFLE_FILL{\bkmkstart AAAAAAACYE}
{\bkmkend AAAAAAACYE}
\cell }{\cell }{\row }
{\xe \v ICON_EMPTYBOX_SMALL\:raygui.c}
{\xe \v raygui.c\:ICON_EMPTYBOX_SMALL}
{\qr ICON_EMPTYBOX_SMALL{\bkmkstart AAAAAAACYF}
{\bkmkend AAAAAAACYF}
\cell }{\cell }{\row }
{\xe \v ICON_BOX\:raygui.c}
{\xe \v raygui.c\:ICON_BOX}
{\qr ICON_BOX{\bkmkstart AAAAAAACYG}
{\bkmkend AAAAAAACYG}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_TOP\:raygui.c}
{\xe \v raygui.c\:ICON_BOX_TOP}
{\qr ICON_BOX_TOP{\bkmkstart AAAAAAACYH}
{\bkmkend AAAAAAACYH}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_TOP_RIGHT\:raygui.c}
{\xe \v raygui.c\:ICON_BOX_TOP_RIGHT}
{\qr ICON_BOX_TOP_RIGHT{\bkmkstart AAAAAAACYI}
{\bkmkend AAAAAAACYI}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_RIGHT\:raygui.c}
{\xe \v raygui.c\:ICON_BOX_RIGHT}
{\qr ICON_BOX_RIGHT{\bkmkstart AAAAAAACYJ}
{\bkmkend AAAAAAACYJ}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_BOTTOM_RIGHT\:raygui.c}
{\xe \v raygui.c\:ICON_BOX_BOTTOM_RIGHT}
{\qr ICON_BOX_BOTTOM_RIGHT{\bkmkstart AAAAAAACYK}
{\bkmkend AAAAAAACYK}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_BOTTOM\:raygui.c}
{\xe \v raygui.c\:ICON_BOX_BOTTOM}
{\qr ICON_BOX_BOTTOM{\bkmkstart AAAAAAACYL}
{\bkmkend AAAAAAACYL}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_BOTTOM_LEFT\:raygui.c}
{\xe \v raygui.c\:ICON_BOX_BOTTOM_LEFT}
{\qr ICON_BOX_BOTTOM_LEFT{\bkmkstart AAAAAAACYM}
{\bkmkend AAAAAAACYM}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_LEFT\:raygui.c}
{\xe \v raygui.c\:ICON_BOX_LEFT}
{\qr ICON_BOX_LEFT{\bkmkstart AAAAAAACYN}
{\bkmkend AAAAAAACYN}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_TOP_LEFT\:raygui.c}
{\xe \v raygui.c\:ICON_BOX_TOP_LEFT}
{\qr ICON_BOX_TOP_LEFT{\bkmkstart AAAAAAACYO}
{\bkmkend AAAAAAACYO}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_CENTER\:raygui.c}
{\xe \v raygui.c\:ICON_BOX_CENTER}
{\qr ICON_BOX_CENTER{\bkmkstart AAAAAAACYP}
{\bkmkend AAAAAAACYP}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_CIRCLE_MASK\:raygui.c}
{\xe \v raygui.c\:ICON_BOX_CIRCLE_MASK}
{\qr ICON_BOX_CIRCLE_MASK{\bkmkstart AAAAAAACYQ}
{\bkmkend AAAAAAACYQ}
\cell }{\cell }{\row }
{\xe \v ICON_POT\:raygui.c}
{\xe \v raygui.c\:ICON_POT}
{\qr ICON_POT{\bkmkstart AAAAAAACYR}
{\bkmkend AAAAAAACYR}
\cell }{\cell }{\row }
{\xe \v ICON_ALPHA_MULTIPLY\:raygui.c}
{\xe \v raygui.c\:ICON_ALPHA_MULTIPLY}
{\qr ICON_ALPHA_MULTIPLY{\bkmkstart AAAAAAACYS}
{\bkmkend AAAAAAACYS}
\cell }{\cell }{\row }
{\xe \v ICON_ALPHA_CLEAR\:raygui.c}
{\xe \v raygui.c\:ICON_ALPHA_CLEAR}
{\qr ICON_ALPHA_CLEAR{\bkmkstart AAAAAAACYT}
{\bkmkend AAAAAAACYT}
\cell }{\cell }{\row }
{\xe \v ICON_DITHERING\:raygui.c}
{\xe \v raygui.c\:ICON_DITHERING}
{\qr ICON_DITHERING{\bkmkstart AAAAAAACYU}
{\bkmkend AAAAAAACYU}
\cell }{\cell }{\row }
{\xe \v ICON_MIPMAPS\:raygui.c}
{\xe \v raygui.c\:ICON_MIPMAPS}
{\qr ICON_MIPMAPS{\bkmkstart AAAAAAACYV}
{\bkmkend AAAAAAACYV}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_GRID\:raygui.c}
{\xe \v raygui.c\:ICON_BOX_GRID}
{\qr ICON_BOX_GRID{\bkmkstart AAAAAAACYW}
{\bkmkend AAAAAAACYW}
\cell }{\cell }{\row }
{\xe \v ICON_GRID\:raygui.c}
{\xe \v raygui.c\:ICON_GRID}
{\qr ICON_GRID{\bkmkstart AAAAAAACYX}
{\bkmkend AAAAAAACYX}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_CORNERS_SMALL\:raygui.c}
{\xe \v raygui.c\:ICON_BOX_CORNERS_SMALL}
{\qr ICON_BOX_CORNERS_SMALL{\bkmkstart AAAAAAACYY}
{\bkmkend AAAAAAACYY}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_CORNERS_BIG\:raygui.c}
{\xe \v raygui.c\:ICON_BOX_CORNERS_BIG}
{\qr ICON_BOX_CORNERS_BIG{\bkmkstart AAAAAAACYZ}
{\bkmkend AAAAAAACYZ}
\cell }{\cell }{\row }
{\xe \v ICON_FOUR_BOXES\:raygui.c}
{\xe \v raygui.c\:ICON_FOUR_BOXES}
{\qr ICON_FOUR_BOXES{\bkmkstart AAAAAAACZA}
{\bkmkend AAAAAAACZA}
\cell }{\cell }{\row }
{\xe \v ICON_GRID_FILL\:raygui.c}
{\xe \v raygui.c\:ICON_GRID_FILL}
{\qr ICON_GRID_FILL{\bkmkstart AAAAAAACZB}
{\bkmkend AAAAAAACZB}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_MULTISIZE\:raygui.c}
{\xe \v raygui.c\:ICON_BOX_MULTISIZE}
{\qr ICON_BOX_MULTISIZE{\bkmkstart AAAAAAACZC}
{\bkmkend AAAAAAACZC}
\cell }{\cell }{\row }
{\xe \v ICON_ZOOM_SMALL\:raygui.c}
{\xe \v raygui.c\:ICON_ZOOM_SMALL}
{\qr ICON_ZOOM_SMALL{\bkmkstart AAAAAAACZD}
{\bkmkend AAAAAAACZD}
\cell }{\cell }{\row }
{\xe \v ICON_ZOOM_MEDIUM\:raygui.c}
{\xe \v raygui.c\:ICON_ZOOM_MEDIUM}
{\qr ICON_ZOOM_MEDIUM{\bkmkstart AAAAAAACZE}
{\bkmkend AAAAAAACZE}
\cell }{\cell }{\row }
{\xe \v ICON_ZOOM_BIG\:raygui.c}
{\xe \v raygui.c\:ICON_ZOOM_BIG}
{\qr ICON_ZOOM_BIG{\bkmkstart AAAAAAACZF}
{\bkmkend AAAAAAACZF}
\cell }{\cell }{\row }
{\xe \v ICON_ZOOM_ALL\:raygui.c}
{\xe \v raygui.c\:ICON_ZOOM_ALL}
{\qr ICON_ZOOM_ALL{\bkmkstart AAAAAAACZG}
{\bkmkend AAAAAAACZG}
\cell }{\cell }{\row }
{\xe \v ICON_ZOOM_CENTER\:raygui.c}
{\xe \v raygui.c\:ICON_ZOOM_CENTER}
{\qr ICON_ZOOM_CENTER{\bkmkstart AAAAAAACZH}
{\bkmkend AAAAAAACZH}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_DOTS_SMALL\:raygui.c}
{\xe \v raygui.c\:ICON_BOX_DOTS_SMALL}
{\qr ICON_BOX_DOTS_SMALL{\bkmkstart AAAAAAACZI}
{\bkmkend AAAAAAACZI}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_DOTS_BIG\:raygui.c}
{\xe \v raygui.c\:ICON_BOX_DOTS_BIG}
{\qr ICON_BOX_DOTS_BIG{\bkmkstart AAAAAAACZJ}
{\bkmkend AAAAAAACZJ}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_CONCENTRIC\:raygui.c}
{\xe \v raygui.c\:ICON_BOX_CONCENTRIC}
{\qr ICON_BOX_CONCENTRIC{\bkmkstart AAAAAAACZK}
{\bkmkend AAAAAAACZK}
\cell }{\cell }{\row }
{\xe \v ICON_BOX_GRID_BIG\:raygui.c}
{\xe \v raygui.c\:ICON_BOX_GRID_BIG}
{\qr ICON_BOX_GRID_BIG{\bkmkstart AAAAAAACZL}
{\bkmkend AAAAAAACZL}
\cell }{\cell }{\row }
{\xe \v ICON_OK_TICK\:raygui.c}
{\xe \v raygui.c\:ICON_OK_TICK}
{\qr ICON_OK_TICK{\bkmkstart AAAAAAACZM}
{\bkmkend AAAAAAACZM}
\cell }{\cell }{\row }
{\xe \v ICON_CROSS\:raygui.c}
{\xe \v raygui.c\:ICON_CROSS}
{\qr ICON_CROSS{\bkmkstart AAAAAAACZN}
{\bkmkend AAAAAAACZN}
\cell }{\cell }{\row }
{\xe \v ICON_ARROW_LEFT\:raygui.c}
{\xe \v raygui.c\:ICON_ARROW_LEFT}
{\qr ICON_ARROW_LEFT{\bkmkstart AAAAAAACZO}
{\bkmkend AAAAAAACZO}
\cell }{\cell }{\row }
{\xe \v ICON_ARROW_RIGHT\:raygui.c}
{\xe \v raygui.c\:ICON_ARROW_RIGHT}
{\qr ICON_ARROW_RIGHT{\bkmkstart AAAAAAACZP}
{\bkmkend AAAAAAACZP}
\cell }{\cell }{\row }
{\xe \v ICON_ARROW_DOWN\:raygui.c}
{\xe \v raygui.c\:ICON_ARROW_DOWN}
{\qr ICON_ARROW_DOWN{\bkmkstart AAAAAAACZQ}
{\bkmkend AAAAAAACZQ}
\cell }{\cell }{\row }
{\xe \v ICON_ARROW_UP\:raygui.c}
{\xe \v raygui.c\:ICON_ARROW_UP}
{\qr ICON_ARROW_UP{\bkmkstart AAAAAAACZR}
{\bkmkend AAAAAAACZR}
\cell }{\cell }{\row }
{\xe \v ICON_ARROW_LEFT_FILL\:raygui.c}
{\xe \v raygui.c\:ICON_ARROW_LEFT_FILL}
{\qr ICON_ARROW_LEFT_FILL{\bkmkstart AAAAAAACZS}
{\bkmkend AAAAAAACZS}
\cell }{\cell }{\row }
{\xe \v ICON_ARROW_RIGHT_FILL\:raygui.c}
{\xe \v raygui.c\:ICON_ARROW_RIGHT_FILL}
{\qr ICON_ARROW_RIGHT_FILL{\bkmkstart AAAAAAACZT}
{\bkmkend AAAAAAACZT}
\cell }{\cell }{\row }
{\xe \v ICON_ARROW_DOWN_FILL\:raygui.c}
{\xe \v raygui.c\:ICON_ARROW_DOWN_FILL}
{\qr ICON_ARROW_DOWN_FILL{\bkmkstart AAAAAAACZU}
{\bkmkend AAAAAAACZU}
\cell }{\cell }{\row }
{\xe \v ICON_ARROW_UP_FILL\:raygui.c}
{\xe \v raygui.c\:ICON_ARROW_UP_FILL}
{\qr ICON_ARROW_UP_FILL{\bkmkstart AAAAAAACZV}
{\bkmkend AAAAAAACZV}
\cell }{\cell }{\row }
{\xe \v ICON_AUDIO\:raygui.c}
{\xe \v raygui.c\:ICON_AUDIO}
{\qr ICON_AUDIO{\bkmkstart AAAAAAACZW}
{\bkmkend AAAAAAACZW}
\cell }{\cell }{\row }
{\xe \v ICON_FX\:raygui.c}
{\xe \v raygui.c\:ICON_FX}
{\qr ICON_FX{\bkmkstart AAAAAAACZX}
{\bkmkend AAAAAAACZX}
\cell }{\cell }{\row }
{\xe \v ICON_WAVE\:raygui.c}
{\xe \v raygui.c\:ICON_WAVE}
{\qr ICON_WAVE{\bkmkstart AAAAAAACZY}
{\bkmkend AAAAAAACZY}
\cell }{\cell }{\row }
{\xe \v ICON_WAVE_SINUS\:raygui.c}
{\xe \v raygui.c\:ICON_WAVE_SINUS}
{\qr ICON_WAVE_SINUS{\bkmkstart AAAAAAACZZ}
{\bkmkend AAAAAAACZZ}
\cell }{\cell }{\row }
{\xe \v ICON_WAVE_SQUARE\:raygui.c}
{\xe \v raygui.c\:ICON_WAVE_SQUARE}
{\qr ICON_WAVE_SQUARE{\bkmkstart AAAAAAADAA}
{\bkmkend AAAAAAADAA}
\cell }{\cell }{\row }
{\xe \v ICON_WAVE_TRIANGULAR\:raygui.c}
{\xe \v raygui.c\:ICON_WAVE_TRIANGULAR}
{\qr ICON_WAVE_TRIANGULAR{\bkmkstart AAAAAAADAB}
{\bkmkend AAAAAAADAB}
\cell }{\cell }{\row }
{\xe \v ICON_CROSS_SMALL\:raygui.c}
{\xe \v raygui.c\:ICON_CROSS_SMALL}
{\qr ICON_CROSS_SMALL{\bkmkstart AAAAAAADAC}
{\bkmkend AAAAAAADAC}
\cell }{\cell }{\row }
{\xe \v ICON_PLAYER_PREVIOUS\:raygui.c}
{\xe \v raygui.c\:ICON_PLAYER_PREVIOUS}
{\qr ICON_PLAYER_PREVIOUS{\bkmkstart AAAAAAADAD}
{\bkmkend AAAAAAADAD}
\cell }{\cell }{\row }
{\xe \v ICON_PLAYER_PLAY_BACK\:raygui.c}
{\xe \v raygui.c\:ICON_PLAYER_PLAY_BACK}
{\qr ICON_PLAYER_PLAY_BACK{\bkmkstart AAAAAAADAE}
{\bkmkend AAAAAAADAE}
\cell }{\cell }{\row }
{\xe \v ICON_PLAYER_PLAY\:raygui.c}
{\xe \v raygui.c\:ICON_PLAYER_PLAY}
{\qr ICON_PLAYER_PLAY{\bkmkstart AAAAAAADAF}
{\bkmkend AAAAAAADAF}
\cell }{\cell }{\row }
{\xe \v ICON_PLAYER_PAUSE\:raygui.c}
{\xe \v raygui.c\:ICON_PLAYER_PAUSE}
{\qr ICON_PLAYER_PAUSE{\bkmkstart AAAAAAADAG}
{\bkmkend AAAAAAADAG}
\cell }{\cell }{\row }
{\xe \v ICON_PLAYER_STOP\:raygui.c}
{\xe \v raygui.c\:ICON_PLAYER_STOP}
{\qr ICON_PLAYER_STOP{\bkmkstart AAAAAAADAH}
{\bkmkend AAAAAAADAH}
\cell }{\cell }{\row }
{\xe \v ICON_PLAYER_NEXT\:raygui.c}
{\xe \v raygui.c\:ICON_PLAYER_NEXT}
{\qr ICON_PLAYER_NEXT{\bkmkstart AAAAAAADAI}
{\bkmkend AAAAAAADAI}
\cell }{\cell }{\row }
{\xe \v ICON_PLAYER_RECORD\:raygui.c}
{\xe \v raygui.c\:ICON_PLAYER_RECORD}
{\qr ICON_PLAYER_RECORD{\bkmkstart AAAAAAADAJ}
{\bkmkend AAAAAAADAJ}
\cell }{\cell }{\row }
{\xe \v ICON_MAGNET\:raygui.c}
{\xe \v raygui.c\:ICON_MAGNET}
{\qr ICON_MAGNET{\bkmkstart AAAAAAADAK}
{\bkmkend AAAAAAADAK}
\cell }{\cell }{\row }
{\xe \v ICON_LOCK_CLOSE\:raygui.c}
{\xe \v raygui.c\:ICON_LOCK_CLOSE}
{\qr ICON_LOCK_CLOSE{\bkmkstart AAAAAAADAL}
{\bkmkend AAAAAAADAL}
\cell }{\cell }{\row }
{\xe \v ICON_LOCK_OPEN\:raygui.c}
{\xe \v raygui.c\:ICON_LOCK_OPEN}
{\qr ICON_LOCK_OPEN{\bkmkstart AAAAAAADAM}
{\bkmkend AAAAAAADAM}
\cell }{\cell }{\row }
{\xe \v ICON_CLOCK\:raygui.c}
{\xe \v raygui.c\:ICON_CLOCK}
{\qr ICON_CLOCK{\bkmkstart AAAAAAADAN}
{\bkmkend AAAAAAADAN}
\cell }{\cell }{\row }
{\xe \v ICON_TOOLS\:raygui.c}
{\xe \v raygui.c\:ICON_TOOLS}
{\qr ICON_TOOLS{\bkmkstart AAAAAAADAO}
{\bkmkend AAAAAAADAO}
\cell }{\cell }{\row }
{\xe \v ICON_GEAR\:raygui.c}
{\xe \v raygui.c\:ICON_GEAR}
{\qr ICON_GEAR{\bkmkstart AAAAAAADAP}
{\bkmkend AAAAAAADAP}
\cell }{\cell }{\row }
{\xe \v ICON_GEAR_BIG\:raygui.c}
{\xe \v raygui.c\:ICON_GEAR_BIG}
{\qr ICON_GEAR_BIG{\bkmkstart AAAAAAADAQ}
{\bkmkend AAAAAAADAQ}
\cell }{\cell }{\row }
{\xe \v ICON_BIN\:raygui.c}
{\xe \v raygui.c\:ICON_BIN}
{\qr ICON_BIN{\bkmkstart AAAAAAADAR}
{\bkmkend AAAAAAADAR}
\cell }{\cell }{\row }
{\xe \v ICON_HAND_POINTER\:raygui.c}
{\xe \v raygui.c\:ICON_HAND_POINTER}
{\qr ICON_HAND_POINTER{\bkmkstart AAAAAAADAS}
{\bkmkend AAAAAAADAS}
\cell }{\cell }{\row }
{\xe \v ICON_LASER\:raygui.c}
{\xe \v raygui.c\:ICON_LASER}
{\qr ICON_LASER{\bkmkstart AAAAAAADAT}
{\bkmkend AAAAAAADAT}
\cell }{\cell }{\row }
{\xe \v ICON_COIN\:raygui.c}
{\xe \v raygui.c\:ICON_COIN}
{\qr ICON_COIN{\bkmkstart AAAAAAADAU}
{\bkmkend AAAAAAADAU}
\cell }{\cell }{\row }
{\xe \v ICON_EXPLOSION\:raygui.c}
{\xe \v raygui.c\:ICON_EXPLOSION}
{\qr ICON_EXPLOSION{\bkmkstart AAAAAAADAV}
{\bkmkend AAAAAAADAV}
\cell }{\cell }{\row }
{\xe \v ICON_1UP\:raygui.c}
{\xe \v raygui.c\:ICON_1UP}
{\qr ICON_1UP{\bkmkstart AAAAAAADAW}
{\bkmkend AAAAAAADAW}
\cell }{\cell }{\row }
{\xe \v ICON_PLAYER\:raygui.c}
{\xe \v raygui.c\:ICON_PLAYER}
{\qr ICON_PLAYER{\bkmkstart AAAAAAADAX}
{\bkmkend AAAAAAADAX}
\cell }{\cell }{\row }
{\xe \v ICON_PLAYER_JUMP\:raygui.c}
{\xe \v raygui.c\:ICON_PLAYER_JUMP}
{\qr ICON_PLAYER_JUMP{\bkmkstart AAAAAAADAY}
{\bkmkend AAAAAAADAY}
\cell }{\cell }{\row }
{\xe \v ICON_KEY\:raygui.c}
{\xe \v raygui.c\:ICON_KEY}
{\qr ICON_KEY{\bkmkstart AAAAAAADAZ}
{\bkmkend AAAAAAADAZ}
\cell }{\cell }{\row }
{\xe \v ICON_DEMON\:raygui.c}
{\xe \v raygui.c\:ICON_DEMON}
{\qr ICON_DEMON{\bkmkstart AAAAAAADBA}
{\bkmkend AAAAAAADBA}
\cell }{\cell }{\row }
{\xe \v ICON_TEXT_POPUP\:raygui.c}
{\xe \v raygui.c\:ICON_TEXT_POPUP}
{\qr ICON_TEXT_POPUP{\bkmkstart AAAAAAADBB}
{\bkmkend AAAAAAADBB}
\cell }{\cell }{\row }
{\xe \v ICON_GEAR_EX\:raygui.c}
{\xe \v raygui.c\:ICON_GEAR_EX}
{\qr ICON_GEAR_EX{\bkmkstart AAAAAAADBC}
{\bkmkend AAAAAAADBC}
\cell }{\cell }{\row }
{\xe \v ICON_CRACK\:raygui.c}
{\xe \v raygui.c\:ICON_CRACK}
{\qr ICON_CRACK{\bkmkstart AAAAAAADBD}
{\bkmkend AAAAAAADBD}
\cell }{\cell }{\row }
{\xe \v ICON_CRACK_POINTS\:raygui.c}
{\xe \v raygui.c\:ICON_CRACK_POINTS}
{\qr ICON_CRACK_POINTS{\bkmkstart AAAAAAADBE}
{\bkmkend AAAAAAADBE}
\cell }{\cell }{\row }
{\xe \v ICON_STAR\:raygui.c}
{\xe \v raygui.c\:ICON_STAR}
{\qr ICON_STAR{\bkmkstart AAAAAAADBF}
{\bkmkend AAAAAAADBF}
\cell }{\cell }{\row }
{\xe \v ICON_DOOR\:raygui.c}
{\xe \v raygui.c\:ICON_DOOR}
{\qr ICON_DOOR{\bkmkstart AAAAAAADBG}
{\bkmkend AAAAAAADBG}
\cell }{\cell }{\row }
{\xe \v ICON_EXIT\:raygui.c}
{\xe \v raygui.c\:ICON_EXIT}
{\qr ICON_EXIT{\bkmkstart AAAAAAADBH}
{\bkmkend AAAAAAADBH}
\cell }{\cell }{\row }
{\xe \v ICON_MODE_2D\:raygui.c}
{\xe \v raygui.c\:ICON_MODE_2D}
{\qr ICON_MODE_2D{\bkmkstart AAAAAAADBI}
{\bkmkend AAAAAAADBI}
\cell }{\cell }{\row }
{\xe \v ICON_MODE_3D\:raygui.c}
{\xe \v raygui.c\:ICON_MODE_3D}
{\qr ICON_MODE_3D{\bkmkstart AAAAAAADBJ}
{\bkmkend AAAAAAADBJ}
\cell }{\cell }{\row }
{\xe \v ICON_CUBE\:raygui.c}
{\xe \v raygui.c\:ICON_CUBE}
{\qr ICON_CUBE{\bkmkstart AAAAAAADBK}
{\bkmkend AAAAAAADBK}
\cell }{\cell }{\row }
{\xe \v ICON_CUBE_FACE_TOP\:raygui.c}
{\xe \v raygui.c\:ICON_CUBE_FACE_TOP}
{\qr ICON_CUBE_FACE_TOP{\bkmkstart AAAAAAADBL}
{\bkmkend AAAAAAADBL}
\cell }{\cell }{\row }
{\xe \v ICON_CUBE_FACE_LEFT\:raygui.c}
{\xe \v raygui.c\:ICON_CUBE_FACE_LEFT}
{\qr ICON_CUBE_FACE_LEFT{\bkmkstart AAAAAAADBM}
{\bkmkend AAAAAAADBM}
\cell }{\cell }{\row }
{\xe \v ICON_CUBE_FACE_FRONT\:raygui.c}
{\xe \v raygui.c\:ICON_CUBE_FACE_FRONT}
{\qr ICON_CUBE_FACE_FRONT{\bkmkstart AAAAAAADBN}
{\bkmkend AAAAAAADBN}
\cell }{\cell }{\row }
{\xe \v ICON_CUBE_FACE_BOTTOM\:raygui.c}
{\xe \v raygui.c\:ICON_CUBE_FACE_BOTTOM}
{\qr ICON_CUBE_FACE_BOTTOM{\bkmkstart AAAAAAADBO}
{\bkmkend AAAAAAADBO}
\cell }{\cell }{\row }
{\xe \v ICON_CUBE_FACE_RIGHT\:raygui.c}
{\xe \v raygui.c\:ICON_CUBE_FACE_RIGHT}
{\qr ICON_CUBE_FACE_RIGHT{\bkmkstart AAAAAAADBP}
{\bkmkend AAAAAAADBP}
\cell }{\cell }{\row }
{\xe \v ICON_CUBE_FACE_BACK\:raygui.c}
{\xe \v raygui.c\:ICON_CUBE_FACE_BACK}
{\qr ICON_CUBE_FACE_BACK{\bkmkstart AAAAAAADBQ}
{\bkmkend AAAAAAADBQ}
\cell }{\cell }{\row }
{\xe \v ICON_CAMERA\:raygui.c}
{\xe \v raygui.c\:ICON_CAMERA}
{\qr ICON_CAMERA{\bkmkstart AAAAAAADBR}
{\bkmkend AAAAAAADBR}
\cell }{\cell }{\row }
{\xe \v ICON_SPECIAL\:raygui.c}
{\xe \v raygui.c\:ICON_SPECIAL}
{\qr ICON_SPECIAL{\bkmkstart AAAAAAADBS}
{\bkmkend AAAAAAADBS}
\cell }{\cell }{\row }
{\xe \v ICON_LINK_NET\:raygui.c}
{\xe \v raygui.c\:ICON_LINK_NET}
{\qr ICON_LINK_NET{\bkmkstart AAAAAAADBT}
{\bkmkend AAAAAAADBT}
\cell }{\cell }{\row }
{\xe \v ICON_LINK_BOXES\:raygui.c}
{\xe \v raygui.c\:ICON_LINK_BOXES}
{\qr ICON_LINK_BOXES{\bkmkstart AAAAAAADBU}
{\bkmkend AAAAAAADBU}
\cell }{\cell }{\row }
{\xe \v ICON_LINK_MULTI\:raygui.c}
{\xe \v raygui.c\:ICON_LINK_MULTI}
{\qr ICON_LINK_MULTI{\bkmkstart AAAAAAADBV}
{\bkmkend AAAAAAADBV}
\cell }{\cell }{\row }
{\xe \v ICON_LINK\:raygui.c}
{\xe \v raygui.c\:ICON_LINK}
{\qr ICON_LINK{\bkmkstart AAAAAAADBW}
{\bkmkend AAAAAAADBW}
\cell }{\cell }{\row }
{\xe \v ICON_LINK_BROKE\:raygui.c}
{\xe \v raygui.c\:ICON_LINK_BROKE}
{\qr ICON_LINK_BROKE{\bkmkstart AAAAAAADBX}
{\bkmkend AAAAAAADBX}
\cell }{\cell }{\row }
{\xe \v ICON_TEXT_NOTES\:raygui.c}
{\xe \v raygui.c\:ICON_TEXT_NOTES}
{\qr ICON_TEXT_NOTES{\bkmkstart AAAAAAADBY}
{\bkmkend AAAAAAADBY}
\cell }{\cell }{\row }
{\xe \v ICON_NOTEBOOK\:raygui.c}
{\xe \v raygui.c\:ICON_NOTEBOOK}
{\qr ICON_NOTEBOOK{\bkmkstart AAAAAAADBZ}
{\bkmkend AAAAAAADBZ}
\cell }{\cell }{\row }
{\xe \v ICON_SUITCASE\:raygui.c}
{\xe \v raygui.c\:ICON_SUITCASE}
{\qr ICON_SUITCASE{\bkmkstart AAAAAAADCA}
{\bkmkend AAAAAAADCA}
\cell }{\cell }{\row }
{\xe \v ICON_SUITCASE_ZIP\:raygui.c}
{\xe \v raygui.c\:ICON_SUITCASE_ZIP}
{\qr ICON_SUITCASE_ZIP{\bkmkstart AAAAAAADCB}
{\bkmkend AAAAAAADCB}
\cell }{\cell }{\row }
{\xe \v ICON_MAILBOX\:raygui.c}
{\xe \v raygui.c\:ICON_MAILBOX}
{\qr ICON_MAILBOX{\bkmkstart AAAAAAADCC}
{\bkmkend AAAAAAADCC}
\cell }{\cell }{\row }
{\xe \v ICON_MONITOR\:raygui.c}
{\xe \v raygui.c\:ICON_MONITOR}
{\qr ICON_MONITOR{\bkmkstart AAAAAAADCD}
{\bkmkend AAAAAAADCD}
\cell }{\cell }{\row }
{\xe \v ICON_PRINTER\:raygui.c}
{\xe \v raygui.c\:ICON_PRINTER}
{\qr ICON_PRINTER{\bkmkstart AAAAAAADCE}
{\bkmkend AAAAAAADCE}
\cell }{\cell }{\row }
{\xe \v ICON_PHOTO_CAMERA\:raygui.c}
{\xe \v raygui.c\:ICON_PHOTO_CAMERA}
{\qr ICON_PHOTO_CAMERA{\bkmkstart AAAAAAADCF}
{\bkmkend AAAAAAADCF}
\cell }{\cell }{\row }
{\xe \v ICON_PHOTO_CAMERA_FLASH\:raygui.c}
{\xe \v raygui.c\:ICON_PHOTO_CAMERA_FLASH}
{\qr ICON_PHOTO_CAMERA_FLASH{\bkmkstart AAAAAAADCG}
{\bkmkend AAAAAAADCG}
\cell }{\cell }{\row }
{\xe \v ICON_HOUSE\:raygui.c}
{\xe \v raygui.c\:ICON_HOUSE}
{\qr ICON_HOUSE{\bkmkstart AAAAAAADCH}
{\bkmkend AAAAAAADCH}
\cell }{\cell }{\row }
{\xe \v ICON_HEART\:raygui.c}
{\xe \v raygui.c\:ICON_HEART}
{\qr ICON_HEART{\bkmkstart AAAAAAADCI}
{\bkmkend AAAAAAADCI}
\cell }{\cell }{\row }
{\xe \v ICON_CORNER\:raygui.c}
{\xe \v raygui.c\:ICON_CORNER}
{\qr ICON_CORNER{\bkmkstart AAAAAAADCJ}
{\bkmkend AAAAAAADCJ}
\cell }{\cell }{\row }
{\xe \v ICON_VERTICAL_BARS\:raygui.c}
{\xe \v raygui.c\:ICON_VERTICAL_BARS}
{\qr ICON_VERTICAL_BARS{\bkmkstart AAAAAAADCK}
{\bkmkend AAAAAAADCK}
\cell }{\cell }{\row }
{\xe \v ICON_VERTICAL_BARS_FILL\:raygui.c}
{\xe \v raygui.c\:ICON_VERTICAL_BARS_FILL}
{\qr ICON_VERTICAL_BARS_FILL{\bkmkstart AAAAAAADCL}
{\bkmkend AAAAAAADCL}
\cell }{\cell }{\row }
{\xe \v ICON_LIFE_BARS\:raygui.c}
{\xe \v raygui.c\:ICON_LIFE_BARS}
{\qr ICON_LIFE_BARS{\bkmkstart AAAAAAADCM}
{\bkmkend AAAAAAADCM}
\cell }{\cell }{\row }
{\xe \v ICON_INFO\:raygui.c}
{\xe \v raygui.c\:ICON_INFO}
{\qr ICON_INFO{\bkmkstart AAAAAAADCN}
{\bkmkend AAAAAAADCN}
\cell }{\cell }{\row }
{\xe \v ICON_CROSSLINE\:raygui.c}
{\xe \v raygui.c\:ICON_CROSSLINE}
{\qr ICON_CROSSLINE{\bkmkstart AAAAAAADCO}
{\bkmkend AAAAAAADCO}
\cell }{\cell }{\row }
{\xe \v ICON_HELP\:raygui.c}
{\xe \v raygui.c\:ICON_HELP}
{\qr ICON_HELP{\bkmkstart AAAAAAADCP}
{\bkmkend AAAAAAADCP}
\cell }{\cell }{\row }
{\xe \v ICON_FILETYPE_ALPHA\:raygui.c}
{\xe \v raygui.c\:ICON_FILETYPE_ALPHA}
{\qr ICON_FILETYPE_ALPHA{\bkmkstart AAAAAAADCQ}
{\bkmkend AAAAAAADCQ}
\cell }{\cell }{\row }
{\xe \v ICON_FILETYPE_HOME\:raygui.c}
{\xe \v raygui.c\:ICON_FILETYPE_HOME}
{\qr ICON_FILETYPE_HOME{\bkmkstart AAAAAAADCR}
{\bkmkend AAAAAAADCR}
\cell }{\cell }{\row }
{\xe \v ICON_LAYERS_VISIBLE\:raygui.c}
{\xe \v raygui.c\:ICON_LAYERS_VISIBLE}
{\qr ICON_LAYERS_VISIBLE{\bkmkstart AAAAAAADCS}
{\bkmkend AAAAAAADCS}
\cell }{\cell }{\row }
{\xe \v ICON_LAYERS\:raygui.c}
{\xe \v raygui.c\:ICON_LAYERS}
{\qr ICON_LAYERS{\bkmkstart AAAAAAADCT}
{\bkmkend AAAAAAADCT}
\cell }{\cell }{\row }
{\xe \v ICON_WINDOW\:raygui.c}
{\xe \v raygui.c\:ICON_WINDOW}
{\qr ICON_WINDOW{\bkmkstart AAAAAAADCU}
{\bkmkend AAAAAAADCU}
\cell }{\cell }{\row }
{\xe \v ICON_HIDPI\:raygui.c}
{\xe \v raygui.c\:ICON_HIDPI}
{\qr ICON_HIDPI{\bkmkstart AAAAAAADCV}
{\bkmkend AAAAAAADCV}
\cell }{\cell }{\row }
{\xe \v ICON_FILETYPE_BINARY\:raygui.c}
{\xe \v raygui.c\:ICON_FILETYPE_BINARY}
{\qr ICON_FILETYPE_BINARY{\bkmkstart AAAAAAADCW}
{\bkmkend AAAAAAADCW}
\cell }{\cell }{\row }
{\xe \v ICON_HEX\:raygui.c}
{\xe \v raygui.c\:ICON_HEX}
{\qr ICON_HEX{\bkmkstart AAAAAAADCX}
{\bkmkend AAAAAAADCX}
\cell }{\cell }{\row }
{\xe \v ICON_SHIELD\:raygui.c}
{\xe \v raygui.c\:ICON_SHIELD}
{\qr ICON_SHIELD{\bkmkstart AAAAAAADCY}
{\bkmkend AAAAAAADCY}
\cell }{\cell }{\row }
{\xe \v ICON_FILE_NEW\:raygui.c}
{\xe \v raygui.c\:ICON_FILE_NEW}
{\qr ICON_FILE_NEW{\bkmkstart AAAAAAADCZ}
{\bkmkend AAAAAAADCZ}
\cell }{\cell }{\row }
{\xe \v ICON_FOLDER_ADD\:raygui.c}
{\xe \v raygui.c\:ICON_FOLDER_ADD}
{\qr ICON_FOLDER_ADD{\bkmkstart AAAAAAADDA}
{\bkmkend AAAAAAADDA}
\cell }{\cell }{\row }
{\xe \v ICON_ALARM\:raygui.c}
{\xe \v raygui.c\:ICON_ALARM}
{\qr ICON_ALARM{\bkmkstart AAAAAAADDB}
{\bkmkend AAAAAAADDB}
\cell }{\cell }{\row }
{\xe \v ICON_206\:raygui.c}
{\xe \v raygui.c\:ICON_206}
{\qr ICON_206{\bkmkstart AAAAAAADDC}
{\bkmkend AAAAAAADDC}
\cell }{\cell }{\row }
{\xe \v ICON_207\:raygui.c}
{\xe \v raygui.c\:ICON_207}
{\qr ICON_207{\bkmkstart AAAAAAADDD}
{\bkmkend AAAAAAADDD}
\cell }{\cell }{\row }
{\xe \v ICON_208\:raygui.c}
{\xe \v raygui.c\:ICON_208}
{\qr ICON_208{\bkmkstart AAAAAAADDE}
{\bkmkend AAAAAAADDE}
\cell }{\cell }{\row }
{\xe \v ICON_209\:raygui.c}
{\xe \v raygui.c\:ICON_209}
{\qr ICON_209{\bkmkstart AAAAAAADDF}
{\bkmkend AAAAAAADDF}
\cell }{\cell }{\row }
{\xe \v ICON_210\:raygui.c}
{\xe \v raygui.c\:ICON_210}
{\qr ICON_210{\bkmkstart AAAAAAADDG}
{\bkmkend AAAAAAADDG}
\cell }{\cell }{\row }
{\xe \v ICON_211\:raygui.c}
{\xe \v raygui.c\:ICON_211}
{\qr ICON_211{\bkmkstart AAAAAAADDH}
{\bkmkend AAAAAAADDH}
\cell }{\cell }{\row }
{\xe \v ICON_212\:raygui.c}
{\xe \v raygui.c\:ICON_212}
{\qr ICON_212{\bkmkstart AAAAAAADDI}
{\bkmkend AAAAAAADDI}
\cell }{\cell }{\row }
{\xe \v ICON_213\:raygui.c}
{\xe \v raygui.c\:ICON_213}
{\qr ICON_213{\bkmkstart AAAAAAADDJ}
{\bkmkend AAAAAAADDJ}
\cell }{\cell }{\row }
{\xe \v ICON_214\:raygui.c}
{\xe \v raygui.c\:ICON_214}
{\qr ICON_214{\bkmkstart AAAAAAADDK}
{\bkmkend AAAAAAADDK}
\cell }{\cell }{\row }
{\xe \v ICON_215\:raygui.c}
{\xe \v raygui.c\:ICON_215}
{\qr ICON_215{\bkmkstart AAAAAAADDL}
{\bkmkend AAAAAAADDL}
\cell }{\cell }{\row }
{\xe \v ICON_216\:raygui.c}
{\xe \v raygui.c\:ICON_216}
{\qr ICON_216{\bkmkstart AAAAAAADDM}
{\bkmkend AAAAAAADDM}
\cell }{\cell }{\row }
{\xe \v ICON_217\:raygui.c}
{\xe \v raygui.c\:ICON_217}
{\qr ICON_217{\bkmkstart AAAAAAADDN}
{\bkmkend AAAAAAADDN}
\cell }{\cell }{\row }
{\xe \v ICON_218\:raygui.c}
{\xe \v raygui.c\:ICON_218}
{\qr ICON_218{\bkmkstart AAAAAAADDO}
{\bkmkend AAAAAAADDO}
\cell }{\cell }{\row }
{\xe \v ICON_219\:raygui.c}
{\xe \v raygui.c\:ICON_219}
{\qr ICON_219{\bkmkstart AAAAAAADDP}
{\bkmkend AAAAAAADDP}
\cell }{\cell }{\row }
{\xe \v ICON_220\:raygui.c}
{\xe \v raygui.c\:ICON_220}
{\qr ICON_220{\bkmkstart AAAAAAADDQ}
{\bkmkend AAAAAAADDQ}
\cell }{\cell }{\row }
{\xe \v ICON_221\:raygui.c}
{\xe \v raygui.c\:ICON_221}
{\qr ICON_221{\bkmkstart AAAAAAADDR}
{\bkmkend AAAAAAADDR}
\cell }{\cell }{\row }
{\xe \v ICON_222\:raygui.c}
{\xe \v raygui.c\:ICON_222}
{\qr ICON_222{\bkmkstart AAAAAAADDS}
{\bkmkend AAAAAAADDS}
\cell }{\cell }{\row }
{\xe \v ICON_223\:raygui.c}
{\xe \v raygui.c\:ICON_223}
{\qr ICON_223{\bkmkstart AAAAAAADDT}
{\bkmkend AAAAAAADDT}
\cell }{\cell }{\row }
{\xe \v ICON_224\:raygui.c}
{\xe \v raygui.c\:ICON_224}
{\qr ICON_224{\bkmkstart AAAAAAADDU}
{\bkmkend AAAAAAADDU}
\cell }{\cell }{\row }
{\xe \v ICON_225\:raygui.c}
{\xe \v raygui.c\:ICON_225}
{\qr ICON_225{\bkmkstart AAAAAAADDV}
{\bkmkend AAAAAAADDV}
\cell }{\cell }{\row }
{\xe \v ICON_226\:raygui.c}
{\xe \v raygui.c\:ICON_226}
{\qr ICON_226{\bkmkstart AAAAAAADDW}
{\bkmkend AAAAAAADDW}
\cell }{\cell }{\row }
{\xe \v ICON_227\:raygui.c}
{\xe \v raygui.c\:ICON_227}
{\qr ICON_227{\bkmkstart AAAAAAADDX}
{\bkmkend AAAAAAADDX}
\cell }{\cell }{\row }
{\xe \v ICON_228\:raygui.c}
{\xe \v raygui.c\:ICON_228}
{\qr ICON_228{\bkmkstart AAAAAAADDY}
{\bkmkend AAAAAAADDY}
\cell }{\cell }{\row }
{\xe \v ICON_229\:raygui.c}
{\xe \v raygui.c\:ICON_229}
{\qr ICON_229{\bkmkstart AAAAAAADDZ}
{\bkmkend AAAAAAADDZ}
\cell }{\cell }{\row }
{\xe \v ICON_230\:raygui.c}
{\xe \v raygui.c\:ICON_230}
{\qr ICON_230{\bkmkstart AAAAAAADEA}
{\bkmkend AAAAAAADEA}
\cell }{\cell }{\row }
{\xe \v ICON_231\:raygui.c}
{\xe \v raygui.c\:ICON_231}
{\qr ICON_231{\bkmkstart AAAAAAADEB}
{\bkmkend AAAAAAADEB}
\cell }{\cell }{\row }
{\xe \v ICON_232\:raygui.c}
{\xe \v raygui.c\:ICON_232}
{\qr ICON_232{\bkmkstart AAAAAAADEC}
{\bkmkend AAAAAAADEC}
\cell }{\cell }{\row }
{\xe \v ICON_233\:raygui.c}
{\xe \v raygui.c\:ICON_233}
{\qr ICON_233{\bkmkstart AAAAAAADED}
{\bkmkend AAAAAAADED}
\cell }{\cell }{\row }
{\xe \v ICON_234\:raygui.c}
{\xe \v raygui.c\:ICON_234}
{\qr ICON_234{\bkmkstart AAAAAAADEE}
{\bkmkend AAAAAAADEE}
\cell }{\cell }{\row }
{\xe \v ICON_235\:raygui.c}
{\xe \v raygui.c\:ICON_235}
{\qr ICON_235{\bkmkstart AAAAAAADEF}
{\bkmkend AAAAAAADEF}
\cell }{\cell }{\row }
{\xe \v ICON_236\:raygui.c}
{\xe \v raygui.c\:ICON_236}
{\qr ICON_236{\bkmkstart AAAAAAADEG}
{\bkmkend AAAAAAADEG}
\cell }{\cell }{\row }
{\xe \v ICON_237\:raygui.c}
{\xe \v raygui.c\:ICON_237}
{\qr ICON_237{\bkmkstart AAAAAAADEH}
{\bkmkend AAAAAAADEH}
\cell }{\cell }{\row }
{\xe \v ICON_238\:raygui.c}
{\xe \v raygui.c\:ICON_238}
{\qr ICON_238{\bkmkstart AAAAAAADEI}
{\bkmkend AAAAAAADEI}
\cell }{\cell }{\row }
{\xe \v ICON_239\:raygui.c}
{\xe \v raygui.c\:ICON_239}
{\qr ICON_239{\bkmkstart AAAAAAADEJ}
{\bkmkend AAAAAAADEJ}
\cell }{\cell }{\row }
{\xe \v ICON_240\:raygui.c}
{\xe \v raygui.c\:ICON_240}
{\qr ICON_240{\bkmkstart AAAAAAADEK}
{\bkmkend AAAAAAADEK}
\cell }{\cell }{\row }
{\xe \v ICON_241\:raygui.c}
{\xe \v raygui.c\:ICON_241}
{\qr ICON_241{\bkmkstart AAAAAAADEL}
{\bkmkend AAAAAAADEL}
\cell }{\cell }{\row }
{\xe \v ICON_242\:raygui.c}
{\xe \v raygui.c\:ICON_242}
{\qr ICON_242{\bkmkstart AAAAAAADEM}
{\bkmkend AAAAAAADEM}
\cell }{\cell }{\row }
{\xe \v ICON_243\:raygui.c}
{\xe \v raygui.c\:ICON_243}
{\qr ICON_243{\bkmkstart AAAAAAADEN}
{\bkmkend AAAAAAADEN}
\cell }{\cell }{\row }
{\xe \v ICON_244\:raygui.c}
{\xe \v raygui.c\:ICON_244}
{\qr ICON_244{\bkmkstart AAAAAAADEO}
{\bkmkend AAAAAAADEO}
\cell }{\cell }{\row }
{\xe \v ICON_245\:raygui.c}
{\xe \v raygui.c\:ICON_245}
{\qr ICON_245{\bkmkstart AAAAAAADEP}
{\bkmkend AAAAAAADEP}
\cell }{\cell }{\row }
{\xe \v ICON_246\:raygui.c}
{\xe \v raygui.c\:ICON_246}
{\qr ICON_246{\bkmkstart AAAAAAADEQ}
{\bkmkend AAAAAAADEQ}
\cell }{\cell }{\row }
{\xe \v ICON_247\:raygui.c}
{\xe \v raygui.c\:ICON_247}
{\qr ICON_247{\bkmkstart AAAAAAADER}
{\bkmkend AAAAAAADER}
\cell }{\cell }{\row }
{\xe \v ICON_248\:raygui.c}
{\xe \v raygui.c\:ICON_248}
{\qr ICON_248{\bkmkstart AAAAAAADES}
{\bkmkend AAAAAAADES}
\cell }{\cell }{\row }
{\xe \v ICON_249\:raygui.c}
{\xe \v raygui.c\:ICON_249}
{\qr ICON_249{\bkmkstart AAAAAAADET}
{\bkmkend AAAAAAADET}
\cell }{\cell }{\row }
{\xe \v ICON_250\:raygui.c}
{\xe \v raygui.c\:ICON_250}
{\qr ICON_250{\bkmkstart AAAAAAADEU}
{\bkmkend AAAAAAADEU}
\cell }{\cell }{\row }
{\xe \v ICON_251\:raygui.c}
{\xe \v raygui.c\:ICON_251}
{\qr ICON_251{\bkmkstart AAAAAAADEV}
{\bkmkend AAAAAAADEV}
\cell }{\cell }{\row }
{\xe \v ICON_252\:raygui.c}
{\xe \v raygui.c\:ICON_252}
{\qr ICON_252{\bkmkstart AAAAAAADEW}
{\bkmkend AAAAAAADEW}
\cell }{\cell }{\row }
{\xe \v ICON_253\:raygui.c}
{\xe \v raygui.c\:ICON_253}
{\qr ICON_253{\bkmkstart AAAAAAADEX}
{\bkmkend AAAAAAADEX}
\cell }{\cell }{\row }
{\xe \v ICON_254\:raygui.c}
{\xe \v raygui.c\:ICON_254}
{\qr ICON_254{\bkmkstart AAAAAAADEY}
{\bkmkend AAAAAAADEY}
\cell }{\cell }{\row }
{\xe \v ICON_255\:raygui.c}
{\xe \v raygui.c\:ICON_255}
{\qr ICON_255{\bkmkstart AAAAAAADEZ}
{\bkmkend AAAAAAADEZ}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 564              \{\par
565     ICON_NONE                     = 0,\par
566     ICON_FOLDER_FILE_OPEN         = 1,\par
567     ICON_FILE_SAVE_CLASSIC        = 2,\par
568     ICON_FOLDER_OPEN              = 3,\par
569     ICON_FOLDER_SAVE              = 4,\par
570     ICON_FILE_OPEN                = 5,\par
571     ICON_FILE_SAVE                = 6,\par
572     ICON_FILE_EXPORT              = 7,\par
573     ICON_FILE_ADD                 = 8,\par
574     ICON_FILE_DELETE              = 9,\par
575     ICON_FILETYPE_TEXT            = 10,\par
576     ICON_FILETYPE_AUDIO           = 11,\par
577     ICON_FILETYPE_IMAGE           = 12,\par
578     ICON_FILETYPE_PLAY            = 13,\par
579     ICON_FILETYPE_VIDEO           = 14,\par
580     ICON_FILETYPE_INFO            = 15,\par
581     ICON_FILE_COPY                = 16,\par
582     ICON_FILE_CUT                 = 17,\par
583     ICON_FILE_PASTE               = 18,\par
584     ICON_CURSOR_HAND              = 19,\par
585     ICON_CURSOR_POINTER           = 20,\par
586     ICON_CURSOR_CLASSIC           = 21,\par
587     ICON_PENCIL                   = 22,\par
588     ICON_PENCIL_BIG               = 23,\par
589     ICON_BRUSH_CLASSIC            = 24,\par
590     ICON_BRUSH_PAINTER            = 25,\par
591     ICON_WATER_DROP               = 26,\par
592     ICON_COLOR_PICKER             = 27,\par
593     ICON_RUBBER                   = 28,\par
594     ICON_COLOR_BUCKET             = 29,\par
595     ICON_TEXT_T                   = 30,\par
596     ICON_TEXT_A                   = 31,\par
597     ICON_SCALE                    = 32,\par
598     ICON_RESIZE                   = 33,\par
599     ICON_FILTER_POINT             = 34,\par
600     ICON_FILTER_BILINEAR          = 35,\par
601     ICON_CROP                     = 36,\par
602     ICON_CROP_ALPHA               = 37,\par
603     ICON_SQUARE_TOGGLE            = 38,\par
604     ICON_SYMMETRY                 = 39,\par
605     ICON_SYMMETRY_HORIZONTAL      = 40,\par
606     ICON_SYMMETRY_VERTICAL        = 41,\par
607     ICON_LENS                     = 42,\par
608     ICON_LENS_BIG                 = 43,\par
609     ICON_EYE_ON                   = 44,\par
610     ICON_EYE_OFF                  = 45,\par
611     ICON_FILTER_TOP               = 46,\par
612     ICON_FILTER                   = 47,\par
613     ICON_TARGET_POINT             = 48,\par
614     ICON_TARGET_SMALL             = 49,\par
615     ICON_TARGET_BIG               = 50,\par
616     ICON_TARGET_MOVE              = 51,\par
617     ICON_CURSOR_MOVE              = 52,\par
618     ICON_CURSOR_SCALE             = 53,\par
619     ICON_CURSOR_SCALE_RIGHT       = 54,\par
620     ICON_CURSOR_SCALE_LEFT        = 55,\par
621     ICON_UNDO                     = 56,\par
622     ICON_REDO                     = 57,\par
623     ICON_REREDO                   = 58,\par
624     ICON_MUTATE                   = 59,\par
625     ICON_ROTATE                   = 60,\par
626     ICON_REPEAT                   = 61,\par
627     ICON_SHUFFLE                  = 62,\par
628     ICON_EMPTYBOX                 = 63,\par
629     ICON_TARGET                   = 64,\par
630     ICON_TARGET_SMALL_FILL        = 65,\par
631     ICON_TARGET_BIG_FILL          = 66,\par
632     ICON_TARGET_MOVE_FILL         = 67,\par
633     ICON_CURSOR_MOVE_FILL         = 68,\par
634     ICON_CURSOR_SCALE_FILL        = 69,\par
635     ICON_CURSOR_SCALE_RIGHT_FILL  = 70,\par
636     ICON_CURSOR_SCALE_LEFT_FILL   = 71,\par
637     ICON_UNDO_FILL                = 72,\par
638     ICON_REDO_FILL                = 73,\par
639     ICON_REREDO_FILL              = 74,\par
640     ICON_MUTATE_FILL              = 75,\par
641     ICON_ROTATE_FILL              = 76,\par
642     ICON_REPEAT_FILL              = 77,\par
643     ICON_SHUFFLE_FILL             = 78,\par
644     ICON_EMPTYBOX_SMALL           = 79,\par
645     ICON_BOX                      = 80,\par
646     ICON_BOX_TOP                  = 81,\par
647     ICON_BOX_TOP_RIGHT            = 82,\par
648     ICON_BOX_RIGHT                = 83,\par
649     ICON_BOX_BOTTOM_RIGHT         = 84,\par
650     ICON_BOX_BOTTOM               = 85,\par
651     ICON_BOX_BOTTOM_LEFT          = 86,\par
652     ICON_BOX_LEFT                 = 87,\par
653     ICON_BOX_TOP_LEFT             = 88,\par
654     ICON_BOX_CENTER               = 89,\par
655     ICON_BOX_CIRCLE_MASK          = 90,\par
656     ICON_POT                      = 91,\par
657     ICON_ALPHA_MULTIPLY           = 92,\par
658     ICON_ALPHA_CLEAR              = 93,\par
659     ICON_DITHERING                = 94,\par
660     ICON_MIPMAPS                  = 95,\par
661     ICON_BOX_GRID                 = 96,\par
662     ICON_GRID                     = 97,\par
663     ICON_BOX_CORNERS_SMALL        = 98,\par
664     ICON_BOX_CORNERS_BIG          = 99,\par
665     ICON_FOUR_BOXES               = 100,\par
666     ICON_GRID_FILL                = 101,\par
667     ICON_BOX_MULTISIZE            = 102,\par
668     ICON_ZOOM_SMALL               = 103,\par
669     ICON_ZOOM_MEDIUM              = 104,\par
670     ICON_ZOOM_BIG                 = 105,\par
671     ICON_ZOOM_ALL                 = 106,\par
672     ICON_ZOOM_CENTER              = 107,\par
673     ICON_BOX_DOTS_SMALL           = 108,\par
674     ICON_BOX_DOTS_BIG             = 109,\par
675     ICON_BOX_CONCENTRIC           = 110,\par
676     ICON_BOX_GRID_BIG             = 111,\par
677     ICON_OK_TICK                  = 112,\par
678     ICON_CROSS                    = 113,\par
679     ICON_ARROW_LEFT               = 114,\par
680     ICON_ARROW_RIGHT              = 115,\par
681     ICON_ARROW_DOWN               = 116,\par
682     ICON_ARROW_UP                 = 117,\par
683     ICON_ARROW_LEFT_FILL          = 118,\par
684     ICON_ARROW_RIGHT_FILL         = 119,\par
685     ICON_ARROW_DOWN_FILL          = 120,\par
686     ICON_ARROW_UP_FILL            = 121,\par
687     ICON_AUDIO                    = 122,\par
688     ICON_FX                       = 123,\par
689     ICON_WAVE                     = 124,\par
690     ICON_WAVE_SINUS               = 125,\par
691     ICON_WAVE_SQUARE              = 126,\par
692     ICON_WAVE_TRIANGULAR          = 127,\par
693     ICON_CROSS_SMALL              = 128,\par
694     ICON_PLAYER_PREVIOUS          = 129,\par
695     ICON_PLAYER_PLAY_BACK         = 130,\par
696     ICON_PLAYER_PLAY              = 131,\par
697     ICON_PLAYER_PAUSE             = 132,\par
698     ICON_PLAYER_STOP              = 133,\par
699     ICON_PLAYER_NEXT              = 134,\par
700     ICON_PLAYER_RECORD            = 135,\par
701     ICON_MAGNET                   = 136,\par
702     ICON_LOCK_CLOSE               = 137,\par
703     ICON_LOCK_OPEN                = 138,\par
704     ICON_CLOCK                    = 139,\par
705     ICON_TOOLS                    = 140,\par
706     ICON_GEAR                     = 141,\par
707     ICON_GEAR_BIG                 = 142,\par
708     ICON_BIN                      = 143,\par
709     ICON_HAND_POINTER             = 144,\par
710     ICON_LASER                    = 145,\par
711     ICON_COIN                     = 146,\par
712     ICON_EXPLOSION                = 147,\par
713     ICON_1UP                      = 148,\par
714     ICON_PLAYER                   = 149,\par
715     ICON_PLAYER_JUMP              = 150,\par
716     ICON_KEY                      = 151,\par
717     ICON_DEMON                    = 152,\par
718     ICON_TEXT_POPUP               = 153,\par
719     ICON_GEAR_EX                  = 154,\par
720     ICON_CRACK                    = 155,\par
721     ICON_CRACK_POINTS             = 156,\par
722     ICON_STAR                     = 157,\par
723     ICON_DOOR                     = 158,\par
724     ICON_EXIT                     = 159,\par
725     ICON_MODE_2D                  = 160,\par
726     ICON_MODE_3D                  = 161,\par
727     ICON_CUBE                     = 162,\par
728     ICON_CUBE_FACE_TOP            = 163,\par
729     ICON_CUBE_FACE_LEFT           = 164,\par
730     ICON_CUBE_FACE_FRONT          = 165,\par
731     ICON_CUBE_FACE_BOTTOM         = 166,\par
732     ICON_CUBE_FACE_RIGHT          = 167,\par
733     ICON_CUBE_FACE_BACK           = 168,\par
734     ICON_CAMERA                   = 169,\par
735     ICON_SPECIAL                  = 170,\par
736     ICON_LINK_NET                 = 171,\par
737     ICON_LINK_BOXES               = 172,\par
738     ICON_LINK_MULTI               = 173,\par
739     ICON_LINK                     = 174,\par
740     ICON_LINK_BROKE               = 175,\par
741     ICON_TEXT_NOTES               = 176,\par
742     ICON_NOTEBOOK                 = 177,\par
743     ICON_SUITCASE                 = 178,\par
744     ICON_SUITCASE_ZIP             = 179,\par
745     ICON_MAILBOX                  = 180,\par
746     ICON_MONITOR                  = 181,\par
747     ICON_PRINTER                  = 182,\par
748     ICON_PHOTO_CAMERA             = 183,\par
749     ICON_PHOTO_CAMERA_FLASH       = 184,\par
750     ICON_HOUSE                    = 185,\par
751     ICON_HEART                    = 186,\par
752     ICON_CORNER                   = 187,\par
753     ICON_VERTICAL_BARS            = 188,\par
754     ICON_VERTICAL_BARS_FILL       = 189,\par
755     ICON_LIFE_BARS                = 190,\par
756     ICON_INFO                     = 191,\par
757     ICON_CROSSLINE                = 192,\par
758     ICON_HELP                     = 193,\par
759     ICON_FILETYPE_ALPHA           = 194,\par
760     ICON_FILETYPE_HOME            = 195,\par
761     ICON_LAYERS_VISIBLE           = 196,\par
762     ICON_LAYERS                   = 197,\par
763     ICON_WINDOW                   = 198,\par
764     ICON_HIDPI                    = 199,\par
765     ICON_FILETYPE_BINARY          = 200,\par
766     ICON_HEX                      = 201,\par
767     ICON_SHIELD                   = 202,\par
768     ICON_FILE_NEW                 = 203,\par
769     ICON_FOLDER_ADD               = 204,\par
770     ICON_ALARM                    = 205,\par
771     ICON_206                      = 206,\par
772     ICON_207                      = 207,\par
773     ICON_208                      = 208,\par
774     ICON_209                      = 209,\par
775     ICON_210                      = 210,\par
776     ICON_211                      = 211,\par
777     ICON_212                      = 212,\par
778     ICON_213                      = 213,\par
779     ICON_214                      = 214,\par
780     ICON_215                      = 215,\par
781     ICON_216                      = 216,\par
782     ICON_217                      = 217,\par
783     ICON_218                      = 218,\par
784     ICON_219                      = 219,\par
785     ICON_220                      = 220,\par
786     ICON_221                      = 221,\par
787     ICON_222                      = 222,\par
788     ICON_223                      = 223,\par
789     ICON_224                      = 224,\par
790     ICON_225                      = 225,\par
791     ICON_226                      = 226,\par
792     ICON_227                      = 227,\par
793     ICON_228                      = 228,\par
794     ICON_229                      = 229,\par
795     ICON_230                      = 230,\par
796     ICON_231                      = 231,\par
797     ICON_232                      = 232,\par
798     ICON_233                      = 233,\par
799     ICON_234                      = 234,\par
800     ICON_235                      = 235,\par
801     ICON_236                      = 236,\par
802     ICON_237                      = 237,\par
803     ICON_238                      = 238,\par
804     ICON_239                      = 239,\par
805     ICON_240                      = 240,\par
806     ICON_241                      = 241,\par
807     ICON_242                      = 242,\par
808     ICON_243                      = 243,\par
809     ICON_244                      = 244,\par
810     ICON_245                      = 245,\par
811     ICON_246                      = 246,\par
812     ICON_247                      = 247,\par
813     ICON_248                      = 248,\par
814     ICON_249                      = 249,\par
815     ICON_250                      = 250,\par
816     ICON_251                      = 251,\par
817     ICON_252                      = 252,\par
818     ICON_253                      = 253,\par
819     ICON_254                      = 254,\par
820     ICON_255                      = 255,\par
821 \} GuiIconName;\par
}
}
{\xe \v GuiListViewProperty\:raygui.c}
{\xe \v raygui.c\:GuiListViewProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiListViewProperty}}}
\par
{\bkmkstart AAAAAAADFA}
{\bkmkend AAAAAAADFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v LIST_ITEMS_HEIGHT\:raygui.c}
{\xe \v raygui.c\:LIST_ITEMS_HEIGHT}
{\qr LIST_ITEMS_HEIGHT{\bkmkstart AAAAAAADFB}
{\bkmkend AAAAAAADFB}
\cell }{\cell }{\row }
{\xe \v LIST_ITEMS_SPACING\:raygui.c}
{\xe \v raygui.c\:LIST_ITEMS_SPACING}
{\qr LIST_ITEMS_SPACING{\bkmkstart AAAAAAADFC}
{\bkmkend AAAAAAADFC}
\cell }{\cell }{\row }
{\xe \v SCROLLBAR_WIDTH\:raygui.c}
{\xe \v raygui.c\:SCROLLBAR_WIDTH}
{\qr SCROLLBAR_WIDTH{\bkmkstart AAAAAAADFD}
{\bkmkend AAAAAAADFD}
\cell }{\cell }{\row }
{\xe \v SCROLLBAR_SIDE\:raygui.c}
{\xe \v raygui.c\:SCROLLBAR_SIDE}
{\qr SCROLLBAR_SIDE{\bkmkstart AAAAAAADFE}
{\bkmkend AAAAAAADFE}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 454              \{\par
455     LIST_ITEMS_HEIGHT = 16,     {\cf20 // ListView items height}\par
456     LIST_ITEMS_SPACING,         {\cf20 // ListView items separation}\par
457     SCROLLBAR_WIDTH,            {\cf20 // ListView scrollbar size (usually width)}\par
458     SCROLLBAR_SIDE,             {\cf20 // ListView scrollbar side (0-left, 1-right)}\par
459 \} GuiListViewProperty;\par
}
}
{\xe \v GuiProgressBarProperty\:raygui.c}
{\xe \v raygui.c\:GuiProgressBarProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiProgressBarProperty}}}
\par
{\bkmkstart AAAAAAADFF}
{\bkmkend AAAAAAADFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v PROGRESS_PADDING\:raygui.c}
{\xe \v raygui.c\:PROGRESS_PADDING}
{\qr PROGRESS_PADDING{\bkmkstart AAAAAAADFG}
{\bkmkend AAAAAAADFG}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 410              \{\par
411     PROGRESS_PADDING = 16,      {\cf20 // ProgressBar internal padding}\par
412 \} GuiProgressBarProperty;\par
}
}
{\xe \v GuiScrollBarProperty\:raygui.c}
{\xe \v raygui.c\:GuiScrollBarProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiScrollBarProperty}}}
\par
{\bkmkstart AAAAAAADFH}
{\bkmkend AAAAAAADFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ARROWS_SIZE\:raygui.c}
{\xe \v raygui.c\:ARROWS_SIZE}
{\qr ARROWS_SIZE{\bkmkstart AAAAAAADFI}
{\bkmkend AAAAAAADFI}
\cell }{\cell }{\row }
{\xe \v ARROWS_VISIBLE\:raygui.c}
{\xe \v raygui.c\:ARROWS_VISIBLE}
{\qr ARROWS_VISIBLE{\bkmkstart AAAAAAADFJ}
{\bkmkend AAAAAAADFJ}
\cell }{\cell }{\row }
{\xe \v SCROLL_SLIDER_PADDING\:raygui.c}
{\xe \v raygui.c\:SCROLL_SLIDER_PADDING}
{\qr SCROLL_SLIDER_PADDING{\bkmkstart AAAAAAADFK}
{\bkmkend AAAAAAADFK}
\cell }{\cell }{\row }
{\xe \v SCROLL_SLIDER_SIZE\:raygui.c}
{\xe \v raygui.c\:SCROLL_SLIDER_SIZE}
{\qr SCROLL_SLIDER_SIZE{\bkmkstart AAAAAAADFL}
{\bkmkend AAAAAAADFL}
\cell }{\cell }{\row }
{\xe \v SCROLL_PADDING\:raygui.c}
{\xe \v raygui.c\:SCROLL_PADDING}
{\qr SCROLL_PADDING{\bkmkstart AAAAAAADFM}
{\bkmkend AAAAAAADFM}
\cell }{\cell }{\row }
{\xe \v SCROLL_SPEED\:raygui.c}
{\xe \v raygui.c\:SCROLL_SPEED}
{\qr SCROLL_SPEED{\bkmkstart AAAAAAADFN}
{\bkmkend AAAAAAADFN}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 415              \{\par
416     ARROWS_SIZE = 16,\par
417     ARROWS_VISIBLE,\par
418     SCROLL_SLIDER_PADDING,      {\cf20 // (SLIDERBAR, SLIDER_PADDING)}\par
419     SCROLL_SLIDER_SIZE,\par
420     SCROLL_PADDING,\par
421     SCROLL_SPEED,\par
422 \} GuiScrollBarProperty;\par
}
}
{\xe \v GuiSliderProperty\:raygui.c}
{\xe \v raygui.c\:GuiSliderProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiSliderProperty}}}
\par
{\bkmkstart AAAAAAADFO}
{\bkmkend AAAAAAADFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v SLIDER_WIDTH\:raygui.c}
{\xe \v raygui.c\:SLIDER_WIDTH}
{\qr SLIDER_WIDTH{\bkmkstart AAAAAAADFP}
{\bkmkend AAAAAAADFP}
\cell }{\cell }{\row }
{\xe \v SLIDER_PADDING\:raygui.c}
{\xe \v raygui.c\:SLIDER_PADDING}
{\qr SLIDER_PADDING{\bkmkstart AAAAAAADFQ}
{\bkmkend AAAAAAADFQ}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 404              \{\par
405     SLIDER_WIDTH = 16,          {\cf20 // Slider size of internal bar}\par
406     SLIDER_PADDING              {\cf20 // Slider/SliderBar internal bar padding}\par
407 \} GuiSliderProperty;\par
}
}
{\xe \v GuiSpinnerProperty\:raygui.c}
{\xe \v raygui.c\:GuiSpinnerProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiSpinnerProperty}}}
\par
{\bkmkstart AAAAAAADFR}
{\bkmkend AAAAAAADFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v SPIN_BUTTON_WIDTH\:raygui.c}
{\xe \v raygui.c\:SPIN_BUTTON_WIDTH}
{\qr SPIN_BUTTON_WIDTH{\bkmkstart AAAAAAADFS}
{\bkmkend AAAAAAADFS}
\cell }{\cell }{\row }
{\xe \v SPIN_BUTTON_SPACING\:raygui.c}
{\xe \v raygui.c\:SPIN_BUTTON_SPACING}
{\qr SPIN_BUTTON_SPACING{\bkmkstart AAAAAAADFT}
{\bkmkend AAAAAAADFT}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 448              \{\par
449     SPIN_BUTTON_WIDTH = 16,     {\cf20 // Spinner left/right buttons width}\par
450     SPIN_BUTTON_SPACING,        {\cf20 // Spinner buttons separation}\par
451 \} GuiSpinnerProperty;\par
}
}
{\xe \v GuiState\:raygui.c}
{\xe \v raygui.c\:GuiState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiState}}}
\par
{\bkmkstart AAAAAAADFU}
{\bkmkend AAAAAAADFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v STATE_NORMAL\:raygui.c}
{\xe \v raygui.c\:STATE_NORMAL}
{\qr STATE_NORMAL{\bkmkstart AAAAAAADFV}
{\bkmkend AAAAAAADFV}
\cell }{\cell }{\row }
{\xe \v STATE_FOCUSED\:raygui.c}
{\xe \v raygui.c\:STATE_FOCUSED}
{\qr STATE_FOCUSED{\bkmkstart AAAAAAADFW}
{\bkmkend AAAAAAADFW}
\cell }{\cell }{\row }
{\xe \v STATE_PRESSED\:raygui.c}
{\xe \v raygui.c\:STATE_PRESSED}
{\qr STATE_PRESSED{\bkmkstart AAAAAAADFX}
{\bkmkend AAAAAAADFX}
\cell }{\cell }{\row }
{\xe \v STATE_DISABLED\:raygui.c}
{\xe \v raygui.c\:STATE_DISABLED}
{\qr STATE_DISABLED{\bkmkstart AAAAAAADFY}
{\bkmkend AAAAAAADFY}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 322              \{\par
323     STATE_NORMAL = 0,\par
324     STATE_FOCUSED,\par
325     STATE_PRESSED,\par
326     STATE_DISABLED,\par
327 \} GuiState;\par
}
}
{\xe \v GuiTextAlignment\:raygui.c}
{\xe \v raygui.c\:GuiTextAlignment}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiTextAlignment}}}
\par
{\bkmkstart AAAAAAADFZ}
{\bkmkend AAAAAAADFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v TEXT_ALIGN_LEFT\:raygui.c}
{\xe \v raygui.c\:TEXT_ALIGN_LEFT}
{\qr TEXT_ALIGN_LEFT{\bkmkstart AAAAAAADGA}
{\bkmkend AAAAAAADGA}
\cell }{\cell }{\row }
{\xe \v TEXT_ALIGN_CENTER\:raygui.c}
{\xe \v raygui.c\:TEXT_ALIGN_CENTER}
{\qr TEXT_ALIGN_CENTER{\bkmkstart AAAAAAADGB}
{\bkmkend AAAAAAADGB}
\cell }{\cell }{\row }
{\xe \v TEXT_ALIGN_RIGHT\:raygui.c}
{\xe \v raygui.c\:TEXT_ALIGN_RIGHT}
{\qr TEXT_ALIGN_RIGHT{\bkmkstart AAAAAAADGC}
{\bkmkend AAAAAAADGC}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 330              \{\par
331     TEXT_ALIGN_LEFT = 0,\par
332     TEXT_ALIGN_CENTER,\par
333     TEXT_ALIGN_RIGHT,\par
334 \} GuiTextAlignment;\par
}
}
{\xe \v GuiTextBoxProperty\:raygui.c}
{\xe \v raygui.c\:GuiTextBoxProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiTextBoxProperty}}}
\par
{\bkmkstart AAAAAAADGD}
{\bkmkend AAAAAAADGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v TEXT_INNER_PADDING\:raygui.c}
{\xe \v raygui.c\:TEXT_INNER_PADDING}
{\qr TEXT_INNER_PADDING{\bkmkstart AAAAAAADGE}
{\bkmkend AAAAAAADGE}
\cell }{\cell }{\row }
{\xe \v TEXT_LINES_SPACING\:raygui.c}
{\xe \v raygui.c\:TEXT_LINES_SPACING}
{\qr TEXT_LINES_SPACING{\bkmkstart AAAAAAADGF}
{\bkmkend AAAAAAADGF}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 442              \{\par
443     TEXT_INNER_PADDING = 16,    {\cf20 // TextBox/TextBoxMulti/ValueBox/Spinner inner text padding}\par
444     TEXT_LINES_SPACING,         {\cf20 // TextBoxMulti lines separation}\par
445 \} GuiTextBoxProperty;\par
}
}
{\xe \v GuiToggleProperty\:raygui.c}
{\xe \v raygui.c\:GuiToggleProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GuiToggleProperty}}}
\par
{\bkmkstart AAAAAAADGG}
{\bkmkend AAAAAAADGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v GROUP_PADDING\:raygui.c}
{\xe \v raygui.c\:GROUP_PADDING}
{\qr GROUP_PADDING{\bkmkstart AAAAAAADGH}
{\bkmkend AAAAAAADGH}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 399              \{\par
400     GROUP_PADDING = 16,         {\cf20 // ToggleGroup separation between toggles}\par
401 \} GuiToggleProperty;\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v GuiButton\:raygui.c}
{\xe \v raygui.c\:GuiButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b bool} GuiButton ({\b Rectangle}  {\i bounds}, const char *  {\i text})}}
\par
{\bkmkstart AAAAAAADGI}
{\bkmkend AAAAAAADGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiCheckBox\:raygui.c}
{\xe \v raygui.c\:GuiCheckBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b bool} GuiCheckBox ({\b Rectangle}  {\i bounds}, const char *  {\i text}, {\b bool}  {\i checked})}}
\par
{\bkmkstart AAAAAAADGJ}
{\bkmkend AAAAAAADGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiCheckIconPixel\:raygui.c}
{\xe \v raygui.c\:GuiCheckIconPixel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b bool} GuiCheckIconPixel (int  {\i iconId}, int  {\i x}, int  {\i y})}}
\par
{\bkmkstart AAAAAAADGK}
{\bkmkend AAAAAAADGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiClearIconPixel\:raygui.c}
{\xe \v raygui.c\:GuiClearIconPixel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiClearIconPixel (int  {\i iconId}, int  {\i x}, int  {\i y})}}
\par
{\bkmkstart AAAAAAADGL}
{\bkmkend AAAAAAADGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiColorBarAlpha\:raygui.c}
{\xe \v raygui.c\:GuiColorBarAlpha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} float GuiColorBarAlpha ({\b Rectangle}  {\i bounds}, const char *  {\i text}, float  {\i alpha})}}
\par
{\bkmkstart AAAAAAADGM}
{\bkmkend AAAAAAADGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiColorBarHue\:raygui.c}
{\xe \v raygui.c\:GuiColorBarHue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} float GuiColorBarHue ({\b Rectangle}  {\i bounds}, const char *  {\i text}, float  {\i value})}}
\par
{\bkmkstart AAAAAAADGN}
{\bkmkend AAAAAAADGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiColorPanel\:raygui.c}
{\xe \v raygui.c\:GuiColorPanel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b Color} GuiColorPanel ({\b Rectangle}  {\i bounds}, const char *  {\i text}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAADGO}
{\bkmkend AAAAAAADGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiColorPicker\:raygui.c}
{\xe \v raygui.c\:GuiColorPicker}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b Color} GuiColorPicker ({\b Rectangle}  {\i bounds}, const char *  {\i text}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiComboBox\:raygui.c}
{\xe \v raygui.c\:GuiComboBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} int GuiComboBox ({\b Rectangle}  {\i bounds}, const char *  {\i text}, int  {\i active})}}
\par
{\bkmkstart AAAAAAADGQ}
{\bkmkend AAAAAAADGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiDisable\:raygui.c}
{\xe \v raygui.c\:GuiDisable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiDisable (void )}}
\par
{\bkmkstart AAAAAAADGR}
{\bkmkend AAAAAAADGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiDrawIcon\:raygui.c}
{\xe \v raygui.c\:GuiDrawIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiDrawIcon (int  {\i iconId}, int  {\i posX}, int  {\i posY}, int  {\i pixelSize}, {\b Color}  {\i color})}}
\par
{\bkmkstart AAAAAAADGS}
{\bkmkend AAAAAAADGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiDropdownBox\:raygui.c}
{\xe \v raygui.c\:GuiDropdownBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b bool} GuiDropdownBox ({\b Rectangle}  {\i bounds}, const char *  {\i text}, int *  {\i active}, {\b bool}  {\i editMode})}}
\par
{\bkmkstart AAAAAAADGT}
{\bkmkend AAAAAAADGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiDummyRec\:raygui.c}
{\xe \v raygui.c\:GuiDummyRec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiDummyRec ({\b Rectangle}  {\i bounds}, const char *  {\i text})}}
\par
{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiEnable\:raygui.c}
{\xe \v raygui.c\:GuiEnable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiEnable (void )}}
\par
{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiFade\:raygui.c}
{\xe \v raygui.c\:GuiFade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiFade (float  {\i alpha})}}
\par
{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiGetFont\:raygui.c}
{\xe \v raygui.c\:GuiGetFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b Font} GuiGetFont (void )}}
\par
{\bkmkstart AAAAAAADGX}
{\bkmkend AAAAAAADGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiGetIconData\:raygui.c}
{\xe \v raygui.c\:GuiGetIconData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} unsigned int * GuiGetIconData (int  {\i iconId})}}
\par
{\bkmkstart AAAAAAADGY}
{\bkmkend AAAAAAADGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiGetIcons\:raygui.c}
{\xe \v raygui.c\:GuiGetIcons}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} unsigned int * GuiGetIcons (void )}}
\par
{\bkmkstart AAAAAAADGZ}
{\bkmkend AAAAAAADGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiGetState\:raygui.c}
{\xe \v raygui.c\:GuiGetState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} int GuiGetState (void )}}
\par
{\bkmkstart AAAAAAADHA}
{\bkmkend AAAAAAADHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiGetStyle\:raygui.c}
{\xe \v raygui.c\:GuiGetStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} int GuiGetStyle (int  {\i control}, int  {\i property})}}
\par
{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiGrid\:raygui.c}
{\xe \v raygui.c\:GuiGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b Vector2} GuiGrid ({\b Rectangle}  {\i bounds}, const char *  {\i text}, float  {\i spacing}, int  {\i subdivs})}}
\par
{\bkmkstart AAAAAAADHC}
{\bkmkend AAAAAAADHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiGroupBox\:raygui.c}
{\xe \v raygui.c\:GuiGroupBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiGroupBox ({\b Rectangle}  {\i bounds}, const char *  {\i text})}}
\par
{\bkmkstart AAAAAAADHD}
{\bkmkend AAAAAAADHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiIconText\:raygui.c}
{\xe \v raygui.c\:GuiIconText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} const char * GuiIconText (int  {\i iconId}, const char *  {\i text})}}
\par
{\bkmkstart AAAAAAADHE}
{\bkmkend AAAAAAADHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiIsLocked\:raygui.c}
{\xe \v raygui.c\:GuiIsLocked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b bool} GuiIsLocked (void )}}
\par
{\bkmkstart AAAAAAADHF}
{\bkmkend AAAAAAADHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiLabel\:raygui.c}
{\xe \v raygui.c\:GuiLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiLabel ({\b Rectangle}  {\i bounds}, const char *  {\i text})}}
\par
{\bkmkstart AAAAAAADHG}
{\bkmkend AAAAAAADHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiLabelButton\:raygui.c}
{\xe \v raygui.c\:GuiLabelButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b bool} GuiLabelButton ({\b Rectangle}  {\i bounds}, const char *  {\i text})}}
\par
{\bkmkstart AAAAAAADHH}
{\bkmkend AAAAAAADHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiLine\:raygui.c}
{\xe \v raygui.c\:GuiLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiLine ({\b Rectangle}  {\i bounds}, const char *  {\i text})}}
\par
{\bkmkstart AAAAAAADHI}
{\bkmkend AAAAAAADHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiListView\:raygui.c}
{\xe \v raygui.c\:GuiListView}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} int GuiListView ({\b Rectangle}  {\i bounds}, const char *  {\i text}, int *  {\i scrollIndex}, int  {\i active})}}
\par
{\bkmkstart AAAAAAADHJ}
{\bkmkend AAAAAAADHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiListViewEx\:raygui.c}
{\xe \v raygui.c\:GuiListViewEx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} int GuiListViewEx ({\b Rectangle}  {\i bounds}, const char **  {\i text}, int  {\i count}, int *  {\i focus}, int *  {\i scrollIndex}, int  {\i active})}}
\par
{\bkmkstart AAAAAAADHK}
{\bkmkend AAAAAAADHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiLoadStyle\:raygui.c}
{\xe \v raygui.c\:GuiLoadStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiLoadStyle (const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAADHL}
{\bkmkend AAAAAAADHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiLoadStyleDefault\:raygui.c}
{\xe \v raygui.c\:GuiLoadStyleDefault}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiLoadStyleDefault (void )}}
\par
{\bkmkstart AAAAAAADHM}
{\bkmkend AAAAAAADHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiLock\:raygui.c}
{\xe \v raygui.c\:GuiLock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiLock (void )}}
\par
{\bkmkstart AAAAAAADHN}
{\bkmkend AAAAAAADHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiMessageBox\:raygui.c}
{\xe \v raygui.c\:GuiMessageBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} int GuiMessageBox ({\b Rectangle}  {\i bounds}, const char *  {\i title}, const char *  {\i message}, const char *  {\i buttons})}}
\par
{\bkmkstart AAAAAAADHO}
{\bkmkend AAAAAAADHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiPanel\:raygui.c}
{\xe \v raygui.c\:GuiPanel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiPanel ({\b Rectangle}  {\i bounds}, const char *  {\i text})}}
\par
{\bkmkstart AAAAAAADHP}
{\bkmkend AAAAAAADHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiProgressBar\:raygui.c}
{\xe \v raygui.c\:GuiProgressBar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} float GuiProgressBar ({\b Rectangle}  {\i bounds}, const char *  {\i textLeft}, const char *  {\i textRight}, float  {\i value}, float  {\i minValue}, float  {\i maxValue})}}
\par
{\bkmkstart AAAAAAADHQ}
{\bkmkend AAAAAAADHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiScrollPanel\:raygui.c}
{\xe \v raygui.c\:GuiScrollPanel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b Rectangle} GuiScrollPanel ({\b Rectangle}  {\i bounds}, const char *  {\i text}, {\b Rectangle}  {\i content}, {\b Vector2} *  {\i scroll})}}
\par
{\bkmkstart AAAAAAADHR}
{\bkmkend AAAAAAADHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiSetFont\:raygui.c}
{\xe \v raygui.c\:GuiSetFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiSetFont ({\b Font}  {\i font})}}
\par
{\bkmkstart AAAAAAADHS}
{\bkmkend AAAAAAADHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiSetIconData\:raygui.c}
{\xe \v raygui.c\:GuiSetIconData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiSetIconData (int  {\i iconId}, unsigned int *  {\i data})}}
\par
{\bkmkstart AAAAAAADHT}
{\bkmkend AAAAAAADHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiSetIconPixel\:raygui.c}
{\xe \v raygui.c\:GuiSetIconPixel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiSetIconPixel (int  {\i iconId}, int  {\i x}, int  {\i y})}}
\par
{\bkmkstart AAAAAAADHU}
{\bkmkend AAAAAAADHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiSetIconScale\:raygui.c}
{\xe \v raygui.c\:GuiSetIconScale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiSetIconScale (unsigned int  {\i scale})}}
\par
{\bkmkstart AAAAAAADHV}
{\bkmkend AAAAAAADHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiSetState\:raygui.c}
{\xe \v raygui.c\:GuiSetState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiSetState (int  {\i state})}}
\par
{\bkmkstart AAAAAAADHW}
{\bkmkend AAAAAAADHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiSetStyle\:raygui.c}
{\xe \v raygui.c\:GuiSetStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiSetStyle (int  {\i control}, int  {\i property}, int  {\i value})}}
\par
{\bkmkstart AAAAAAADHX}
{\bkmkend AAAAAAADHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiSlider\:raygui.c}
{\xe \v raygui.c\:GuiSlider}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} float GuiSlider ({\b Rectangle}  {\i bounds}, const char *  {\i textLeft}, const char *  {\i textRight}, float  {\i value}, float  {\i minValue}, float  {\i maxValue})}}
\par
{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiSliderBar\:raygui.c}
{\xe \v raygui.c\:GuiSliderBar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} float GuiSliderBar ({\b Rectangle}  {\i bounds}, const char *  {\i textLeft}, const char *  {\i textRight}, float  {\i value}, float  {\i minValue}, float  {\i maxValue})}}
\par
{\bkmkstart AAAAAAADHZ}
{\bkmkend AAAAAAADHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiSpinner\:raygui.c}
{\xe \v raygui.c\:GuiSpinner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b bool} GuiSpinner ({\b Rectangle}  {\i bounds}, const char *  {\i text}, int *  {\i value}, int  {\i minValue}, int  {\i maxValue}, {\b bool}  {\i editMode})}}
\par
{\bkmkstart AAAAAAADIA}
{\bkmkend AAAAAAADIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiStatusBar\:raygui.c}
{\xe \v raygui.c\:GuiStatusBar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiStatusBar ({\b Rectangle}  {\i bounds}, const char *  {\i text})}}
\par
{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiTextBox\:raygui.c}
{\xe \v raygui.c\:GuiTextBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b bool} GuiTextBox ({\b Rectangle}  {\i bounds}, char *  {\i text}, int  {\i textSize}, {\b bool}  {\i editMode})}}
\par
{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiTextBoxMulti\:raygui.c}
{\xe \v raygui.c\:GuiTextBoxMulti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b bool} GuiTextBoxMulti ({\b Rectangle}  {\i bounds}, char *  {\i text}, int  {\i textSize}, {\b bool}  {\i editMode})}}
\par
{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiTextInputBox\:raygui.c}
{\xe \v raygui.c\:GuiTextInputBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} int GuiTextInputBox ({\b Rectangle}  {\i bounds}, const char *  {\i title}, const char *  {\i message}, const char *  {\i buttons}, char *  {\i text}, int  {\i textMaxSize}, int *  {\i secretViewActive})}}
\par
{\bkmkstart AAAAAAADIE}
{\bkmkend AAAAAAADIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiToggle\:raygui.c}
{\xe \v raygui.c\:GuiToggle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b bool} GuiToggle ({\b Rectangle}  {\i bounds}, const char *  {\i text}, {\b bool}  {\i active})}}
\par
{\bkmkstart AAAAAAADIF}
{\bkmkend AAAAAAADIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiToggleGroup\:raygui.c}
{\xe \v raygui.c\:GuiToggleGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} int GuiToggleGroup ({\b Rectangle}  {\i bounds}, const char *  {\i text}, int  {\i active})}}
\par
{\bkmkstart AAAAAAADIG}
{\bkmkend AAAAAAADIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiUnlock\:raygui.c}
{\xe \v raygui.c\:GuiUnlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} void GuiUnlock (void )}}
\par
{\bkmkstart AAAAAAADIH}
{\bkmkend AAAAAAADIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiValueBox\:raygui.c}
{\xe \v raygui.c\:GuiValueBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b bool} GuiValueBox ({\b Rectangle}  {\i bounds}, const char *  {\i text}, int *  {\i value}, int  {\i minValue}, int  {\i maxValue}, {\b bool}  {\i editMode})}}
\par
{\bkmkstart AAAAAAADII}
{\bkmkend AAAAAAADII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GuiWindowBox\:raygui.c}
{\xe \v raygui.c\:GuiWindowBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RAYGUIAPI} {\b bool} GuiWindowBox ({\b Rectangle}  {\i bounds}, const char *  {\i title})}}
\par
{\bkmkstart AAAAAAADIJ}
{\bkmkend AAAAAAADIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/Battleship.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/Battleship.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/Battleship.cpp}
{\bkmkstart AAAAAAADIK}
{\bkmkend AAAAAAADIK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include "Battleship.hpp"}\par
{\f2 #include "Troop.hpp"}\par
{\f2 #include "Point.hpp"}\par
{\f2 #include "AssetsPaths.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/Board.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/Board.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/Board.cpp}
{\bkmkstart AAAAAAADIL}
{\bkmkend AAAAAAADIL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include <algorithm>}\par
{\f2 #include <stdexcept>}\par
{\f2 #include "Board.hpp"}\par
{\f2 #include "Position.hpp"}\par
{\f2 #include "Constants.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/Crusier.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/Crusier.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/Crusier.cpp}
{\bkmkstart AAAAAAADIM}
{\bkmkend AAAAAAADIM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include "Crusier.hpp"}\par
{\f2 #include "Troop.hpp"}\par
{\f2 #include "Point.hpp"}\par
{\f2 #include "AssetsPaths.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/Point.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/Point.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/Point.cpp}
{\bkmkstart AAAAAAADIN}
{\bkmkend AAAAAAADIN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Point.hpp"}\par
{\f2 #include <stdexcept>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/Position.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/Position.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/Position.cpp}
{\bkmkstart AAAAAAADIO}
{\bkmkend AAAAAAADIO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdexcept>}\par
{\f2 #include "Position.hpp"}\par
{\f2 #include "Troop.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/Submarine.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/Submarine.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/Submarine.cpp}
{\bkmkstart AAAAAAADIP}
{\bkmkend AAAAAAADIP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <map>}\par
{\f2 #include "Submarine.hpp"}\par
{\f2 #include "Troop.hpp"}\par
{\f2 #include "Point.hpp"}\par
{\f2 #include "AssetsPaths.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/Troop.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/Troop.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/board/Troop.cpp}
{\bkmkstart AAAAAAADIQ}
{\bkmkend AAAAAAADIQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdexcept>}\par
{\f2 #include <sstream>}\par
{\f2 #include "Troop.hpp"}\par
{\f2 #include "Point.hpp"}\par
{\f2 #include "Constants.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/exceptions/CustomException.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/exceptions/CustomException.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/exceptions/CustomException.cpp}
{\bkmkstart AAAAAAADIR}
{\bkmkend AAAAAAADIR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <stdexcept>}\par
{\f2 #include "CustomException.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/exceptions/InvalidPositionException.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/exceptions/InvalidPositionException.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/exceptions/InvalidPositionException.cpp}
{\bkmkstart AAAAAAADIS}
{\bkmkend AAAAAAADIS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include "InvalidPositionException.hpp"}\par
{\f2 #include "CustomException.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/fileHandler/FileHandler.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/fileHandler/FileHandler.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/fileHandler/FileHandler.cpp}
{\bkmkstart AAAAAAADIT}
{\bkmkend AAAAAAADIT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <fstream>}\par
{\f2 #include <string>}\par
{\f2 #include <iostream>}\par
{\f2 #include <stdexcept>}\par
{\f2 #include "FileHandler.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/fileHandler/TxtReader.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/fileHandler/TxtReader.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/fileHandler/TxtReader.cpp}
{\bkmkstart AAAAAAADIU}
{\bkmkend AAAAAAADIU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include <sstream>}\par
{\f2 #include <algorithm>}\par
{\f2 #include "TxtReader.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/fileHandler/TxtWriter.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/fileHandler/TxtWriter.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/fileHandler/TxtWriter.cpp}
{\bkmkstart AAAAAAADIV}
{\bkmkend AAAAAAADIV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <sstream>}\par
{\f2 #include <algorithm>}\par
{\f2 #include "TxtWriter.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/game/GameManager.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/game/GameManager.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/game/GameManager.cpp}
{\bkmkstart AAAAAAADIW}
{\bkmkend AAAAAAADIW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include "GameManager.hpp"}\par
{\f2 #include "PositioningScreen.hpp"}\par
{\f2 #include "Screen.hpp"}\par
{\f2 #include "ScreenManager.hpp"}\par
{\f2 #include "GameScreen.hpp"}\par
{\f2 #include "EndGameScreen.hpp"}\par
{\f2 #include "Match.hpp"}\par
{\f2 #include "Board.hpp"}\par
{\f2 #include "GameParameters.hpp"}\par
{\f2 #include "TxtWriter.hpp"}\par
{\f2 #include "MatchResults.hpp"}\par
{\f2 #include "Constants.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/game/GameParameters.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/game/GameParameters.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/game/GameParameters.cpp}
{\bkmkstart AAAAAAADIX}
{\bkmkend AAAAAAADIX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "GameParameters.hpp"}\par
{\f2 #include <stdexcept>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/match/Match.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/match/Match.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/match/Match.cpp}
{\bkmkstart AAAAAAADIY}
{\bkmkend AAAAAAADIY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <ctime>}\par
{\f2 #include <sstream>}\par
{\f2 #include <iomanip>}\par
{\f2 #include "Match.hpp"}\par
{\f2 #include "GameManager.hpp"}\par
{\f2 #include "Player.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/match/MatchResults.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/match/MatchResults.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/match/MatchResults.cpp}
{\bkmkstart AAAAAAADIZ}
{\bkmkend AAAAAAADIZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <stdexcept>}\par
{\f2 #include "MatchResults.hpp"}\par
{\f2 #include "Score.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/match/Player.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/match/Player.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/match/Player.cpp}
{\bkmkstart AAAAAAADJA}
{\bkmkend AAAAAAADJA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <memory>}\par
{\f2 #include <stdexcept>}\par
{\f2 #include "Player.hpp"}\par
{\f2 #include "Board.hpp"}\par
{\f2 #include "Score.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/match/Score.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/match/Score.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/match/Score.cpp}
{\bkmkstart AAAAAAADJB}
{\bkmkend AAAAAAADJB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Score.hpp"}\par
{\f2 #include <stdexcept>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/utils/ScoreFormatter.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/utils/ScoreFormatter.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/utils/ScoreFormatter.cpp}
{\bkmkstart AAAAAAADJC}
{\bkmkend AAAAAAADJC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <sstream>}\par
{\f2 #include "ScoreFormatter.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/utils/StyleFunctions.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/utils/StyleFunctions.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/logic/utils/StyleFunctions.cpp}
{\bkmkstart AAAAAAADJD}
{\bkmkend AAAAAAADJD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "StyleFunctions.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b percentOf} (const float percentage, const float reference)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Simulate the % unity in CSS. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v percentOf\:StyleFunctions.cpp}
{\xe \v StyleFunctions.cpp\:percentOf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float percentOf (const float  {\i percentage}, const float  {\i reference})}}
\par
{\bkmkstart AAAAAAADJE}
{\bkmkend AAAAAAADJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Simulate the % unity in CSS. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i percentage} \cell }{is the amount of percent of the reference. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i reference} \cell }{is the reference of the percentage.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
x percent of the reference, being x the percentage. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 3                                                                \{\par
4     {\cf19 return} (percentage * reference) / 100;\par
5 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/main.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/main.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/main.cpp}
{\bkmkstart AAAAAAADJF}
{\bkmkend AAAAAAADJF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "TitleScreen.hpp"}\par
{\f2 #include "ScreenManager.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v main\:main.cpp}
{\xe \v main.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ()}}
\par
{\bkmkstart AAAAAAADJG}
{\bkmkend AAAAAAADJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 7            \{\par
8     Screens::ScreenManager::initializeWindow();\par
9 \par
10     std::shared_ptr<Screens::Screen> screen({\cf17 new} Screens::TitleScreen());\par
11     Screens::ScreenManager::getScreenManager()->loadScreen(screen);\par
12 \par
13     {\cf19 while}(!WindowShouldClose()) \{\par
14         Screens::ScreenManager::getScreenManager()->renderScreen();\par
15     \}\par
16 \par
17     {\cf19 return} 0;\par
18 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/button/Button.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/button/Button.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/button/Button.cpp}
{\bkmkstart AAAAAAADJH}
{\bkmkend AAAAAAADJH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "raylib.h"}\par
{\f2 #include "Button.hpp"}\par
{\f2 #include "Component.hpp"}\par
{\f2 #include "Colors.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/button/ButtonIcon.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/button/ButtonIcon.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/button/ButtonIcon.cpp}
{\bkmkstart AAAAAAADJI}
{\bkmkend AAAAAAADJI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "ButtonIcon.hpp"}\par
{\f2 #include "Button.hpp"}\par
{\f2 #include "Image.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/button/ButtonText.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/button/ButtonText.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/button/ButtonText.cpp}
{\bkmkstart AAAAAAADJJ}
{\bkmkend AAAAAAADJJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include <string>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "ButtonText.hpp"}\par
{\f2 #include "Component.hpp"}\par
{\f2 #include "Text.hpp"}\par
{\f2 #include "Colors.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/button/ButtonTextIcon.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/button/ButtonTextIcon.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/button/ButtonTextIcon.cpp}
{\bkmkstart AAAAAAADJK}
{\bkmkend AAAAAAADJK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <string>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "ButtonTextIcon.hpp"}\par
{\f2 #include "Button.hpp"}\par
{\f2 #include "Screen.hpp"}\par
{\f2 #include "TextIcon.hpp"}\par
{\f2 #include "StyleFunctions.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/component/Component.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/component/Component.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/component/Component.cpp}
{\bkmkstart AAAAAAADJL}
{\bkmkend AAAAAAADJL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Component.hpp"}\par
{\f2 #include "raylib.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/component/IClickable.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/component/IClickable.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/component/IClickable.cpp}
{\bkmkstart AAAAAAADJM}
{\bkmkend AAAAAAADJM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "IClickable.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/component/ResizableComponent.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/component/ResizableComponent.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/component/ResizableComponent.cpp}
{\bkmkstart AAAAAAADJN}
{\bkmkend AAAAAAADJN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "ResizableComponent.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/image/Image.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/image/Image.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/image/Image.cpp}
{\bkmkstart AAAAAAADJO}
{\bkmkend AAAAAAADJO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "AssetsLoader.hpp"}\par
{\f2 #include "Image.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/text/Text.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/text/Text.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/text/Text.cpp}
{\bkmkstart AAAAAAADJP}
{\bkmkend AAAAAAADJP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "AssetsLoader.hpp"}\par
{\f2 #include "Text.hpp"}\par
{\f2 #include "Screen.hpp"}\par
{\f2 #include "StyleFunctions.hpp"}\par
{\f2 #include "AssetsPaths.hpp"}\par
{\f2 #include "Colors.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/text/TextIcon.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/text/TextIcon.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/text/TextIcon.cpp}
{\bkmkstart AAAAAAADJQ}
{\bkmkend AAAAAAADJQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "TextIcon.hpp"}\par
{\f2 #include "Text.hpp"}\par
{\f2 #include "Image.hpp"}\par
{\f2 #include "Screen.hpp"}\par
{\f2 #include "StyleFunctions.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/view/View.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/view/View.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/components/view/View.cpp}
{\bkmkstart AAAAAAADJR}
{\bkmkend AAAAAAADJR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "View.hpp"}\par
{\f2 #include "raylib.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/endGame/EndGameScoreDisplay.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/endGame/EndGameScoreDisplay.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/endGame/EndGameScoreDisplay.cpp}
{\bkmkstart AAAAAAADJS}
{\bkmkend AAAAAAADJS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include <memory>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "EndGameScoreDisplay.hpp"}\par
{\f2 #include "Screen.hpp"}\par
{\f2 #include "TextIcon.hpp"}\par
{\f2 #include "Score.hpp"}\par
{\f2 #include "StyleFunctions.hpp"}\par
{\f2 #include "ScoreFormatter.hpp"}\par
{\f2 #include "AssetsPaths.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/endGame/EndGameScreen.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/endGame/EndGameScreen.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/endGame/EndGameScreen.cpp}
{\bkmkstart AAAAAAADJT}
{\bkmkend AAAAAAADJT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <iostream>}\par
{\f2 #include <memory>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "EndGameScreen.hpp"}\par
{\f2 #include "Screen.hpp"}\par
{\f2 #include "TitleScreen.hpp"}\par
{\f2 #include "ScreenManager.hpp"}\par
{\f2 #include "Text.hpp"}\par
{\f2 #include "Image.hpp"}\par
{\f2 #include "ButtonText.hpp"}\par
{\f2 #include "StyleFunctions.hpp"}\par
{\f2 #include "ScoreFormatter.hpp"}\par
{\f2 #include "Colors.hpp"}\par
{\f2 #include "AssetsPaths.hpp"}\par
{\f2 #include "Player.hpp"}\par
{\f2 #include "EndGameScoreDisplay.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/game/GameBoardDisplay.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/game/GameBoardDisplay.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/game/GameBoardDisplay.cpp}
{\bkmkstart AAAAAAADJU}
{\bkmkend AAAAAAADJU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include <vector>}\par
{\f2 #include "GameBoardDisplay.hpp"}\par
{\f2 #include "BoardDisplay.hpp"}\par
{\f2 #include "PositionDisplay.hpp"}\par
{\f2 #include "GamePositionDisplay.hpp"}\par
{\f2 #include "Point.hpp"}\par
{\f2 #include "Troop.hpp"}\par
{\f2 #include "Board.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/game/GamePositionDisplay.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/game/GamePositionDisplay.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/game/GamePositionDisplay.cpp}
{\bkmkstart AAAAAAADJV}
{\bkmkend AAAAAAADJV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include "GamePositionDisplay.hpp"}\par
{\f2 #include "Image.hpp"}\par
{\f2 #include "Screen.hpp"}\par
{\f2 #include "PositionDisplay.hpp"}\par
{\f2 #include "Colors.hpp"}\par
{\f2 #include "AssetsPaths.hpp"}\par
{\f2 #include "StyleFunctions.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/game/GameScoreDisplay.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/game/GameScoreDisplay.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/game/GameScoreDisplay.cpp}
{\bkmkstart AAAAAAADJW}
{\bkmkend AAAAAAADJW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include <memory>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "GameScoreDisplay.hpp"}\par
{\f2 #include "Screen.hpp"}\par
{\f2 #include "TextIcon.hpp"}\par
{\f2 #include "Score.hpp"}\par
{\f2 #include "StyleFunctions.hpp"}\par
{\f2 #include "ScoreFormatter.hpp"}\par
{\f2 #include "AssetsPaths.hpp"}\par
{\f2 #include "Colors.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b LABEL_NAVIOS_DESTRUIDOS} = "Navios Destruidos:"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b LABEL_NAVIOS_RESTANTES} = "Navios Restantes:"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b LABEL_NAVIOS_PERDIDOS} = "Navios Perdidos:"\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 
{\xe \v LABEL_NAVIOS_DESTRUIDOS\:GameScoreDisplay.cpp}
{\xe \v GameScoreDisplay.cpp\:LABEL_NAVIOS_DESTRUIDOS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string LABEL_NAVIOS_DESTRUIDOS = "Navios Destruidos:"}}
\par
{\bkmkstart AAAAAAADJX}
{\bkmkend AAAAAAADJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LABEL_NAVIOS_PERDIDOS\:GameScoreDisplay.cpp}
{\xe \v GameScoreDisplay.cpp\:LABEL_NAVIOS_PERDIDOS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string LABEL_NAVIOS_PERDIDOS = "Navios Perdidos:"}}
\par
{\bkmkstart AAAAAAADJY}
{\bkmkend AAAAAAADJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LABEL_NAVIOS_RESTANTES\:GameScoreDisplay.cpp}
{\xe \v GameScoreDisplay.cpp\:LABEL_NAVIOS_RESTANTES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string LABEL_NAVIOS_RESTANTES = "Navios Restantes:"}}
\par
{\bkmkstart AAAAAAADJZ}
{\bkmkend AAAAAAADJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/game/GameScreen.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/game/GameScreen.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/game/GameScreen.cpp}
{\bkmkstart AAAAAAADKA}
{\bkmkend AAAAAAADKA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <memory>}\par
{\f2 #include <sstream>}\par
{\f2 #include "GameScreen.hpp"}\par
{\f2 #include "Text.hpp"}\par
{\f2 #include "ButtonTextIcon.hpp"}\par
{\f2 #include "GameBoardDisplay.hpp"}\par
{\f2 #include "GameScoreDisplay.hpp"}\par
{\f2 #include "PositionDisplay.hpp"}\par
{\f2 #include "Constants.hpp"}\par
{\f2 #include "AssetsPaths.hpp"}\par
{\f2 #include "Colors.hpp"}\par
{\f2 #include "StyleFunctions.hpp"}\par
{\f2 #include "ScoreFormatter.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b BUTTON_TEXT_ICON_LABEL} = "Revelar Tropas"\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 
{\xe \v BUTTON_TEXT_ICON_LABEL\:GameScreen.cpp}
{\xe \v GameScreen.cpp\:BUTTON_TEXT_ICON_LABEL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string BUTTON_TEXT_ICON_LABEL = "Revelar Tropas"}}
\par
{\bkmkstart AAAAAAADKB}
{\bkmkend AAAAAAADKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/BattleshipDisplay.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/BattleshipDisplay.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/BattleshipDisplay.cpp}
{\bkmkstart AAAAAAADKC}
{\bkmkend AAAAAAADKC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include <typeinfo>}\par
{\f2 #include <string>}\par
{\f2 #include "BattleshipDisplay.hpp"}\par
{\f2 #include "Troop.hpp"}\par
{\f2 #include "Battleship.hpp"}\par
{\f2 #include "AssetsPaths.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/CrusierDisplay.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/CrusierDisplay.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/CrusierDisplay.cpp}
{\bkmkstart AAAAAAADKD}
{\bkmkend AAAAAAADKD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include <typeinfo>}\par
{\f2 #include <string>}\par
{\f2 #include "CrusierDisplay.hpp"}\par
{\f2 #include "Troop.hpp"}\par
{\f2 #include "Crusier.hpp"}\par
{\f2 #include "AssetsPaths.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/PositioningBoardDisplay.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/PositioningBoardDisplay.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/PositioningBoardDisplay.cpp}
{\bkmkstart AAAAAAADKE}
{\bkmkend AAAAAAADKE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include "PositioningBoardDisplay.hpp"}\par
{\f2 #include "PositioningPositionDisplay.hpp"}\par
{\f2 #include "Board.hpp"}\par
{\f2 #include "Point.hpp"}\par
{\f2 #include "InvalidPositionException.hpp"}\par
{\f2 #include "Colors.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b INVALID_TROOP_POSITION_ERROR_MESSAGE} = "Posicionamento da tropa incorreto"\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 
{\xe \v INVALID_TROOP_POSITION_ERROR_MESSAGE\:PositioningBoardDisplay.cpp}
{\xe \v PositioningBoardDisplay.cpp\:INVALID_TROOP_POSITION_ERROR_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string INVALID_TROOP_POSITION_ERROR_MESSAGE = "Posicionamento da tropa incorreto"}}
\par
{\bkmkstart AAAAAAADKF}
{\bkmkend AAAAAAADKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/PositioningPositionDisplay.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/PositioningPositionDisplay.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/PositioningPositionDisplay.cpp}
{\bkmkstart AAAAAAADKG}
{\bkmkend AAAAAAADKG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "./PositioningPositionDisplay.hpp"}\par
{\f2 #include "Point.hpp"}\par
{\f2 #include "Colors.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/PositioningScreen.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/PositioningScreen.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/PositioningScreen.cpp}
{\bkmkstart AAAAAAADKH}
{\bkmkend AAAAAAADKH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <memory>}\par
{\f2 #include <typeinfo>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "PositioningScreen.hpp"}\par
{\f2 #include "Text.hpp"}\par
{\f2 #include "PositionDisplay.hpp"}\par
{\f2 #include "WarningPopUp.hpp"}\par
{\f2 #include "PositioningPositionDisplay.hpp"}\par
{\f2 #include "PositioningBoardDisplay.hpp"}\par
{\f2 #include "TroopPositioningOption.hpp"}\par
{\f2 #include "TroopDisplay.hpp"}\par
{\f2 #include "Troop.hpp"}\par
{\f2 #include "Point.hpp"}\par
{\f2 #include "Player.hpp"}\par
{\f2 #include "Orientation.hpp"}\par
{\f2 #include "InvalidPositionException.hpp"}\par
{\f2 #include "GameManager.hpp"}\par
{\f2 #include "Colors.hpp"}\par
{\f2 #include "Constants.hpp"}\par
{\f2 #include "StyleFunctions.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/SubmarineDisplay.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/SubmarineDisplay.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/SubmarineDisplay.cpp}
{\bkmkstart AAAAAAADKI}
{\bkmkend AAAAAAADKI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include <typeinfo>}\par
{\f2 #include "SubmarineDisplay.hpp"}\par
{\f2 #include "Troop.hpp"}\par
{\f2 #include "Submarine.hpp"}\par
{\f2 #include "AssetsPaths.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/TroopDisplay.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/TroopDisplay.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/TroopDisplay.cpp}
{\bkmkstart AAAAAAADKJ}
{\bkmkend AAAAAAADKJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <sstream>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "TroopDisplay.hpp"}\par
{\f2 #include "Text.hpp"}\par
{\f2 #include "Image.hpp"}\par
{\f2 #include "Screen.hpp"}\par
{\f2 #include "StyleFunctions.hpp"}\par
{\f2 #include "Colors.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/TroopPositioningOption.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/TroopPositioningOption.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/TroopPositioningOption.cpp}
{\bkmkstart AAAAAAADKK}
{\bkmkend AAAAAAADKK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <memory>}\par
{\f2 #include <string>}\par
{\f2 #include "TroopPositioningOption.hpp"}\par
{\f2 #include "Screen.hpp"}\par
{\f2 #include "ButtonIcon.hpp"}\par
{\f2 #include "ButtonText.hpp"}\par
{\f2 #include "Text.hpp"}\par
{\f2 #include "TroopDisplay.hpp"}\par
{\f2 #include "SubmarineDisplay.hpp"}\par
{\f2 #include "CrusierDisplay.hpp"}\par
{\f2 #include "BattleshipDisplay.hpp"}\par
{\f2 #include "GameManager.hpp"}\par
{\f2 #include "StyleFunctions.hpp"}\par
{\f2 #include "AssetsPaths.hpp"}\par
{\f2 #include "Colors.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/WarningPopUp.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/WarningPopUp.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/positioning/WarningPopUp.cpp}
{\bkmkstart AAAAAAADKL}
{\bkmkend AAAAAAADKL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "WarningPopUp.hpp"}\par
{\f2 #include "Screen.hpp"}\par
{\f2 #include "View.hpp"}\par
{\f2 #include "Text.hpp"}\par
{\f2 #include "ButtonText.hpp"}\par
{\f2 #include "StyleFunctions.hpp"}\par
{\f2 #include "Colors.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/score/MatchResultDisplay.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/score/MatchResultDisplay.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/score/MatchResultDisplay.cpp}
{\bkmkstart AAAAAAADKM}
{\bkmkend AAAAAAADKM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <sstream>}\par
{\f2 #include <memory>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "MatchResultDisplay.hpp"}\par
{\f2 #include "Screen.hpp"}\par
{\f2 #include "Colors.hpp"}\par
{\f2 #include "ScoreFormatter.hpp"}\par
{\f2 #include "StyleFunctions.hpp"}\par
{\f2 #include "MatchResults.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/score/PlayerRegistredScore.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/score/PlayerRegistredScore.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/score/PlayerRegistredScore.cpp}
{\bkmkstart AAAAAAADKN}
{\bkmkend AAAAAAADKN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include <memory>}\par
{\f2 #include "PlayerRegistredScore.hpp"}\par
{\f2 #include "Screen.hpp"}\par
{\f2 #include "Text.hpp"}\par
{\f2 #include "StyleFunctions.hpp"}\par
{\f2 #include "ScoreFormatter.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/score/ScoreScreen.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/score/ScoreScreen.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/score/ScoreScreen.cpp}
{\bkmkstart AAAAAAADKO}
{\bkmkend AAAAAAADKO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <string>}\par
{\f2 #include <memory>}\par
{\f2 #include <stdexcept>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "ScoreScreen.hpp"}\par
{\f2 #include "ScreenManager.hpp"}\par
{\f2 #include "TitleScreen.hpp"}\par
{\f2 #include "Text.hpp"}\par
{\f2 #include "Image.hpp"}\par
{\f2 #include "ButtonText.hpp"}\par
{\f2 #include "ButtonIcon.hpp"}\par
{\f2 #include "MatchResultDisplay.hpp"}\par
{\f2 #include "MatchResults.hpp"}\par
{\f2 #include "TxtReader.hpp"}\par
{\f2 #include "StyleFunctions.hpp"}\par
{\f2 #include "AssetsPaths.hpp"}\par
{\f2 #include "Constants.hpp"}\par
{\f2 #include "Colors.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/screen/Screen.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/screen/Screen.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/screen/Screen.cpp}
{\bkmkstart AAAAAAADKP}
{\bkmkend AAAAAAADKP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "./Screen.hpp"}\par
{\f2 #include "raylib.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/screen/ScreenManager.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/screen/ScreenManager.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/screen/ScreenManager.cpp}
{\bkmkstart AAAAAAADKQ}
{\bkmkend AAAAAAADKQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include <string>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "ScreenManager.hpp"}\par
{\f2 #include "AssetsPaths.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/shared/AssetsLoader.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/shared/AssetsLoader.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/shared/AssetsLoader.cpp}
{\bkmkstart AAAAAAADKR}
{\bkmkend AAAAAAADKR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <memory>}\par
{\f2 #include <map>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "AssetsLoader.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/shared/BoardDisplay.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/shared/BoardDisplay.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/shared/BoardDisplay.cpp}
{\bkmkstart AAAAAAADKS}
{\bkmkend AAAAAAADKS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include "BoardDisplay.hpp"}\par
{\f2 #include "Image.hpp"}\par
{\f2 #include "Screen.hpp"}\par
{\f2 #include "Point.hpp"}\par
{\f2 #include "Board.hpp"}\par
{\f2 #include "AssetsPaths.hpp"}\par
{\f2 #include "StyleFunctions.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/shared/PositionDisplay.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/shared/PositionDisplay.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/shared/PositionDisplay.cpp}
{\bkmkstart AAAAAAADKT}
{\bkmkend AAAAAAADKT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PositionDisplay.hpp"}\par
{\f2 #include "Screen.hpp"}\par
{\f2 #include "Point.hpp"}\par
{\f2 #include "Position.hpp"}\par
{\f2 #include "Colors.hpp"}\par
{\f2 #include "StyleFunctions.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/title/TitleScreen.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/title/TitleScreen.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/src/screens/title/TitleScreen.cpp}
{\bkmkstart AAAAAAADKU}
{\bkmkend AAAAAAADKU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <memory>}\par
{\f2 #include "raylib.h"}\par
{\f2 #include "TitleScreen.hpp"}\par
{\f2 #include "Screen.hpp"}\par
{\f2 #include "ScreenManager.hpp"}\par
{\f2 #include "ScoreScreen.hpp"}\par
{\f2 #include "Text.hpp"}\par
{\f2 #include "Image.hpp"}\par
{\f2 #include "ButtonText.hpp"}\par
{\f2 #include "GameManager.hpp"}\par
{\f2 #include "Colors.hpp"}\par
{\f2 #include "Constants.hpp"}\par
{\f2 #include "AssetsPaths.hpp"}\par
{\f2 #include "StyleFunctions.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEFAULT_OPACITY}\~ 240\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v DEFAULT_OPACITY\:TitleScreen.cpp}
{\xe \v TitleScreen.cpp\:DEFAULT_OPACITY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEFAULT_OPACITY\~ 240}}
\par
{\bkmkstart AAAAAAADKV}
{\bkmkend AAAAAAADKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/tests/board/testBattleship.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/board/testBattleship.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/board/testBattleship.cpp}
{\bkmkstart AAAAAAADKW}
{\bkmkend AAAAAAADKW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "doctest.hpp"}\par
{\f2 #include <stdexcept>}\par
{\f2 #include "Battleship.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Check default battleship name")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Check battleship health before and after damage")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Trying to kill a battleship")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Trying to damage cruiser after its dead")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Check for horizontal positioning")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Check for vertical positioning")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Check if points are occupied")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Check if initial positioning is empty")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v TEST_CASE\:testBattleship.cpp}
{\xe \v testBattleship.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Check battleship health before and after damage" )}}
\par
{\bkmkstart AAAAAAADKX}
{\bkmkend AAAAAAADKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 11                                                              \{\par
12     Battleship a;\par
13     CHECK(a.getHealth() == 4);\par
14     CHECK(a.getInitialHealth() == 4);\par
15     a.takeDamage();\par
16     CHECK(a.getHealth() == 3);\par
17 \}\par
}
}
{\xe \v TEST_CASE\:testBattleship.cpp}
{\xe \v testBattleship.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Check default battleship name" )}}
\par
{\bkmkstart AAAAAAADKY}
{\bkmkend AAAAAAADKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 6                                            \{\par
7     Battleship a;\par
8     CHECK(a.getTroopName() == {\cf22 "Encouracado"});\par
9 \}\par
}
}
{\xe \v TEST_CASE\:testBattleship.cpp}
{\xe \v testBattleship.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Check for horizontal positioning" )}}
\par
{\bkmkstart AAAAAAADKZ}
{\bkmkend AAAAAAADKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 33                                               \{\par
34     Battleship a;\par
35     a.setPosition(Point(1,1), Orientation::HORIZONTAL);\par
36     std::vector<Point> expected = \{Point(1,1), Point(1,2), Point(1,3), Point(1,4)\}, pos = a.getOccupiedPositions();\par
37     CHECK(pos.size() == 4);\par
38     {\cf19 for}({\cf18 int} i=0; i < 4; i++) CHECK(pos[i] == expected[i]);\par
39 \}\par
}
}
{\xe \v TEST_CASE\:testBattleship.cpp}
{\xe \v testBattleship.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Check for vertical positioning" )}}
\par
{\bkmkstart AAAAAAADLA}
{\bkmkend AAAAAAADLA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 41                                             \{\par
42     Battleship a;\par
43     a.setPosition(Point(1,1), Orientation::VERTICAL);\par
44     std::vector<Point> expected = \{Point(1,1), Point(2,1), Point(3,1), Point(4,1)\}, pos = a.getOccupiedPositions();\par
45     CHECK(pos.size() == 4);\par
46     {\cf19 for}({\cf18 int} i=0; i < 4; i++) CHECK(pos[i] == expected[i]);\par
47 \}\par
}
}
{\xe \v TEST_CASE\:testBattleship.cpp}
{\xe \v testBattleship.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Check if initial positioning is empty" )}}
\par
{\bkmkstart AAAAAAADLB}
{\bkmkend AAAAAAADLB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 56                                                    \{\par
57     Battleship a;\par
58     CHECK(a.getOccupiedPositions().size() == 0);\par
59 \}\par
}
}
{\xe \v TEST_CASE\:testBattleship.cpp}
{\xe \v testBattleship.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Check if points are occupied" )}}
\par
{\bkmkstart AAAAAAADLC}
{\bkmkend AAAAAAADLC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 49                                           \{\par
50     Battleship a;\par
51     {\cf19 for}({\cf18 int} i=1; i < 5; i++) CHECK_FALSE(a.containsPoint(Point(1,i)));\par
52     a.setPosition(Point(1,1), Orientation::HORIZONTAL);\par
53     {\cf19 for}({\cf18 int} i=1; i < 5; i++) CHECK(a.containsPoint(Point(1,i)));\par
54 \}\par
}
}
{\xe \v TEST_CASE\:testBattleship.cpp}
{\xe \v testBattleship.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Trying to damage cruiser after its dead" )}}
\par
{\bkmkstart AAAAAAADLD}
{\bkmkend AAAAAAADLD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 27                                                      \{\par
28     Battleship a;\par
29     {\cf19 for}({\cf18 int} i=0; i < 4; i++) a.takeDamage();\par
30     CHECK_THROWS_AS(a.takeDamage(), std::logic_error);\par
31 \}\par
}
}
{\xe \v TEST_CASE\:testBattleship.cpp}
{\xe \v testBattleship.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Trying to kill a battleship" )}}
\par
{\bkmkstart AAAAAAADLE}
{\bkmkend AAAAAAADLE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 19                                          \{\par
20     Battleship a;\par
21     CHECK_FALSE(a.isDead());\par
22     {\cf19 for}({\cf18 int} i=0; i < 4; i++) a.takeDamage();\par
23     CHECK(a.getHealth() == 0);\par
24     CHECK(a.isDead());\par
25 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/tests/board/testBoard.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/board/testBoard.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/board/testBoard.cpp}
{\bkmkstart AAAAAAADLF}
{\bkmkend AAAAAAADLF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "doctest.hpp"}\par
{\f2 #include <stdexcept>}\par
{\f2 #include "Board.hpp"}\par
{\f2 #include "Submarine.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Initializing board with negative height or width")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Initializing board with valid values and getting their values")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Positions a troop in a valid position")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Positions a troop in a valid positioning then removing it")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Check if points are in or out of boundaries")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Add multiple troops and get troop vector")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Get a position without a troop and add a troop to it afterwards")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Trying to get a point out of boundaries")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Trying to get a troop with an out of bounds point")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Checking if a position out of bounds is valid, then a valid one")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Checking if position containing a troop is invalid")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Trying to position 2 troops on conflicting positions")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Trying to position a troop that has not yet been positioned")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v TEST_CASE\:testBoard.cpp}
{\xe \v testBoard.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Add multiple troops and get troop vector" )}}
\par
{\bkmkstart AAAAAAADLG}
{\bkmkend AAAAAAADLG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 49                                                       \{\par
50     Board board(10,10);\par
51 \par
52     CHECK(board.getTroops().size() == 0);\par
53 \par
54     std::shared_ptr<Troop> a({\cf17 new} Submarine()), b({\cf17 new} Submarine());\par
55     a->setPosition(Point(1,1), Orientation::VERTICAL);\par
56     b->setPosition(Point(1,2), Orientation::HORIZONTAL);\par
57     board.positionTroop(a);\par
58     board.positionTroop(b);\par
59 \par
60     std::vector<std::shared_ptr<Troop>> vector = board.getTroops();\par
61     CHECK(vector[0].get() == a.get());\par
62     CHECK(vector[1].get() == b.get());\par
63 \}\par
}
}
{\xe \v TEST_CASE\:testBoard.cpp}
{\xe \v testBoard.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Check if points are in or out of boundaries" )}}
\par
{\bkmkstart AAAAAAADLH}
{\bkmkend AAAAAAADLH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 41                                                          \{\par
42     Board board(10,10);\par
43     CHECK_FALSE(board.isPointWithinBoundaries(Point(10,5)));\par
44     CHECK_FALSE(board.isPointWithinBoundaries(Point(5,10)));\par
45     CHECK(board.isPointWithinBoundaries(Point(1,2)));\par
46     CHECK(board.isPointWithinBoundaries(Point(4,5)));\par
47 \}\par
}
}
{\xe \v TEST_CASE\:testBoard.cpp}
{\xe \v testBoard.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Checking if a position out of bounds is  {\i valid}, then a valid one" )}}
\par
{\bkmkstart AAAAAAADLI}
{\bkmkend AAAAAAADLI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 91                                                                              \{\par
92     Board board(10,10);\par
93     std::shared_ptr<Troop> troop({\cf17 new} Submarine());\par
94     troop->setPosition(Point(11,0), Orientation::HORIZONTAL);\par
95     CHECK_FALSE(board.isPositionValid(troop->getOccupiedPositions()));\par
96     troop->setPosition(Point(1,0), Orientation::HORIZONTAL);\par
97     CHECK(board.isPositionValid(troop->getOccupiedPositions()));\par
98 \}\par
}
}
{\xe \v TEST_CASE\:testBoard.cpp}
{\xe \v testBoard.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Checking if position containing a troop is invalid" )}}
\par
{\bkmkstart AAAAAAADLJ}
{\bkmkend AAAAAAADLJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 100                                                                 \{\par
101     Board board(10,10);\par
102     std::shared_ptr<Troop> troop1({\cf17 new} Submarine());\par
103     troop1->setPosition(Point(5,6), Orientation::HORIZONTAL);\par
104     board.positionTroop(troop1);\par
105     std::vector<Point> v = \{Point(5,6)\};\par
106     CHECK_FALSE(board.isPositionValid(v));\par
107 \}\par
}
}
{\xe \v TEST_CASE\:testBoard.cpp}
{\xe \v testBoard.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Get a position without a troop and add a troop to it afterwards" )}}
\par
{\bkmkstart AAAAAAADLK}
{\bkmkend AAAAAAADLK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 65                                                                              \{\par
66     Board board(10,10);\par
67     std::shared_ptr<Position> a = board.getPosition(2,1);\par
68 \par
69     CHECK_FALSE(a->hasTroop());\par
70 \par
71     std::shared_ptr<Submarine> sub({\cf17 new} Submarine());\par
72     sub->setPosition(Point(2,1), Orientation::HORIZONTAL);\par
73     board.positionTroop(sub);\par
74 \par
75     CHECK(a->hasTroop());\par
76     CHECK(a->getTroop().get() == sub.get());\par
77 \}\par
}
}
{\xe \v TEST_CASE\:testBoard.cpp}
{\xe \v testBoard.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Initializing board with negative height or width" )}}
\par
{\bkmkstart AAAAAAADLL}
{\bkmkend AAAAAAADLL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 7                                                               \{\par
8     CHECK_THROWS_AS(Board(-1,2), std::invalid_argument);\par
9     CHECK_THROWS_AS(Board(1,-2), std::invalid_argument);\par
10 \}\par
}
}
{\xe \v TEST_CASE\:testBoard.cpp}
{\xe \v testBoard.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Initializing board with valid values and getting their values" )}}
\par
{\bkmkstart AAAAAAADLM}
{\bkmkend AAAAAAADLM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12                                                                            \{\par
13     Board board(1,2);\par
14     CHECK(board.getWidth() == 1);\par
15     CHECK(board.getHeight() == 2);\par
16 \}\par
}
}
{\xe \v TEST_CASE\:testBoard.cpp}
{\xe \v testBoard.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Positions a troop in a valid position" )}}
\par
{\bkmkstart AAAAAAADLN}
{\bkmkend AAAAAAADLN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 18                                                    \{\par
19     Board board(10,10);\par
20 \par
21     CHECK_FALSE(board.doesPositionContainsTroop(Point(5,4)));\par
22 \par
23     std::shared_ptr<Submarine> troop({\cf17 new} Submarine());\par
24     troop->setPosition(Point(5,4), Orientation::HORIZONTAL);\par
25     board.positionTroop(troop);\par
26 \par
27     CHECK(board.doesPositionContainsTroop(Point(5,4)));\par
28 \}\par
}
}
{\xe \v TEST_CASE\:testBoard.cpp}
{\xe \v testBoard.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Positions a troop in a valid positioning then removing it" )}}
\par
{\bkmkstart AAAAAAADLO}
{\bkmkend AAAAAAADLO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 30                                                                        \{\par
31     Board board(10,10);\par
32     std::shared_ptr<Submarine> troop({\cf17 new} Submarine());\par
33     troop->setPosition(Point(5,4), Orientation::HORIZONTAL);\par
34 \par
35     board.positionTroop(troop);\par
36     board.removeTroop(troop);\par
37 \par
38     CHECK_FALSE(board.doesPositionContainsTroop(Point(5,4)));\par
39 \}\par
}
}
{\xe \v TEST_CASE\:testBoard.cpp}
{\xe \v testBoard.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Trying to get a point out of boundaries" )}}
\par
{\bkmkstart AAAAAAADLP}
{\bkmkend AAAAAAADLP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 79                                                      \{\par
80     Board board(10,10);\par
81     CHECK_THROWS_AS(board.getPosition(11,5), std::invalid_argument);\par
82     CHECK_THROWS_AS(board.getPosition(5,15), std::invalid_argument);\par
83 \}\par
}
}
{\xe \v TEST_CASE\:testBoard.cpp}
{\xe \v testBoard.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Trying to get a troop with an out of bounds point" )}}
\par
{\bkmkstart AAAAAAADLQ}
{\bkmkend AAAAAAADLQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 85                                                                \{\par
86     Board board(10,10);\par
87     CHECK_THROWS_AS(board.doesPositionContainsTroop(Point(11,1)), std::invalid_argument);\par
88     CHECK_THROWS_AS(board.doesPositionContainsTroop(Point(1,-1)), std::invalid_argument);\par
89 \}\par
}
}
{\xe \v TEST_CASE\:testBoard.cpp}
{\xe \v testBoard.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Trying to position 2 troops on conflicting positions" )}}
\par
{\bkmkstart AAAAAAADLR}
{\bkmkend AAAAAAADLR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 109                                                                   \{\par
110     Board board(10,10);\par
111     std::shared_ptr<Troop> troop1({\cf17 new} Submarine());\par
112     troop1->setPosition(Point(5,0), Orientation::HORIZONTAL);\par
113     board.positionTroop(troop1);\par
114     std::shared_ptr<Troop> troop2({\cf17 new} Submarine());\par
115     troop2->setPosition(Point(5,0), Orientation::HORIZONTAL);\par
116     CHECK_THROWS_AS(board.positionTroop(troop2), std::invalid_argument);\par
117 \}\par
}
}
{\xe \v TEST_CASE\:testBoard.cpp}
{\xe \v testBoard.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Trying to position a troop that has not yet been positioned" )}}
\par
{\bkmkstart AAAAAAADLS}
{\bkmkend AAAAAAADLS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 119                                                                          \{\par
120     Board board(10,10);\par
121     std::shared_ptr<Troop> troop1({\cf17 new} Submarine());\par
122     CHECK_THROWS_AS(board.positionTroop(troop1), std::invalid_argument);\par
123 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/tests/board/testCrusier.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/board/testCrusier.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/board/testCrusier.cpp}
{\bkmkstart AAAAAAADLT}
{\bkmkend AAAAAAADLT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "doctest.hpp"}\par
{\f2 #include <stdexcept>}\par
{\f2 #include "Crusier.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Getting default crusier name")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Getting crusier health before and after damage")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Trying to kill crusier")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Trying to damage crusier after its dead")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Check for horizontal positioning")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Check for vertical positioning")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Check if points are occupied")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Check if initial positioning is empty")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v TEST_CASE\:testCrusier.cpp}
{\xe \v testCrusier.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Check for horizontal positioning" )}}
\par
{\bkmkstart AAAAAAADLU}
{\bkmkend AAAAAAADLU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 33                                               \{\par
34     Crusier a;\par
35     a.setPosition(Point(1,1), Orientation::HORIZONTAL);\par
36     std::vector<Point> expected = \{Point(1,1), Point(1,2), Point(1,3)\}, pos = a.getOccupiedPositions();\par
37     CHECK(pos.size() == 3);\par
38     {\cf19 for}({\cf18 int} i=0; i < 3; i++) CHECK(pos[i] == expected[i]);\par
39 \}\par
}
}
{\xe \v TEST_CASE\:testCrusier.cpp}
{\xe \v testCrusier.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Check for vertical positioning" )}}
\par
{\bkmkstart AAAAAAADLV}
{\bkmkend AAAAAAADLV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 41                                             \{\par
42     Crusier a;\par
43     a.setPosition(Point(1,1), Orientation::VERTICAL);\par
44     std::vector<Point> expected = \{Point(1,1), Point(2,1), Point(3,1)\}, pos = a.getOccupiedPositions();\par
45     CHECK(pos.size() == 3);\par
46     {\cf19 for}({\cf18 int} i=0; i < 3; i++) CHECK(pos[i] == expected[i]);\par
47 \}\par
}
}
{\xe \v TEST_CASE\:testCrusier.cpp}
{\xe \v testCrusier.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Check if initial positioning is empty" )}}
\par
{\bkmkstart AAAAAAADLW}
{\bkmkend AAAAAAADLW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 56                                                    \{\par
57     Crusier a;\par
58     CHECK(a.getOccupiedPositions().size() == 0);\par
59 \}\par
}
}
{\xe \v TEST_CASE\:testCrusier.cpp}
{\xe \v testCrusier.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Check if points are occupied" )}}
\par
{\bkmkstart AAAAAAADLX}
{\bkmkend AAAAAAADLX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 49                                           \{\par
50     Crusier a;\par
51     {\cf19 for}({\cf18 int} i=1; i < 4; i++) CHECK_FALSE(a.containsPoint(Point(1,i)));\par
52     a.setPosition(Point(1,1), Orientation::HORIZONTAL);\par
53     {\cf19 for}({\cf18 int} i=1; i < 4; i++) CHECK(a.containsPoint(Point(1,i)));\par
54 \}\par
}
}
{\xe \v TEST_CASE\:testCrusier.cpp}
{\xe \v testCrusier.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Getting crusier health before and after damage" )}}
\par
{\bkmkstart AAAAAAADLY}
{\bkmkend AAAAAAADLY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 10                                                             \{\par
11     Crusier a;\par
12     CHECK(a.getHealth() == 3);\par
13     CHECK(a.getInitialHealth() == 3);\par
14     a.takeDamage();\par
15     CHECK(a.getHealth() == 2);\par
16 \}\par
}
}
{\xe \v TEST_CASE\:testCrusier.cpp}
{\xe \v testCrusier.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Getting default crusier name" )}}
\par
{\bkmkstart AAAAAAADLZ}
{\bkmkend AAAAAAADLZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5                                           \{\par
6     Crusier a;\par
7     CHECK(a.getTroopName() == {\cf22 "Crusador"});\par
8 \}\par
}
}
{\xe \v TEST_CASE\:testCrusier.cpp}
{\xe \v testCrusier.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Trying to damage crusier after its dead" )}}
\par
{\bkmkstart AAAAAAADMA}
{\bkmkend AAAAAAADMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 26                                                      \{\par
27     Crusier a;\par
28     a.takeDamage(); a.takeDamage(); a.takeDamage();\par
29 \par
30     CHECK_THROWS_AS(a.takeDamage(), std::logic_error);\par
31 \}\par
}
}
{\xe \v TEST_CASE\:testCrusier.cpp}
{\xe \v testCrusier.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Trying to kill crusier" )}}
\par
{\bkmkstart AAAAAAADMB}
{\bkmkend AAAAAAADMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 18                                     \{\par
19     Crusier a;\par
20     CHECK_FALSE(a.isDead());\par
21     a.takeDamage(); a.takeDamage(); a.takeDamage();\par
22     CHECK(a.getHealth() == 0);\par
23     CHECK(a.isDead());\par
24 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/tests/board/testPoint.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/board/testPoint.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/board/testPoint.cpp}
{\bkmkstart AAAAAAADMC}
{\bkmkend AAAAAAADMC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "doctest.hpp"}\par
{\f2 #include <stdexcept>}\par
{\f2 #include "Point.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Construct a point with custom values")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Construct a point and changes its values with setters")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Overload '==' operator")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Copy constructor")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("'+' Operator overloader")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Construct point with negative number")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Set negative values to point")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v TEST_CASE\:testPoint.cpp}
{\xe \v testPoint.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("'+' Operator overloader" )}}
\par
{\bkmkstart AAAAAAADMD}
{\bkmkend AAAAAAADMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 31                                      \{\par
32     Point a(0,1), b(1,0);\par
33     CHECK((a + b) == Point(1,1));\par
34 \}\par
}
}
{\xe \v TEST_CASE\:testPoint.cpp}
{\xe \v testPoint.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Construct a point and changes its values with setters" )}}
\par
{\bkmkstart AAAAAAADME}
{\bkmkend AAAAAAADME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 11                                                                    \{\par
12     Point a(5,8);\par
13     a.setX(10);\par
14     a.setY(1);\par
15     CHECK(a.getX() == 10);\par
16     CHECK(a.getY() == 1);\par
17 \}\par
}
}
{\xe \v TEST_CASE\:testPoint.cpp}
{\xe \v testPoint.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Construct a point with custom values" )}}
\par
{\bkmkstart AAAAAAADMF}
{\bkmkend AAAAAAADMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5                                                   \{ \par
6     Point a(5,8);\par
7     CHECK(a.getX() == 5);\par
8     CHECK(a.getY() == 8);\par
9 \}\par
}
}
{\xe \v TEST_CASE\:testPoint.cpp}
{\xe \v testPoint.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Construct point with negative number" )}}
\par
{\bkmkstart AAAAAAADMG}
{\bkmkend AAAAAAADMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 43                                                   \{\par
44     CHECK_THROWS_AS(Point(-1,0), std::invalid_argument);\par
45     CHECK_THROWS_AS(Point(0,-1), std::invalid_argument);\par
46 \}\par
}
}
{\xe \v TEST_CASE\:testPoint.cpp}
{\xe \v testPoint.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Copy constructor" )}}
\par
{\bkmkstart AAAAAAADMH}
{\bkmkend AAAAAAADMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 25                               \{\par
26     Point a(1,3);\par
27     Point b = a;\par
28     CHECK(a == b);\par
29 \}\par
}
}
{\xe \v TEST_CASE\:testPoint.cpp}
{\xe \v testPoint.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ()}}
\par
{\bkmkstart AAAAAAADMI}
{\bkmkend AAAAAAADMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 19                                     \{ \par
20     Point a(1,2), b(1,2), c(3,7);\par
21     CHECK(a == b);\par
22     CHECK_FALSE(a == c);\par
23 \}\par
}
}
{\xe \v TEST_CASE\:testPoint.cpp}
{\xe \v testPoint.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Set negative values to point" )}}
\par
{\bkmkstart AAAAAAADMJ}
{\bkmkend AAAAAAADMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 48                                           \{\par
49     Point a(1,0);\par
50     CHECK_THROWS_AS(a.setX(-1), std::invalid_argument);\par
51     CHECK_THROWS_AS(a.setY(-2), std::invalid_argument);\par
52 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/tests/board/testPosition.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/board/testPosition.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/board/testPosition.cpp}
{\bkmkstart AAAAAAADMK}
{\bkmkend AAAAAAADMK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "doctest.hpp"}\par
{\f2 #include <stdexcept>}\par
{\f2 #include "Position.hpp"}\par
{\f2 #include "Submarine.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Initialize a position and set a troop to it")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Initialize a position and check for its x and y values")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Initailize a position with negative numbers")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v TEST_CASE\:testPosition.cpp}
{\xe \v testPosition.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Initailize a position with negative numbers" )}}
\par
{\bkmkstart AAAAAAADML}
{\bkmkend AAAAAAADML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 24                                                          \{\par
25     CHECK_THROWS_AS(Position(-1,2), std::invalid_argument);\par
26     CHECK_THROWS_AS(Position(1,-2), std::invalid_argument);\par
27 \}\par
}
}
{\xe \v TEST_CASE\:testPosition.cpp}
{\xe \v testPosition.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Initialize a position and check for its x and y values" )}}
\par
{\bkmkstart AAAAAAADMM}
{\bkmkend AAAAAAADMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 18                                                                     \{\par
19     Position a(1,2);\par
20     CHECK(a.getX() == 1);\par
21     CHECK(a.getY() == 2); \par
22 \}\par
}
}
{\xe \v TEST_CASE\:testPosition.cpp}
{\xe \v testPosition.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Initialize a position and set a troop to it" )}}
\par
{\bkmkstart AAAAAAADMN}
{\bkmkend AAAAAAADMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 6                                                          \{\par
7     Position a(1,2);\par
8 \par
9     CHECK_FALSE(a.hasTroop());\par
10 \par
11     std::shared_ptr<Troop> pointer({\cf17 new} Submarine());\par
12     a.setTroop(pointer);\par
13 \par
14     CHECK(pointer.get() == a.getTroop().get());\par
15     CHECK(a.hasTroop());\par
16 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/tests/board/testSubmarine.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/board/testSubmarine.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/board/testSubmarine.cpp}
{\bkmkstart AAAAAAADMO}
{\bkmkend AAAAAAADMO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "doctest.hpp"}\par
{\f2 #include <stdexcept>}\par
{\f2 #include "Submarine.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Checking for troop name")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Check initial health")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Check health before and after taking damage")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Check vertical positioning")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Check horizontal positioning")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Check if submarine contains point")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Killing submarine")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Trying to damage the submarine after it dying")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Check if initial positioning is empty")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v TEST_CASE\:testSubmarine.cpp}
{\xe \v testSubmarine.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Check health before and after taking damage" )}}
\par
{\bkmkstart AAAAAAADMP}
{\bkmkend AAAAAAADMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17                                                         \{\par
18     Submarine a;\par
19     CHECK(a.getHealth() == 1);\par
20     CHECK(a.getInitialHealth() == 1);\par
21     a.takeDamage();\par
22     CHECK(a.getHealth() == 0);\par
23 \}\par
}
}
{\xe \v TEST_CASE\:testSubmarine.cpp}
{\xe \v testSubmarine.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Check horizontal positioning" )}}
\par
{\bkmkstart AAAAAAADMQ}
{\bkmkend AAAAAAADMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 33                                           \{\par
34     Submarine a;\par
35     a.setPosition(Point(5,5), Orientation::HORIZONTAL);\par
36     std::vector<Point> v = a.getOccupiedPositions();\par
37     CHECK(v.size() == 1);\par
38     CHECK(Point(5,5) == v[0]);\par
39 \}\par
}
}
{\xe \v TEST_CASE\:testSubmarine.cpp}
{\xe \v testSubmarine.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Check if initial positioning is empty" )}}
\par
{\bkmkstart AAAAAAADMR}
{\bkmkend AAAAAAADMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 61                                                    \{\par
62     Submarine a;\par
63     CHECK(a.getOccupiedPositions().size() == 0);\par
64 \}\par
}
}
{\xe \v TEST_CASE\:testSubmarine.cpp}
{\xe \v testSubmarine.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Check if submarine contains point" )}}
\par
{\bkmkstart AAAAAAADMS}
{\bkmkend AAAAAAADMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 41                                                \{\par
42     Submarine a;\par
43     a.setPosition(Point(5,5), Orientation::HORIZONTAL);\par
44     CHECK_FALSE(a.containsPoint(Point(4,4)));\par
45     a.setPosition(Point(4,4), Orientation::HORIZONTAL);\par
46     CHECK(a.containsPoint(Point(4,4)));\par
47 \}\par
}
}
{\xe \v TEST_CASE\:testSubmarine.cpp}
{\xe \v testSubmarine.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Check initial health" )}}
\par
{\bkmkstart AAAAAAADMT}
{\bkmkend AAAAAAADMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 11                                  \{\par
12     Submarine a;\par
13     CHECK(a.getHealth() == 1);\par
14     CHECK(a.getInitialHealth() == 1);\par
15 \}\par
}
}
{\xe \v TEST_CASE\:testSubmarine.cpp}
{\xe \v testSubmarine.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Check vertical positioning" )}}
\par
{\bkmkstart AAAAAAADMU}
{\bkmkend AAAAAAADMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 25                                         \{\par
26     Submarine a;\par
27     a.setPosition(Point(1,1), Orientation::VERTICAL);\par
28     std::vector<Point> v = a.getOccupiedPositions();\par
29     CHECK(v.size() == 1);\par
30     CHECK(Point(1,1) == v[0]);\par
31 \}\par
}
}
{\xe \v TEST_CASE\:testSubmarine.cpp}
{\xe \v testSubmarine.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Checking for troop name" )}}
\par
{\bkmkstart AAAAAAADMV}
{\bkmkend AAAAAAADMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 6                                      \{\par
7     Submarine a;\par
8     CHECK(a.getTroopName() == {\cf22 "Submarino"});\par
9 \}\par
}
}
{\xe \v TEST_CASE\:testSubmarine.cpp}
{\xe \v testSubmarine.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Killing submarine" )}}
\par
{\bkmkstart AAAAAAADMW}
{\bkmkend AAAAAAADMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 49                                \{\par
50     Submarine a;\par
51     a.takeDamage();\par
52     CHECK(a.isDead());\par
53 \}\par
}
}
{\xe \v TEST_CASE\:testSubmarine.cpp}
{\xe \v testSubmarine.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Trying to damage the submarine after it dying" )}}
\par
{\bkmkstart AAAAAAADMX}
{\bkmkend AAAAAAADMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 55                                                           \{\par
56     Submarine a;\par
57     a.takeDamage();\par
58     CHECK_THROWS_AS(a.takeDamage(), std::logic_error);\par
59 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/tests/fileHandler/testFileHandler.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/fileHandler/testFileHandler.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/fileHandler/testFileHandler.cpp}
{\bkmkstart AAAAAAADMY}
{\bkmkend AAAAAAADMY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "doctest.hpp"}\par
{\f2 #include <stdexcept>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include "FileHandler.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Trying to open non-existant file for reading")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Trying to open file with invalid mode")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Opening a file for writing, check with reading")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Opening a file for writing, check with appending")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v TEST_CASE\:testFileHandler.cpp}
{\xe \v testFileHandler.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Opening a file for  {\i writing}, check with appending" )}}
\par
{\bkmkstart AAAAAAADMZ}
{\bkmkend AAAAAAADMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21                                                               \{\par
22     FileHandler a({\cf22 "a.txt"}, {\cf23 'w'});\par
23     CHECK_NOTHROW(FileHandler file({\cf22 "a.txt"}, {\cf23 'a'}));\par
24     remove({\cf22 "a.txt"});\par
25 \}\par
}
}
{\xe \v TEST_CASE\:testFileHandler.cpp}
{\xe \v testFileHandler.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Opening a file for  {\i writing}, check with reading" )}}
\par
{\bkmkstart AAAAAAADNA}
{\bkmkend AAAAAAADNA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 15                                                             \{\par
16     FileHandler a({\cf22 "teste.txt"}, {\cf23 'w'});\par
17     CHECK_NOTHROW(FileHandler file({\cf22 "teste.txt"}, {\cf23 'r'}));\par
18     remove({\cf22 "teste.txt"});\par
19 \}\par
}
}
{\xe \v TEST_CASE\:testFileHandler.cpp}
{\xe \v testFileHandler.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Trying to open file with invalid mode" )}}
\par
{\bkmkstart AAAAAAADNB}
{\bkmkend AAAAAAADNB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 11                                                    \{\par
12     CHECK_THROWS_AS(FileHandler file({\cf22 "teste.txt"}, {\cf23 'z'}), std::invalid_argument);\par
13 \}\par
}
}
{\xe \v TEST_CASE\:testFileHandler.cpp}
{\xe \v testFileHandler.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Trying to open non-existant file for reading" )}}
\par
{\bkmkstart AAAAAAADNC}
{\bkmkend AAAAAAADNC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 7                                                           \{\par
8     CHECK_THROWS_AS(FileHandler file({\cf22 "teste.txt"}, {\cf23 'r'}), std::invalid_argument);\par
9 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/tests/fileHandler/testTxtWriterTxtReader.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/fileHandler/testTxtWriterTxtReader.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/fileHandler/testTxtWriterTxtReader.cpp}
{\bkmkstart AAAAAAADND}
{\bkmkend AAAAAAADND}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "doctest.hpp"}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <string>}\par
{\f2 #include <stdexcept>}\par
{\f2 #include "TxtReader.hpp"}\par
{\f2 #include "TxtWriter.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b compareResults} ({\b MatchResults} a, {\b MatchResults} b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Open a file for writing, write and check for matching MatchResults")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Write multiple matchresults, and search for one with a valid id")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Write multiple matchresuslts, and search for one with invalid id")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v compareResults\:testTxtWriterTxtReader.cpp}
{\xe \v testTxtWriterTxtReader.cpp\:compareResults}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} compareResults ({\b MatchResults}  {\i a}, {\b MatchResults}  {\i b})}}
\par
{\bkmkstart AAAAAAADNE}
{\bkmkend AAAAAAADNE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 9                                                    \{\par
10     {\cf19 if} (a.getPlayer1Name() != b.getPlayer1Name() || a.getPlayer2Name() != b.getPlayer2Name()) {\cf19 return} {\cf17 false};\par
11 \par
12     Score aPlayer1Score = b.getPlayer1Score(), aPlayer2Score = a.getPlayer2Score();\par
13     Score bPlayer1Score = b.getPlayer1Score(), bPlayer2Score = b.getPlayer2Score();\par
14 \par
15     {\cf19 if} (aPlayer1Score.getDestroyedTroops() != bPlayer1Score.getDestroyedTroops()) {\cf19 return} {\cf17 false};\par
16     {\cf19 if} (aPlayer2Score.getDestroyedTroops() != bPlayer2Score.getDestroyedTroops()) {\cf19 return} {\cf17 false};\par
17     {\cf19 if} (aPlayer1Score.getHitShoots() != bPlayer1Score.getHitShoots()) {\cf19 return} {\cf17 false};\par
18     {\cf19 if} (aPlayer2Score.getHitShoots() != bPlayer2Score.getHitShoots()) {\cf19 return} {\cf17 false};\par
19     {\cf19 if} (aPlayer1Score.getLostTroops() != bPlayer1Score.getLostTroops()) {\cf19 return} {\cf17 false};\par
20     {\cf19 if} (aPlayer2Score.getLostTroops() != bPlayer2Score.getLostTroops()) {\cf19 return} {\cf17 false};\par
21     {\cf19 if} (aPlayer1Score.getRemainingTroops() != bPlayer1Score.getRemainingTroops()) {\cf19 return} {\cf17 false};\par
22     {\cf19 if} (aPlayer2Score.getRemainingTroops() != bPlayer2Score.getRemainingTroops()) {\cf19 return} {\cf17 false};\par
23     {\cf19 if} (aPlayer1Score.getTotalAmountShoots() != bPlayer1Score.getTotalAmountShoots()) {\cf19 return} {\cf17 false};\par
24     {\cf19 if} (aPlayer2Score.getTotalAmountShoots() != bPlayer2Score.getTotalAmountShoots()) {\cf19 return} {\cf17 false};\par
25     {\cf19 return} {\cf17 true};\par
26 \}\par
}
}
{\xe \v TEST_CASE\:testTxtWriterTxtReader.cpp}
{\xe \v testTxtWriterTxtReader.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Open a file for  {\i writing}, write and check for matching MatchResults" )}}
\par
{\bkmkstart AAAAAAADNF}
{\bkmkend AAAAAAADNF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 28                                                                                 \{\par
29     Score score1(1,2,3,5,4), score2(6,7,8,10,9);\par
30     MatchResults match({\cf22 "Jogador 1"}, score1, {\cf22 "Jogador 2"}, score2, {\cf22 "2022/07/08-12:30:22"});\par
31     TxtWriter fileWrite({\cf22 "teste.txt"});\par
32     fileWrite.writeResults(match);\par
33 \par
34     TxtReader fileRead({\cf22 "teste.txt"});\par
35     MatchResults resultFile = fileRead.getMatches()[0];\par
36 \par
37     CHECK(compareResults(resultFile, match));\par
38     remove({\cf22 "teste.txt"});\par
39 \}\par
}
}
{\xe \v TEST_CASE\:testTxtWriterTxtReader.cpp}
{\xe \v testTxtWriterTxtReader.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Write multiple  {\i matchresults}, and search for one with a valid id" )}}
\par
{\bkmkstart AAAAAAADNG}
{\bkmkend AAAAAAADNG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 41                                                                              \{\par
42     std::vector<MatchResults> vector;\par
43     {\cf19 for} ({\cf18 int} i=0; i<6; i++)\{\par
44         vector.push_back(MatchResults({\cf22 "Jogador 1"}, Score(i, i+1, i+2, i+4, i+3), {\cf22 "Jogador 2"}, Score(i+5,i+6,i+7,i+9,i+8), std::to_string(i)));\par
45     \}\par
46 \par
47     TxtWriter writer({\cf22 "teste.txt"});\par
48 \par
49     {\cf19 for}(MatchResults &x : vector)\{\par
50         writer.writeResults(x);\par
51     \}\par
52 \par
53     TxtReader reader({\cf22 "teste.txt"});\par
54 \par
55     {\cf19 for} ({\cf18 int} i = 0; i < 6; i++) \{\par
56         CHECK(compareResults(vector[i], reader.findMatch(std::to_string(i))));\par
57     \}\par
58     remove({\cf22 "teste.txt"});\par
59 \}\par
}
}
{\xe \v TEST_CASE\:testTxtWriterTxtReader.cpp}
{\xe \v testTxtWriterTxtReader.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Write multiple  {\i matchresuslts}, and search for one with invalid id" )}}
\par
{\bkmkstart AAAAAAADNH}
{\bkmkend AAAAAAADNH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 61                                                                               \{\par
62     std::vector<MatchResults> vector;\par
63     {\cf19 for} ({\cf18 int} i=0; i<6; i++)\{\par
64         vector.push_back(MatchResults({\cf22 "Jogador 1"}, Score(i, i+1, i+2, i+4, i+3), {\cf22 "Jogador 2"}, Score(i+5,i+6,i+7,i+9,i+8), std::to_string(i)));\par
65     \}\par
66 \par
67     TxtWriter writer({\cf22 "teste.txt"});\par
68 \par
69     {\cf19 for}(MatchResults &x : vector)\{\par
70         writer.writeResults(x);\par
71     \}\par
72 \par
73     TxtReader reader({\cf22 "teste.txt"});\par
74 \par
75     CHECK_THROWS_AS(reader.findMatch({\cf22 "aaa"}), std::invalid_argument);\par
76 \par
77     remove({\cf22 "teste.txt"});\par
78 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/tests/game/testGameParameters.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/game/testGameParameters.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/game/testGameParameters.cpp}
{\bkmkstart AAAAAAADNI}
{\bkmkend AAAAAAADNI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "doctest.hpp"}\par
{\f2 #include <stdexcept>}\par
{\f2 #include "GameParameters.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Check default parameters")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Set valid custom parameters")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Trying to set negative values")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v TEST_CASE\:testGameParameters.cpp}
{\xe \v testGameParameters.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Check default parameters" )}}
\par
{\bkmkstart AAAAAAADNJ}
{\bkmkend AAAAAAADNJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 6                                      \{\par
7     GameParameters a;\par
8     CHECK(a.getAmountBattleshipTroops() == 3);\par
9     CHECK(a.getAmountCrusierTroops() == 3);\par
10     CHECK(a.getAmountSubmarineTroops() == 3);\par
11     CHECK(a.getBoardAmountHorizontalCells() == 9);\par
12     CHECK(a.getBoardAmountVerticalCells() == 9);\par
13     CHECK(a.getTotalAmountOfTroops() == 9);\par
14 \}\par
}
}
{\xe \v TEST_CASE\:testGameParameters.cpp}
{\xe \v testGameParameters.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Set valid custom parameters" )}}
\par
{\bkmkstart AAAAAAADNK}
{\bkmkend AAAAAAADNK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 16                                          \{\par
17     GameParameters a;\par
18     a.setAmountBattleshipTroops(1);\par
19     a.setAmountCrusierTroops(1);\par
20     a.setAmountSubmarineTroops(1);\par
21     a.setBoardAmountHorizontalCells(5);\par
22     a.setBoardAmountVerticalCells(5);\par
23 \par
24     CHECK(a.getAmountBattleshipTroops() == 1);\par
25     CHECK(a.getAmountCrusierTroops() == 1);\par
26     CHECK(a.getAmountSubmarineTroops() == 1);\par
27     CHECK(a.getBoardAmountHorizontalCells() == 5);\par
28     CHECK(a.getBoardAmountVerticalCells() == 5);\par
29     CHECK(a.getTotalAmountOfTroops() == 3);\par
30 \}\par
}
}
{\xe \v TEST_CASE\:testGameParameters.cpp}
{\xe \v testGameParameters.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Trying to set negative values" )}}
\par
{\bkmkstart AAAAAAADNL}
{\bkmkend AAAAAAADNL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 32                                            \{\par
33     GameParameters a;\par
34 \par
35     CHECK_THROWS_AS(a.setAmountBattleshipTroops(-1),std::invalid_argument);\par
36     CHECK_THROWS_AS(a.setAmountCrusierTroops(-1),std::invalid_argument);\par
37     CHECK_THROWS_AS(a.setAmountSubmarineTroops(-1),std::invalid_argument);\par
38     CHECK_THROWS_AS(a.setBoardAmountHorizontalCells(-1),std::invalid_argument);\par
39     CHECK_THROWS_AS(a.setBoardAmountVerticalCells(-1),std::invalid_argument);\par
40 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/tests/maintests.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/maintests.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/maintests.cpp}
{\bkmkstart AAAAAAADNM}
{\bkmkend AAAAAAADNM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "doctest.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN\:maintests.cpp}
{\xe \v maintests.cpp\:DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN}}
\par
{\bkmkstart AAAAAAADNN}
{\bkmkend AAAAAAADNN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/tests/match/testMatch.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/match/testMatch.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/match/testMatch.cpp}
{\bkmkstart AAAAAAADNO}
{\bkmkend AAAAAAADNO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "doctest.hpp"}\par
{\f2 #include <stdexcept>}\par
{\f2 #include <regex>}\par
{\f2 #include "Match.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b compareScores} ({\b Score} a, {\b Score} b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Initialize a match and check default values")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Check turns, and passing turns without ")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Check for a finished game by player 1 and 2, and both")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Increment both players score without a troop being destroyed")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Increment both players score with a troop being destroyed")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Increment player 1 and 2 amount of shots")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Trying to get {\b MatchResults} out of match")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v compareScores\:testMatch.cpp}
{\xe \v testMatch.cpp\:compareScores}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} compareScores ({\b Score}  {\i a}, {\b Score}  {\i b})}}
\par
{\bkmkstart AAAAAAADNP}
{\bkmkend AAAAAAADNP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 8                                     \{\par
9     {\cf19 if} (a.getDestroyedTroops() != b.getDestroyedTroops()) {\cf19 return} {\cf17 false};\par
10     {\cf19 if} (a.getHitShoots() != b.getHitShoots()) {\cf19 return} {\cf17 false};\par
11     {\cf19 if} (a.getLostTroops() != b.getLostTroops()) {\cf19 return} {\cf17 false};\par
12     {\cf19 if} (a.getRemainingTroops() != b.getRemainingTroops()) {\cf19 return} {\cf17 false};\par
13     {\cf19 if} (a.getTotalAmountShoots() != b.getTotalAmountShoots()) {\cf19 return} {\cf17 false};\par
14     {\cf19 return} {\cf17 true};\par
15 \}\par
}
}
{\xe \v TEST_CASE\:testMatch.cpp}
{\xe \v testMatch.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Check for a finished game by player 1 and  {\i 2}, and both" )}}
\par
{\bkmkstart AAAAAAADNQ}
{\bkmkend AAAAAAADNQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 37                                                                    \{\par
38     Match a;\par
39     a.getPlayer1()->getScore()->setRemainingTroops(1);\par
40     a.getPlayer2()->getScore()->setRemainingTroops(1);\par
41 \par
42     CHECK_FALSE(a.hasGameFinished());\par
43 \par
44     a.getPlayer1()->getScore()->decrementRemainingTroops();\par
45 \par
46     CHECK(a.hasGameFinished());\par
47     \par
48     a.getPlayer1()->getScore()->setRemainingTroops(1);\par
49     a.getPlayer2()->getScore()->decrementRemainingTroops();\par
50 \par
51     CHECK(a.hasGameFinished());\par
52 \par
53     a.getPlayer1()->getScore()->decrementRemainingTroops();\par
54 \par
55     CHECK(a.hasGameFinished());\par
56 \}\par
}
}
{\xe \v TEST_CASE\:testMatch.cpp}
{\xe \v testMatch.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Check  {\i turns}, and passing turns without " )}}
\par
{\bkmkstart AAAAAAADNR}
{\bkmkend AAAAAAADNR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 23                                                     \{\par
24     Match a;\par
25     CHECK(a.isPlayer1Turn());\par
26     CHECK_FALSE(a.isPlayer2Turn());\par
27 \par
28     a.getPlayer1()->getScore()->setRemainingTroops(1);\par
29     a.getPlayer2()->getScore()->setRemainingTroops(1);\par
30 \par
31     a.passTurn();\par
32 \par
33     CHECK_FALSE(a.isPlayer1Turn());\par
34     CHECK(a.isPlayer2Turn());\par
35 \}\par
}
}
{\xe \v TEST_CASE\:testMatch.cpp}
{\xe \v testMatch.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Increment both players score with a troop being destroyed" )}}
\par
{\bkmkstart AAAAAAADNS}
{\bkmkend AAAAAAADNS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 79                                                                        \{\par
80     Match a;\par
81     {\cf20 //Preventing exceptions by setting artificial initial state}\par
82     a.incrementPlayer1AmountShots();\par
83     a.incrementPlayer2AmountShots();\par
84     a.getPlayer1()->getScore()->setRemainingTroops(10);\par
85     a.getPlayer2()->getScore()->setRemainingTroops(10);\par
86 \par
87     CHECK(a.getPlayer1()->getScore()->getDestroyedTroops() == 0);\par
88     CHECK(a.getPlayer1()->getScore()->getRemainingTroops() == 10);\par
89     CHECK(a.getPlayer1()->getScore()->getLostTroops() == 0);\par
90 \par
91     CHECK(a.getPlayer2()->getScore()->getDestroyedTroops() == 0);\par
92     CHECK(a.getPlayer2()->getScore()->getRemainingTroops() == 10);\par
93     CHECK(a.getPlayer2()->getScore()->getLostTroops() == 0);\par
94 \par
95     a.incrementPlayer1Score({\cf17 true});\par
96     a.incrementPlayer2Score({\cf17 true});\par
97 \par
98     CHECK(a.getPlayer1()->getScore()->getDestroyedTroops() == 1);\par
99     CHECK(a.getPlayer1()->getScore()->getRemainingTroops() == 9);\par
100     CHECK(a.getPlayer1()->getScore()->getLostTroops() == 1);\par
101 \par
102     CHECK(a.getPlayer2()->getScore()->getDestroyedTroops() == 1);\par
103     CHECK(a.getPlayer2()->getScore()->getRemainingTroops() == 9);\par
104     CHECK(a.getPlayer2()->getScore()->getLostTroops() == 1);\par
105 \}\par
}
}
{\xe \v TEST_CASE\:testMatch.cpp}
{\xe \v testMatch.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Increment both players score without a troop being destroyed" )}}
\par
{\bkmkstart AAAAAAADNT}
{\bkmkend AAAAAAADNT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 58                                                                           \{\par
59     Match a;\par
60     {\cf20 //Preventing exceptions by setting artificial initial state}\par
61     a.incrementPlayer1AmountShots();\par
62     a.incrementPlayer2AmountShots();\par
63     \par
64     CHECK(a.getPlayer1()->getScore()->getHitShoots() == 0);\par
65     CHECK(a.getPlayer2()->getScore()->getHitShoots() == 0);\par
66 \par
67     a.incrementPlayer1Score({\cf17 false});\par
68     \par
69     CHECK(a.getPlayer1()->getScore()->getHitShoots() == 1);\par
70     CHECK(a.getPlayer2()->getScore()->getHitShoots() == 0);\par
71 \par
72     a.incrementPlayer2Score({\cf17 false});\par
73 \par
74     CHECK(a.getPlayer1()->getScore()->getHitShoots() == 1);\par
75     CHECK(a.getPlayer2()->getScore()->getHitShoots() == 1);\par
76 \par
77 \}\par
}
}
{\xe \v TEST_CASE\:testMatch.cpp}
{\xe \v testMatch.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Increment player 1 and 2 amount of shots" )}}
\par
{\bkmkstart AAAAAAADNU}
{\bkmkend AAAAAAADNU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 107                                                       \{\par
108     Match a;\par
109 \par
110     CHECK(a.getPlayer1()->getScore()->getTotalAmountShoots() == 0);\par
111     CHECK(a.getPlayer2()->getScore()->getTotalAmountShoots() == 0);\par
112 \par
113     a.incrementPlayer1AmountShots();\par
114     a.incrementPlayer2AmountShots();\par
115 \par
116     CHECK(a.getPlayer1()->getScore()->getTotalAmountShoots() == 1);\par
117     CHECK(a.getPlayer2()->getScore()->getTotalAmountShoots() == 1);\par
118 \}\par
}
}
{\xe \v TEST_CASE\:testMatch.cpp}
{\xe \v testMatch.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Initialize a match and check default values" )}}
\par
{\bkmkstart AAAAAAADNV}
{\bkmkend AAAAAAADNV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17                                                         \{\par
18     Match a;\par
19     CHECK(a.getPlayer1()->getName() == {\cf22 "Jogador1"});\par
20     CHECK(a.getPlayer2()->getName() == {\cf22 "Jogador2"});\par
21 \}\par
}
}
{\xe \v TEST_CASE\:testMatch.cpp}
{\xe \v testMatch.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Trying to get {\b MatchResults} out of match" )}}
\par
{\bkmkstart AAAAAAADNW}
{\bkmkend AAAAAAADNW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 120                                                      \{\par
121     Match a;\par
122     std::shared_ptr<Score> score1 = a.getPlayer1()->getScore(), score2 = a.getPlayer2()->getScore();\par
123     score1->setDestroyedTroops(1);\par
124     score1->setRemainingTroops(2);\par
125     score1->setLostTroops(3);\par
126     score1->setTotalAmountShoots(5);\par
127     score1->setHitShoots(4);\par
128 \par
129     score2->setDestroyedTroops(6);\par
130     score2->setRemainingTroops(7);\par
131     score2->setLostTroops(8);\par
132     score2->setTotalAmountShoots(10);\par
133     score2->setHitShoots(9);\par
134 \par
135     MatchResults b = a.getResults();\par
136 \par
137     CHECK(a.getPlayer1()->getName() == b.getPlayer1Name());\par
138     CHECK(a.getPlayer2()->getName() == b.getPlayer2Name());\par
139 \par
140     CHECK(compareScores(*score1, b.getPlayer1Score()));\par
141     CHECK(compareScores(*score2, b.getPlayer2Score()));\par
142 \par
143     CHECK(std::regex_match(b.getId(), std::regex({\cf22 ".\{4\}/.\{2\}/.\{2\}-.\{2\}:.\{2\}:.\{2\}"})));\par
144 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/tests/match/testMatchResults.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/match/testMatchResults.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/match/testMatchResults.cpp}
{\bkmkstart AAAAAAADNX}
{\bkmkend AAAAAAADNX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "doctest.hpp"}\par
{\f2 #include <stdexcept>}\par
{\f2 #include "MatchResults.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b compareResults} ({\b Score} a, {\b Score} b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Creating a default MatchResults")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Trying to make or set a {\b MatchResults} with empty id")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Trying to construct or set a {\b MatchResults} with id with spaces")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Trying to construct {\b MatchResults} and getting attributes")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v compareResults\:testMatchResults.cpp}
{\xe \v testMatchResults.cpp\:compareResults}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} compareResults ({\b Score}  {\i a}, {\b Score}  {\i b})}}
\par
{\bkmkstart AAAAAAADNY}
{\bkmkend AAAAAAADNY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 6                                      \{\par
7     {\cf19 if} (a.getDestroyedTroops() != b.getDestroyedTroops()) {\cf19 return} {\cf17 false};\par
8     {\cf19 if} (a.getHitShoots() != b.getHitShoots()) {\cf19 return} {\cf17 false};\par
9     {\cf19 if} (a.getLostTroops() != b.getLostTroops()) {\cf19 return} {\cf17 false};\par
10     {\cf19 if} (a.getRemainingTroops() != b.getRemainingTroops()) {\cf19 return} {\cf17 false};\par
11     {\cf19 if} (a.getTotalAmountShoots() != b.getTotalAmountShoots()) {\cf19 return} {\cf17 false};\par
12     {\cf19 return} {\cf17 true};\par
13 \}\par
}
}
{\xe \v TEST_CASE\:testMatchResults.cpp}
{\xe \v testMatchResults.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Creating a default MatchResults" )}}
\par
{\bkmkstart AAAAAAADNZ}
{\bkmkend AAAAAAADNZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 15                                              \{\par
16     MatchResults a;\par
17     CHECK(a.getPlayer1Name() == {\cf22 ""});\par
18     CHECK(a.getPlayer2Name() == {\cf22 ""});\par
19     CHECK(a.getId() == {\cf22 ""});\par
20 \}\par
}
}
{\xe \v TEST_CASE\:testMatchResults.cpp}
{\xe \v testMatchResults.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Trying to construct {\b MatchResults} and getting attributes" )}}
\par
{\bkmkstart AAAAAAADOA}
{\bkmkend AAAAAAADOA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 34                                                                     \{\par
35     Score score1, score2(1,2,3,5,4);\par
36     MatchResults match({\cf22 "player1"}, score1, {\cf22 "player2"}, score2, {\cf22 "id"});\par
37     CHECK(compareResults(score1, match.getPlayer1Score()));\par
38     CHECK(compareResults(score2, match.getPlayer2Score()));\par
39     CHECK({\cf22 "id"} == match.getId());\par
40     CHECK({\cf22 "player1"} == match.getPlayer1Name());\par
41     CHECK({\cf22 "player2"} == match.getPlayer2Name());\par
42 \}\par
}
}
{\xe \v TEST_CASE\:testMatchResults.cpp}
{\xe \v testMatchResults.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Trying to construct or set a {\b MatchResults} with id with spaces" )}}
\par
{\bkmkstart AAAAAAADOB}
{\bkmkend AAAAAAADOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 28                                                                            \{\par
29     CHECK_THROWS_AS(MatchResults a({\cf22 "teste"}, Score(), {\cf22 "teste2"}, Score(), {\cf22 "a a"}), std::invalid_argument);\par
30     MatchResults a({\cf22 "teste"}, Score(), {\cf22 "teste2"}, Score(), {\cf22 "a"});\par
31     CHECK_THROWS_AS(a.setId({\cf22 "aaaa a"}), std::invalid_argument);\par
32 \}\par
}
}
{\xe \v TEST_CASE\:testMatchResults.cpp}
{\xe \v testMatchResults.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Trying to make or set a {\b MatchResults} with empty id" )}}
\par
{\bkmkstart AAAAAAADOC}
{\bkmkend AAAAAAADOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 22                                                                 \{\par
23     CHECK_THROWS_AS(MatchResults a({\cf22 "teste"}, Score(), {\cf22 "teste2"}, Score(), {\cf22 ""}), std::invalid_argument);\par
24     MatchResults a({\cf22 "teste"}, Score(), {\cf22 "teste2"}, Score(), {\cf22 "a"});\par
25     CHECK_THROWS_AS(a.setId({\cf22 ""}), std::invalid_argument);\par
26 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/tests/match/testPlayer.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/match/testPlayer.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/match/testPlayer.cpp}
{\bkmkstart AAAAAAADOD}
{\bkmkend AAAAAAADOD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "doctest.hpp"}\par
{\f2 #include <stdexcept>}\par
{\f2 #include "Player.hpp"}\par
{\f2 #include "Constants.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Constructing a player with empty string")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Trying to set a player name to empty string")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Constructing a player with set name")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Construct player with default name")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Construct player and check if board has default values")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Construct player and check that score has no values")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v TEST_CASE\:testPlayer.cpp}
{\xe \v testPlayer.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Construct player and check if board has default values" )}}
\par
{\bkmkstart AAAAAAADOE}
{\bkmkend AAAAAAADOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 26                                                                     \{\par
27     Player a;\par
28     std::shared_ptr<Board> pointer = a.getBoard();\par
29     CHECK(pointer->getWidth() == DEFAULT_BOARD_AMOUNT_HORIZONTAL_CELLS);\par
30     CHECK(pointer->getHeight() == DEFAULT_BOARD_AMOUNT_VERTICAL_CELLS);\par
31 \}\par
}
}
{\xe \v TEST_CASE\:testPlayer.cpp}
{\xe \v testPlayer.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Construct player and check that score has no values" )}}
\par
{\bkmkstart AAAAAAADOF}
{\bkmkend AAAAAAADOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 33                                                                  \{\par
34     Player a;\par
35     std::shared_ptr<Score> pointer = a.getScore();\par
36 \par
37     CHECK(pointer->getDestroyedTroops() == 0);\par
38     CHECK(pointer->getHitShoots() == 0);\par
39     CHECK(pointer->getLostTroops() == 0);\par
40     CHECK(pointer->getRemainingTroops() == 0);\par
41     CHECK(pointer->getTotalAmountShoots() == 0);\par
42 \}\par
}
}
{\xe \v TEST_CASE\:testPlayer.cpp}
{\xe \v testPlayer.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Construct player with default name" )}}
\par
{\bkmkstart AAAAAAADOG}
{\bkmkend AAAAAAADOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21                                                 \{\par
22     Player a;\par
23     CHECK(a.getName() == {\cf22 "Player"});\par
24 \}\par
}
}
{\xe \v TEST_CASE\:testPlayer.cpp}
{\xe \v testPlayer.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Constructing a player with empty string" )}}
\par
{\bkmkstart AAAAAAADOH}
{\bkmkend AAAAAAADOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 7                                                      \{\par
8     CHECK_THROWS_AS(Player({\cf22 ""}), std::invalid_argument);\par
9 \}\par
}
}
{\xe \v TEST_CASE\:testPlayer.cpp}
{\xe \v testPlayer.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Constructing a player with set name" )}}
\par
{\bkmkstart AAAAAAADOI}
{\bkmkend AAAAAAADOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 16                                                  \{\par
17     Player a({\cf22 "teste"});\par
18     CHECK(a.getName() == {\cf22 "teste"});\par
19 \}\par
}
}
{\xe \v TEST_CASE\:testPlayer.cpp}
{\xe \v testPlayer.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Trying to set a player name to empty string" )}}
\par
{\bkmkstart AAAAAAADOJ}
{\bkmkend AAAAAAADOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 11                                                          \{\par
12     Player a;\par
13     CHECK_THROWS_AS(a.setName({\cf22 ""}), std::invalid_argument);\par
14 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/2023-1/Prog2/BatalhaNaval/tests/match/testScore.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/match/testScore.cpp}
{\xe \v Faculdade/2023-1/Prog2/BatalhaNaval/tests/match/testScore.cpp}
{\bkmkstart AAAAAAADOK}
{\bkmkend AAAAAAADOK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "doctest.hpp"}\par
{\f2 #include <stdexcept>}\par
{\f2 #include "Score.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Initialize a score with custom valid values")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Initialize score with negative values")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Trying to set negative values to a score")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Trying to decrement remaining troops below zero")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Incrementing each value")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Trying to set a value of hit shoots higher than total amount of shoots")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Trying to set a value of total amount of shoots lower than the amount of hit shoots")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Checking for precision formula")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Trying to get precision with 0 total amount of shoots")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v TEST_CASE\:testScore.cpp}
{\xe \v testScore.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Checking for precision formula" )}}
\par
{\bkmkstart AAAAAAADOL}
{\bkmkend AAAAAAADOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 73                                             \{\par
74     Score a;\par
75     a.setTotalAmountShoots(10);\par
76     a.setHitShoots(5);\par
77     CHECK(a.getPrecision() == 0.5);\par
78 \}\par
}
}
{\xe \v TEST_CASE\:testScore.cpp}
{\xe \v testScore.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Incrementing each value" )}}
\par
{\bkmkstart AAAAAAADOM}
{\bkmkend AAAAAAADOM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 37                                      \{\par
38     Score a;\par
39     a.setRemainingTroops(1);\par
40 \par
41     a.decrementRemainingTroops();\par
42     a.incrementDestroyedTroops();\par
43     a.incrementLostTroops();\par
44     a.incrementTotalAmountShoots();\par
45     a.incrementHitShoots();\par
46 \par
47     CHECK(a.getRemainingTroops() == 0);\par
48     CHECK(a.getDestroyedTroops() == 1);\par
49     CHECK(a.getLostTroops() == 1);\par
50     CHECK(a.getTotalAmountShoots() == 1);\par
51     CHECK(a.getHitShoots() == 1);\par
52     CHECK(a.getInitialAmountShips() == 1);\par
53 \}\par
}
}
{\xe \v TEST_CASE\:testScore.cpp}
{\xe \v testScore.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Initialize a score with custom valid values" )}}
\par
{\bkmkstart AAAAAAADON}
{\bkmkend AAAAAAADON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5                                                          \{\par
6     Score a(1,2,3,5,4);\par
7 \par
8     CHECK(a.getDestroyedTroops() == 1);\par
9     CHECK(a.getRemainingTroops() == 2);\par
10     CHECK(a.getLostTroops() == 3);\par
11     CHECK(a.getTotalAmountShoots() == 5);\par
12     CHECK(a.getHitShoots() == 4);\par
13 \}\par
}
}
{\xe \v TEST_CASE\:testScore.cpp}
{\xe \v testScore.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Initialize score with negative values" )}}
\par
{\bkmkstart AAAAAAADOO}
{\bkmkend AAAAAAADOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 15                                                    \{\par
16     CHECK_THROWS_AS(Score a(-1,2,3,5,4), std::invalid_argument);\par
17     CHECK_THROWS_AS(Score a(1,-2,3,5,4), std::invalid_argument);\par
18     CHECK_THROWS_AS(Score a(1,2,-3,5,4), std::invalid_argument);\par
19     CHECK_THROWS_AS(Score a(1,2,3,-5,4), std::invalid_argument);\par
20     CHECK_THROWS_AS(Score a(1,2,3,5,-4), std::invalid_argument);\par
21 \}\par
}
}
{\xe \v TEST_CASE\:testScore.cpp}
{\xe \v testScore.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Trying to decrement remaining troops below zero" )}}
\par
{\bkmkstart AAAAAAADOP}
{\bkmkend AAAAAAADOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 32                                                              \{\par
33     Score a;\par
34     CHECK_THROWS_AS(a.decrementRemainingTroops(), std::invalid_argument);\par
35 \}\par
}
}
{\xe \v TEST_CASE\:testScore.cpp}
{\xe \v testScore.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Trying to get precision with 0 total amount of shoots" )}}
\par
{\bkmkstart AAAAAAADOQ}
{\bkmkend AAAAAAADOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 80                                                                    \{\par
81     Score a;\par
82     CHECK_THROWS_AS(a.getPrecision(), std::logic_error);\par
83 \}\par
}
}
{\xe \v TEST_CASE\:testScore.cpp}
{\xe \v testScore.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Trying to set a value of hit shoots higher than total amount of shoots" )}}
\par
{\bkmkstart AAAAAAADOR}
{\bkmkend AAAAAAADOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 55                                                                                     \{\par
56     CHECK_THROWS_AS(Score a(1,2,3,4,5), std::invalid_argument);\par
57 \par
58     Score a;\par
59     a.setTotalAmountShoots(10);\par
60     CHECK_THROWS_AS(a.setHitShoots(11), std::invalid_argument);\par
61     a.setHitShoots(10);\par
62     CHECK_THROWS_AS(a.incrementHitShoots(), std::invalid_argument);\par
63 \}\par
}
}
{\xe \v TEST_CASE\:testScore.cpp}
{\xe \v testScore.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Trying to set a value of total amount of shoots lower than the amount of hit shoots" )}}
\par
{\bkmkstart AAAAAAADOS}
{\bkmkend AAAAAAADOS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 65                                                                                                  \{\par
66     Score a;\par
67     a.setTotalAmountShoots(10);\par
68     a.setHitShoots(10);\par
69 \par
70     CHECK_THROWS_AS(a.setTotalAmountShoots(9), std::invalid_argument);\par
71 \}\par
}
}
{\xe \v TEST_CASE\:testScore.cpp}
{\xe \v testScore.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Trying to set negative values to a score" )}}
\par
{\bkmkstart AAAAAAADOT}
{\bkmkend AAAAAAADOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 23                                                       \{\par
24     Score a;\par
25     CHECK_THROWS_AS(a.setDestroyedTroops(-1), std::invalid_argument);\par
26     CHECK_THROWS_AS(a.setRemainingTroops(-1), std::invalid_argument);\par
27     CHECK_THROWS_AS(a.setLostTroops(-1), std::invalid_argument);\par
28     CHECK_THROWS_AS(a.setHitShoots(-1), std::invalid_argument);\par
29     CHECK_THROWS_AS(a.setTotalAmountShoots(-1), std::invalid_argument);\par
30 \}\par
}
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Sum\'E1rio\par 
\pard\plain 
{\tc \v Sum\'E1rio}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
